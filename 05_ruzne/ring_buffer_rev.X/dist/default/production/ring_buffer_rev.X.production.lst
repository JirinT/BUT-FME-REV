

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Apr 08 12:20:19 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    42  0000                     
    43                           ; Version 2.20
    44                           ; Generated 05/05/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F46K22 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     
    78                           	psect	idataBANK0
    79  002258                     __pidataBANK0:
    80                           	callstack 0
    81                           
    82                           ;initializer for stoa@F1146
    83  002258  28                 	db	40
    84  002259  6E                 	db	110
    85  00225A  75                 	db	117
    86  00225B  6C                 	db	108
    87  00225C  6C                 	db	108
    88  00225D  29                 	db	41
    89  00225E  00                 	db	0
    90  0000                     _ANSELC	set	3898
    91  0000                     _TXREG1	set	4013
    92  0000                     _TXSTA1bits	set	4012
    93  0000                     _RCSTA1bits	set	4011
    94  0000                     _SPBRG1	set	4015
    95  0000                     _TRISCbits	set	3988
    96  0000                     _TRISD	set	3989
    97  0000                     _TRISBbits	set	3987
    98  0000                     _TX1IF	set	31988
    99  0000                     _LATB5	set	31829
   100                           
   101                           	psect	smallconst
   102  001000                     __psmallconst:
   103                           	callstack 0
   104  001000  00                 	db	0
   105  001001                     STR_4:
   106                           
   107                           ; BSR set to: 15
   108  001001  54                 	db	84	;'T'
   109  001002  65                 	db	101	;'e'
   110  001003  73                 	db	115	;'s'
   111  001004  74                 	db	116	;'t'
   112  001005  6F                 	db	111	;'o'
   113  001006  76                 	db	118	;'v'
   114  001007  61                 	db	97	;'a'
   115  001008  63                 	db	99	;'c'
   116  001009  69                 	db	105	;'i'
   117  00100A  20                 	db	32
   118  00100B  20                 	db	32
   119  00100C  7A                 	db	122	;'z'
   120  00100D  70                 	db	112	;'p'
   121  00100E  72                 	db	114	;'r'
   122  00100F  61                 	db	97	;'a'
   123  001010  76                 	db	118	;'v'
   124  001011  61                 	db	97	;'a'
   125  001012  20                 	db	32
   126  001013  70                 	db	112	;'p'
   127  001014  72                 	db	114	;'r'
   128  001015  6F                 	db	111	;'o'
   129  001016  20                 	db	32
   130  001017  62                 	db	98	;'b'
   131  001018  75                 	db	117	;'u'
   132  001019  66                 	db	102	;'f'
   133  00101A  66                 	db	102	;'f'
   134  00101B  65                 	db	101	;'e'
   135  00101C  72                 	db	114	;'r'
   136  00101D  2C                 	db	44
   137  00101E  20                 	db	32
   138  00101F  7A                 	db	122	;'z'
   139  001020  6E                 	db	110	;'n'
   140  001021  6F                 	db	111	;'o'
   141  001022  76                 	db	118	;'v'
   142  001023  75                 	db	117	;'u'
   143  001024  00                 	db	0
   144  001025                     STR_2:
   145                           
   146                           ; BSR set to: 15
   147  001025  54                 	db	84	;'T'
   148  001026  65                 	db	101	;'e'
   149  001027  73                 	db	115	;'s'
   150  001028  74                 	db	116	;'t'
   151  001029  6F                 	db	111	;'o'
   152  00102A  76                 	db	118	;'v'
   153  00102B  61                 	db	97	;'a'
   154  00102C  63                 	db	99	;'c'
   155  00102D  69                 	db	105	;'i'
   156  00102E  20                 	db	32
   157  00102F  7A                 	db	122	;'z'
   158  001030  70                 	db	112	;'p'
   159  001031  72                 	db	114	;'r'
   160  001032  61                 	db	97	;'a'
   161  001033  76                 	db	118	;'v'
   162  001034  61                 	db	97	;'a'
   163  001035  20                 	db	32
   164  001036  70                 	db	112	;'p'
   165  001037  72                 	db	114	;'r'
   166  001038  6F                 	db	111	;'o'
   167  001039  20                 	db	32
   168  00103A  62                 	db	98	;'b'
   169  00103B  75                 	db	117	;'u'
   170  00103C  66                 	db	102	;'f'
   171  00103D  66                 	db	102	;'f'
   172  00103E  65                 	db	101	;'e'
   173  00103F  72                 	db	114	;'r'
   174  001040  21                 	db	33
   175  001041  00                 	db	0
   176  001042                     STR_3:
   177                           
   178                           ; BSR set to: 15
   179  001042  52                 	db	82	;'R'
   180  001043  3A                 	db	58	;':'
   181  001044  20                 	db	32
   182  001045  25                 	db	37
   183  001046  63                 	db	99	;'c'
   184  001047  0A                 	db	10
   185  001048  00                 	db	0
   186  001049                     STR_1:
   187                           
   188                           ; BSR set to: 15
   189  001049  52                 	db	82	;'R'
   190  00104A  3A                 	db	58	;':'
   191  00104B  20                 	db	32
   192  00104C  25                 	db	37
   193  00104D  64                 	db	100	;'d'
   194  00104E  0A                 	db	10
   195  00104F  00                 	db	0
   196  001050                     STR_5:
   197                           
   198                           ; BSR set to: 15
   199  001050  25                 	db	37
   200  001051  73                 	db	115	;'s'
   201  001052  00                 	db	0
   202  001053  00                 	db	0	; dummy byte at the end
   203  0000                     
   204                           ; #config settings
   205                           
   206                           	psect	cinit
   207  002040                     __pcinit:
   208                           	callstack 0
   209  002040                     start_initialization:
   210                           	callstack 0
   211  002040                     __initialization:
   212                           	callstack 0
   213                           
   214                           ; Initialize objects allocated to BANK0 (7 bytes)
   215                           ; load TBLPTR registers with __pidataBANK0
   216  002040  0E58               	movlw	low __pidataBANK0
   217  002042  6EF6               	movwf	tblptrl,c
   218  002044  0E22               	movlw	high __pidataBANK0
   219  002046  6EF7               	movwf	tblptrh,c
   220  002048  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   221  00204A  6EF8               	movwf	tblptru,c
   222  00204C  EE00  F0E5         	lfsr	0,__pdataBANK0
   223  002050  EE10 F007          	lfsr	1,7
   224  002054                     copy_data0:
   225  002054  0009               	tblrd		*+
   226  002056  CFF5 FFEE          	movff	tablat,postinc0
   227  00205A  50E5               	movf	postdec1,w,c
   228  00205C  50E1               	movf	fsr1l,w,c
   229  00205E  E1FA               	bnz	copy_data0
   230                           
   231                           ; Clear objects allocated to BANK1 (32 bytes)
   232  002060  EE01  F000         	lfsr	0,__pbssBANK1
   233  002064  0E20               	movlw	32
   234  002066                     clear_0:
   235  002066  6AEE               	clrf	postinc0,c
   236  002068  06E8               	decf	wreg,f,c
   237  00206A  E1FD               	bnz	clear_0
   238                           
   239                           ; Clear objects allocated to BANK0 (8 bytes)
   240  00206C  EE00  F0DD         	lfsr	0,__pbssBANK0
   241  002070  0E08               	movlw	8
   242  002072                     clear_1:
   243  002072  6AEE               	clrf	postinc0,c
   244  002074  06E8               	decf	wreg,f,c
   245  002076  E1FD               	bnz	clear_1
   246  002078                     end_of_initialization:
   247                           	callstack 0
   248  002078                     __end_of__initialization:
   249                           	callstack 0
   250  002078  0E00               	movlw	low (__Lsmallconst shr (0+16))
   251  00207A  6EF8               	movwf	tblptru,c
   252  00207C  0E10               	movlw	high __Lsmallconst
   253  00207E  6EF7               	movwf	tblptrh,c
   254  002080  0100               	movlb	0
   255  002082  EF25  F00D         	goto	_main	;jump to C main() function
   256                           
   257                           	psect	bssBANK0
   258  0000DD                     __pbssBANK0:
   259                           	callstack 0
   260  0000DD                     _nout:
   261                           	callstack 0
   262  0000DD                     	ds	2
   263  0000DF                     _width:
   264                           	callstack 0
   265  0000DF                     	ds	2
   266  0000E1                     _prec:
   267                           	callstack 0
   268  0000E1                     	ds	2
   269  0000E3                     _flags:
   270                           	callstack 0
   271  0000E3                     	ds	2
   272                           
   273                           	psect	dataBANK0
   274  0000E5                     __pdataBANK0:
   275                           	callstack 0
   276  0000E5                     stoa@F1146:
   277                           	callstack 0
   278  0000E5                     	ds	7
   279                           
   280                           	psect	bssBANK1
   281  000100                     __pbssBANK1:
   282                           	callstack 0
   283  000100                     _dbuf:
   284                           	callstack 0
   285  000100                     	ds	32
   286                           
   287                           	psect	cstackBANK0
   288  000060                     __pcstackBANK0:
   289                           	callstack 0
   290  000060                     	ds	2
   291  000062                     printf@ap:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x2
   295  000062                     	ds	2
   296  000064                     ??_main:
   297                           
   298                           ; 1 bytes @ 0x4
   299  000064                     	ds	2
   300  000066                     main@buf_arr:
   301                           	callstack 0
   302                           
   303                           ; 50 bytes @ 0x6
   304  000066                     	ds	50
   305  000098                     main@cnt:
   306                           	callstack 0
   307                           
   308                           ; 1 bytes @ 0x38
   309  000098                     	ds	1
   310  000099                     main@i:
   311                           	callstack 0
   312                           
   313                           ; 1 bytes @ 0x39
   314  000099                     	ds	1
   315  00009A                     main@buf:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0x3A
   319  00009A                     	ds	1
   320  00009B                     main@ring_buffer:
   321                           	callstack 0
   322                           
   323                           ; 66 bytes @ 0x3B
   324  00009B                     	ds	66
   325                           
   326                           	psect	cstackCOMRAM
   327  000001                     __pcstackCOMRAM:
   328                           	callstack 0
   329  000001                     ?_strlen:
   330                           	callstack 0
   331  000001                     ?___aodiv:
   332                           	callstack 0
   333  000001                     ?___aomod:
   334                           	callstack 0
   335  000001                     putch@data:
   336                           	callstack 0
   337  000001                     ring_buff_init@buffer:
   338                           	callstack 0
   339  000001                     ring_buff_is_empty@buffer:
   340                           	callstack 0
   341  000001                     ring_buff_is_full@buffer:
   342                           	callstack 0
   343  000001                     ring_buff_num_items@buffer:
   344                           	callstack 0
   345  000001                     strlen@s:
   346                           	callstack 0
   347  000001                     ___aodiv@dividend:
   348                           	callstack 0
   349  000001                     ___aomod@dividend:
   350                           	callstack 0
   351                           
   352                           ; 8 bytes @ 0x0
   353  000001                     	ds	1
   354  000002                     fputc@c:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x1
   358  000002                     	ds	1
   359  000003                     ??_ring_buff_num_items:
   360  000003                     ??_ring_buff_is_full:
   361  000003                     strlen@a:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x2
   365  000003                     	ds	1
   366  000004                     fputc@fp:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x3
   370  000004                     	ds	1
   371  000005                     ring_buff_read@buffer:
   372                           	callstack 0
   373  000005                     ring_buff_peek@buffer:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0x4
   377  000005                     	ds	1
   378  000006                     ??_fputc:
   379  000006                     ring_buff_write@buffer:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x5
   383  000006                     	ds	1
   384  000007                     ring_buff_read@data:
   385                           	callstack 0
   386  000007                     ring_buff_peek@data:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x6
   390  000007                     	ds	1
   391  000008                     ring_buff_write@data:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0x7
   395  000008                     	ds	1
   396  000009                     ??_ring_buff_write:
   397  000009                     ??_ring_buff_read:
   398  000009                     ring_buff_peek@index:
   399                           	callstack 0
   400  000009                     ___aodiv@divisor:
   401                           	callstack 0
   402  000009                     ___aomod@divisor:
   403                           	callstack 0
   404                           
   405                           ; 8 bytes @ 0x8
   406  000009                     	ds	1
   407  00000A                     ??_ring_buff_peek:
   408  00000A                     ring_buff_write_arr@buffer:
   409                           	callstack 0
   410  00000A                     ring_buff_read_arr@buffer:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x9
   414  00000A                     	ds	1
   415  00000B                     ?_ctoa:
   416                           	callstack 0
   417  00000B                     ?_stoa:
   418                           	callstack 0
   419  00000B                     ring_buff_peek@data_index:
   420                           	callstack 0
   421  00000B                     ctoa@fp:
   422                           	callstack 0
   423  00000B                     stoa@fp:
   424                           	callstack 0
   425  00000B                     fputs@s:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0xA
   429  00000B                     	ds	1
   430  00000C                     ring_buff_write_arr@data:
   431                           	callstack 0
   432  00000C                     ring_buff_read_arr@data:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0xB
   436  00000C                     	ds	1
   437  00000D                     ctoa@c:
   438                           	callstack 0
   439  00000D                     stoa@s:
   440                           	callstack 0
   441  00000D                     fputs@fp:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0xC
   445  00000D                     	ds	1
   446  00000E                     ??_ctoa:
   447  00000E                     ring_buff_write_arr@size:
   448                           	callstack 0
   449  00000E                     ring_buff_read_arr@len:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0xD
   453  00000E                     	ds	1
   454  00000F                     ??_ring_buff_write_arr:
   455  00000F                     ??_stoa:
   456  00000F                     fputs@c:
   457                           	callstack 0
   458  00000F                     ring_buff_read_arr@data_ptr:
   459                           	callstack 0
   460  00000F                     ctoa@l:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0xE
   464  00000F                     	ds	1
   465  000010                     fputs@i:
   466                           	callstack 0
   467  000010                     stoa@nuls:
   468                           	callstack 0
   469                           
   470                           ; 7 bytes @ 0xF
   471  000010                     	ds	1
   472  000011                     ring_buff_write_arr@i:
   473                           	callstack 0
   474  000011                     ring_buff_read_arr@cnt:
   475                           	callstack 0
   476  000011                     ___aodiv@counter:
   477                           	callstack 0
   478  000011                     ___aomod@counter:
   479                           	callstack 0
   480  000011                     ctoa@w:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x10
   484  000011                     	ds	1
   485  000012                     ?_pad:
   486                           	callstack 0
   487  000012                     ___aodiv@sign:
   488                           	callstack 0
   489  000012                     ___aomod@sign:
   490                           	callstack 0
   491  000012                     pad@fp:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x11
   495  000012                     	ds	1
   496  000013                     ?_abs:
   497                           	callstack 0
   498  000013                     abs@a:
   499                           	callstack 0
   500  000013                     ___aodiv@quotient:
   501                           	callstack 0
   502                           
   503                           ; 8 bytes @ 0x12
   504  000013                     	ds	1
   505  000014                     pad@buf:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x13
   509  000014                     	ds	1
   510  000015                     ??_abs:
   511                           
   512                           ; 1 bytes @ 0x14
   513  000015                     	ds	1
   514  000016                     pad@p:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x15
   518  000016                     	ds	1
   519  000017                     stoa@i:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x16
   523  000017                     	ds	1
   524  000018                     ??_pad:
   525                           
   526                           ; 1 bytes @ 0x17
   527  000018                     	ds	1
   528  000019                     pad@i:
   529                           	callstack 0
   530  000019                     stoa@w:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x18
   534  000019                     	ds	2
   535  00001B                     pad@w:
   536                           	callstack 0
   537  00001B                     stoa@cp:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x1A
   541  00001B                     	ds	2
   542  00001D                     ?_dtoa:
   543                           	callstack 0
   544  00001D                     dtoa@fp:
   545                           	callstack 0
   546  00001D                     stoa@p:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x1C
   550  00001D                     	ds	2
   551  00001F                     stoa@l:
   552                           	callstack 0
   553  00001F                     dtoa@d:
   554                           	callstack 0
   555                           
   556                           ; 8 bytes @ 0x1E
   557  00001F                     	ds	8
   558  000027                     ??_dtoa:
   559                           
   560                           ; 1 bytes @ 0x26
   561  000027                     	ds	8
   562  00002F                     _dtoa$933:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x2E
   566  00002F                     	ds	2
   567  000031                     dtoa@p:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x30
   571  000031                     	ds	2
   572  000033                     dtoa@w:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x32
   576  000033                     	ds	2
   577  000035                     dtoa@s:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x34
   581  000035                     	ds	2
   582  000037                     dtoa@n:
   583                           	callstack 0
   584                           
   585                           ; 8 bytes @ 0x36
   586  000037                     	ds	8
   587  00003F                     dtoa@i:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x3E
   591  00003F                     	ds	2
   592  000041                     ?_vfpfcnvrt:
   593                           	callstack 0
   594  000041                     vfpfcnvrt@fp:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x40
   598  000041                     	ds	2
   599  000043                     vfpfcnvrt@fmt:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x42
   603  000043                     	ds	2
   604  000045                     vfpfcnvrt@ap:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x44
   608  000045                     	ds	2
   609  000047                     ??_vfpfcnvrt:
   610                           
   611                           ; 1 bytes @ 0x46
   612  000047                     	ds	2
   613  000049                     vfpfcnvrt@ll:
   614                           	callstack 0
   615                           
   616                           ; 8 bytes @ 0x48
   617  000049                     	ds	8
   618  000051                     vfpfcnvrt@cp:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x50
   622  000051                     	ds	2
   623  000053                     vfpfcnvrt@c:
   624                           	callstack 0
   625                           
   626                           ; 1 bytes @ 0x52
   627  000053                     	ds	1
   628  000054                     ?_vfprintf:
   629                           	callstack 0
   630  000054                     vfprintf@fp:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x53
   634  000054                     	ds	2
   635  000056                     vfprintf@fmt:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x55
   639  000056                     	ds	2
   640  000058                     vfprintf@ap:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x57
   644  000058                     	ds	2
   645  00005A                     vfprintf@cfmt:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x59
   649  00005A                     	ds	2
   650  00005C                     ?_printf:
   651                           	callstack 0
   652  00005C                     printf@fmt:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x5B
   656  00005C                     	ds	4
   657  000060                     
   658                           ; 1 bytes @ 0x5F
   659 ;;
   660 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   661 ;;
   662 ;; *************** function _main *****************
   663 ;; Defined at:
   664 ;;		line 93 in file "main.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;  ring_buffer    66   59[BANK0 ] struct ring_buffer_t
   669 ;;  buf_arr        50    6[BANK0 ] unsigned char [50]
   670 ;;  buf             1   58[BANK0 ] unsigned char 
   671 ;;  i               1   57[BANK0 ] unsigned char 
   672 ;;  cnt             1   56[BANK0 ] unsigned char 
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1    wreg      void 
   675 ;; Registers used:
   676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   683 ;;      Locals:         0     119       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   684 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   685 ;;      Totals:         0     121       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   686 ;;Total ram usage:      121 bytes
   687 ;; Hardware stack levels required when called:    8
   688 ;; This function calls:
   689 ;;		_init
   690 ;;		_printf
   691 ;;		_ring_buff_init
   692 ;;		_ring_buff_num_items
   693 ;;		_ring_buff_peek
   694 ;;		_ring_buff_read
   695 ;;		_ring_buff_read_arr
   696 ;;		_ring_buff_write
   697 ;;		_ring_buff_write_arr
   698 ;; This function is called by:
   699 ;;		Startup code after reset
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           	psect	text0
   704  001A4A                     __ptext0:
   705                           	callstack 0
   706  001A4A                     _main:
   707                           	callstack 23
   708  001A4A                     
   709                           ;main.c: 95:     init();
   710  001A4A  EC13  F011         	call	_init	;wreg free
   711  001A4E                     
   712                           ;main.c: 97:     char i, cnt;;main.c: 98:     char buf;;main.c: 99:     char buf_arr[50]
      +                          ;;main.c: 101:     ring_buffer_t ring_buffer;;main.c: 102:     ring_buff_init(&ring_buff
      +                          er);
   713  001A4E  0E9B               	movlw	low main@ring_buffer
   714  001A50  6E01               	movwf	ring_buff_init@buffer^0,c
   715  001A52  0E00               	movlw	high main@ring_buffer
   716  001A54  6E02               	movwf	(ring_buff_init@buffer+1)^0,c
   717  001A56  EC02  F011         	call	_ring_buff_init	;wreg free
   718  001A5A                     l1853:
   719                           
   720                           ;main.c: 106:         for(i = 0; i < 50; i++) {
   721  001A5A  0E00               	movlw	0
   722  001A5C  0100               	movlb	0	; () banked
   723  001A5E  6F99               	movwf	main@i& (0+255),b
   724  001A60                     l1859:
   725                           
   726                           ; BSR set to: 0
   727                           ;main.c: 107:             ring_buff_write(&ring_buffer, i);
   728  001A60  0E9B               	movlw	low main@ring_buffer
   729  001A62  6E06               	movwf	ring_buff_write@buffer^0,c
   730  001A64  0E00               	movlw	high main@ring_buffer
   731  001A66  6E07               	movwf	(ring_buff_write@buffer+1)^0,c
   732  001A68  C099  F008         	movff	main@i,ring_buff_write@data
   733  001A6C  ECEC  F00E         	call	_ring_buff_write	;wreg free
   734  001A70                     
   735                           ;main.c: 108:         }
   736  001A70  0100               	movlb	0	; () banked
   737  001A72  2B99               	incf	main@i& (0+255),f,b
   738  001A74                     
   739                           ; BSR set to: 0
   740  001A74  0E31               	movlw	49
   741  001A76  6599               	cpfsgt	main@i& (0+255),b
   742  001A78  EF40  F00D         	goto	u1481
   743  001A7C  EF42  F00D         	goto	u1480
   744  001A80                     u1481:
   745  001A80  EF30  F00D         	goto	l1859
   746  001A84                     u1480:
   747  001A84                     
   748                           ; BSR set to: 0
   749  001A84  0E9B               	movlw	low main@ring_buffer
   750  001A86  6E05               	movwf	ring_buff_peek@buffer^0,c
   751  001A88  0E00               	movlw	high main@ring_buffer
   752  001A8A  6E06               	movwf	(ring_buff_peek@buffer+1)^0,c
   753  001A8C  0E9A               	movlw	low main@buf
   754  001A8E  6E07               	movwf	ring_buff_peek@data^0,c
   755  001A90  0E00               	movlw	high main@buf
   756  001A92  6E08               	movwf	(ring_buff_peek@data+1)^0,c
   757  001A94  0E01               	movlw	1
   758  001A96  6E09               	movwf	ring_buff_peek@index^0,c
   759  001A98  ECCF  F00F         	call	_ring_buff_peek	;wreg free
   760  001A9C  0E9B               	movlw	low main@ring_buffer
   761  001A9E  6E01               	movwf	ring_buff_num_items@buffer^0,c
   762  001AA0  0E00               	movlw	high main@ring_buffer
   763  001AA2  6E02               	movwf	(ring_buff_num_items@buffer+1)^0,c
   764  001AA4  ECDA  F010         	call	_ring_buff_num_items	;wreg free
   765  001AA8                     
   766                           ;main.c: 115:         for(cnt = 0; ring_buff_read(&ring_buffer, &buf) > 0; cnt++) {
   767  001AA8  0E00               	movlw	0
   768  001AAA  0100               	movlb	0	; () banked
   769  001AAC  6F98               	movwf	main@cnt& (0+255),b
   770  001AAE  EF64  F00D         	goto	l1875
   771  001AB2                     l1871:
   772                           
   773                           ;main.c: 116:             printf("R: %d\n", buf);
   774  001AB2  0E49               	movlw	low STR_1
   775  001AB4  6E5C               	movwf	printf@fmt^0,c
   776  001AB6  0E10               	movlw	high STR_1
   777  001AB8  6E5D               	movwf	(printf@fmt+1)^0,c
   778  001ABA  C09A  F05E         	movff	main@buf,?_printf+2
   779  001ABE  6A5F               	clrf	(?_printf+3)^0,c
   780  001AC0  ECEE  F010         	call	_printf	;wreg free
   781  001AC4                     
   782                           ;main.c: 117:         }
   783  001AC4  0100               	movlb	0	; () banked
   784  001AC6  2B98               	incf	main@cnt& (0+255),f,b
   785  001AC8                     l1875:
   786                           
   787                           ; BSR set to: 0
   788  001AC8  0E9B               	movlw	low main@ring_buffer
   789  001ACA  6E05               	movwf	ring_buff_read@buffer^0,c
   790  001ACC  0E00               	movlw	high main@ring_buffer
   791  001ACE  6E06               	movwf	(ring_buff_read@buffer+1)^0,c
   792  001AD0  0E9A               	movlw	low main@buf
   793  001AD2  6E07               	movwf	ring_buff_read@data^0,c
   794  001AD4  0E00               	movlw	high main@buf
   795  001AD6  6E08               	movwf	(ring_buff_read@data+1)^0,c
   796  001AD8  EC66  F00F         	call	_ring_buff_read	;wreg free
   797  001ADC  0900               	iorlw	0
   798  001ADE  A4D8               	btfss	status,2,c
   799  001AE0  EF74  F00D         	goto	u1491
   800  001AE4  EF76  F00D         	goto	u1490
   801  001AE8                     u1491:
   802  001AE8  EF59  F00D         	goto	l1871
   803  001AEC                     u1490:
   804  001AEC                     
   805                           ;main.c: 119:         ring_buff_write_arr(&ring_buffer, "Testovaci zprava pro buffer!", 
      +                          28);
   806  001AEC  0E9B               	movlw	low main@ring_buffer
   807  001AEE  6E0A               	movwf	ring_buff_write_arr@buffer^0,c
   808  001AF0  0E00               	movlw	high main@ring_buffer
   809  001AF2  6E0B               	movwf	(ring_buff_write_arr@buffer+1)^0,c
   810  001AF4  0E25               	movlw	low STR_2
   811  001AF6  6E0C               	movwf	ring_buff_write_arr@data^0,c
   812  001AF8  0E10               	movlw	high STR_2
   813  001AFA  6E0D               	movwf	(ring_buff_write_arr@data+1)^0,c
   814  001AFC  0E1C               	movlw	28
   815  001AFE  6E0E               	movwf	ring_buff_write_arr@size^0,c
   816  001B00  EC43  F010         	call	_ring_buff_write_arr	;wreg free
   817                           
   818                           ;main.c: 121:         while(ring_buff_read(&ring_buffer, &buf) > 0) {
   819  001B04  EF8D  F00D         	goto	l1881
   820  001B08                     l1879:
   821                           
   822                           ;main.c: 122:             printf("R: %c\n", buf);
   823  001B08  0E42               	movlw	low STR_3
   824  001B0A  6E5C               	movwf	printf@fmt^0,c
   825  001B0C  0E10               	movlw	high STR_3
   826  001B0E  6E5D               	movwf	(printf@fmt+1)^0,c
   827  001B10  C09A  F05E         	movff	main@buf,?_printf+2
   828  001B14  6A5F               	clrf	(?_printf+3)^0,c
   829  001B16  ECEE  F010         	call	_printf	;wreg free
   830  001B1A                     l1881:
   831                           
   832                           ;main.c: 121:         while(ring_buff_read(&ring_buffer, &buf) > 0) {
   833  001B1A  0E9B               	movlw	low main@ring_buffer
   834  001B1C  6E05               	movwf	ring_buff_read@buffer^0,c
   835  001B1E  0E00               	movlw	high main@ring_buffer
   836  001B20  6E06               	movwf	(ring_buff_read@buffer+1)^0,c
   837  001B22  0E9A               	movlw	low main@buf
   838  001B24  6E07               	movwf	ring_buff_read@data^0,c
   839  001B26  0E00               	movlw	high main@buf
   840  001B28  6E08               	movwf	(ring_buff_read@data+1)^0,c
   841  001B2A  EC66  F00F         	call	_ring_buff_read	;wreg free
   842  001B2E  0900               	iorlw	0
   843  001B30  A4D8               	btfss	status,2,c
   844  001B32  EF9D  F00D         	goto	u1501
   845  001B36  EF9F  F00D         	goto	u1500
   846  001B3A                     u1501:
   847  001B3A  EF84  F00D         	goto	l1879
   848  001B3E                     u1500:
   849  001B3E                     
   850                           ;main.c: 125:         LATB5 = 1;
   851  001B3E  8A8A               	bsf	3978,5,c	;volatile
   852  001B40                     
   853                           ;main.c: 126:         ring_buff_write_arr(&ring_buffer, "Testovaci  zprava pro buffer, z
      +                          novu", 35);
   854  001B40  0E9B               	movlw	low main@ring_buffer
   855  001B42  6E0A               	movwf	ring_buff_write_arr@buffer^0,c
   856  001B44  0E00               	movlw	high main@ring_buffer
   857  001B46  6E0B               	movwf	(ring_buff_write_arr@buffer+1)^0,c
   858  001B48  0E01               	movlw	low STR_4
   859  001B4A  6E0C               	movwf	ring_buff_write_arr@data^0,c
   860  001B4C  0E10               	movlw	high STR_4
   861  001B4E  6E0D               	movwf	(ring_buff_write_arr@data+1)^0,c
   862  001B50  0E23               	movlw	35
   863  001B52  6E0E               	movwf	ring_buff_write_arr@size^0,c
   864  001B54  EC43  F010         	call	_ring_buff_write_arr	;wreg free
   865  001B58  0E9B               	movlw	low main@ring_buffer
   866  001B5A  6E0A               	movwf	ring_buff_read_arr@buffer^0,c
   867  001B5C  0E00               	movlw	high main@ring_buffer
   868  001B5E  6E0B               	movwf	(ring_buff_read_arr@buffer+1)^0,c
   869  001B60  0E66               	movlw	low main@buf_arr
   870  001B62  6E0C               	movwf	ring_buff_read_arr@data^0,c
   871  001B64  0E00               	movlw	high main@buf_arr
   872  001B66  6E0D               	movwf	(ring_buff_read_arr@data+1)^0,c
   873  001B68  0E23               	movlw	35
   874  001B6A  6E0E               	movwf	ring_buff_read_arr@len^0,c
   875  001B6C  EC2D  F00F         	call	_ring_buff_read_arr	;wreg free
   876  001B70                     
   877                           ;main.c: 129:         printf("%s", buf_arr);
   878  001B70  0E50               	movlw	low STR_5
   879  001B72  6E5C               	movwf	printf@fmt^0,c
   880  001B74  0E10               	movlw	high STR_5
   881  001B76  6E5D               	movwf	(printf@fmt+1)^0,c
   882  001B78  0E66               	movlw	low main@buf_arr
   883  001B7A  6E5E               	movwf	(?_printf+2)^0,c
   884  001B7C  0E00               	movlw	high main@buf_arr
   885  001B7E  6E5F               	movwf	(?_printf+3)^0,c
   886  001B80  ECEE  F010         	call	_printf	;wreg free
   887  001B84                     
   888                           ;main.c: 130:        _delay((unsigned long)((1000)*(32E6/4000.0)));
   889  001B84  0E29               	movlw	41
   890  001B86  0100               	movlb	0	; () banked
   891  001B88  6F65               	movwf	(??_main+1)& (0+255),b
   892  001B8A  0E96               	movlw	150
   893  001B8C  6F64               	movwf	??_main& (0+255),b
   894  001B8E  0E7F               	movlw	127
   895  001B90                     u1517:
   896  001B90  2EE8               	decfsz	wreg,f,c
   897  001B92  D7FE               	bra	u1517
   898  001B94  2F64               	decfsz	??_main& (0+255),f,b
   899  001B96  D7FC               	bra	u1517
   900  001B98  2F65               	decfsz	(??_main+1)& (0+255),f,b
   901  001B9A  D7FA               	bra	u1517
   902  001B9C  EF2D  F00D         	goto	l1853
   903  001BA0  EF00  F000         	goto	start
   904  001BA4                     __end_of_main:
   905                           	callstack 0
   906                           
   907 ;; *************** function _ring_buff_write_arr *****************
   908 ;; Defined at:
   909 ;;		line 34 in file "ring_buff.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;  buffer          2    9[COMRAM] const PTR struct ring_bu
   912 ;;		 -> main@ring_buffer(66), 
   913 ;;  data            2   11[COMRAM] PTR const unsigned char 
   914 ;;		 -> STR_4(36), STR_2(29), 
   915 ;;  size            1   13[COMRAM] unsigned char 
   916 ;; Auto vars:     Size  Location     Type
   917 ;;  i               1   16[COMRAM] unsigned char 
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      void 
   920 ;; Registers used:
   921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   927 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   929 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   930 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   931 ;;Total ram usage:        8 bytes
   932 ;; Hardware stack levels used:    1
   933 ;; Hardware stack levels required when called:    2
   934 ;; This function calls:
   935 ;;		_ring_buff_write
   936 ;; This function is called by:
   937 ;;		_main
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text1
   942  002086                     __ptext1:
   943                           	callstack 0
   944  002086                     _ring_buff_write_arr:
   945                           	callstack 28
   946  002086                     
   947                           ;ring_buff.c: 36:   ring_buffer_size_t i;;ring_buff.c: 37:   for(i = 0; i < size; i++) {
   948  002086  0E00               	movlw	0
   949  002088  6E11               	movwf	ring_buff_write_arr@i^0,c
   950  00208A  EF5B  F010         	goto	l1827
   951  00208E                     l1823:
   952                           
   953                           ;ring_buff.c: 38:     ring_buff_write(buffer, data[i]);
   954  00208E  C00A  F006         	movff	ring_buff_write_arr@buffer,ring_buff_write@buffer
   955  002092  C00B  F007         	movff	ring_buff_write_arr@buffer+1,ring_buff_write@buffer+1
   956  002096  5011               	movf	ring_buff_write_arr@i^0,w,c
   957  002098  240C               	addwf	ring_buff_write_arr@data^0,w,c
   958  00209A  6E0F               	movwf	??_ring_buff_write_arr^0,c
   959  00209C  0E00               	movlw	0
   960  00209E  200D               	addwfc	(ring_buff_write_arr@data+1)^0,w,c
   961  0020A0  6E10               	movwf	(??_ring_buff_write_arr+1)^0,c
   962  0020A2  C00F  FFF6         	movff	??_ring_buff_write_arr,tblptrl
   963  0020A6  C010  FFF7         	movff	??_ring_buff_write_arr+1,tblptrh
   964  0020AA                     	if	0	;tblptru may be non-zero
   965  0020AA                     	endif
   966  0020AA                     	if	0	;tblptru may be non-zero
   967  0020AA                     	endif
   968  0020AA  0008               	tblrd		*
   969  0020AC  CFF5 F008          	movff	tablat,ring_buff_write@data
   970  0020B0  ECEC  F00E         	call	_ring_buff_write	;wreg free
   971  0020B4                     
   972                           ;ring_buff.c: 39:   }
   973  0020B4  2A11               	incf	ring_buff_write_arr@i^0,f,c
   974  0020B6                     l1827:
   975  0020B6  500E               	movf	ring_buff_write_arr@size^0,w,c
   976  0020B8  5C11               	subwf	ring_buff_write_arr@i^0,w,c
   977  0020BA  A0D8               	btfss	status,0,c
   978  0020BC  EF62  F010         	goto	u1441
   979  0020C0  EF64  F010         	goto	u1440
   980  0020C4                     u1441:
   981  0020C4  EF47  F010         	goto	l1823
   982  0020C8                     u1440:
   983  0020C8  0012               	return		;funcret
   984  0020CA                     __end_of_ring_buff_write_arr:
   985                           	callstack 0
   986                           
   987 ;; *************** function _ring_buff_write *****************
   988 ;; Defined at:
   989 ;;		line 24 in file "ring_buff.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  buffer          2    5[COMRAM] const PTR struct ring_bu
   992 ;;		 -> main@ring_buffer(66), 
   993 ;;  data            1    7[COMRAM] unsigned char 
   994 ;; Auto vars:     Size  Location     Type
   995 ;;		None
   996 ;; Return value:  Size  Location     Type
   997 ;;                  1    wreg      void 
   998 ;; Registers used:
   999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1005 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1007 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1008 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1009 ;;Total ram usage:        4 bytes
  1010 ;; Hardware stack levels used:    1
  1011 ;; Hardware stack levels required when called:    1
  1012 ;; This function calls:
  1013 ;;		_ring_buff_is_full
  1014 ;; This function is called by:
  1015 ;;		_main
  1016 ;;		_ring_buff_write_arr
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           	psect	text2
  1021  001DD8                     __ptext2:
  1022                           	callstack 0
  1023  001DD8                     _ring_buff_write:
  1024                           	callstack 28
  1025  001DD8                     
  1026                           ;ring_buff.c: 26:   if(ring_buff_is_full(buffer)) {
  1027  001DD8  C006  F001         	movff	ring_buff_write@buffer,ring_buff_is_full@buffer
  1028  001DDC  C007  F002         	movff	ring_buff_write@buffer+1,ring_buff_is_full@buffer+1
  1029  001DE0  ECFA  F00F         	call	_ring_buff_is_full	;wreg free
  1030  001DE4  0900               	iorlw	0
  1031  001DE6  B4D8               	btfsc	status,2,c
  1032  001DE8  EFF8  F00E         	goto	u1401
  1033  001DEC  EFFA  F00E         	goto	u1400
  1034  001DF0                     u1401:
  1035  001DF0  EF0B  F00F         	goto	l1755
  1036  001DF4                     u1400:
  1037  001DF4                     
  1038                           ;ring_buff.c: 27:     buffer->tail_index = ((buffer->tail_index + 1) & (64 -1));
  1039  001DF4  EE20 F040          	lfsr	2,64
  1040  001DF8  5006               	movf	ring_buff_write@buffer^0,w,c
  1041  001DFA  26D9               	addwf	fsr2l,f,c
  1042  001DFC  5007               	movf	(ring_buff_write@buffer+1)^0,w,c
  1043  001DFE  22DA               	addwfc	fsr2h,f,c
  1044  001E00  EE10 F040          	lfsr	1,64
  1045  001E04  5006               	movf	ring_buff_write@buffer^0,w,c
  1046  001E06  26E1               	addwf	fsr1l,f,c
  1047  001E08  5007               	movf	(ring_buff_write@buffer+1)^0,w,c
  1048  001E0A  22E2               	addwfc	fsr1h,f,c
  1049  001E0C  50E7               	movf	indf1,w,c
  1050  001E0E  6E09               	movwf	??_ring_buff_write^0,c
  1051  001E10  2809               	incf	??_ring_buff_write^0,w,c
  1052  001E12  0B3F               	andlw	63
  1053  001E14  6EDF               	movwf	indf2,c
  1054  001E16                     l1755:
  1055                           
  1056                           ;ring_buff.c: 30:   buffer->buffer[buffer->head_index] = data;
  1057  001E16  EE20 F041          	lfsr	2,65
  1058  001E1A  5006               	movf	ring_buff_write@buffer^0,w,c
  1059  001E1C  26D9               	addwf	fsr2l,f,c
  1060  001E1E  5007               	movf	(ring_buff_write@buffer+1)^0,w,c
  1061  001E20  22DA               	addwfc	fsr2h,f,c
  1062  001E22  50DF               	movf	indf2,w,c
  1063  001E24  6E09               	movwf	??_ring_buff_write^0,c
  1064  001E26  5009               	movf	??_ring_buff_write^0,w,c
  1065  001E28  2406               	addwf	ring_buff_write@buffer^0,w,c
  1066  001E2A  6ED9               	movwf	fsr2l,c
  1067  001E2C  0E00               	movlw	0
  1068  001E2E  2007               	addwfc	(ring_buff_write@buffer+1)^0,w,c
  1069  001E30  6EDA               	movwf	fsr2h,c
  1070  001E32  C008  FFDF         	movff	ring_buff_write@data,indf2
  1071  001E36                     
  1072                           ;ring_buff.c: 31:   buffer->head_index = ((buffer->head_index + 1) & (64 -1));
  1073  001E36  EE20 F041          	lfsr	2,65
  1074  001E3A  5006               	movf	ring_buff_write@buffer^0,w,c
  1075  001E3C  26D9               	addwf	fsr2l,f,c
  1076  001E3E  5007               	movf	(ring_buff_write@buffer+1)^0,w,c
  1077  001E40  22DA               	addwfc	fsr2h,f,c
  1078  001E42  EE10 F041          	lfsr	1,65
  1079  001E46  5006               	movf	ring_buff_write@buffer^0,w,c
  1080  001E48  26E1               	addwf	fsr1l,f,c
  1081  001E4A  5007               	movf	(ring_buff_write@buffer+1)^0,w,c
  1082  001E4C  22E2               	addwfc	fsr1h,f,c
  1083  001E4E  50E7               	movf	indf1,w,c
  1084  001E50  6E09               	movwf	??_ring_buff_write^0,c
  1085  001E52  2809               	incf	??_ring_buff_write^0,w,c
  1086  001E54  0B3F               	andlw	63
  1087  001E56  6EDF               	movwf	indf2,c
  1088  001E58  0012               	return		;funcret
  1089  001E5A                     __end_of_ring_buff_write:
  1090                           	callstack 0
  1091                           
  1092 ;; *************** function _ring_buff_is_full *****************
  1093 ;; Defined at:
  1094 ;;		line 14 in file "ring_buff.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;  buffer          2    0[COMRAM] const PTR struct ring_bu
  1097 ;;		 -> main@ring_buffer(66), 
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;		None
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      unsigned char 
  1102 ;; Registers used:
  1103 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1109 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1111 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;Total ram usage:        5 bytes
  1114 ;; Hardware stack levels used:    1
  1115 ;; This function calls:
  1116 ;;		Nothing
  1117 ;; This function is called by:
  1118 ;;		_ring_buff_write
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122                           	psect	text3
  1123  001FF4                     __ptext3:
  1124                           	callstack 0
  1125  001FF4                     _ring_buff_is_full:
  1126                           	callstack 28
  1127  001FF4                     
  1128                           ;ring_buff.c: 15:   return ((buffer->head_index - buffer->tail_index) & (64 -1)) == (64 
      +                          -1);
  1129  001FF4  EE20 F041          	lfsr	2,65
  1130  001FF8  5001               	movf	ring_buff_is_full@buffer^0,w,c
  1131  001FFA  26D9               	addwf	fsr2l,f,c
  1132  001FFC  5002               	movf	(ring_buff_is_full@buffer+1)^0,w,c
  1133  001FFE  22DA               	addwfc	fsr2h,f,c
  1134  002000  50DF               	movf	indf2,w,c
  1135  002002  6E03               	movwf	??_ring_buff_is_full^0,c
  1136  002004  6A04               	clrf	(??_ring_buff_is_full+1)^0,c
  1137  002006  EE20 F040          	lfsr	2,64
  1138  00200A  5001               	movf	ring_buff_is_full@buffer^0,w,c
  1139  00200C  26D9               	addwf	fsr2l,f,c
  1140  00200E  5002               	movf	(ring_buff_is_full@buffer+1)^0,w,c
  1141  002010  22DA               	addwfc	fsr2h,f,c
  1142  002012  50DF               	movf	indf2,w,c
  1143  002014  6E05               	movwf	(??_ring_buff_is_full+2)^0,c
  1144  002016  5005               	movf	(??_ring_buff_is_full+2)^0,w,c
  1145  002018  5E03               	subwf	??_ring_buff_is_full^0,f,c
  1146  00201A  0E00               	movlw	0
  1147  00201C  5A04               	subwfb	(??_ring_buff_is_full+1)^0,f,c
  1148  00201E  0E3F               	movlw	63
  1149  002020  1603               	andwf	??_ring_buff_is_full^0,f,c
  1150  002022  0E00               	movlw	0
  1151  002024  1604               	andwf	(??_ring_buff_is_full+1)^0,f,c
  1152  002026  0E3F               	movlw	63
  1153  002028  1803               	xorwf	??_ring_buff_is_full^0,w,c
  1154  00202A  1004               	iorwf	(??_ring_buff_is_full+1)^0,w,c
  1155  00202C  B4D8               	btfsc	status,2,c
  1156  00202E  EF1B  F010         	goto	u1321
  1157  002032  EF1E  F010         	goto	u1320
  1158  002036                     u1321:
  1159  002036  0E01               	movlw	1
  1160  002038  EF1F  F010         	goto	u1330
  1161  00203C                     u1320:
  1162  00203C  0E00               	movlw	0
  1163  00203E                     u1330:
  1164  00203E  0012               	return		;funcret
  1165  002040                     __end_of_ring_buff_is_full:
  1166                           	callstack 0
  1167                           
  1168 ;; *************** function _ring_buff_read_arr *****************
  1169 ;; Defined at:
  1170 ;;		line 53 in file "ring_buff.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;  buffer          2    9[COMRAM] const PTR struct ring_bu
  1173 ;;		 -> main@ring_buffer(66), 
  1174 ;;  data            2   11[COMRAM] PTR unsigned char 
  1175 ;;		 -> main@buf_arr(50), 
  1176 ;;  len             1   13[COMRAM] unsigned char 
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;  data_ptr        2   14[COMRAM] PTR unsigned char 
  1179 ;;		 -> main@buf_arr(50), 
  1180 ;;  cnt             1   16[COMRAM] unsigned char 
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1    wreg      unsigned char 
  1183 ;; Registers used:
  1184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1190 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1191 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1193 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1194 ;;Total ram usage:        8 bytes
  1195 ;; Hardware stack levels used:    1
  1196 ;; Hardware stack levels required when called:    2
  1197 ;; This function calls:
  1198 ;;		_ring_buff_is_empty
  1199 ;;		_ring_buff_read
  1200 ;; This function is called by:
  1201 ;;		_main
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           	psect	text4
  1206  001E5A                     __ptext4:
  1207                           	callstack 0
  1208  001E5A                     _ring_buff_read_arr:
  1209                           	callstack 28
  1210  001E5A                     
  1211                           ;ring_buff.c: 54:   if(ring_buff_is_empty(buffer)) {
  1212  001E5A  C00A  F001         	movff	ring_buff_read_arr@buffer,ring_buff_is_empty@buffer
  1213  001E5E  C00B  F002         	movff	ring_buff_read_arr@buffer+1,ring_buff_is_empty@buffer+1
  1214  001E62  ECC2  F010         	call	_ring_buff_is_empty	;wreg free
  1215  001E66  0900               	iorlw	0
  1216  001E68  B4D8               	btfsc	status,2,c
  1217  001E6A  EF39  F00F         	goto	u1451
  1218  001E6E  EF3B  F00F         	goto	u1450
  1219  001E72                     u1451:
  1220  001E72  EF3E  F00F         	goto	l1835
  1221  001E76                     u1450:
  1222  001E76                     
  1223                           ;ring_buff.c: 56:     return 0;
  1224  001E76  0E00               	movlw	0
  1225  001E78  EF65  F00F         	goto	l93
  1226  001E7C                     l1835:
  1227                           
  1228                           ;ring_buff.c: 59:   char *data_ptr = data;
  1229  001E7C  C00C  F00F         	movff	ring_buff_read_arr@data,ring_buff_read_arr@data_ptr
  1230  001E80  C00D  F010         	movff	ring_buff_read_arr@data+1,ring_buff_read_arr@data_ptr+1
  1231  001E84                     
  1232                           ;ring_buff.c: 60:   ring_buffer_size_t cnt = 0;
  1233  001E84  0E00               	movlw	0
  1234  001E86  6E11               	movwf	ring_buff_read_arr@cnt^0,c
  1235                           
  1236                           ;ring_buff.c: 61:   while((cnt < len) && ring_buff_read(buffer, data_ptr)) {
  1237  001E88  EF49  F00F         	goto	l1841
  1238  001E8C                     l1839:
  1239                           
  1240                           ;ring_buff.c: 62:     cnt++;
  1241  001E8C  2A11               	incf	ring_buff_read_arr@cnt^0,f,c
  1242                           
  1243                           ;ring_buff.c: 63:     data_ptr++;
  1244  001E8E  4A0F               	infsnz	ring_buff_read_arr@data_ptr^0,f,c
  1245  001E90  2A10               	incf	(ring_buff_read_arr@data_ptr+1)^0,f,c
  1246  001E92                     l1841:
  1247                           
  1248                           ;ring_buff.c: 61:   while((cnt < len) && ring_buff_read(buffer, data_ptr)) {
  1249  001E92  500E               	movf	ring_buff_read_arr@len^0,w,c
  1250  001E94  5C11               	subwf	ring_buff_read_arr@cnt^0,w,c
  1251  001E96  B0D8               	btfsc	status,0,c
  1252  001E98  EF50  F00F         	goto	u1461
  1253  001E9C  EF52  F00F         	goto	u1460
  1254  001EA0                     u1461:
  1255  001EA0  EF64  F00F         	goto	l1845
  1256  001EA4                     u1460:
  1257  001EA4  C00A  F005         	movff	ring_buff_read_arr@buffer,ring_buff_read@buffer
  1258  001EA8  C00B  F006         	movff	ring_buff_read_arr@buffer+1,ring_buff_read@buffer+1
  1259  001EAC  C00F  F007         	movff	ring_buff_read_arr@data_ptr,ring_buff_read@data
  1260  001EB0  C010  F008         	movff	ring_buff_read_arr@data_ptr+1,ring_buff_read@data+1
  1261  001EB4  EC66  F00F         	call	_ring_buff_read	;wreg free
  1262  001EB8  0900               	iorlw	0
  1263  001EBA  A4D8               	btfss	status,2,c
  1264  001EBC  EF62  F00F         	goto	u1471
  1265  001EC0  EF64  F00F         	goto	u1470
  1266  001EC4                     u1471:
  1267  001EC4  EF46  F00F         	goto	l1839
  1268  001EC8                     u1470:
  1269  001EC8                     l1845:
  1270                           
  1271                           ;ring_buff.c: 65:   return cnt;
  1272  001EC8  5011               	movf	ring_buff_read_arr@cnt^0,w,c
  1273  001ECA                     l93:
  1274  001ECA  0012               	return		;funcret
  1275  001ECC                     __end_of_ring_buff_read_arr:
  1276                           	callstack 0
  1277                           
  1278 ;; *************** function _ring_buff_read *****************
  1279 ;; Defined at:
  1280 ;;		line 42 in file "ring_buff.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;  buffer          2    4[COMRAM] const PTR struct ring_bu
  1283 ;;		 -> main@ring_buffer(66), 
  1284 ;;  data            2    6[COMRAM] PTR unsigned char 
  1285 ;;		 -> main@buf_arr(50), main@buf(1), 
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;		None
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      unsigned char 
  1290 ;; Registers used:
  1291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1297 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1299 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1300 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;Total ram usage:        5 bytes
  1302 ;; Hardware stack levels used:    1
  1303 ;; Hardware stack levels required when called:    1
  1304 ;; This function calls:
  1305 ;;		_ring_buff_is_empty
  1306 ;; This function is called by:
  1307 ;;		_main
  1308 ;;		_ring_buff_read_arr
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           	psect	text5
  1313  001ECC                     __ptext5:
  1314                           	callstack 0
  1315  001ECC                     _ring_buff_read:
  1316                           	callstack 28
  1317  001ECC                     
  1318                           ;ring_buff.c: 43:   if(ring_buff_is_empty(buffer)) {
  1319  001ECC  C005  F001         	movff	ring_buff_read@buffer,ring_buff_is_empty@buffer
  1320  001ED0  C006  F002         	movff	ring_buff_read@buffer+1,ring_buff_is_empty@buffer+1
  1321  001ED4  ECC2  F010         	call	_ring_buff_is_empty	;wreg free
  1322  001ED8  0900               	iorlw	0
  1323  001EDA  B4D8               	btfsc	status,2,c
  1324  001EDC  EF72  F00F         	goto	u1411
  1325  001EE0  EF74  F00F         	goto	u1410
  1326  001EE4                     u1411:
  1327  001EE4  EF77  F00F         	goto	l1769
  1328  001EE8                     u1410:
  1329  001EE8                     
  1330                           ;ring_buff.c: 45:     return 0;
  1331  001EE8  0E00               	movlw	0
  1332  001EEA  EF9D  F00F         	goto	l89
  1333  001EEE                     l1769:
  1334                           
  1335                           ;ring_buff.c: 48:   *data = buffer->buffer[buffer->tail_index];
  1336  001EEE  EE20 F040          	lfsr	2,64
  1337  001EF2  5005               	movf	ring_buff_read@buffer^0,w,c
  1338  001EF4  26D9               	addwf	fsr2l,f,c
  1339  001EF6  5006               	movf	(ring_buff_read@buffer+1)^0,w,c
  1340  001EF8  22DA               	addwfc	fsr2h,f,c
  1341  001EFA  50DF               	movf	indf2,w,c
  1342  001EFC  6E09               	movwf	??_ring_buff_read^0,c
  1343  001EFE  5009               	movf	??_ring_buff_read^0,w,c
  1344  001F00  2405               	addwf	ring_buff_read@buffer^0,w,c
  1345  001F02  6ED9               	movwf	fsr2l,c
  1346  001F04  0E00               	movlw	0
  1347  001F06  2006               	addwfc	(ring_buff_read@buffer+1)^0,w,c
  1348  001F08  6EDA               	movwf	fsr2h,c
  1349  001F0A  C007  FFE1         	movff	ring_buff_read@data,fsr1l
  1350  001F0E  C008  FFE2         	movff	ring_buff_read@data+1,fsr1h
  1351  001F12  CFDF FFE7          	movff	indf2,indf1
  1352                           
  1353                           ;ring_buff.c: 49:   buffer->tail_index = ((buffer->tail_index + 1) & (64 -1));
  1354  001F16  EE20 F040          	lfsr	2,64
  1355  001F1A  5005               	movf	ring_buff_read@buffer^0,w,c
  1356  001F1C  26D9               	addwf	fsr2l,f,c
  1357  001F1E  5006               	movf	(ring_buff_read@buffer+1)^0,w,c
  1358  001F20  22DA               	addwfc	fsr2h,f,c
  1359  001F22  EE10 F040          	lfsr	1,64
  1360  001F26  5005               	movf	ring_buff_read@buffer^0,w,c
  1361  001F28  26E1               	addwf	fsr1l,f,c
  1362  001F2A  5006               	movf	(ring_buff_read@buffer+1)^0,w,c
  1363  001F2C  22E2               	addwfc	fsr1h,f,c
  1364  001F2E  50E7               	movf	indf1,w,c
  1365  001F30  6E09               	movwf	??_ring_buff_read^0,c
  1366  001F32  2809               	incf	??_ring_buff_read^0,w,c
  1367  001F34  0B3F               	andlw	63
  1368  001F36  6EDF               	movwf	indf2,c
  1369  001F38                     
  1370                           ;ring_buff.c: 50:   return 1;
  1371  001F38  0E01               	movlw	1
  1372  001F3A                     l89:
  1373  001F3A  0012               	return		;funcret
  1374  001F3C                     __end_of_ring_buff_read:
  1375                           	callstack 0
  1376                           
  1377 ;; *************** function _ring_buff_is_empty *****************
  1378 ;; Defined at:
  1379 ;;		line 9 in file "ring_buff.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  buffer          2    0[COMRAM] const PTR struct ring_bu
  1382 ;;		 -> main@ring_buffer(66), 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;		None
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      unsigned char 
  1387 ;; Registers used:
  1388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1394 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;Total ram usage:        4 bytes
  1399 ;; Hardware stack levels used:    1
  1400 ;; This function calls:
  1401 ;;		Nothing
  1402 ;; This function is called by:
  1403 ;;		_ring_buff_read
  1404 ;;		_ring_buff_read_arr
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           	psect	text6
  1409  002184                     __ptext6:
  1410                           	callstack 0
  1411  002184                     _ring_buff_is_empty:
  1412                           	callstack 28
  1413  002184                     
  1414                           ;ring_buff.c: 10:   return (buffer->head_index == buffer->tail_index);
  1415  002184  EE20 F040          	lfsr	2,64
  1416  002188  5001               	movf	ring_buff_is_empty@buffer^0,w,c
  1417  00218A  26D9               	addwf	fsr2l,f,c
  1418  00218C  5002               	movf	(ring_buff_is_empty@buffer+1)^0,w,c
  1419  00218E  22DA               	addwfc	fsr2h,f,c
  1420  002190  EE10 F041          	lfsr	1,65
  1421  002194  5001               	movf	ring_buff_is_empty@buffer^0,w,c
  1422  002196  26E1               	addwf	fsr1l,f,c
  1423  002198  5002               	movf	(ring_buff_is_empty@buffer+1)^0,w,c
  1424  00219A  22E2               	addwfc	fsr1h,f,c
  1425  00219C  50DE               	movf	postinc2,w,c
  1426  00219E  18E6               	xorwf	postinc1,w,c
  1427  0021A0  B4D8               	btfsc	status,2,c
  1428  0021A2  EFD5  F010         	goto	u1301
  1429  0021A6  EFD8  F010         	goto	u1300
  1430  0021AA                     u1301:
  1431  0021AA  0E01               	movlw	1
  1432  0021AC  EFD9  F010         	goto	u1310
  1433  0021B0                     u1300:
  1434  0021B0  0E00               	movlw	0
  1435  0021B2                     u1310:
  1436  0021B2  0012               	return		;funcret
  1437  0021B4                     __end_of_ring_buff_is_empty:
  1438                           	callstack 0
  1439                           
  1440 ;; *************** function _ring_buff_peek *****************
  1441 ;; Defined at:
  1442 ;;		line 68 in file "ring_buff.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;  buffer          2    4[COMRAM] const PTR struct ring_bu
  1445 ;;		 -> main@ring_buffer(66), 
  1446 ;;  data            2    6[COMRAM] PTR unsigned char 
  1447 ;;		 -> main@buf(1), 
  1448 ;;  index           1    8[COMRAM] unsigned char 
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;  data_index      1   10[COMRAM] unsigned char 
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  1    wreg      unsigned char 
  1453 ;; Registers used:
  1454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1460 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1461 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1462 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1463 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1464 ;;Total ram usage:        7 bytes
  1465 ;; Hardware stack levels used:    1
  1466 ;; Hardware stack levels required when called:    1
  1467 ;; This function calls:
  1468 ;;		_ring_buff_num_items
  1469 ;; This function is called by:
  1470 ;;		_main
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           	psect	text7
  1475  001F9E                     __ptext7:
  1476                           	callstack 0
  1477  001F9E                     _ring_buff_peek:
  1478                           	callstack 29
  1479  001F9E                     
  1480                           ;ring_buff.c: 69:   if(index >= ring_buff_num_items(buffer)) {
  1481  001F9E  C005  F001         	movff	ring_buff_peek@buffer,ring_buff_num_items@buffer
  1482  001FA2  C006  F002         	movff	ring_buff_peek@buffer+1,ring_buff_num_items@buffer+1
  1483  001FA6  ECDA  F010         	call	_ring_buff_num_items	;wreg free
  1484  001FAA  6E0A               	movwf	??_ring_buff_peek^0,c
  1485  001FAC  500A               	movf	??_ring_buff_peek^0,w,c
  1486  001FAE  5C09               	subwf	ring_buff_peek@index^0,w,c
  1487  001FB0  A0D8               	btfss	status,0,c
  1488  001FB2  EFDD  F00F         	goto	u1431
  1489  001FB6  EFDF  F00F         	goto	u1430
  1490  001FBA                     u1431:
  1491  001FBA  EFE2  F00F         	goto	l1807
  1492  001FBE                     u1430:
  1493  001FBE                     
  1494                           ;ring_buff.c: 70:     return 0;
  1495  001FBE  0E00               	movlw	0
  1496  001FC0  EFF9  F00F         	goto	l102
  1497  001FC4                     l1807:
  1498                           
  1499                           ;ring_buff.c: 73:   ring_buffer_size_t data_index = ((buffer->tail_index + index) & (64 
      +                          -1));
  1500  001FC4  EE20 F040          	lfsr	2,64
  1501  001FC8  5005               	movf	ring_buff_peek@buffer^0,w,c
  1502  001FCA  26D9               	addwf	fsr2l,f,c
  1503  001FCC  5006               	movf	(ring_buff_peek@buffer+1)^0,w,c
  1504  001FCE  22DA               	addwfc	fsr2h,f,c
  1505  001FD0  50DF               	movf	indf2,w,c
  1506  001FD2  2409               	addwf	ring_buff_peek@index^0,w,c
  1507  001FD4  0B3F               	andlw	63
  1508  001FD6  6E0B               	movwf	ring_buff_peek@data_index^0,c
  1509  001FD8                     
  1510                           ;ring_buff.c: 74:   *data = buffer->buffer[data_index];
  1511  001FD8  500B               	movf	ring_buff_peek@data_index^0,w,c
  1512  001FDA  2405               	addwf	ring_buff_peek@buffer^0,w,c
  1513  001FDC  6ED9               	movwf	fsr2l,c
  1514  001FDE  0E00               	movlw	0
  1515  001FE0  2006               	addwfc	(ring_buff_peek@buffer+1)^0,w,c
  1516  001FE2  6EDA               	movwf	fsr2h,c
  1517  001FE4  C007  FFE1         	movff	ring_buff_peek@data,fsr1l
  1518  001FE8  C008  FFE2         	movff	ring_buff_peek@data+1,fsr1h
  1519  001FEC  CFDF FFE7          	movff	indf2,indf1
  1520  001FF0                     
  1521                           ;ring_buff.c: 75:   return 1;
  1522  001FF0  0E01               	movlw	1
  1523  001FF2                     l102:
  1524  001FF2  0012               	return		;funcret
  1525  001FF4                     __end_of_ring_buff_peek:
  1526                           	callstack 0
  1527                           
  1528 ;; *************** function _ring_buff_num_items *****************
  1529 ;; Defined at:
  1530 ;;		line 19 in file "ring_buff.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;  buffer          2    0[COMRAM] const PTR struct ring_bu
  1533 ;;		 -> main@ring_buffer(66), 
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;		None
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      unsigned char 
  1538 ;; Registers used:
  1539 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1545 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1547 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1548 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1549 ;;Total ram usage:        4 bytes
  1550 ;; Hardware stack levels used:    1
  1551 ;; This function calls:
  1552 ;;		Nothing
  1553 ;; This function is called by:
  1554 ;;		_main
  1555 ;;		_ring_buff_peek
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           	psect	text8
  1560  0021B4                     __ptext8:
  1561                           	callstack 0
  1562  0021B4                     _ring_buff_num_items:
  1563                           	callstack 29
  1564  0021B4                     
  1565                           ;ring_buff.c: 20:   return ((buffer->head_index - buffer->tail_index) & (64 -1));
  1566  0021B4  EE20 F040          	lfsr	2,64
  1567  0021B8  5001               	movf	ring_buff_num_items@buffer^0,w,c
  1568  0021BA  26D9               	addwf	fsr2l,f,c
  1569  0021BC  5002               	movf	(ring_buff_num_items@buffer+1)^0,w,c
  1570  0021BE  22DA               	addwfc	fsr2h,f,c
  1571  0021C0  50DF               	movf	indf2,w,c
  1572  0021C2  6E03               	movwf	??_ring_buff_num_items^0,c
  1573  0021C4  EE20 F041          	lfsr	2,65
  1574  0021C8  5001               	movf	ring_buff_num_items@buffer^0,w,c
  1575  0021CA  26D9               	addwf	fsr2l,f,c
  1576  0021CC  5002               	movf	(ring_buff_num_items@buffer+1)^0,w,c
  1577  0021CE  22DA               	addwfc	fsr2h,f,c
  1578  0021D0  50DF               	movf	indf2,w,c
  1579  0021D2  6E04               	movwf	(??_ring_buff_num_items+1)^0,c
  1580  0021D4  5003               	movf	??_ring_buff_num_items^0,w,c
  1581  0021D6  5C04               	subwf	(??_ring_buff_num_items+1)^0,w,c
  1582  0021D8  0B3F               	andlw	63
  1583  0021DA  0012               	return		;funcret
  1584  0021DC                     __end_of_ring_buff_num_items:
  1585                           	callstack 0
  1586                           
  1587 ;; *************** function _ring_buff_init *****************
  1588 ;; Defined at:
  1589 ;;		line 3 in file "ring_buff.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;  buffer          2    0[COMRAM] const PTR struct ring_bu
  1592 ;;		 -> main@ring_buffer(66), 
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;		None
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  1    wreg      void 
  1597 ;; Registers used:
  1598 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1607 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1608 ;;Total ram usage:        2 bytes
  1609 ;; Hardware stack levels used:    1
  1610 ;; This function calls:
  1611 ;;		Nothing
  1612 ;; This function is called by:
  1613 ;;		_main
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           	psect	text9
  1618  002204                     __ptext9:
  1619                           	callstack 0
  1620  002204                     _ring_buff_init:
  1621                           	callstack 30
  1622  002204                     
  1623                           ;ring_buff.c: 4:   buffer->tail_index = 0;
  1624  002204  EE20 F040          	lfsr	2,64
  1625  002208  5001               	movf	ring_buff_init@buffer^0,w,c
  1626  00220A  26D9               	addwf	fsr2l,f,c
  1627  00220C  5002               	movf	(ring_buff_init@buffer+1)^0,w,c
  1628  00220E  22DA               	addwfc	fsr2h,f,c
  1629  002210  0E00               	movlw	0
  1630  002212  6EDF               	movwf	indf2,c
  1631                           
  1632                           ;ring_buff.c: 5:   buffer->head_index = 0;
  1633  002214  EE20 F041          	lfsr	2,65
  1634  002218  5001               	movf	ring_buff_init@buffer^0,w,c
  1635  00221A  26D9               	addwf	fsr2l,f,c
  1636  00221C  5002               	movf	(ring_buff_init@buffer+1)^0,w,c
  1637  00221E  22DA               	addwfc	fsr2h,f,c
  1638  002220  0E00               	movlw	0
  1639  002222  6EDF               	movwf	indf2,c
  1640  002224  0012               	return		;funcret
  1641  002226                     __end_of_ring_buff_init:
  1642                           	callstack 0
  1643                           
  1644 ;; *************** function _printf *****************
  1645 ;; Defined at:
  1646 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\printf.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  fmt             2   91[COMRAM] PTR const unsigned char 
  1649 ;;		 -> STR_5(3), STR_3(7), STR_1(7), 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;  ap              2    2[BANK0 ] PTR void [1]
  1652 ;;		 -> ?_printf(2), 
  1653 ;;  ret             2    0        int 
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  2   91[COMRAM] int 
  1656 ;; Registers used:
  1657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1663 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1664 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1666 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1667 ;;Total ram usage:        8 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; Hardware stack levels required when called:    7
  1670 ;; This function calls:
  1671 ;;		_vfprintf
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text10
  1678  0021DC                     __ptext10:
  1679                           	callstack 0
  1680  0021DC                     _printf:
  1681                           	callstack 23
  1682  0021DC  0E5E               	movlw	low (?_printf+2)
  1683  0021DE  0100               	movlb	0	; () banked
  1684  0021E0  6F62               	movwf	printf@ap& (0+255),b
  1685  0021E2  0E00               	movlw	high (?_printf+2)
  1686  0021E4  6F63               	movwf	(printf@ap+1)& (0+255),b
  1687  0021E6                     
  1688                           ; BSR set to: 0
  1689  0021E6  0E00               	movlw	0
  1690  0021E8  6E54               	movwf	vfprintf@fp^0,c
  1691  0021EA  0E00               	movlw	0
  1692  0021EC  6E55               	movwf	(vfprintf@fp+1)^0,c
  1693  0021EE  C05C  F056         	movff	printf@fmt,vfprintf@fmt
  1694  0021F2  C05D  F057         	movff	printf@fmt+1,vfprintf@fmt+1
  1695  0021F6  0E62               	movlw	low printf@ap
  1696  0021F8  6E58               	movwf	vfprintf@ap^0,c
  1697  0021FA  0E00               	movlw	high printf@ap
  1698  0021FC  6E59               	movwf	(vfprintf@ap+1)^0,c
  1699  0021FE  EC9E  F00F         	call	_vfprintf	;wreg free
  1700  002202  0012               	return		;funcret
  1701  002204                     __end_of_printf:
  1702                           	callstack 0
  1703                           
  1704 ;; *************** function _vfprintf *****************
  1705 ;; Defined at:
  1706 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
  1709 ;;		 -> NULL(0), 
  1710 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
  1711 ;;		 -> STR_5(3), STR_3(7), STR_1(7), 
  1712 ;;  ap              2   87[COMRAM] PTR PTR void 
  1713 ;;		 -> printf@ap(2), 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
  1716 ;;		 -> STR_5(3), STR_3(7), STR_1(7), 
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  2   83[COMRAM] int 
  1719 ;; Registers used:
  1720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1726 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1727 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1730 ;;Total ram usage:        8 bytes
  1731 ;; Hardware stack levels used:    1
  1732 ;; Hardware stack levels required when called:    6
  1733 ;; This function calls:
  1734 ;;		_vfpfcnvrt
  1735 ;; This function is called by:
  1736 ;;		_printf
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text11
  1741  001F3C                     __ptext11:
  1742                           	callstack 0
  1743  001F3C                     _vfprintf:
  1744                           	callstack 23
  1745  001F3C                     
  1746                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1747  001F3C  C056  F05A         	movff	vfprintf@fmt,vfprintf@cfmt
  1748  001F40  C057  F05B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1749  001F44                     
  1750                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1751  001F44  0E00               	movlw	0
  1752  001F46  0100               	movlb	0	; () banked
  1753  001F48  6FDE               	movwf	(_nout+1)& (0+255),b
  1754  001F4A  0E00               	movlw	0
  1755  001F4C  6FDD               	movwf	_nout& (0+255),b
  1756                           
  1757                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1758  001F4E  EFBC  F00F         	goto	l1781
  1759  001F52                     l1779:
  1760                           
  1761                           ; BSR set to: 0
  1762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1763  001F52  C054  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
  1764  001F56  C055  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1765  001F5A  0E5A               	movlw	low vfprintf@cfmt
  1766  001F5C  6E43               	movwf	vfpfcnvrt@fmt^0,c
  1767  001F5E  0E00               	movlw	high vfprintf@cfmt
  1768  001F60  6E44               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1769  001F62  C058  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
  1770  001F66  C059  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1771  001F6A  EC9C  F009         	call	_vfpfcnvrt	;wreg free
  1772  001F6E  5041               	movf	?_vfpfcnvrt^0,w,c
  1773  001F70  0100               	movlb	0	; () banked
  1774  001F72  27DD               	addwf	_nout& (0+255),f,b
  1775  001F74  5042               	movf	(?_vfpfcnvrt+1)^0,w,c
  1776  001F76  23DE               	addwfc	(_nout+1)& (0+255),f,b
  1777  001F78                     l1781:
  1778                           
  1779                           ; BSR set to: 0
  1780                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1781  001F78  C05A  FFF6         	movff	vfprintf@cfmt,tblptrl
  1782  001F7C  C05B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1783  001F80                     	if	0	;tblptru may be non-zero
  1784  001F80                     	endif
  1785  001F80                     	if	0	;tblptru may be non-zero
  1786  001F80                     	endif
  1787  001F80  0008               	tblrd		*
  1788  001F82  50F5               	movf	tablat,w,c
  1789  001F84  0900               	iorlw	0
  1790  001F86  A4D8               	btfss	status,2,c
  1791  001F88  EFC8  F00F         	goto	u1421
  1792  001F8C  EFCA  F00F         	goto	u1420
  1793  001F90                     u1421:
  1794  001F90  EFA9  F00F         	goto	l1779
  1795  001F94                     u1420:
  1796  001F94                     
  1797                           ; BSR set to: 0
  1798                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1799  001F94  C0DD  F054         	movff	_nout,?_vfprintf
  1800  001F98  C0DE  F055         	movff	_nout+1,?_vfprintf+1
  1801  001F9C                     
  1802                           ; BSR set to: 0
  1803  001F9C  0012               	return		;funcret
  1804  001F9E                     __end_of_vfprintf:
  1805                           	callstack 0
  1806                           
  1807 ;; *************** function _vfpfcnvrt *****************
  1808 ;; Defined at:
  1809 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  1812 ;;		 -> NULL(0), 
  1813 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  1814 ;;		 -> vfprintf@cfmt(2), 
  1815 ;;  ap              2   68[COMRAM] PTR PTR void 
  1816 ;;		 -> printf@ap(2), 
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  ll              8   72[COMRAM] long long 
  1819 ;;  llu             8    0        unsigned long long 
  1820 ;;  f               4    0        unsigned long long 
  1821 ;;  vp              3    0        PTR void 
  1822 ;;  ct              3    0        unsigned char [3]
  1823 ;;  cp              2   80[COMRAM] PTR unsigned char 
  1824 ;;		 -> ?_printf(2), main@buf_arr(50), 
  1825 ;;  i               2    0        int 
  1826 ;;  done            2    0        int 
  1827 ;;  c               1   82[COMRAM] unsigned char 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  2   64[COMRAM] int 
  1830 ;; Registers used:
  1831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1837 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1838 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1839 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1840 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1841 ;;Total ram usage:       19 bytes
  1842 ;; Hardware stack levels used:    1
  1843 ;; Hardware stack levels required when called:    5
  1844 ;; This function calls:
  1845 ;;		_ctoa
  1846 ;;		_dtoa
  1847 ;;		_fputc
  1848 ;;		_stoa
  1849 ;; This function is called by:
  1850 ;;		_vfprintf
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           	psect	text12
  1855  001338                     __ptext12:
  1856                           	callstack 0
  1857  001338                     _vfpfcnvrt:
  1858                           	callstack 23
  1859  001338                     
  1860                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1861  001338  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1862  00133C  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1863  001340  CFDE FFF6          	movff	postinc2,tblptrl
  1864  001344  CFDD FFF7          	movff	postdec2,tblptrh
  1865  001348                     	if	0	;tblptru may be non-zero
  1866  001348                     	endif
  1867  001348                     	if	0	;tblptru may be non-zero
  1868  001348                     	endif
  1869  001348  0008               	tblrd		*
  1870  00134A  50F5               	movf	tablat,w,c
  1871  00134C  0A25               	xorlw	37
  1872  00134E  A4D8               	btfss	status,2,c
  1873  001350  EFAC  F009         	goto	u1341
  1874  001354  EFAE  F009         	goto	u1340
  1875  001358                     u1341:
  1876  001358  EFD0  F00A         	goto	l1743
  1877  00135C                     u1340:
  1878  00135C                     
  1879                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1880  00135C  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1881  001360  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1882  001364  2ADE               	incf	postinc2,f,c
  1883  001366  0E00               	movlw	0
  1884  001368  22DD               	addwfc	postdec2,f,c
  1885  00136A                     
  1886                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1887  00136A  0E00               	movlw	0
  1888  00136C  0100               	movlb	0	; () banked
  1889  00136E  6FE0               	movwf	(_width+1)& (0+255),b
  1890  001370  0E00               	movlw	0
  1891  001372  6FDF               	movwf	_width& (0+255),b
  1892  001374  C0DF  F0E3         	movff	_width,_flags
  1893  001378  C0E0  F0E4         	movff	_width+1,_flags+1
  1894  00137C                     
  1895                           ; BSR set to: 0
  1896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1897  00137C  69E1               	setf	_prec& (0+255),b
  1898  00137E  69E2               	setf	(_prec+1)& (0+255),b
  1899  001380                     
  1900                           ; BSR set to: 0
  1901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  1902  001380  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1903  001384  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1904  001388  CFDE FFF6          	movff	postinc2,tblptrl
  1905  00138C  CFDD FFF7          	movff	postdec2,tblptrh
  1906  001390                     	if	0	;tblptru may be non-zero
  1907  001390                     	endif
  1908  001390                     	if	0	;tblptru may be non-zero
  1909  001390                     	endif
  1910  001390  0008               	tblrd		*
  1911  001392  50F5               	movf	tablat,w,c
  1912  001394  0A63               	xorlw	99
  1913  001396  A4D8               	btfss	status,2,c
  1914  001398  EFD0  F009         	goto	u1351
  1915  00139C  EFD2  F009         	goto	u1350
  1916  0013A0                     u1351:
  1917  0013A0  EFF9  F009         	goto	l1709
  1918  0013A4                     u1350:
  1919  0013A4                     
  1920                           ; BSR set to: 0
  1921                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  1922  0013A4  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1923  0013A8  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1924  0013AC  2ADE               	incf	postinc2,f,c
  1925  0013AE  0E00               	movlw	0
  1926  0013B0  22DD               	addwfc	postdec2,f,c
  1927                           
  1928                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  1929  0013B2  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1930  0013B6  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1931  0013BA  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1932  0013BE  0E02               	movlw	2
  1933  0013C0  26DE               	addwf	postinc2,f,c
  1934  0013C2  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1935  0013C6  0E00               	movlw	0
  1936  0013C8  22DD               	addwfc	postdec2,f,c
  1937  0013CA  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1938  0013CE  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1939  0013D2  50DF               	movf	indf2,w,c
  1940  0013D4  6E53               	movwf	vfpfcnvrt@c^0,c
  1941  0013D6                     
  1942                           ; BSR set to: 0
  1943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  1944  0013D6  C041  F00B         	movff	vfpfcnvrt@fp,ctoa@fp
  1945  0013DA  C042  F00C         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  1946  0013DE  C053  F00D         	movff	vfpfcnvrt@c,ctoa@c
  1947  0013E2  ECD2  F00D         	call	_ctoa	;wreg free
  1948  0013E6  C00B  F041         	movff	?_ctoa,?_vfpfcnvrt
  1949  0013EA  C00C  F042         	movff	?_ctoa+1,?_vfpfcnvrt+1
  1950  0013EE  EFEB  F00A         	goto	l885
  1951  0013F2                     l1709:
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1955  0013F2  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1956  0013F6  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1957  0013FA  CFDE FFF6          	movff	postinc2,tblptrl
  1958  0013FE  CFDD FFF7          	movff	postdec2,tblptrh
  1959  001402                     	if	0	;tblptru may be non-zero
  1960  001402                     	endif
  1961  001402                     	if	0	;tblptru may be non-zero
  1962  001402                     	endif
  1963  001402  0008               	tblrd		*
  1964  001404  50F5               	movf	tablat,w,c
  1965  001406  0A64               	xorlw	100
  1966  001408  B4D8               	btfsc	status,2,c
  1967  00140A  EF09  F00A         	goto	u1361
  1968  00140E  EF0B  F00A         	goto	u1360
  1969  001412                     u1361:
  1970  001412  EF1D  F00A         	goto	l1713
  1971  001416                     u1360:
  1972  001416                     
  1973                           ; BSR set to: 0
  1974  001416  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1975  00141A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1976  00141E  CFDE FFF6          	movff	postinc2,tblptrl
  1977  001422  CFDD FFF7          	movff	postdec2,tblptrh
  1978  001426                     	if	0	;tblptru may be non-zero
  1979  001426                     	endif
  1980  001426                     	if	0	;tblptru may be non-zero
  1981  001426                     	endif
  1982  001426  0008               	tblrd		*
  1983  001428  50F5               	movf	tablat,w,c
  1984  00142A  0A69               	xorlw	105
  1985  00142C  A4D8               	btfss	status,2,c
  1986  00142E  EF1B  F00A         	goto	u1371
  1987  001432  EF1D  F00A         	goto	u1370
  1988  001436                     u1371:
  1989  001436  EF5D  F00A         	goto	l1719
  1990  00143A                     u1370:
  1991  00143A                     l1713:
  1992                           
  1993                           ; BSR set to: 0
  1994                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1995  00143A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1996  00143E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1997  001442  2ADE               	incf	postinc2,f,c
  1998  001444  0E00               	movlw	0
  1999  001446  22DD               	addwfc	postdec2,f,c
  2000                           
  2001                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2002  001448  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2003  00144C  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2004  001450  CFDF F047          	movff	indf2,??_vfpfcnvrt
  2005  001454  0E02               	movlw	2
  2006  001456  26DE               	addwf	postinc2,f,c
  2007  001458  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  2008  00145C  0E00               	movlw	0
  2009  00145E  22DD               	addwfc	postdec2,f,c
  2010  001460  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2011  001464  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2012  001468  CFDE F049          	movff	postinc2,vfpfcnvrt@ll
  2013  00146C  CFDD F04A          	movff	postdec2,vfpfcnvrt@ll+1
  2014  001470  0E00               	movlw	0
  2015  001472  BE4A               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2016  001474  0EFF               	movlw	-1
  2017  001476  6E4B               	movwf	(vfpfcnvrt@ll+2)^0,c
  2018  001478  6E4C               	movwf	(vfpfcnvrt@ll+3)^0,c
  2019  00147A  6E4D               	movwf	(vfpfcnvrt@ll+4)^0,c
  2020  00147C  6E4E               	movwf	(vfpfcnvrt@ll+5)^0,c
  2021  00147E  6E4F               	movwf	(vfpfcnvrt@ll+6)^0,c
  2022  001480  6E50               	movwf	(vfpfcnvrt@ll+7)^0,c
  2023  001482                     
  2024                           ; BSR set to: 0
  2025                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2026  001482  C041  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  2027  001486  C042  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2028  00148A  C049  F01F         	movff	vfpfcnvrt@ll,dtoa@d
  2029  00148E  C04A  F020         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2030  001492  C04B  F021         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2031  001496  C04C  F022         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2032  00149A  C04D  F023         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2033  00149E  C04E  F024         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2034  0014A2  C04F  F025         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2035  0014A6  C050  F026         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2036  0014AA  EC2A  F008         	call	_dtoa	;wreg free
  2037  0014AE  C01D  F041         	movff	?_dtoa,?_vfpfcnvrt
  2038  0014B2  C01E  F042         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2039  0014B6  EFEB  F00A         	goto	l885
  2040  0014BA                     l1719:
  2041                           
  2042                           ; BSR set to: 0
  2043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
  2044  0014BA  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2045  0014BE  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2046  0014C2  CFDE FFF6          	movff	postinc2,tblptrl
  2047  0014C6  CFDD FFF7          	movff	postdec2,tblptrh
  2048  0014CA                     	if	0	;tblptru may be non-zero
  2049  0014CA                     	endif
  2050  0014CA                     	if	0	;tblptru may be non-zero
  2051  0014CA                     	endif
  2052  0014CA  0008               	tblrd		*
  2053  0014CC  50F5               	movf	tablat,w,c
  2054  0014CE  0A73               	xorlw	115
  2055  0014D0  A4D8               	btfss	status,2,c
  2056  0014D2  EF6D  F00A         	goto	u1381
  2057  0014D6  EF6F  F00A         	goto	u1380
  2058  0014DA                     u1381:
  2059  0014DA  EF9A  F00A         	goto	l1727
  2060  0014DE                     u1380:
  2061  0014DE                     
  2062                           ; BSR set to: 0
  2063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
  2064  0014DE  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2065  0014E2  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2066  0014E6  2ADE               	incf	postinc2,f,c
  2067  0014E8  0E00               	movlw	0
  2068  0014EA  22DD               	addwfc	postdec2,f,c
  2069                           
  2070                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  2071  0014EC  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2072  0014F0  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2073  0014F4  CFDF F047          	movff	indf2,??_vfpfcnvrt
  2074  0014F8  0E02               	movlw	2
  2075  0014FA  26DE               	addwf	postinc2,f,c
  2076  0014FC  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  2077  001500  0E00               	movlw	0
  2078  001502  22DD               	addwfc	postdec2,f,c
  2079  001504  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2080  001508  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2081  00150C  CFDE F051          	movff	postinc2,vfpfcnvrt@cp
  2082  001510  CFDD F052          	movff	postdec2,vfpfcnvrt@cp+1
  2083  001514                     
  2084                           ; BSR set to: 0
  2085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
  2086  001514  C041  F00B         	movff	vfpfcnvrt@fp,stoa@fp
  2087  001518  C042  F00C         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  2088  00151C  C051  F00D         	movff	vfpfcnvrt@cp,stoa@s
  2089  001520  C052  F00E         	movff	vfpfcnvrt@cp+1,stoa@s+1
  2090  001524  ECB0  F00B         	call	_stoa	;wreg free
  2091  001528  C00B  F041         	movff	?_stoa,?_vfpfcnvrt
  2092  00152C  C00C  F042         	movff	?_stoa+1,?_vfpfcnvrt+1
  2093  001530  EFEB  F00A         	goto	l885
  2094  001534                     l1727:
  2095                           
  2096                           ; BSR set to: 0
  2097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2098  001534  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2099  001538  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2100  00153C  CFDE FFF6          	movff	postinc2,tblptrl
  2101  001540  CFDD FFF7          	movff	postdec2,tblptrh
  2102  001544                     	if	0	;tblptru may be non-zero
  2103  001544                     	endif
  2104  001544                     	if	0	;tblptru may be non-zero
  2105  001544                     	endif
  2106  001544  0008               	tblrd		*
  2107  001546  50F5               	movf	tablat,w,c
  2108  001548  0A25               	xorlw	37
  2109  00154A  A4D8               	btfss	status,2,c
  2110  00154C  EFAA  F00A         	goto	u1391
  2111  001550  EFAC  F00A         	goto	u1390
  2112  001554                     u1391:
  2113  001554  EFC3  F00A         	goto	l1737
  2114  001558                     u1390:
  2115  001558                     
  2116                           ; BSR set to: 0
  2117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2118  001558  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2119  00155C  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2120  001560  2ADE               	incf	postinc2,f,c
  2121  001562  0E00               	movlw	0
  2122  001564  22DD               	addwfc	postdec2,f,c
  2123  001566                     
  2124                           ; BSR set to: 0
  2125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2126  001566  0E00               	movlw	0
  2127  001568  6E03               	movwf	(fputc@c+1)^0,c
  2128  00156A  0E25               	movlw	37
  2129  00156C  6E02               	movwf	fputc@c^0,c
  2130  00156E  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2131  001572  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2132  001576  ECA1  F00E         	call	_fputc	;wreg free
  2133  00157A                     l1733:
  2134                           
  2135                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2136  00157A  0E00               	movlw	0
  2137  00157C  6E42               	movwf	(?_vfpfcnvrt+1)^0,c
  2138  00157E  0E01               	movlw	1
  2139  001580  6E41               	movwf	?_vfpfcnvrt^0,c
  2140  001582  EFEB  F00A         	goto	l885
  2141  001586                     l1737:
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2145  001586  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2146  00158A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2147  00158E  2ADE               	incf	postinc2,f,c
  2148  001590  0E00               	movlw	0
  2149  001592  22DD               	addwfc	postdec2,f,c
  2150  001594                     
  2151                           ; BSR set to: 0
  2152                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2153  001594  0E00               	movlw	0
  2154  001596  6E42               	movwf	(?_vfpfcnvrt+1)^0,c
  2155  001598  0E00               	movlw	0
  2156  00159A  6E41               	movwf	?_vfpfcnvrt^0,c
  2157  00159C  EFEB  F00A         	goto	l885
  2158  0015A0                     l1743:
  2159                           
  2160                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2161  0015A0  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2162  0015A4  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2163  0015A8  CFDE FFF6          	movff	postinc2,tblptrl
  2164  0015AC  CFDD FFF7          	movff	postdec2,tblptrh
  2165  0015B0                     	if	0	;tblptru may be non-zero
  2166  0015B0                     	endif
  2167  0015B0                     	if	0	;tblptru may be non-zero
  2168  0015B0                     	endif
  2169  0015B0  0008               	tblrd		*
  2170  0015B2  50F5               	movf	tablat,w,c
  2171  0015B4  6E02               	movwf	fputc@c^0,c
  2172  0015B6  6A03               	clrf	(fputc@c+1)^0,c
  2173  0015B8  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2174  0015BC  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2175  0015C0  ECA1  F00E         	call	_fputc	;wreg free
  2176  0015C4                     
  2177                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2178  0015C4  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2179  0015C8  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2180  0015CC  2ADE               	incf	postinc2,f,c
  2181  0015CE  0E00               	movlw	0
  2182  0015D0  22DD               	addwfc	postdec2,f,c
  2183  0015D2  EFBD  F00A         	goto	l1733
  2184  0015D6                     l885:
  2185  0015D6  0012               	return		;funcret
  2186  0015D8                     __end_of_vfpfcnvrt:
  2187                           	callstack 0
  2188                           
  2189 ;; *************** function _stoa *****************
  2190 ;; Defined at:
  2191 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  2194 ;;		 -> NULL(0), 
  2195 ;;  s               2   12[COMRAM] PTR unsigned char 
  2196 ;;		 -> ?_printf(2), main@buf_arr(50), 
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;  nuls            7   15[COMRAM] unsigned char [7]
  2199 ;;  l               2   30[COMRAM] int 
  2200 ;;  p               2   28[COMRAM] int 
  2201 ;;  cp              2   26[COMRAM] PTR unsigned char 
  2202 ;;		 -> stoa@nuls(7), ?_printf(2), main@buf_arr(50), 
  2203 ;;  w               2   24[COMRAM] int 
  2204 ;;  i               2   22[COMRAM] int 
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  2   10[COMRAM] int 
  2207 ;; Registers used:
  2208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2214 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2215 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2216 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2217 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2218 ;;Total ram usage:       22 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; Hardware stack levels required when called:    2
  2221 ;; This function calls:
  2222 ;;		_fputc
  2223 ;;		_strlen
  2224 ;; This function is called by:
  2225 ;;		_vfpfcnvrt
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text13
  2230  001760                     __ptext13:
  2231                           	callstack 0
  2232  001760                     _stoa:
  2233                           	callstack 25
  2234  001760                     
  2235                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
  2236  001760  EE20  F0E5         	lfsr	2,stoa@F1146
  2237  001764  EE10  F010         	lfsr	1,stoa@nuls
  2238  001768  0E06               	movlw	6
  2239  00176A                     u1211:
  2240  00176A  CFDB FFE3          	movff	plusw2,plusw1
  2241  00176E  06E8               	decf	wreg,f,c
  2242  001770  E2FC               	bc	u1211
  2243  001772                     
  2244                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
  2245  001772  C00D  F01B         	movff	stoa@s,stoa@cp
  2246  001776  C00E  F01C         	movff	stoa@s+1,stoa@cp+1
  2247  00177A                     
  2248                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
  2249  00177A  501B               	movf	stoa@cp^0,w,c
  2250  00177C  101C               	iorwf	(stoa@cp+1)^0,w,c
  2251  00177E  A4D8               	btfss	status,2,c
  2252  001780  EFC4  F00B         	goto	u1221
  2253  001784  EFC6  F00B         	goto	u1220
  2254  001788                     u1221:
  2255  001788  EFCA  F00B         	goto	l1651
  2256  00178C                     u1220:
  2257  00178C                     
  2258                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
  2259  00178C  0E10               	movlw	low stoa@nuls
  2260  00178E  6E1B               	movwf	stoa@cp^0,c
  2261  001790  0E00               	movlw	high stoa@nuls
  2262  001792  6E1C               	movwf	(stoa@cp+1)^0,c
  2263  001794                     l1651:
  2264                           
  2265                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
  2266  001794  C01B  F001         	movff	stoa@cp,strlen@s
  2267  001798  C01C  F002         	movff	stoa@cp+1,strlen@s+1
  2268  00179C  ECA7  F010         	call	_strlen	;wreg free
  2269  0017A0  C001  F01F         	movff	?_strlen,stoa@l
  2270  0017A4  C002  F020         	movff	?_strlen+1,stoa@l+1
  2271  0017A8                     
  2272                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
  2273  0017A8  C0E1  F01D         	movff	_prec,stoa@p
  2274  0017AC  C0E2  F01E         	movff	_prec+1,stoa@p+1
  2275  0017B0                     
  2276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  2277  0017B0  BE1E               	btfsc	(stoa@p+1)^0,7,c
  2278  0017B2  EFDD  F00B         	goto	u1231
  2279  0017B6  EFDF  F00B         	goto	u1230
  2280  0017BA                     u1231:
  2281  0017BA  EFF4  F00B         	goto	l866
  2282  0017BE                     u1230:
  2283  0017BE  501F               	movf	stoa@l^0,w,c
  2284  0017C0  5C1D               	subwf	stoa@p^0,w,c
  2285  0017C2  501E               	movf	(stoa@p+1)^0,w,c
  2286  0017C4  0A80               	xorlw	128
  2287  0017C6  6E0F               	movwf	??_stoa^0,c
  2288  0017C8  5020               	movf	(stoa@l+1)^0,w,c
  2289  0017CA  0A80               	xorlw	128
  2290  0017CC  580F               	subwfb	??_stoa^0,w,c
  2291  0017CE  A0D8               	btfss	status,0,c
  2292  0017D0  EFEC  F00B         	goto	u1241
  2293  0017D4  EFEE  F00B         	goto	u1240
  2294  0017D8                     u1241:
  2295  0017D8  EFF0  F00B         	goto	l864
  2296  0017DC                     u1240:
  2297  0017DC  EFF4  F00B         	goto	l866
  2298  0017E0                     l864:
  2299  0017E0  C01D  F01F         	movff	stoa@p,stoa@l
  2300  0017E4  C01E  F020         	movff	stoa@p+1,stoa@l+1
  2301  0017E8                     l866:
  2302                           
  2303                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 583:     p = l;
  2304  0017E8  C01F  F01D         	movff	stoa@l,stoa@p
  2305  0017EC  C020  F01E         	movff	stoa@l+1,stoa@p+1
  2306                           
  2307                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
  2308  0017F0  C0DF  F019         	movff	_width,stoa@w
  2309  0017F4  C0E0  F01A         	movff	_width+1,stoa@w+1
  2310                           
  2311                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
  2312  0017F8  0100               	movlb	0	; () banked
  2313  0017FA  B1E3               	btfsc	_flags& (0+255),0,b
  2314  0017FC  EF02  F00C         	goto	u1251
  2315  001800  EF04  F00C         	goto	u1250
  2316  001804                     u1251:
  2317  001804  EF21  F00C         	goto	l1667
  2318  001808                     u1250:
  2319  001808  EF12  F00C         	goto	l1665
  2320  00180C                     l1661:
  2321                           
  2322                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
  2323  00180C  0E00               	movlw	0
  2324  00180E  6E03               	movwf	(fputc@c+1)^0,c
  2325  001810  0E20               	movlw	32
  2326  001812  6E02               	movwf	fputc@c^0,c
  2327  001814  C00B  F004         	movff	stoa@fp,fputc@fp
  2328  001818  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  2329  00181C  ECA1  F00E         	call	_fputc	;wreg free
  2330  001820                     
  2331                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
  2332  001820  4A1F               	infsnz	stoa@l^0,f,c
  2333  001822  2A20               	incf	(stoa@l+1)^0,f,c
  2334  001824                     l1665:
  2335                           
  2336                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
  2337  001824  5019               	movf	stoa@w^0,w,c
  2338  001826  5C1F               	subwf	stoa@l^0,w,c
  2339  001828  5020               	movf	(stoa@l+1)^0,w,c
  2340  00182A  0A80               	xorlw	128
  2341  00182C  6E0F               	movwf	??_stoa^0,c
  2342  00182E  501A               	movf	(stoa@w+1)^0,w,c
  2343  001830  0A80               	xorlw	128
  2344  001832  580F               	subwfb	??_stoa^0,w,c
  2345  001834  A0D8               	btfss	status,0,c
  2346  001836  EF1F  F00C         	goto	u1261
  2347  00183A  EF21  F00C         	goto	u1260
  2348  00183E                     u1261:
  2349  00183E  EF06  F00C         	goto	l1661
  2350  001842                     u1260:
  2351  001842                     l1667:
  2352                           
  2353                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 595:     i = 0;
  2354  001842  0E00               	movlw	0
  2355  001844  6E18               	movwf	(stoa@i+1)^0,c
  2356  001846  0E00               	movlw	0
  2357  001848  6E17               	movwf	stoa@i^0,c
  2358                           
  2359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  2360  00184A  EF3A  F00C         	goto	l1675
  2361  00184E                     l1669:
  2362                           
  2363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
  2364  00184E  C01B  FFD9         	movff	stoa@cp,fsr2l
  2365  001852  C01C  FFDA         	movff	stoa@cp+1,fsr2h
  2366  001856  50DF               	movf	indf2,w,c
  2367  001858  6E0F               	movwf	??_stoa^0,c
  2368  00185A  500F               	movf	??_stoa^0,w,c
  2369  00185C  6E02               	movwf	fputc@c^0,c
  2370  00185E  6A03               	clrf	(fputc@c+1)^0,c
  2371  001860  C00B  F004         	movff	stoa@fp,fputc@fp
  2372  001864  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  2373  001868  ECA1  F00E         	call	_fputc	;wreg free
  2374  00186C                     
  2375                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
  2376  00186C  4A1B               	infsnz	stoa@cp^0,f,c
  2377  00186E  2A1C               	incf	(stoa@cp+1)^0,f,c
  2378  001870                     
  2379                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 599:         ++i;
  2380  001870  4A17               	infsnz	stoa@i^0,f,c
  2381  001872  2A18               	incf	(stoa@i+1)^0,f,c
  2382  001874                     l1675:
  2383                           
  2384                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  2385  001874  501D               	movf	stoa@p^0,w,c
  2386  001876  5C17               	subwf	stoa@i^0,w,c
  2387  001878  5018               	movf	(stoa@i+1)^0,w,c
  2388  00187A  0A80               	xorlw	128
  2389  00187C  6E0F               	movwf	??_stoa^0,c
  2390  00187E  501E               	movf	(stoa@p+1)^0,w,c
  2391  001880  0A80               	xorlw	128
  2392  001882  580F               	subwfb	??_stoa^0,w,c
  2393  001884  A0D8               	btfss	status,0,c
  2394  001886  EF47  F00C         	goto	u1271
  2395  00188A  EF49  F00C         	goto	u1270
  2396  00188E                     u1271:
  2397  00188E  EF27  F00C         	goto	l1669
  2398  001892                     u1270:
  2399  001892                     
  2400                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
  2401  001892  0100               	movlb	0	; () banked
  2402  001894  A1E3               	btfss	_flags& (0+255),0,b
  2403  001896  EF4F  F00C         	goto	u1281
  2404  00189A  EF51  F00C         	goto	u1280
  2405  00189E                     u1281:
  2406  00189E  EF6E  F00C         	goto	l876
  2407  0018A2                     u1280:
  2408  0018A2  EF5F  F00C         	goto	l1683
  2409  0018A6                     l1679:
  2410                           
  2411                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
  2412  0018A6  0E00               	movlw	0
  2413  0018A8  6E03               	movwf	(fputc@c+1)^0,c
  2414  0018AA  0E20               	movlw	32
  2415  0018AC  6E02               	movwf	fputc@c^0,c
  2416  0018AE  C00B  F004         	movff	stoa@fp,fputc@fp
  2417  0018B2  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  2418  0018B6  ECA1  F00E         	call	_fputc	;wreg free
  2419  0018BA                     
  2420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
  2421  0018BA  4A1F               	infsnz	stoa@l^0,f,c
  2422  0018BC  2A20               	incf	(stoa@l+1)^0,f,c
  2423  0018BE                     l1683:
  2424                           
  2425                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
  2426  0018BE  5019               	movf	stoa@w^0,w,c
  2427  0018C0  5C1F               	subwf	stoa@l^0,w,c
  2428  0018C2  5020               	movf	(stoa@l+1)^0,w,c
  2429  0018C4  0A80               	xorlw	128
  2430  0018C6  6E0F               	movwf	??_stoa^0,c
  2431  0018C8  501A               	movf	(stoa@w+1)^0,w,c
  2432  0018CA  0A80               	xorlw	128
  2433  0018CC  580F               	subwfb	??_stoa^0,w,c
  2434  0018CE  A0D8               	btfss	status,0,c
  2435  0018D0  EF6C  F00C         	goto	u1291
  2436  0018D4  EF6E  F00C         	goto	u1290
  2437  0018D8                     u1291:
  2438  0018D8  EF53  F00C         	goto	l1679
  2439  0018DC                     u1290:
  2440  0018DC                     l876:
  2441                           
  2442                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
  2443  0018DC  C01F  F00B         	movff	stoa@l,?_stoa
  2444  0018E0  C020  F00C         	movff	stoa@l+1,?_stoa+1
  2445  0018E4  0012               	return		;funcret
  2446  0018E6                     __end_of_stoa:
  2447                           	callstack 0
  2448                           
  2449 ;; *************** function _dtoa *****************
  2450 ;; Defined at:
  2451 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  2454 ;;		 -> NULL(0), 
  2455 ;;  d               8   30[COMRAM] long long 
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;  n               8   54[COMRAM] long long 
  2458 ;;  i               2   62[COMRAM] int 
  2459 ;;  s               2   52[COMRAM] int 
  2460 ;;  w               2   50[COMRAM] int 
  2461 ;;  p               2   48[COMRAM] int 
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  2   28[COMRAM] int 
  2464 ;; Registers used:
  2465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2471 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;Total ram usage:       36 bytes
  2476 ;; Hardware stack levels used:    1
  2477 ;; Hardware stack levels required when called:    4
  2478 ;; This function calls:
  2479 ;;		___aodiv
  2480 ;;		___aomod
  2481 ;;		_abs
  2482 ;;		_pad
  2483 ;; This function is called by:
  2484 ;;		_vfpfcnvrt
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text14
  2489  001054                     __ptext14:
  2490                           	callstack 0
  2491  001054                     _dtoa:
  2492                           	callstack 23
  2493  001054                     
  2494                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2495  001054  C01F  F037         	movff	dtoa@d,dtoa@n
  2496  001058  C020  F038         	movff	dtoa@d+1,dtoa@n+1
  2497  00105C  C021  F039         	movff	dtoa@d+2,dtoa@n+2
  2498  001060  C022  F03A         	movff	dtoa@d+3,dtoa@n+3
  2499  001064  C023  F03B         	movff	dtoa@d+4,dtoa@n+4
  2500  001068  C024  F03C         	movff	dtoa@d+5,dtoa@n+5
  2501  00106C  C025  F03D         	movff	dtoa@d+6,dtoa@n+6
  2502  001070  C026  F03E         	movff	dtoa@d+7,dtoa@n+7
  2503  001074                     
  2504                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2505  001074  BE3E               	btfsc	(dtoa@n+7)^0,7,c
  2506  001076  EF3F  F008         	goto	u1061
  2507  00107A  EF42  F008         	goto	u1060
  2508  00107E                     u1061:
  2509  00107E  0E01               	movlw	1
  2510  001080  EF43  F008         	goto	u1070
  2511  001084                     u1060:
  2512  001084  0E00               	movlw	0
  2513  001086                     u1070:
  2514  001086  6E35               	movwf	dtoa@s^0,c
  2515  001088  6A36               	clrf	(dtoa@s+1)^0,c
  2516                           
  2517                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2518  00108A  5035               	movf	dtoa@s^0,w,c
  2519  00108C  1036               	iorwf	(dtoa@s+1)^0,w,c
  2520  00108E  B4D8               	btfsc	status,2,c
  2521  001090  EF4C  F008         	goto	u1081
  2522  001094  EF4E  F008         	goto	u1080
  2523  001098                     u1081:
  2524  001098  EF5E  F008         	goto	l1587
  2525  00109C                     u1080:
  2526  00109C                     
  2527                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2528  00109C  1E3E               	comf	(dtoa@n+7)^0,f,c
  2529  00109E  1E3D               	comf	(dtoa@n+6)^0,f,c
  2530  0010A0  1E3C               	comf	(dtoa@n+5)^0,f,c
  2531  0010A2  1E3B               	comf	(dtoa@n+4)^0,f,c
  2532  0010A4  1E3A               	comf	(dtoa@n+3)^0,f,c
  2533  0010A6  1E39               	comf	(dtoa@n+2)^0,f,c
  2534  0010A8  1E38               	comf	(dtoa@n+1)^0,f,c
  2535  0010AA  6C37               	negf	dtoa@n^0,c
  2536  0010AC  0E00               	movlw	0
  2537  0010AE  2238               	addwfc	(dtoa@n+1)^0,f,c
  2538  0010B0  2239               	addwfc	(dtoa@n+2)^0,f,c
  2539  0010B2  223A               	addwfc	(dtoa@n+3)^0,f,c
  2540  0010B4  223B               	addwfc	(dtoa@n+4)^0,f,c
  2541  0010B6  223C               	addwfc	(dtoa@n+5)^0,f,c
  2542  0010B8  223D               	addwfc	(dtoa@n+6)^0,f,c
  2543  0010BA  223E               	addwfc	(dtoa@n+7)^0,f,c
  2544  0010BC                     l1587:
  2545                           
  2546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2547  0010BC  0100               	movlb	0	; () banked
  2548  0010BE  BFE2               	btfsc	(_prec+1)& (0+255),7,b
  2549  0010C0  EF64  F008         	goto	u1091
  2550  0010C4  EF66  F008         	goto	u1090
  2551  0010C8                     u1091:
  2552  0010C8  EF67  F008         	goto	l1591
  2553  0010CC                     u1090:
  2554  0010CC                     
  2555                           ; BSR set to: 0
  2556                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2557  0010CC  93E3               	bcf	_flags& (0+255),1,b
  2558  0010CE                     l1591:
  2559                           
  2560                           ; BSR set to: 0
  2561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2562  0010CE  BFE2               	btfsc	(_prec+1)& (0+255),7,b
  2563  0010D0  EF74  F008         	goto	u1100
  2564  0010D4  51E2               	movf	(_prec+1)& (0+255),w,b
  2565  0010D6  E106               	bnz	u1101
  2566  0010D8  05E1               	decf	_prec& (0+255),w,b
  2567  0010DA  B0D8               	btfsc	status,0,c
  2568  0010DC  EF72  F008         	goto	u1101
  2569  0010E0  EF74  F008         	goto	u1100
  2570  0010E4                     u1101:
  2571  0010E4  EF7A  F008         	goto	l837
  2572  0010E8                     u1100:
  2573  0010E8                     
  2574                           ; BSR set to: 0
  2575  0010E8  0E00               	movlw	0
  2576  0010EA  6E32               	movwf	(dtoa@p+1)^0,c
  2577  0010EC  0E01               	movlw	1
  2578  0010EE  6E31               	movwf	dtoa@p^0,c
  2579  0010F0  EF7E  F008         	goto	l839
  2580  0010F4                     l837:
  2581                           
  2582                           ; BSR set to: 0
  2583  0010F4  C0E1  F031         	movff	_prec,dtoa@p
  2584  0010F8  C0E2  F032         	movff	_prec+1,dtoa@p+1
  2585  0010FC                     l839:
  2586                           
  2587                           ; BSR set to: 0
  2588                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2589  0010FC  C0DF  F033         	movff	_width,dtoa@w
  2590  001100  C0E0  F034         	movff	_width+1,dtoa@w+1
  2591  001104                     
  2592                           ; BSR set to: 0
  2593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2594  001104  5035               	movf	dtoa@s^0,w,c
  2595  001106  1036               	iorwf	(dtoa@s+1)^0,w,c
  2596  001108  A4D8               	btfss	status,2,c
  2597  00110A  EF89  F008         	goto	u1111
  2598  00110E  EF8B  F008         	goto	u1110
  2599  001112                     u1111:
  2600  001112  EF92  F008         	goto	l1599
  2601  001116                     u1110:
  2602  001116                     
  2603                           ; BSR set to: 0
  2604  001116  A5E3               	btfss	_flags& (0+255),2,b
  2605  001118  EF90  F008         	goto	u1121
  2606  00111C  EF92  F008         	goto	u1120
  2607  001120                     u1121:
  2608  001120  EF95  F008         	goto	l1601
  2609  001124                     u1120:
  2610  001124                     l1599:
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  2614  001124  0633               	decf	dtoa@w^0,f,c
  2615  001126  A0D8               	btfss	status,0,c
  2616  001128  0634               	decf	(dtoa@w+1)^0,f,c
  2617  00112A                     l1601:
  2618                           
  2619                           ; BSR set to: 0
  2620                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2621  00112A  0E00               	movlw	0
  2622  00112C  6E40               	movwf	(dtoa@i+1)^0,c
  2623  00112E  0E1F               	movlw	31
  2624  001130  6E3F               	movwf	dtoa@i^0,c
  2625  001132                     
  2626                           ; BSR set to: 0
  2627                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2628  001132  0E00               	movlw	0
  2629  001134  0101               	movlb	1	; () banked
  2630  001136  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2631                           
  2632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2633  001138  EF1A  F009         	goto	l1615
  2634  00113C                     l1605:
  2635                           
  2636                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  2637  00113C  063F               	decf	dtoa@i^0,f,c
  2638  00113E  A0D8               	btfss	status,0,c
  2639  001140  0640               	decf	(dtoa@i+1)^0,f,c
  2640  001142                     
  2641                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2642  001142  0E00               	movlw	low _dbuf
  2643  001144  243F               	addwf	dtoa@i^0,w,c
  2644  001146  6ED9               	movwf	fsr2l,c
  2645  001148  0E01               	movlw	high _dbuf
  2646  00114A  2040               	addwfc	(dtoa@i+1)^0,w,c
  2647  00114C  6EDA               	movwf	fsr2h,c
  2648  00114E  C037  F001         	movff	dtoa@n,___aomod@dividend
  2649  001152  C038  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2650  001156  C039  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2651  00115A  C03A  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2652  00115E  C03B  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2653  001162  C03C  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2654  001166  C03D  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2655  00116A  C03E  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2656  00116E  0E0A               	movlw	10
  2657  001170  6E09               	movwf	___aomod@divisor^0,c
  2658  001172  0E00               	movlw	0
  2659  001174  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2660  001176  0E00               	movlw	0
  2661  001178  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2662  00117A  0E00               	movlw	0
  2663  00117C  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2664  00117E  0E00               	movlw	0
  2665  001180  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2666  001182  0E00               	movlw	0
  2667  001184  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2668  001186  0E00               	movlw	0
  2669  001188  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2670  00118A  0E00               	movlw	0
  2671  00118C  6E10               	movwf	(___aomod@divisor+7)^0,c
  2672  00118E  EC73  F00C         	call	___aomod	;wreg free
  2673  001192  C001  F027         	movff	?___aomod,??_dtoa
  2674  001196  C002  F028         	movff	?___aomod+1,??_dtoa+1
  2675  00119A  C003  F029         	movff	?___aomod+2,??_dtoa+2
  2676  00119E  C004  F02A         	movff	?___aomod+3,??_dtoa+3
  2677  0011A2  C005  F02B         	movff	?___aomod+4,??_dtoa+4
  2678  0011A6  C006  F02C         	movff	?___aomod+5,??_dtoa+5
  2679  0011AA  C007  F02D         	movff	?___aomod+6,??_dtoa+6
  2680  0011AE  C008  F02E         	movff	?___aomod+7,??_dtoa+7
  2681  0011B2  C027  F013         	movff	??_dtoa,abs@a
  2682  0011B6  C029  F014         	movff	??_dtoa+2,abs@a+1
  2683  0011BA  EC87  F010         	call	_abs	;wreg free
  2684  0011BE  5013               	movf	?_abs^0,w,c
  2685  0011C0  0F30               	addlw	48
  2686  0011C2  6EDF               	movwf	indf2,c
  2687  0011C4                     
  2688                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  2689  0011C4  0631               	decf	dtoa@p^0,f,c
  2690  0011C6  A0D8               	btfss	status,0,c
  2691  0011C8  0632               	decf	(dtoa@p+1)^0,f,c
  2692  0011CA                     
  2693                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  2694  0011CA  0633               	decf	dtoa@w^0,f,c
  2695  0011CC  A0D8               	btfss	status,0,c
  2696  0011CE  0634               	decf	(dtoa@w+1)^0,f,c
  2697  0011D0                     
  2698                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2699  0011D0  C037  F001         	movff	dtoa@n,___aodiv@dividend
  2700  0011D4  C038  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2701  0011D8  C039  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2702  0011DC  C03A  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2703  0011E0  C03B  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2704  0011E4  C03C  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2705  0011E8  C03D  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2706  0011EC  C03E  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2707  0011F0  0E0A               	movlw	10
  2708  0011F2  6E09               	movwf	___aodiv@divisor^0,c
  2709  0011F4  0E00               	movlw	0
  2710  0011F6  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2711  0011F8  0E00               	movlw	0
  2712  0011FA  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2713  0011FC  0E00               	movlw	0
  2714  0011FE  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2715  001200  0E00               	movlw	0
  2716  001202  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2717  001204  0E00               	movlw	0
  2718  001206  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2719  001208  0E00               	movlw	0
  2720  00120A  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2721  00120C  0E00               	movlw	0
  2722  00120E  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2723  001210  ECEC  F00A         	call	___aodiv	;wreg free
  2724  001214  C001  F037         	movff	?___aodiv,dtoa@n
  2725  001218  C002  F038         	movff	?___aodiv+1,dtoa@n+1
  2726  00121C  C003  F039         	movff	?___aodiv+2,dtoa@n+2
  2727  001220  C004  F03A         	movff	?___aodiv+3,dtoa@n+3
  2728  001224  C005  F03B         	movff	?___aodiv+4,dtoa@n+4
  2729  001228  C006  F03C         	movff	?___aodiv+5,dtoa@n+5
  2730  00122C  C007  F03D         	movff	?___aodiv+6,dtoa@n+6
  2731  001230  C008  F03E         	movff	?___aodiv+7,dtoa@n+7
  2732  001234                     l1615:
  2733                           
  2734                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2735  001234  BE40               	btfsc	(dtoa@i+1)^0,7,c
  2736  001236  EF25  F009         	goto	u1131
  2737  00123A  5040               	movf	(dtoa@i+1)^0,w,c
  2738  00123C  E108               	bnz	u1130
  2739  00123E  043F               	decf	dtoa@i^0,w,c
  2740  001240  A0D8               	btfss	status,0,c
  2741  001242  EF25  F009         	goto	u1131
  2742  001246  EF27  F009         	goto	u1130
  2743  00124A                     u1131:
  2744  00124A  EF58  F009         	goto	l1625
  2745  00124E                     u1130:
  2746  00124E  5037               	movf	dtoa@n^0,w,c
  2747  001250  1038               	iorwf	(dtoa@n+1)^0,w,c
  2748  001252  1039               	iorwf	(dtoa@n+2)^0,w,c
  2749  001254  103A               	iorwf	(dtoa@n+3)^0,w,c
  2750  001256  103B               	iorwf	(dtoa@n+4)^0,w,c
  2751  001258  103C               	iorwf	(dtoa@n+5)^0,w,c
  2752  00125A  103D               	iorwf	(dtoa@n+6)^0,w,c
  2753  00125C  103E               	iorwf	(dtoa@n+7)^0,w,c
  2754  00125E  A4D8               	btfss	status,2,c
  2755  001260  EF34  F009         	goto	u1141
  2756  001264  EF36  F009         	goto	u1140
  2757  001268                     u1141:
  2758  001268  EF9E  F008         	goto	l1605
  2759  00126C                     u1140:
  2760  00126C  BE32               	btfsc	(dtoa@p+1)^0,7,c
  2761  00126E  EF43  F009         	goto	u1150
  2762  001272  5032               	movf	(dtoa@p+1)^0,w,c
  2763  001274  E106               	bnz	u1151
  2764  001276  0431               	decf	dtoa@p^0,w,c
  2765  001278  B0D8               	btfsc	status,0,c
  2766  00127A  EF41  F009         	goto	u1151
  2767  00127E  EF43  F009         	goto	u1150
  2768  001282                     u1151:
  2769  001282  EF9E  F008         	goto	l1605
  2770  001286                     u1150:
  2771  001286  BE34               	btfsc	(dtoa@w+1)^0,7,c
  2772  001288  EF4E  F009         	goto	u1161
  2773  00128C  5034               	movf	(dtoa@w+1)^0,w,c
  2774  00128E  E108               	bnz	u1160
  2775  001290  0433               	decf	dtoa@w^0,w,c
  2776  001292  A0D8               	btfss	status,0,c
  2777  001294  EF4E  F009         	goto	u1161
  2778  001298  EF50  F009         	goto	u1160
  2779  00129C                     u1161:
  2780  00129C  EF58  F009         	goto	l1625
  2781  0012A0                     u1160:
  2782  0012A0  0100               	movlb	0	; () banked
  2783  0012A2  B3E3               	btfsc	_flags& (0+255),1,b
  2784  0012A4  EF56  F009         	goto	u1171
  2785  0012A8  EF58  F009         	goto	u1170
  2786  0012AC                     u1171:
  2787  0012AC  EF9E  F008         	goto	l1605
  2788  0012B0                     u1170:
  2789  0012B0                     l1625:
  2790                           
  2791                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2792  0012B0  5035               	movf	dtoa@s^0,w,c
  2793  0012B2  1036               	iorwf	(dtoa@s+1)^0,w,c
  2794  0012B4  A4D8               	btfss	status,2,c
  2795  0012B6  EF5F  F009         	goto	u1181
  2796  0012BA  EF61  F009         	goto	u1180
  2797  0012BE                     u1181:
  2798  0012BE  EF69  F009         	goto	l1629
  2799  0012C2                     u1180:
  2800  0012C2  0100               	movlb	0	; () banked
  2801  0012C4  A5E3               	btfss	_flags& (0+255),2,b
  2802  0012C6  EF67  F009         	goto	u1191
  2803  0012CA  EF69  F009         	goto	u1190
  2804  0012CE                     u1191:
  2805  0012CE  EF87  F009         	goto	l1639
  2806  0012D2                     u1190:
  2807  0012D2                     l1629:
  2808                           
  2809                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  2810  0012D2  063F               	decf	dtoa@i^0,f,c
  2811  0012D4  A0D8               	btfss	status,0,c
  2812  0012D6  0640               	decf	(dtoa@i+1)^0,f,c
  2813  0012D8                     
  2814                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2815  0012D8  5035               	movf	dtoa@s^0,w,c
  2816  0012DA  1036               	iorwf	(dtoa@s+1)^0,w,c
  2817  0012DC  A4D8               	btfss	status,2,c
  2818  0012DE  EF73  F009         	goto	u1201
  2819  0012E2  EF75  F009         	goto	u1200
  2820  0012E6                     u1201:
  2821  0012E6  EF7B  F009         	goto	l1635
  2822  0012EA                     u1200:
  2823  0012EA  0E00               	movlw	0
  2824  0012EC  6E30               	movwf	(_dtoa$933+1)^0,c
  2825  0012EE  0E2B               	movlw	43
  2826  0012F0  6E2F               	movwf	_dtoa$933^0,c
  2827  0012F2  EF7F  F009         	goto	l1637
  2828  0012F6                     l1635:
  2829  0012F6  0E00               	movlw	0
  2830  0012F8  6E30               	movwf	(_dtoa$933+1)^0,c
  2831  0012FA  0E2D               	movlw	45
  2832  0012FC  6E2F               	movwf	_dtoa$933^0,c
  2833  0012FE                     l1637:
  2834  0012FE  0E00               	movlw	low _dbuf
  2835  001300  243F               	addwf	dtoa@i^0,w,c
  2836  001302  6ED9               	movwf	fsr2l,c
  2837  001304  0E01               	movlw	high _dbuf
  2838  001306  2040               	addwfc	(dtoa@i+1)^0,w,c
  2839  001308  6EDA               	movwf	fsr2h,c
  2840  00130A  C02F  FFDF         	movff	_dtoa$933,indf2
  2841  00130E                     l1639:
  2842                           
  2843                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2844  00130E  C01D  F012         	movff	dtoa@fp,pad@fp
  2845  001312  C01E  F013         	movff	dtoa@fp+1,pad@fp+1
  2846  001316  0E00               	movlw	low _dbuf
  2847  001318  243F               	addwf	dtoa@i^0,w,c
  2848  00131A  6E14               	movwf	pad@buf^0,c
  2849  00131C  0E01               	movlw	high _dbuf
  2850  00131E  2040               	addwfc	(dtoa@i+1)^0,w,c
  2851  001320  6E15               	movwf	(pad@buf+1)^0,c
  2852  001322  C033  F016         	movff	dtoa@w,pad@p
  2853  001326  C034  F017         	movff	dtoa@w+1,pad@p+1
  2854  00132A  EC3E  F00E         	call	_pad	;wreg free
  2855  00132E  C012  F01D         	movff	?_pad,?_dtoa
  2856  001332  C013  F01E         	movff	?_pad+1,?_dtoa+1
  2857  001336  0012               	return		;funcret
  2858  001338                     __end_of_dtoa:
  2859                           	callstack 0
  2860                           
  2861 ;; *************** function _pad *****************
  2862 ;; Defined at:
  2863 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  2866 ;;		 -> NULL(0), 
  2867 ;;  buf             2   19[COMRAM] PTR unsigned char 
  2868 ;;		 -> dbuf(32), 
  2869 ;;  p               2   21[COMRAM] int 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;  w               2   26[COMRAM] int 
  2872 ;;  i               2   24[COMRAM] int 
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  2   17[COMRAM] int 
  2875 ;; Registers used:
  2876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2882 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2883 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2884 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2885 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2886 ;;Total ram usage:       11 bytes
  2887 ;; Hardware stack levels used:    1
  2888 ;; Hardware stack levels required when called:    3
  2889 ;; This function calls:
  2890 ;;		_fputc
  2891 ;;		_fputs
  2892 ;;		_strlen
  2893 ;; This function is called by:
  2894 ;;		_dtoa
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           	psect	text15
  2899  001C7C                     __ptext15:
  2900                           	callstack 0
  2901  001C7C                     _pad:
  2902                           	callstack 23
  2903  001C7C                     
  2904                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2905  001C7C  0100               	movlb	0	; () banked
  2906  001C7E  A1E3               	btfss	_flags& (0+255),0,b
  2907  001C80  EF44  F00E         	goto	u961
  2908  001C84  EF46  F00E         	goto	u960
  2909  001C88                     u961:
  2910  001C88  EF50  F00E         	goto	l1531
  2911  001C8C                     u960:
  2912  001C8C                     
  2913                           ; BSR set to: 0
  2914                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2915  001C8C  C014  F00B         	movff	pad@buf,fputs@s
  2916  001C90  C015  F00C         	movff	pad@buf+1,fputs@s+1
  2917  001C94  C012  F00D         	movff	pad@fp,fputs@fp
  2918  001C98  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  2919  001C9C  EC65  F010         	call	_fputs	;wreg free
  2920  001CA0                     l1531:
  2921                           
  2922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2923  001CA0  BE17               	btfsc	(pad@p+1)^0,7,c
  2924  001CA2  EF55  F00E         	goto	u971
  2925  001CA6  EF57  F00E         	goto	u970
  2926  001CAA                     u971:
  2927  001CAA  EF5D  F00E         	goto	l1535
  2928  001CAE                     u970:
  2929  001CAE  C016  F01B         	movff	pad@p,pad@w
  2930  001CB2  C017  F01C         	movff	pad@p+1,pad@w+1
  2931  001CB6  EF61  F00E         	goto	l810
  2932  001CBA                     l1535:
  2933  001CBA  0E00               	movlw	0
  2934  001CBC  6E1C               	movwf	(pad@w+1)^0,c
  2935  001CBE  0E00               	movlw	0
  2936  001CC0  6E1B               	movwf	pad@w^0,c
  2937  001CC2                     l810:
  2938                           
  2939                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2940  001CC2  0E00               	movlw	0
  2941  001CC4  6E1A               	movwf	(pad@i+1)^0,c
  2942  001CC6  0E00               	movlw	0
  2943  001CC8  6E19               	movwf	pad@i^0,c
  2944                           
  2945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2946  001CCA  EF73  F00E         	goto	l1541
  2947  001CCE                     l1537:
  2948                           
  2949                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2950  001CCE  0E00               	movlw	0
  2951  001CD0  6E03               	movwf	(fputc@c+1)^0,c
  2952  001CD2  0E20               	movlw	32
  2953  001CD4  6E02               	movwf	fputc@c^0,c
  2954  001CD6  C012  F004         	movff	pad@fp,fputc@fp
  2955  001CDA  C013  F005         	movff	pad@fp+1,fputc@fp+1
  2956  001CDE  ECA1  F00E         	call	_fputc	;wreg free
  2957  001CE2                     
  2958                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2959  001CE2  4A19               	infsnz	pad@i^0,f,c
  2960  001CE4  2A1A               	incf	(pad@i+1)^0,f,c
  2961  001CE6                     l1541:
  2962                           
  2963                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2964  001CE6  501B               	movf	pad@w^0,w,c
  2965  001CE8  5C19               	subwf	pad@i^0,w,c
  2966  001CEA  501A               	movf	(pad@i+1)^0,w,c
  2967  001CEC  0A80               	xorlw	128
  2968  001CEE  6E18               	movwf	??_pad^0,c
  2969  001CF0  501C               	movf	(pad@w+1)^0,w,c
  2970  001CF2  0A80               	xorlw	128
  2971  001CF4  5818               	subwfb	??_pad^0,w,c
  2972  001CF6  A0D8               	btfss	status,0,c
  2973  001CF8  EF80  F00E         	goto	u981
  2974  001CFC  EF82  F00E         	goto	u980
  2975  001D00                     u981:
  2976  001D00  EF67  F00E         	goto	l1537
  2977  001D04                     u980:
  2978  001D04                     
  2979                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2980  001D04  0100               	movlb	0	; () banked
  2981  001D06  B1E3               	btfsc	_flags& (0+255),0,b
  2982  001D08  EF88  F00E         	goto	u991
  2983  001D0C  EF8A  F00E         	goto	u990
  2984  001D10                     u991:
  2985  001D10  EF94  F00E         	goto	l1545
  2986  001D14                     u990:
  2987  001D14                     
  2988                           ; BSR set to: 0
  2989                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2990  001D14  C014  F00B         	movff	pad@buf,fputs@s
  2991  001D18  C015  F00C         	movff	pad@buf+1,fputs@s+1
  2992  001D1C  C012  F00D         	movff	pad@fp,fputs@fp
  2993  001D20  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  2994  001D24  EC65  F010         	call	_fputs	;wreg free
  2995  001D28                     l1545:
  2996                           
  2997                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2998  001D28  C014  F001         	movff	pad@buf,strlen@s
  2999  001D2C  C015  F002         	movff	pad@buf+1,strlen@s+1
  3000  001D30  ECA7  F010         	call	_strlen	;wreg free
  3001  001D34  501B               	movf	pad@w^0,w,c
  3002  001D36  2401               	addwf	?_strlen^0,w,c
  3003  001D38  6E12               	movwf	?_pad^0,c
  3004  001D3A  501C               	movf	(pad@w+1)^0,w,c
  3005  001D3C  2002               	addwfc	(?_strlen+1)^0,w,c
  3006  001D3E  6E13               	movwf	(?_pad+1)^0,c
  3007  001D40  0012               	return		;funcret
  3008  001D42                     __end_of_pad:
  3009                           	callstack 0
  3010                           
  3011 ;; *************** function _strlen *****************
  3012 ;; Defined at:
  3013 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3016 ;;		 -> stoa@nuls(7), dbuf(32), ?_printf(2), main@buf_arr(50), 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3019 ;;		 -> stoa@nuls(7), dbuf(32), ?_printf(2), main@buf_arr(50), 
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  2    0[COMRAM] unsigned int 
  3022 ;; Registers used:
  3023 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3029 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3032 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3033 ;;Total ram usage:        4 bytes
  3034 ;; Hardware stack levels used:    1
  3035 ;; This function calls:
  3036 ;;		Nothing
  3037 ;; This function is called by:
  3038 ;;		_pad
  3039 ;;		_stoa
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042                           
  3043                           	psect	text16
  3044  00214E                     __ptext16:
  3045                           	callstack 0
  3046  00214E                     _strlen:
  3047                           	callstack 26
  3048  00214E  C001  F003         	movff	strlen@s,strlen@a
  3049  002152  C002  F004         	movff	strlen@s+1,strlen@a+1
  3050  002156  EFAF  F010         	goto	l1441
  3051  00215A                     l1439:
  3052  00215A  4A01               	infsnz	strlen@s^0,f,c
  3053  00215C  2A02               	incf	(strlen@s+1)^0,f,c
  3054  00215E                     l1441:
  3055  00215E  C001  FFD9         	movff	strlen@s,fsr2l
  3056  002162  C002  FFDA         	movff	strlen@s+1,fsr2h
  3057  002166  50DF               	movf	indf2,w,c
  3058  002168  A4D8               	btfss	status,2,c
  3059  00216A  EFB9  F010         	goto	u821
  3060  00216E  EFBB  F010         	goto	u820
  3061  002172                     u821:
  3062  002172  EFAD  F010         	goto	l1439
  3063  002176                     u820:
  3064  002176  5003               	movf	strlen@a^0,w,c
  3065  002178  5C01               	subwf	strlen@s^0,w,c
  3066  00217A  6E01               	movwf	?_strlen^0,c
  3067  00217C  5004               	movf	(strlen@a+1)^0,w,c
  3068  00217E  5802               	subwfb	(strlen@s+1)^0,w,c
  3069  002180  6E02               	movwf	(?_strlen+1)^0,c
  3070  002182  0012               	return		;funcret
  3071  002184                     __end_of_strlen:
  3072                           	callstack 0
  3073                           
  3074 ;; *************** function _fputs *****************
  3075 ;; Defined at:
  3076 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;  s               2   10[COMRAM] PTR const unsigned char 
  3079 ;;		 -> dbuf(32), 
  3080 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  3081 ;;		 -> NULL(0), 
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;  i               2   15[COMRAM] int 
  3084 ;;  c               1   14[COMRAM] unsigned char 
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  2   10[COMRAM] int 
  3087 ;; Registers used:
  3088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3094 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3095 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3097 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3098 ;;Total ram usage:        7 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    2
  3101 ;; This function calls:
  3102 ;;		_fputc
  3103 ;; This function is called by:
  3104 ;;		_pad
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text17
  3109  0020CA                     __ptext17:
  3110                           	callstack 0
  3111  0020CA                     _fputs:
  3112                           	callstack 23
  3113  0020CA  0E00               	movlw	0
  3114  0020CC  6E11               	movwf	(fputs@i+1)^0,c
  3115  0020CE  0E00               	movlw	0
  3116  0020D0  6E10               	movwf	fputs@i^0,c
  3117  0020D2  EF76  F010         	goto	l1435
  3118  0020D6                     l1431:
  3119  0020D6  C00F  F002         	movff	fputs@c,fputc@c
  3120  0020DA  6A03               	clrf	(fputc@c+1)^0,c
  3121  0020DC  C00D  F004         	movff	fputs@fp,fputc@fp
  3122  0020E0  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  3123  0020E4  ECA1  F00E         	call	_fputc	;wreg free
  3124  0020E8  4A10               	infsnz	fputs@i^0,f,c
  3125  0020EA  2A11               	incf	(fputs@i+1)^0,f,c
  3126  0020EC                     l1435:
  3127  0020EC  5010               	movf	fputs@i^0,w,c
  3128  0020EE  240B               	addwf	fputs@s^0,w,c
  3129  0020F0  6ED9               	movwf	fsr2l,c
  3130  0020F2  5011               	movf	(fputs@i+1)^0,w,c
  3131  0020F4  200C               	addwfc	(fputs@s+1)^0,w,c
  3132  0020F6  6EDA               	movwf	fsr2h,c
  3133  0020F8  50DF               	movf	indf2,w,c
  3134  0020FA  6E0F               	movwf	fputs@c^0,c
  3135  0020FC  500F               	movf	fputs@c^0,w,c
  3136  0020FE  A4D8               	btfss	status,2,c
  3137  002100  EF84  F010         	goto	u811
  3138  002104  EF86  F010         	goto	u810
  3139  002108                     u811:
  3140  002108  EF6B  F010         	goto	l1431
  3141  00210C                     u810:
  3142  00210C  0012               	return		;funcret
  3143  00210E                     __end_of_fputs:
  3144                           	callstack 0
  3145                           
  3146 ;; *************** function _abs *****************
  3147 ;; Defined at:
  3148 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  a               2   18[COMRAM] int 
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;		None
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  2   18[COMRAM] int 
  3155 ;; Registers used:
  3156 ;;		wreg, status,2, status,0
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3162 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3164 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3165 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3166 ;;Total ram usage:        4 bytes
  3167 ;; Hardware stack levels used:    1
  3168 ;; This function calls:
  3169 ;;		Nothing
  3170 ;; This function is called by:
  3171 ;;		_dtoa
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175                           	psect	text18
  3176  00210E                     __ptext18:
  3177                           	callstack 0
  3178  00210E                     _abs:
  3179                           	callstack 26
  3180  00210E  BE14               	btfsc	(abs@a+1)^0,7,c
  3181  002110  EF94  F010         	goto	u1000
  3182  002114  5014               	movf	(abs@a+1)^0,w,c
  3183  002116  E106               	bnz	u1001
  3184  002118  0413               	decf	abs@a^0,w,c
  3185  00211A  B0D8               	btfsc	status,0,c
  3186  00211C  EF92  F010         	goto	u1001
  3187  002120  EF94  F010         	goto	u1000
  3188  002124                     u1001:
  3189  002124  EFA2  F010         	goto	l900
  3190  002128                     u1000:
  3191  002128  C013  F015         	movff	abs@a,??_abs
  3192  00212C  C014  F016         	movff	abs@a+1,??_abs+1
  3193  002130  1E15               	comf	??_abs^0,f,c
  3194  002132  1E16               	comf	(??_abs+1)^0,f,c
  3195  002134  4A15               	infsnz	??_abs^0,f,c
  3196  002136  2A16               	incf	(??_abs+1)^0,f,c
  3197  002138  C015  F013         	movff	??_abs,?_abs
  3198  00213C  C016  F014         	movff	??_abs+1,?_abs+1
  3199  002140  EFA6  F010         	goto	l903
  3200  002144                     l900:
  3201  002144  C013  F013         	movff	abs@a,?_abs
  3202  002148  C014  F014         	movff	abs@a+1,?_abs+1
  3203  00214C                     l903:
  3204  00214C  0012               	return		;funcret
  3205  00214E                     __end_of_abs:
  3206                           	callstack 0
  3207                           
  3208 ;; *************** function ___aomod *****************
  3209 ;; Defined at:
  3210 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;  dividend        8    0[COMRAM] long long 
  3213 ;;  divisor         8    8[COMRAM] long long 
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;  sign            1   17[COMRAM] unsigned char 
  3216 ;;  counter         1   16[COMRAM] unsigned char 
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  8    0[COMRAM] long long 
  3219 ;; Registers used:
  3220 ;;		wreg, status,2, status,0
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3226 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3227 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3229 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3230 ;;Total ram usage:       18 bytes
  3231 ;; Hardware stack levels used:    1
  3232 ;; This function calls:
  3233 ;;		Nothing
  3234 ;; This function is called by:
  3235 ;;		_dtoa
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239                           	psect	text19
  3240  0018E6                     __ptext19:
  3241                           	callstack 0
  3242  0018E6                     ___aomod:
  3243                           	callstack 26
  3244  0018E6  0E00               	movlw	0
  3245  0018E8  6E12               	movwf	___aomod@sign^0,c
  3246  0018EA  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3247  0018EC  EF7C  F00C         	goto	u900
  3248  0018F0  EF7A  F00C         	goto	u901
  3249  0018F4                     u901:
  3250  0018F4  EF8E  F00C         	goto	l1499
  3251  0018F8                     u900:
  3252  0018F8  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3253  0018FA  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3254  0018FC  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3255  0018FE  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3256  001900  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3257  001902  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3258  001904  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3259  001906  6C01               	negf	___aomod@dividend^0,c
  3260  001908  0E00               	movlw	0
  3261  00190A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3262  00190C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3263  00190E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3264  001910  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3265  001912  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3266  001914  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3267  001916  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3268  001918  0E01               	movlw	1
  3269  00191A  6E12               	movwf	___aomod@sign^0,c
  3270  00191C                     l1499:
  3271  00191C  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3272  00191E  EF95  F00C         	goto	u910
  3273  001922  EF93  F00C         	goto	u911
  3274  001926                     u911:
  3275  001926  EFA5  F00C         	goto	l1503
  3276  00192A                     u910:
  3277  00192A  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3278  00192C  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3279  00192E  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3280  001930  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3281  001932  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3282  001934  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3283  001936  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3284  001938  6C09               	negf	___aomod@divisor^0,c
  3285  00193A  0E00               	movlw	0
  3286  00193C  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3287  00193E  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3288  001940  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3289  001942  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3290  001944  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3291  001946  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3292  001948  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3293  00194A                     l1503:
  3294  00194A  5009               	movf	___aomod@divisor^0,w,c
  3295  00194C  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3296  00194E  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3297  001950  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3298  001952  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3299  001954  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3300  001956  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3301  001958  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3302  00195A  B4D8               	btfsc	status,2,c
  3303  00195C  EFB2  F00C         	goto	u921
  3304  001960  EFB4  F00C         	goto	u920
  3305  001964                     u921:
  3306  001964  EFFC  F00C         	goto	l1519
  3307  001968                     u920:
  3308  001968  0E01               	movlw	1
  3309  00196A  6E11               	movwf	___aomod@counter^0,c
  3310  00196C  EFC2  F00C         	goto	l1509
  3311  001970                     l1507:
  3312  001970  90D8               	bcf	status,0,c
  3313  001972  3609               	rlcf	___aomod@divisor^0,f,c
  3314  001974  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3315  001976  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3316  001978  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3317  00197A  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3318  00197C  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3319  00197E  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3320  001980  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3321  001982  2A11               	incf	___aomod@counter^0,f,c
  3322  001984                     l1509:
  3323  001984  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3324  001986  EFC7  F00C         	goto	u931
  3325  00198A  EFC9  F00C         	goto	u930
  3326  00198E                     u931:
  3327  00198E  EFB8  F00C         	goto	l1507
  3328  001992                     u930:
  3329  001992                     l1511:
  3330  001992  5009               	movf	___aomod@divisor^0,w,c
  3331  001994  5C01               	subwf	___aomod@dividend^0,w,c
  3332  001996  500A               	movf	(___aomod@divisor+1)^0,w,c
  3333  001998  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3334  00199A  500B               	movf	(___aomod@divisor+2)^0,w,c
  3335  00199C  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3336  00199E  500C               	movf	(___aomod@divisor+3)^0,w,c
  3337  0019A0  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3338  0019A2  500D               	movf	(___aomod@divisor+4)^0,w,c
  3339  0019A4  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3340  0019A6  500E               	movf	(___aomod@divisor+5)^0,w,c
  3341  0019A8  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3342  0019AA  500F               	movf	(___aomod@divisor+6)^0,w,c
  3343  0019AC  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3344  0019AE  5010               	movf	(___aomod@divisor+7)^0,w,c
  3345  0019B0  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3346  0019B2  A0D8               	btfss	status,0,c
  3347  0019B4  EFDE  F00C         	goto	u941
  3348  0019B8  EFE0  F00C         	goto	u940
  3349  0019BC                     u941:
  3350  0019BC  EFF0  F00C         	goto	l1515
  3351  0019C0                     u940:
  3352  0019C0  5009               	movf	___aomod@divisor^0,w,c
  3353  0019C2  5E01               	subwf	___aomod@dividend^0,f,c
  3354  0019C4  500A               	movf	(___aomod@divisor+1)^0,w,c
  3355  0019C6  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3356  0019C8  500B               	movf	(___aomod@divisor+2)^0,w,c
  3357  0019CA  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3358  0019CC  500C               	movf	(___aomod@divisor+3)^0,w,c
  3359  0019CE  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3360  0019D0  500D               	movf	(___aomod@divisor+4)^0,w,c
  3361  0019D2  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3362  0019D4  500E               	movf	(___aomod@divisor+5)^0,w,c
  3363  0019D6  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3364  0019D8  500F               	movf	(___aomod@divisor+6)^0,w,c
  3365  0019DA  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3366  0019DC  5010               	movf	(___aomod@divisor+7)^0,w,c
  3367  0019DE  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3368  0019E0                     l1515:
  3369  0019E0  90D8               	bcf	status,0,c
  3370  0019E2  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3371  0019E4  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3372  0019E6  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3373  0019E8  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3374  0019EA  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3375  0019EC  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3376  0019EE  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3377  0019F0  3209               	rrcf	___aomod@divisor^0,f,c
  3378  0019F2  2E11               	decfsz	___aomod@counter^0,f,c
  3379  0019F4  EFC9  F00C         	goto	l1511
  3380  0019F8                     l1519:
  3381  0019F8  5012               	movf	___aomod@sign^0,w,c
  3382  0019FA  B4D8               	btfsc	status,2,c
  3383  0019FC  EF02  F00D         	goto	u951
  3384  001A00  EF04  F00D         	goto	u950
  3385  001A04                     u951:
  3386  001A04  EF14  F00D         	goto	l1523
  3387  001A08                     u950:
  3388  001A08  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3389  001A0A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3390  001A0C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3391  001A0E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3392  001A10  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3393  001A12  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3394  001A14  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3395  001A16  6C01               	negf	___aomod@dividend^0,c
  3396  001A18  0E00               	movlw	0
  3397  001A1A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3398  001A1C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3399  001A1E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3400  001A20  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3401  001A22  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3402  001A24  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3403  001A26  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3404  001A28                     l1523:
  3405  001A28  C001  F001         	movff	___aomod@dividend,?___aomod
  3406  001A2C  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3407  001A30  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3408  001A34  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3409  001A38  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3410  001A3C  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3411  001A40  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3412  001A44  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3413  001A48  0012               	return		;funcret
  3414  001A4A                     __end_of___aomod:
  3415                           	callstack 0
  3416                           
  3417 ;; *************** function ___aodiv *****************
  3418 ;; Defined at:
  3419 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  3420 ;; Parameters:    Size  Location     Type
  3421 ;;  dividend        8    0[COMRAM] long long 
  3422 ;;  divisor         8    8[COMRAM] long long 
  3423 ;; Auto vars:     Size  Location     Type
  3424 ;;  quotient        8   18[COMRAM] long long 
  3425 ;;  sign            1   17[COMRAM] unsigned char 
  3426 ;;  counter         1   16[COMRAM] unsigned char 
  3427 ;; Return value:  Size  Location     Type
  3428 ;;                  8    0[COMRAM] long long 
  3429 ;; Registers used:
  3430 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3431 ;; Tracked objects:
  3432 ;;		On entry : 0/0
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3436 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3437 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3439 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3440 ;;Total ram usage:       26 bytes
  3441 ;; Hardware stack levels used:    1
  3442 ;; This function calls:
  3443 ;;		Nothing
  3444 ;; This function is called by:
  3445 ;;		_dtoa
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           	psect	text20
  3450  0015D8                     __ptext20:
  3451                           	callstack 0
  3452  0015D8                     ___aodiv:
  3453                           	callstack 26
  3454  0015D8  0E00               	movlw	0
  3455  0015DA  6E12               	movwf	___aodiv@sign^0,c
  3456  0015DC  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3457  0015DE  EFF5  F00A         	goto	u830
  3458  0015E2  EFF3  F00A         	goto	u831
  3459  0015E6                     u831:
  3460  0015E6  EF07  F00B         	goto	l1455
  3461  0015EA                     u830:
  3462  0015EA  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3463  0015EC  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3464  0015EE  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3465  0015F0  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3466  0015F2  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3467  0015F4  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3468  0015F6  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3469  0015F8  6C09               	negf	___aodiv@divisor^0,c
  3470  0015FA  0E00               	movlw	0
  3471  0015FC  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3472  0015FE  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3473  001600  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3474  001602  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3475  001604  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3476  001606  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3477  001608  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3478  00160A  0E01               	movlw	1
  3479  00160C  6E12               	movwf	___aodiv@sign^0,c
  3480  00160E                     l1455:
  3481  00160E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3482  001610  EF0E  F00B         	goto	u840
  3483  001614  EF0C  F00B         	goto	u841
  3484  001618                     u841:
  3485  001618  EF20  F00B         	goto	l1461
  3486  00161C                     u840:
  3487  00161C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3488  00161E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3489  001620  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3490  001622  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3491  001624  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3492  001626  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3493  001628  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3494  00162A  6C01               	negf	___aodiv@dividend^0,c
  3495  00162C  0E00               	movlw	0
  3496  00162E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3497  001630  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3498  001632  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3499  001634  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3500  001636  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3501  001638  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3502  00163A  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3503  00163C  0E01               	movlw	1
  3504  00163E  1A12               	xorwf	___aodiv@sign^0,f,c
  3505  001640                     l1461:
  3506  001640  EE20  F013         	lfsr	2,___aodiv@quotient
  3507  001644  0E07               	movlw	7
  3508  001646                     u851:
  3509  001646  6ADE               	clrf	postinc2,c
  3510  001648  06E8               	decf	wreg,f,c
  3511  00164A  E2FD               	bc	u851
  3512  00164C  5009               	movf	___aodiv@divisor^0,w,c
  3513  00164E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3514  001650  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3515  001652  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3516  001654  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3517  001656  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3518  001658  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3519  00165A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3520  00165C  B4D8               	btfsc	status,2,c
  3521  00165E  EF33  F00B         	goto	u861
  3522  001662  EF35  F00B         	goto	u860
  3523  001666                     u861:
  3524  001666  EF87  F00B         	goto	l1483
  3525  00166A                     u860:
  3526  00166A  0E01               	movlw	1
  3527  00166C  6E11               	movwf	___aodiv@counter^0,c
  3528  00166E  EF43  F00B         	goto	l1469
  3529  001672                     l1467:
  3530  001672  90D8               	bcf	status,0,c
  3531  001674  3609               	rlcf	___aodiv@divisor^0,f,c
  3532  001676  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3533  001678  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3534  00167A  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3535  00167C  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3536  00167E  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3537  001680  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3538  001682  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3539  001684  2A11               	incf	___aodiv@counter^0,f,c
  3540  001686                     l1469:
  3541  001686  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3542  001688  EF48  F00B         	goto	u871
  3543  00168C  EF4A  F00B         	goto	u870
  3544  001690                     u871:
  3545  001690  EF39  F00B         	goto	l1467
  3546  001694                     u870:
  3547  001694                     l1471:
  3548  001694  90D8               	bcf	status,0,c
  3549  001696  3613               	rlcf	___aodiv@quotient^0,f,c
  3550  001698  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3551  00169A  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3552  00169C  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3553  00169E  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3554  0016A0  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3555  0016A2  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3556  0016A4  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3557  0016A6  5009               	movf	___aodiv@divisor^0,w,c
  3558  0016A8  5C01               	subwf	___aodiv@dividend^0,w,c
  3559  0016AA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3560  0016AC  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3561  0016AE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3562  0016B0  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3563  0016B2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3564  0016B4  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3565  0016B6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3566  0016B8  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3567  0016BA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3568  0016BC  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3569  0016BE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3570  0016C0  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3571  0016C2  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3572  0016C4  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3573  0016C6  A0D8               	btfss	status,0,c
  3574  0016C8  EF68  F00B         	goto	u881
  3575  0016CC  EF6A  F00B         	goto	u880
  3576  0016D0                     u881:
  3577  0016D0  EF7B  F00B         	goto	l1479
  3578  0016D4                     u880:
  3579  0016D4  5009               	movf	___aodiv@divisor^0,w,c
  3580  0016D6  5E01               	subwf	___aodiv@dividend^0,f,c
  3581  0016D8  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3582  0016DA  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3583  0016DC  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3584  0016DE  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3585  0016E0  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3586  0016E2  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3587  0016E4  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3588  0016E6  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3589  0016E8  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3590  0016EA  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3591  0016EC  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3592  0016EE  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3593  0016F0  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3594  0016F2  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3595  0016F4  8013               	bsf	___aodiv@quotient^0,0,c
  3596  0016F6                     l1479:
  3597  0016F6  90D8               	bcf	status,0,c
  3598  0016F8  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3599  0016FA  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3600  0016FC  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3601  0016FE  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3602  001700  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3603  001702  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3604  001704  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3605  001706  3209               	rrcf	___aodiv@divisor^0,f,c
  3606  001708  2E11               	decfsz	___aodiv@counter^0,f,c
  3607  00170A  EF4A  F00B         	goto	l1471
  3608  00170E                     l1483:
  3609  00170E  5012               	movf	___aodiv@sign^0,w,c
  3610  001710  B4D8               	btfsc	status,2,c
  3611  001712  EF8D  F00B         	goto	u891
  3612  001716  EF8F  F00B         	goto	u890
  3613  00171A                     u891:
  3614  00171A  EF9F  F00B         	goto	l1487
  3615  00171E                     u890:
  3616  00171E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3617  001720  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3618  001722  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3619  001724  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3620  001726  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3621  001728  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3622  00172A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3623  00172C  6C13               	negf	___aodiv@quotient^0,c
  3624  00172E  0E00               	movlw	0
  3625  001730  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3626  001732  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3627  001734  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3628  001736  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3629  001738  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3630  00173A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3631  00173C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3632  00173E                     l1487:
  3633  00173E  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3634  001742  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3635  001746  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3636  00174A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3637  00174E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3638  001752  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3639  001756  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3640  00175A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3641  00175E  0012               	return		;funcret
  3642  001760                     __end_of___aodiv:
  3643                           	callstack 0
  3644                           
  3645 ;; *************** function _ctoa *****************
  3646 ;; Defined at:
  3647 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  3650 ;;		 -> NULL(0), 
  3651 ;;  c               1   12[COMRAM] unsigned char 
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;  w               2   16[COMRAM] int 
  3654 ;;  l               2   14[COMRAM] int 
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  2   10[COMRAM] int 
  3657 ;; Registers used:
  3658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3664 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3665 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3666 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3667 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3668 ;;Total ram usage:        8 bytes
  3669 ;; Hardware stack levels used:    1
  3670 ;; Hardware stack levels required when called:    2
  3671 ;; This function calls:
  3672 ;;		_fputc
  3673 ;; This function is called by:
  3674 ;;		_vfpfcnvrt
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           	psect	text21
  3679  001BA4                     __ptext21:
  3680                           	callstack 0
  3681  001BA4                     _ctoa:
  3682                           	callstack 25
  3683  001BA4                     
  3684                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  3685  001BA4  0100               	movlb	0	; () banked
  3686  001BA6  51DF               	movf	_width& (0+255),w,b
  3687  001BA8  11E0               	iorwf	(_width+1)& (0+255),w,b
  3688  001BAA  A4D8               	btfss	status,2,c
  3689  001BAC  EFDA  F00D         	goto	u1011
  3690  001BB0  EFDC  F00D         	goto	u1010
  3691  001BB4                     u1011:
  3692  001BB4  EFE2  F00D         	goto	l1557
  3693  001BB8                     u1010:
  3694  001BB8                     
  3695                           ; BSR set to: 0
  3696  001BB8  C0DF  F011         	movff	_width,ctoa@w
  3697  001BBC  C0E0  F012         	movff	_width+1,ctoa@w+1
  3698  001BC0  EFE8  F00D         	goto	l1559
  3699  001BC4                     l1557:
  3700                           
  3701                           ; BSR set to: 0
  3702  001BC4  0EFF               	movlw	255
  3703  001BC6  25DF               	addwf	_width& (0+255),w,b
  3704  001BC8  6E11               	movwf	ctoa@w^0,c
  3705  001BCA  0EFF               	movlw	255
  3706  001BCC  21E0               	addwfc	(_width+1)& (0+255),w,b
  3707  001BCE  6E12               	movwf	(ctoa@w+1)^0,c
  3708  001BD0                     l1559:
  3709                           
  3710                           ; BSR set to: 0
  3711                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  3712  001BD0  A1E3               	btfss	_flags& (0+255),0,b
  3713  001BD2  EFED  F00D         	goto	u1021
  3714  001BD6  EFEF  F00D         	goto	u1020
  3715  001BDA                     u1021:
  3716  001BDA  EFF8  F00D         	goto	l1563
  3717  001BDE                     u1020:
  3718  001BDE                     
  3719                           ; BSR set to: 0
  3720                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  3721  001BDE  C00D  F002         	movff	ctoa@c,fputc@c
  3722  001BE2  6A03               	clrf	(fputc@c+1)^0,c
  3723  001BE4  C00B  F004         	movff	ctoa@fp,fputc@fp
  3724  001BE8  C00C  F005         	movff	ctoa@fp+1,fputc@fp+1
  3725  001BEC  ECA1  F00E         	call	_fputc	;wreg free
  3726  001BF0                     l1563:
  3727                           
  3728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  3729  001BF0  BE12               	btfsc	(ctoa@w+1)^0,7,c
  3730  001BF2  EFFD  F00D         	goto	u1031
  3731  001BF6  EFFF  F00D         	goto	u1030
  3732  001BFA                     u1031:
  3733  001BFA  EF01  F00E         	goto	l1567
  3734  001BFE                     u1030:
  3735  001BFE  EF05  F00E         	goto	l826
  3736  001C02                     l1567:
  3737  001C02  0E00               	movlw	0
  3738  001C04  6E12               	movwf	(ctoa@w+1)^0,c
  3739  001C06  0E00               	movlw	0
  3740  001C08  6E11               	movwf	ctoa@w^0,c
  3741  001C0A                     l826:
  3742                           
  3743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  3744  001C0A  0E00               	movlw	0
  3745  001C0C  6E10               	movwf	(ctoa@l+1)^0,c
  3746  001C0E  0E00               	movlw	0
  3747  001C10  6E0F               	movwf	ctoa@l^0,c
  3748                           
  3749                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  3750  001C12  EF17  F00E         	goto	l1573
  3751  001C16                     l1569:
  3752                           
  3753                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  3754  001C16  0E00               	movlw	0
  3755  001C18  6E03               	movwf	(fputc@c+1)^0,c
  3756  001C1A  0E20               	movlw	32
  3757  001C1C  6E02               	movwf	fputc@c^0,c
  3758  001C1E  C00B  F004         	movff	ctoa@fp,fputc@fp
  3759  001C22  C00C  F005         	movff	ctoa@fp+1,fputc@fp+1
  3760  001C26  ECA1  F00E         	call	_fputc	;wreg free
  3761  001C2A                     
  3762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 275:         ++l;
  3763  001C2A  4A0F               	infsnz	ctoa@l^0,f,c
  3764  001C2C  2A10               	incf	(ctoa@l+1)^0,f,c
  3765  001C2E                     l1573:
  3766                           
  3767                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  3768  001C2E  5011               	movf	ctoa@w^0,w,c
  3769  001C30  5C0F               	subwf	ctoa@l^0,w,c
  3770  001C32  5010               	movf	(ctoa@l+1)^0,w,c
  3771  001C34  0A80               	xorlw	128
  3772  001C36  6E0E               	movwf	??_ctoa^0,c
  3773  001C38  5012               	movf	(ctoa@w+1)^0,w,c
  3774  001C3A  0A80               	xorlw	128
  3775  001C3C  580E               	subwfb	??_ctoa^0,w,c
  3776  001C3E  A0D8               	btfss	status,0,c
  3777  001C40  EF24  F00E         	goto	u1041
  3778  001C44  EF26  F00E         	goto	u1040
  3779  001C48                     u1041:
  3780  001C48  EF0B  F00E         	goto	l1569
  3781  001C4C                     u1040:
  3782  001C4C                     
  3783                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  3784  001C4C  0100               	movlb	0	; () banked
  3785  001C4E  B1E3               	btfsc	_flags& (0+255),0,b
  3786  001C50  EF2C  F00E         	goto	u1051
  3787  001C54  EF2E  F00E         	goto	u1050
  3788  001C58                     u1051:
  3789  001C58  EF37  F00E         	goto	l1577
  3790  001C5C                     u1050:
  3791  001C5C                     
  3792                           ; BSR set to: 0
  3793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  3794  001C5C  C00D  F002         	movff	ctoa@c,fputc@c
  3795  001C60  6A03               	clrf	(fputc@c+1)^0,c
  3796  001C62  C00B  F004         	movff	ctoa@fp,fputc@fp
  3797  001C66  C00C  F005         	movff	ctoa@fp+1,fputc@fp+1
  3798  001C6A  ECA1  F00E         	call	_fputc	;wreg free
  3799  001C6E                     l1577:
  3800                           
  3801                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  3802  001C6E  0E01               	movlw	1
  3803  001C70  240F               	addwf	ctoa@l^0,w,c
  3804  001C72  6E0B               	movwf	?_ctoa^0,c
  3805  001C74  0E00               	movlw	0
  3806  001C76  2010               	addwfc	(ctoa@l+1)^0,w,c
  3807  001C78  6E0C               	movwf	(?_ctoa+1)^0,c
  3808  001C7A  0012               	return		;funcret
  3809  001C7C                     __end_of_ctoa:
  3810                           	callstack 0
  3811                           
  3812 ;; *************** function _fputc *****************
  3813 ;; Defined at:
  3814 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;  c               2    1[COMRAM] int 
  3817 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  3818 ;;		 -> NULL(0), 
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;		None
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  2    1[COMRAM] int 
  3823 ;; Registers used:
  3824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3830 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3832 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3833 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3834 ;;Total ram usage:        9 bytes
  3835 ;; Hardware stack levels used:    1
  3836 ;; Hardware stack levels required when called:    1
  3837 ;; This function calls:
  3838 ;;		_putch
  3839 ;; This function is called by:
  3840 ;;		_pad
  3841 ;;		_ctoa
  3842 ;;		_stoa
  3843 ;;		_vfpfcnvrt
  3844 ;;		_fputs
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           	psect	text22
  3849  001D42                     __ptext22:
  3850                           	callstack 0
  3851  001D42                     _fputc:
  3852                           	callstack 25
  3853  001D42  5004               	movf	fputc@fp^0,w,c
  3854  001D44  1005               	iorwf	(fputc@fp+1)^0,w,c
  3855  001D46  B4D8               	btfsc	status,2,c
  3856  001D48  EFA8  F00E         	goto	u771
  3857  001D4C  EFAA  F00E         	goto	u770
  3858  001D50                     u771:
  3859  001D50  EFB3  F00E         	goto	l1419
  3860  001D54                     u770:
  3861  001D54  5004               	movf	fputc@fp^0,w,c
  3862  001D56  1005               	iorwf	(fputc@fp+1)^0,w,c
  3863  001D58  A4D8               	btfss	status,2,c
  3864  001D5A  EFB1  F00E         	goto	u781
  3865  001D5E  EFB3  F00E         	goto	u780
  3866  001D62                     u781:
  3867  001D62  EFB8  F00E         	goto	l1421
  3868  001D66                     u780:
  3869  001D66                     l1419:
  3870  001D66  5002               	movf	fputc@c^0,w,c
  3871  001D68  EC21  F011         	call	_putch
  3872  001D6C  EFEB  F00E         	goto	l915
  3873  001D70                     l1421:
  3874  001D70  EE20 F004          	lfsr	2,4
  3875  001D74  5004               	movf	fputc@fp^0,w,c
  3876  001D76  26D9               	addwf	fsr2l,f,c
  3877  001D78  5005               	movf	(fputc@fp+1)^0,w,c
  3878  001D7A  22DA               	addwfc	fsr2h,f,c
  3879  001D7C  50DE               	movf	postinc2,w,c
  3880  001D7E  10DE               	iorwf	postinc2,w,c
  3881  001D80  B4D8               	btfsc	status,2,c
  3882  001D82  EFC5  F00E         	goto	u791
  3883  001D86  EFC7  F00E         	goto	u790
  3884  001D8A                     u791:
  3885  001D8A  EFE2  F00E         	goto	l1425
  3886  001D8E                     u790:
  3887  001D8E  EE20 F004          	lfsr	2,4
  3888  001D92  5004               	movf	fputc@fp^0,w,c
  3889  001D94  26D9               	addwf	fsr2l,f,c
  3890  001D96  5005               	movf	(fputc@fp+1)^0,w,c
  3891  001D98  22DA               	addwfc	fsr2h,f,c
  3892  001D9A  EE10 F002          	lfsr	1,2
  3893  001D9E  5004               	movf	fputc@fp^0,w,c
  3894  001DA0  26E1               	addwf	fsr1l,f,c
  3895  001DA2  5005               	movf	(fputc@fp+1)^0,w,c
  3896  001DA4  22E2               	addwfc	fsr1h,f,c
  3897  001DA6  50DE               	movf	postinc2,w,c
  3898  001DA8  5CE6               	subwf	postinc1,w,c
  3899  001DAA  50E6               	movf	postinc1,w,c
  3900  001DAC  0A80               	xorlw	128
  3901  001DAE  6E0A               	movwf	(??_fputc+4)^0,c
  3902  001DB0  50DE               	movf	postinc2,w,c
  3903  001DB2  0A80               	xorlw	128
  3904  001DB4  580A               	subwfb	(??_fputc+4)^0,w,c
  3905  001DB6  B0D8               	btfsc	status,0,c
  3906  001DB8  EFE0  F00E         	goto	u801
  3907  001DBC  EFE2  F00E         	goto	u800
  3908  001DC0                     u801:
  3909  001DC0  EFEB  F00E         	goto	l915
  3910  001DC4                     u800:
  3911  001DC4                     l1425:
  3912  001DC4  EE20 F002          	lfsr	2,2
  3913  001DC8  5004               	movf	fputc@fp^0,w,c
  3914  001DCA  26D9               	addwf	fsr2l,f,c
  3915  001DCC  5005               	movf	(fputc@fp+1)^0,w,c
  3916  001DCE  22DA               	addwfc	fsr2h,f,c
  3917  001DD0  2ADE               	incf	postinc2,f,c
  3918  001DD2  0E00               	movlw	0
  3919  001DD4  22DD               	addwfc	postdec2,f,c
  3920  001DD6                     l915:
  3921  001DD6  0012               	return		;funcret
  3922  001DD8                     __end_of_fputc:
  3923                           	callstack 0
  3924                           
  3925 ;; *************** function _putch *****************
  3926 ;; Defined at:
  3927 ;;		line 136 in file "main.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  data            1    wreg     unsigned char 
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;  data            1    0[COMRAM] unsigned char 
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  1    wreg      void 
  3934 ;; Registers used:
  3935 ;;		wreg
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3942 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3944 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;Total ram usage:        1 bytes
  3946 ;; Hardware stack levels used:    1
  3947 ;; This function calls:
  3948 ;;		Nothing
  3949 ;; This function is called by:
  3950 ;;		_fputc
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           	psect	text23
  3955  002242                     __ptext23:
  3956                           	callstack 0
  3957  002242                     _putch:
  3958                           	callstack 25
  3959                           
  3960                           ;incstack = 0
  3961                           ;putch@data stored from wreg
  3962  002242  6E01               	movwf	putch@data^0,c
  3963  002244                     l60:
  3964  002244  A89E               	btfss	3998,4,c	;volatile
  3965  002246  EF27  F011         	goto	u761
  3966  00224A  EF29  F011         	goto	u760
  3967  00224E                     u761:
  3968  00224E  EF22  F011         	goto	l60
  3969  002252                     u760:
  3970  002252                     
  3971                           ;main.c: 138:     TXREG1 = data;
  3972  002252  C001  FFAD         	movff	putch@data,4013	;volatile
  3973  002256  0012               	return		;funcret
  3974  002258                     __end_of_putch:
  3975                           	callstack 0
  3976                           
  3977 ;; *************** function _init *****************
  3978 ;; Defined at:
  3979 ;;		line 72 in file "main.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;		None
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;		None
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  1    wreg      void 
  3986 ;; Registers used:
  3987 ;;		wreg, status,2
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3997 ;;Total ram usage:        0 bytes
  3998 ;; Hardware stack levels used:    1
  3999 ;; This function calls:
  4000 ;;		Nothing
  4001 ;; This function is called by:
  4002 ;;		_main
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           	psect	text24
  4007  002226                     __ptext24:
  4008                           	callstack 0
  4009  002226                     _init:
  4010                           	callstack 30
  4011  002226                     
  4012                           ;main.c: 74:     TRISBbits.TRISB5 = 0;
  4013  002226  9A93               	bcf	147,5,c	;volatile
  4014  002228                     
  4015                           ;main.c: 76:     ANSELC = 0x00;
  4016  002228  0E00               	movlw	0
  4017  00222A  010F               	movlb	15	; () banked
  4018  00222C  6F3A               	movwf	58,b	;volatile
  4019                           
  4020                           ;main.c: 77:     TRISD = 0x00;
  4021  00222E  0E00               	movlw	0
  4022  002230  6E95               	movwf	149,c	;volatile
  4023  002232                     
  4024                           ; BSR set to: 15
  4025                           ;main.c: 78:     TRISCbits.TRISC6 = 1;
  4026  002232  8C94               	bsf	148,6,c	;volatile
  4027  002234                     
  4028                           ; BSR set to: 15
  4029                           ;main.c: 79:     TRISCbits.TRISC7 = 1;
  4030  002234  8E94               	bsf	148,7,c	;volatile
  4031                           
  4032                           ;main.c: 82:     SPBRG1 = 51;
  4033  002236  0E33               	movlw	51
  4034  002238  6EAF               	movwf	175,c	;volatile
  4035  00223A                     
  4036                           ; BSR set to: 15
  4037                           ;main.c: 84:     RCSTA1bits.SPEN = 1;
  4038  00223A  8EAB               	bsf	171,7,c	;volatile
  4039  00223C                     
  4040                           ; BSR set to: 15
  4041                           ;main.c: 85:     TXSTA1bits.TXEN = 1;
  4042  00223C  8AAC               	bsf	172,5,c	;volatile
  4043  00223E                     
  4044                           ; BSR set to: 15
  4045                           ;main.c: 86:     RCSTA1bits.CREN = 1;
  4046  00223E  88AB               	bsf	171,4,c	;volatile
  4047  002240                     
  4048                           ; BSR set to: 15
  4049  002240  0012               	return		;funcret
  4050  002242                     __end_of_init:
  4051                           	callstack 0
  4052                           
  4053                           	psect	rparam
  4054  0000                     
  4055                           	psect	idloc
  4056                           
  4057                           ;Config register IDLOC0 @ 0x200000
  4058                           ;	unspecified, using default values
  4059  200000                     	org	2097152
  4060  200000  FF                 	db	255
  4061                           
  4062                           ;Config register IDLOC1 @ 0x200001
  4063                           ;	unspecified, using default values
  4064  200001                     	org	2097153
  4065  200001  FF                 	db	255
  4066                           
  4067                           ;Config register IDLOC2 @ 0x200002
  4068                           ;	unspecified, using default values
  4069  200002                     	org	2097154
  4070  200002  FF                 	db	255
  4071                           
  4072                           ;Config register IDLOC3 @ 0x200003
  4073                           ;	unspecified, using default values
  4074  200003                     	org	2097155
  4075  200003  FF                 	db	255
  4076                           
  4077                           ;Config register IDLOC4 @ 0x200004
  4078                           ;	unspecified, using default values
  4079  200004                     	org	2097156
  4080  200004  FF                 	db	255
  4081                           
  4082                           ;Config register IDLOC5 @ 0x200005
  4083                           ;	unspecified, using default values
  4084  200005                     	org	2097157
  4085  200005  FF                 	db	255
  4086                           
  4087                           ;Config register IDLOC6 @ 0x200006
  4088                           ;	unspecified, using default values
  4089  200006                     	org	2097158
  4090  200006  FF                 	db	255
  4091                           
  4092                           ;Config register IDLOC7 @ 0x200007
  4093                           ;	unspecified, using default values
  4094  200007                     	org	2097159
  4095  200007  FF                 	db	255
  4096                           
  4097                           	psect	config
  4098                           
  4099                           ; Padding undefined space
  4100  300000                     	org	3145728
  4101  300000  FF                 	db	255
  4102                           
  4103                           ;Config register CONFIG1H @ 0x300001
  4104                           ;	Oscillator Selection bits
  4105                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
  4106                           ;	4X PLL Enable
  4107                           ;	PLLCFG = ON, Oscillator multiplied by 4
  4108                           ;	Primary clock enable bit
  4109                           ;	PRICLKEN = ON, Primary clock is always enabled
  4110                           ;	Fail-Safe Clock Monitor Enable bit
  4111                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4112                           ;	Internal/External Oscillator Switchover bit
  4113                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4114  300001                     	org	3145729
  4115  300001  33                 	db	51
  4116                           
  4117                           ;Config register CONFIG2L @ 0x300002
  4118                           ;	Power-up Timer Enable bit
  4119                           ;	PWRTEN = OFF, Power up timer disabled
  4120                           ;	Brown-out Reset Enable bits
  4121                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4122                           ;	Brown Out Reset Voltage bits
  4123                           ;	BORV = 190, VBOR set to 1.90 V nominal
  4124  300002                     	org	3145730
  4125  300002  1F                 	db	31
  4126                           
  4127                           ;Config register CONFIG2H @ 0x300003
  4128                           ;	Watchdog Timer Enable bits
  4129                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  4130                           ;	Watchdog Timer Postscale Select bits
  4131                           ;	WDTPS = 32768, 1:32768
  4132  300003                     	org	3145731
  4133  300003  3C                 	db	60
  4134                           
  4135                           ; Padding undefined space
  4136  300004                     	org	3145732
  4137  300004  FF                 	db	255
  4138                           
  4139                           ;Config register CONFIG3H @ 0x300005
  4140                           ;	CCP2 MUX bit
  4141                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  4142                           ;	PORTB A/D Enable bit
  4143                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  4144                           ;	P3A/CCP3 Mux bit
  4145                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  4146                           ;	HFINTOSC Fast Start-up
  4147                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  4148                           ;	Timer3 Clock input mux bit
  4149                           ;	T3CMX = PORTC0, T3CKI is on RC0
  4150                           ;	ECCP2 B output mux bit
  4151                           ;	P2BMX = PORTD2, P2B is on RD2
  4152                           ;	MCLR Pin Enable bit
  4153                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  4154  300005                     	org	3145733
  4155  300005  BF                 	db	191
  4156                           
  4157                           ;Config register CONFIG4L @ 0x300006
  4158                           ;	Stack Full/Underflow Reset Enable bit
  4159                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4160                           ;	Single-Supply ICSP Enable bit
  4161                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4162                           ;	Extended Instruction Set Enable bit
  4163                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4164                           ;	Background Debug
  4165                           ;	DEBUG = 0x1, unprogrammed default
  4166  300006                     	org	3145734
  4167  300006  85                 	db	133
  4168                           
  4169                           ; Padding undefined space
  4170  300007                     	org	3145735
  4171  300007  FF                 	db	255
  4172                           
  4173                           ;Config register CONFIG5L @ 0x300008
  4174                           ;	Code Protection Block 0
  4175                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4176                           ;	Code Protection Block 1
  4177                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4178                           ;	Code Protection Block 2
  4179                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4180                           ;	Code Protection Block 3
  4181                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4182  300008                     	org	3145736
  4183  300008  0F                 	db	15
  4184                           
  4185                           ;Config register CONFIG5H @ 0x300009
  4186                           ;	Boot Block Code Protection bit
  4187                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4188                           ;	Data EEPROM Code Protection bit
  4189                           ;	CPD = OFF, Data EEPROM not code-protected
  4190  300009                     	org	3145737
  4191  300009  C0                 	db	192
  4192                           
  4193                           ;Config register CONFIG6L @ 0x30000A
  4194                           ;	Write Protection Block 0
  4195                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4196                           ;	Write Protection Block 1
  4197                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4198                           ;	Write Protection Block 2
  4199                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4200                           ;	Write Protection Block 3
  4201                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  4202  30000A                     	org	3145738
  4203  30000A  0F                 	db	15
  4204                           
  4205                           ;Config register CONFIG6H @ 0x30000B
  4206                           ;	Configuration Register Write Protection bit
  4207                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4208                           ;	Boot Block Write Protection bit
  4209                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4210                           ;	Data EEPROM Write Protection bit
  4211                           ;	WRTD = OFF, Data EEPROM not write-protected
  4212  30000B                     	org	3145739
  4213  30000B  E0                 	db	224
  4214                           
  4215                           ;Config register CONFIG7L @ 0x30000C
  4216                           ;	Table Read Protection Block 0
  4217                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  4218                           ;	Table Read Protection Block 1
  4219                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4220                           ;	Table Read Protection Block 2
  4221                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  4222                           ;	Table Read Protection Block 3
  4223                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  4224  30000C                     	org	3145740
  4225  30000C  0F                 	db	15
  4226                           
  4227                           ;Config register CONFIG7H @ 0x30000D
  4228                           ;	Boot Block Table Read Protection bit
  4229                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4230  30000D                     	org	3145741
  4231  30000D  40                 	db	64
  4232                           tosu	equ	0xFFF
  4233                           tosh	equ	0xFFE
  4234                           tosl	equ	0xFFD
  4235                           stkptr	equ	0xFFC
  4236                           pclatu	equ	0xFFB
  4237                           pclath	equ	0xFFA
  4238                           pcl	equ	0xFF9
  4239                           tblptru	equ	0xFF8
  4240                           tblptrh	equ	0xFF7
  4241                           tblptrl	equ	0xFF6
  4242                           tablat	equ	0xFF5
  4243                           prodh	equ	0xFF4
  4244                           prodl	equ	0xFF3
  4245                           indf0	equ	0xFEF
  4246                           postinc0	equ	0xFEE
  4247                           postdec0	equ	0xFED
  4248                           preinc0	equ	0xFEC
  4249                           plusw0	equ	0xFEB
  4250                           fsr0h	equ	0xFEA
  4251                           fsr0l	equ	0xFE9
  4252                           wreg	equ	0xFE8
  4253                           indf1	equ	0xFE7
  4254                           postinc1	equ	0xFE6
  4255                           postdec1	equ	0xFE5
  4256                           preinc1	equ	0xFE4
  4257                           plusw1	equ	0xFE3
  4258                           fsr1h	equ	0xFE2
  4259                           fsr1l	equ	0xFE1
  4260                           bsr	equ	0xFE0
  4261                           indf2	equ	0xFDF
  4262                           postinc2	equ	0xFDE
  4263                           postdec2	equ	0xFDD
  4264                           preinc2	equ	0xFDC
  4265                           plusw2	equ	0xFDB
  4266                           fsr2h	equ	0xFDA
  4267                           fsr2l	equ	0xFD9
  4268                           status	equ	0xFD8

Data Sizes:
    Strings     82
    Constant    0
    Data        7
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    125     140
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ?_printf(COMRAM[2]), main@buf_arr(BANK0[50]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ?_printf(COMRAM[2]), main@buf_arr(BANK0[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S864_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_5(CODE[3]), STR_3(CODE[7]), STR_1(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_5(CODE[3]), STR_3(CODE[7]), STR_1(CODE[7]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), main@buf_arr(BANK0[50]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), main@buf_arr(BANK0[50]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_printf(COMRAM[2]), main@buf_arr(BANK0[50]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_5(CODE[3]), STR_3(CODE[7]), STR_1(CODE[7]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    ring_buff_peek@data	PTR unsigned char  size(2) Largest target is 1
		 -> main@buf(BANK0[1]), 

    ring_buff_peek@buffer	const PTR struct ring_buffer_t size(2) Largest target is 66
		 -> main@ring_buffer(BANK0[66]), 

    ring_buff_read_arr@data	PTR unsigned char  size(2) Largest target is 50
		 -> main@buf_arr(BANK0[50]), 

    ring_buff_read_arr@data_ptr	PTR unsigned char  size(2) Largest target is 50
		 -> main@buf_arr(BANK0[50]), 

    ring_buff_read_arr@buffer	const PTR struct ring_buffer_t size(2) Largest target is 66
		 -> main@ring_buffer(BANK0[66]), 

    ring_buff_read@data	PTR unsigned char  size(2) Largest target is 50
		 -> main@buf_arr(BANK0[50]), main@buf(BANK0[1]), 

    ring_buff_read@buffer	const PTR struct ring_buffer_t size(2) Largest target is 66
		 -> main@ring_buffer(BANK0[66]), 

    ring_buff_write_arr@data	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_4(CODE[36]), STR_2(CODE[29]), 

    ring_buff_write_arr@buffer	const PTR struct ring_buffer_t size(2) Largest target is 66
		 -> main@ring_buffer(BANK0[66]), 

    ring_buff_write@buffer	const PTR struct ring_buffer_t size(2) Largest target is 66
		 -> main@ring_buffer(BANK0[66]), 

    ring_buff_num_items@buffer	const PTR struct ring_buffer_t size(2) Largest target is 66
		 -> main@ring_buffer(BANK0[66]), 

    ring_buff_is_full@buffer	const PTR struct ring_buffer_t size(2) Largest target is 66
		 -> main@ring_buffer(BANK0[66]), 

    ring_buff_is_empty@buffer	const PTR struct ring_buffer_t size(2) Largest target is 66
		 -> main@ring_buffer(BANK0[66]), 

    ring_buff_init@buffer	const PTR struct ring_buffer_t size(2) Largest target is 66
		 -> main@ring_buffer(BANK0[66]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _ring_buff_write_arr->_ring_buff_write
    _ring_buff_write->_ring_buff_is_full
    _ring_buff_read_arr->_ring_buff_read
    _ring_buff_read->_ring_buff_is_empty
    _ring_buff_peek->_ring_buff_num_items
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               121   121      0   19179
                                              4 BANK0    121   121      0
                               _init
                             _printf
                     _ring_buff_init
                _ring_buff_num_items
                     _ring_buff_peek
                     _ring_buff_read
                 _ring_buff_read_arr
                    _ring_buff_write
                _ring_buff_write_arr
 ---------------------------------------------------------------------------------
 (1) _ring_buff_write_arr                                  8     3      5    1168
                                              9 COMRAM     8     3      5
                    _ring_buff_write
 ---------------------------------------------------------------------------------
 (2) _ring_buff_write                                      4     1      3     600
                                              5 COMRAM     4     1      3
                  _ring_buff_is_full
 ---------------------------------------------------------------------------------
 (3) _ring_buff_is_full                                    5     3      2     120
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ring_buff_read_arr                                   8     3      5    1366
                                              9 COMRAM     8     3      5
                 _ring_buff_is_empty
                     _ring_buff_read
 ---------------------------------------------------------------------------------
 (2) _ring_buff_read                                       5     1      4     784
                                              4 COMRAM     5     1      4
                 _ring_buff_is_empty
 ---------------------------------------------------------------------------------
 (3) _ring_buff_is_empty                                   4     2      2     196
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ring_buff_peek                                       7     2      5     579
                                              4 COMRAM     7     2      5
                _ring_buff_num_items
 ---------------------------------------------------------------------------------
 (2) _ring_buff_num_items                                  4     2      2     196
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ring_buff_init                                       2     0      2     120
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   13907
                                             91 COMRAM     4     0      4
                                              0 BANK0      4     4      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   13621
                                             83 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           41    35      6   13261
                                             64 COMRAM    19    13      6
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2551
                                             10 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6170
                                             28 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4521
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2103
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    2057
                                             10 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1702
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
         _stoa
           _fputc
             _putch
           _strlen
   _ring_buff_init
   _ring_buff_num_items
   _ring_buff_peek
     _ring_buff_num_items
   _ring_buff_read
     _ring_buff_is_empty
   _ring_buff_read_arr
     _ring_buff_is_empty
     _ring_buff_read
       _ring_buff_is_empty
   _ring_buff_write
     _ring_buff_is_full
   _ring_buff_write_arr
     _ring_buff_write
       _ring_buff_is_full

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7D      8C       5       87.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10B      12        0.0%
DATA                 0      0     10B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Apr 08 12:20:19 2021

                          l41 2240                            l60 2244                            l54 1B3E  
                          l63 2256                            l72 203E                            l66 2224  
                          l75 21DA                            l69 21B2                            l93 1ECA  
                          l85 20C8                            l79 1E58                            l89 1F3A  
                         l102 1FF2                           l232 1A48                           l219 175E  
                         l810 1CC2                           l900 2144                           l813 1D04  
                         l831 1C7A                           l903 214C                           l815 1D40  
                         l826 1C0A                           l915 1DD6                           l923 210C  
                         l829 1C4C                           l837 10F4                           l839 10FC  
                         l783 2202                           l880 18E4                           l864 17E0  
                         l929 2182                           l857 1336                           l866 17E8  
                         l875 1892                           l876 18DC                           l885 15D6  
                         l895 1F94                           l896 1F9C                           u800 1DC4  
                         u801 1DC0                           u810 210C                           u811 2108  
                         u900 18F8                           u820 2176                           u901 18F4  
                         u821 2172                           u830 15EA                           u910 192A  
                         u831 15E6                           u911 1926                           u760 2252  
                         u840 161C                           u920 1968                           u761 224E  
                         u841 1618                           u921 1964                           u770 1D54  
                         u930 1992                           u771 1D50                           u851 1646  
                         u931 198E                           u780 1D66                           u860 166A  
                         u940 19C0                           u781 1D62                           u861 1666  
                         u941 19BC                           u790 1D8E                           u870 1694  
                         u950 1A08                           u791 1D8A                           u871 1690  
                         u951 1A04                           u880 16D4                           u960 1C8C  
                         u881 16D0                           u961 1C88                           u890 171E  
                         u970 1CAE                           u891 171A                           u971 1CAA  
                         u980 1D04                           u981 1D00                           u990 1D14  
                         u991 1D10                           _abs 210E                           _pad 1C7C  
                         wreg 000FE8                    _TXSTA1bits 000FAC                   main@buf_arr 0066  
                        ?_abs 0013                          l1411 2244                          l1413 2252  
                        l1421 1D70                          l1501 192A                          l1423 1D8E  
                        l1415 1D42                          l1511 1992                          l1503 194A  
                        l1431 20D6                          l1425 1DC4                          l1417 1D54  
                        l1521 1A08                          l1513 19C0                          l1505 1968  
                        l1433 20E8                          l1441 215E                          l1601 112A  
                        l1419 1D66                          l1451 15EA                          l1523 1A28  
                        l1515 19E0                          l1507 1970                          l1435 20EC  
                        l1443 2176                          l1531 1CA0                          l1611 11CA  
                        l1603 1132                          l1461 1640                          l1453 160A  
                        l1517 19F2                          l1509 1984                          l1429 20CA  
                        l1437 214E                          l1541 1CE6                          l1533 1CAE  
                        l1621 1286                          l1613 11D0                          l1605 113C  
                        l1701 1380                          l1471 1694                          l1463 164C  
                        l1455 160E                          l1447 15D8                          l1519 19F8  
                        l1551 2128                          l1439 215A                          l1543 1D14  
                        l1535 1CBA                          l1527 1C7C                          l1631 12D8  
                        l1623 12A0                          l1607 1142                          l1615 1234  
                        l1711 1416                          l1703 13A4                          l1561 1BDE  
                        l1553 1BA4                          l1481 1708                          l1473 16A6  
                        l1465 166A                          l1457 161C                          l1449 15DC  
                        l1545 1D28                          l1537 1CCE                          l1529 1C8C  
                        l1633 12EA                          l1617 124E                          l1625 12B0  
                        l1609 11C4                          l1721 14DE                          l1713 143A  
                        l1705 13D6                          l1801 1F9E                          l1571 1C2A  
                        l1563 1BF0                          l1555 1BB8                          l1475 16D4  
                        l1467 1672                          l1483 170E                          l1459 163C  
                        l1491 18E6                          l1539 1CE2                          l1635 12F6  
                        l1627 12C2                          l1619 126C                          l1651 1794  
                        l1643 1760                          l1731 1566                          l1723 1514  
                        l1715 1482                          l1811 1FF0                          l1803 1FBE  
                        l1573 1C2E                          l1557 1BC4                          l1485 171E  
                        l1477 16F4                          l1469 1686                          l1493 18EA  
                        l1549 210E                          l1637 12FE                          l1629 12D2  
                        l1581 1054                          l1661 180C                          l1653 17A8  
                        l1645 1772                          l1733 157A                          l1709 13F2  
                        l1821 2086                          l1575 1C5C                          l1567 1C02  
                        l1559 1BD0                          l1487 173E                          l1479 16F6  
                        l1495 18F8                          l1639 130E                          l1591 10CE  
                        l1583 1074                          l1671 186C                          l1663 1820  
                        l1655 17B0                          l1647 177A                          l1727 1534  
                        l1719 14BA                          l1743 15A0                          l1815 21DC  
                        l1807 1FC4                          l1831 1E76                          l1751 1DD8  
                        l1823 208E                          l1577 1C6E                          l1569 1C16  
                        l1497 1918                          l1593 10E8                          l1585 109C  
                        l1681 18BA                          l1673 1870                          l1665 1824  
                        l1657 17BE                          l1649 178C                          l1745 15C4  
                        l1729 1558                          l1737 1586                          l1817 21E6  
                        l1809 1FD8                          l1841 1E92                          l1753 1DF4  
                        l1825 20B4                          l1499 191C                          l1595 1104  
                        l1587 10BC                          l1683 18BE                          l1675 1874  
                        l1667 1842                          l1739 1594                          l1771 1F38  
                        l1763 1ECC                          l1843 1EA4                          l1835 1E7C  
                        l1755 1E16                          l1827 20B6                          l1851 1A4E  
                        l1597 1116                          l1589 10CC                          l1669 184E  
                        l1693 1338                          l1781 1F78                          l1685 2184  
                        l1765 1EE8                          l1845 1EC8                          l1837 1E84  
                        l1829 1E5A                          l1757 1E36                          l1861 1A70  
                        l1853 1A5A                          l1791 223A                          l1783 2226  
                        l1599 1124                          l1679 18A6                          l1695 135C  
                        l1775 1F3C                          l1759 21B4                          l1839 1E8C  
                        l1871 1AB2                          l1863 1A74                          l1793 223C  
                        l1785 2228                          l1697 136A                          l1777 1F44  
                        l1769 1EEE                          l1689 1FF4                          l1881 1B1A  
                        l1873 1AC4                          l1865 1A84                          l1849 1A4A  
                        l1795 223E                          l1787 2232                          l1699 137C  
                        l1779 1F52                          l1883 1B40                          l1875 1AC8  
                        l1867 1A9C                          l1859 1A60                          l1789 2234  
                        l1885 1B58                          l1877 1AEC                          l1869 1AA8  
                        ?_pad 0012                          l1799 2204                          l1887 1B70  
                        l1879 1B08                          l1889 1B84                          STR_1 1049  
                        STR_2 1025                          STR_3 1042                          STR_4 1001  
                        STR_5 1050                          u1000 2128                          u1001 2124  
                        u1010 1BB8                          u1011 1BB4                          u1020 1BDE  
                        u1100 10E8                          u1021 1BDA                          u1101 10E4  
                        u1030 1BFE                          u1110 1116                          u1031 1BFA  
                        u1111 1112                          u1040 1C4C                          u1200 12EA  
                        u1120 1124                          u1041 1C48                          u1201 12E6  
                        u1121 1120                          u1050 1C5C                          u1130 124E  
                        u1051 1C58                          u1131 124A                          u1211 176A  
                        u1140 126C                          u1060 1084                          u1220 178C  
                        u1300 21B0                          u1141 1268                          u1061 107E  
                        u1221 1788                          u1301 21AA                          u1150 1286  
                        u1070 1086                          u1230 17BE                          u1310 21B2  
                        u1151 1282                          u1231 17BA                          u1160 12A0  
                        u1080 109C                          u1240 17DC                          u1320 203C  
                        u1400 1DF4                          u1161 129C                          u1081 1098  
                        u1241 17D8                          u1321 2036                          u1401 1DF0  
                        u1170 12B0                          u1090 10CC                          u1250 1808  
                        u1410 1EE8                          u1330 203E                          u1171 12AC  
                        u1091 10C8                          u1251 1804                          u1411 1EE4  
                        u1180 12C2                          u1260 1842                          u1340 135C  
                        u1420 1F94                          u1500 1B3E                          u1181 12BE  
                        u1261 183E                          u1341 1358                          u1421 1F90  
                        u1501 1B3A                          u1190 12D2                          u1270 1892  
                        u1350 13A4                          u1430 1FBE                          u1191 12CE  
                        u1271 188E                          u1351 13A0                          u1431 1FBA  
                        u1280 18A2                          u1360 1416                          u1440 20C8  
                        u1281 189E                          u1361 1412                          u1441 20C4  
                        u1290 18DC                          u1370 143A                          u1450 1E76  
                        u1291 18D8                          u1371 1436                          u1451 1E72  
                        u1380 14DE                          u1460 1EA4                          u1381 14DA  
                        u1461 1EA0                          u1517 1B90                          u1390 1558  
                        u1470 1EC8                          u1391 1554                          u1471 1EC4  
                        u1480 1A84                          u1481 1A80                          u1490 1AEC  
                        u1491 1AE8                          abs@a 0013                          _dbuf 0100  
                        _ctoa 1BA4                          _main 1A4A                          _dtoa 1054  
                        _init 2226                          _prec 00E1                          _nout 00DD  
                        pad@i 0019                          pad@p 0016                          fsr1h 000FE2  
                        fsr2h 000FDA                          indf1 000FE7                          indf2 000FDF  
                        fsr1l 000FE1                          pad@w 001B                          fsr2l 000FD9  
                        _stoa 1760                          start 0000                  ___param_bank 000000  
                       ??_abs 0015                         ??_pad 0018               __end_of___aodiv 1760  
                       ?_ctoa 000B                         ?_main 0001                         ?_dtoa 001D  
             __end_of___aomod 1A4A                         ?_init 0001                         ?_stoa 000B  
                       _LATB5 007C55                  vfpfcnvrt@fmt 0043                         _TX1IF 007CF4  
                       _TRISD 000F95   __end_of_ring_buff_num_items 21DC                         _flags 00E3  
                       _fputc 1D42                         _fputs 20CA                         pad@fp 0012  
                       _width 00DF              ?_ring_buff_write 0006                         ctoa@c 000D  
                       _putch 2242                         ctoa@l 000F                         ctoa@w 0011  
                       main@i 0099                         dtoa@d 001F                         dtoa@i 003F  
                       dtoa@n 0037                         dtoa@p 0031                         dtoa@s 0035  
                       dtoa@w 0033                         tablat 000FF5                         plusw1 000FE3  
                       plusw2 000FDB                         stoa@i 0017                         stoa@l 001F  
                       stoa@p 001D                         stoa@s 000D                         stoa@w 0019  
                       status 000FD8   __end_of_ring_buff_write_arr 20CA               __initialization 2040  
                __end_of_ctoa 1C7C                  __end_of_main 1BA4                  __end_of_dtoa 1338  
                __end_of_init 2242                  __end_of_stoa 18E6          ring_buff_init@buffer 0001  
        ring_buff_peek@buffer 0005          ring_buff_read@buffer 0005                        ??_ctoa 000E  
                      ??_main 0064                        ??_dtoa 0027                        ??_init 0001  
                      ??_stoa 000F                 __activetblptr 000001                        ?_fputc 0002  
                      ?_fputs 000B                        ?_putch 0001                        _ANSELC 000F3A  
                      _SPBRG1 000FAF                        _TXREG1 000FAD                  vfprintf@cfmt 005A  
                   ??___aodiv 0011                     ??___aomod 0011   __size_of_ring_buff_is_empty 0030  
 __size_of_ring_buff_read_arr 0072                        clear_0 2066                        clear_1 2072  
                      _printf 21DC                        pad@buf 0014                        ctoa@fp 000B  
                      dtoa@fp 001D                        _strlen 214E                        fputc@c 0002  
                      fputs@c 000F                        fputs@i 0010                        fputs@s 000B  
     __size_of_ring_buff_init 0022       __size_of_ring_buff_peek 0056       __size_of_ring_buff_read 0070  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                        stoa@cp 001B                        stoa@fp 000B  
            __end_of_vfprintf 1F9E                    __accesstop 0060       __end_of__initialization 2078  
               ___rparam_used 000001                __pcstackCOMRAM 0001                  __pidataBANK0 2258  
               __end_of_fputc 1DD8                 __end_of_fputs 210E                 __end_of_putch 2258  
          ring_buff_peek@data 0007            ring_buff_read@data 0007                       ??_fputc 0006  
                     ??_fputs 000F                       ??_putch 0001                    __pbssBANK0 00DD  
                  __pbssBANK1 0100      ring_buff_peek@data_index 000B       ring_buff_is_full@buffer 0001  
                     ?_printf 005C                       ?_strlen 0001         ring_buff_read_arr@cnt 0011  
       ring_buff_read_arr@len 000E            __size_of_vfpfcnvrt 02A0    ring_buff_read_arr@data_ptr 000F  
                     __Hparam 0000                       __Lparam 0000                       ___aodiv 15D8  
                     ___aomod 18E6                     ?_vfprintf 0054                  __psmallconst 1000  
           _ring_buff_is_full 1FF4                       __pcinit 2040                       __ramtop 1000  
                     __ptext0 1A4A                       __ptext1 2086                       __ptext2 1DD8  
                     __ptext3 1FF4                       __ptext4 1E5A                       __ptext5 1ECC  
                     __ptext6 2184                       __ptext7 1F9E                       __ptext8 21B4  
                     __ptext9 2204            ?_ring_buff_is_full 0001               __size_of_printf 0028  
             __size_of_strlen 0036                  __size_of_abs 0040                _ring_buff_init 2204  
              _ring_buff_peek 1F9E                _ring_buff_read 1ECC                  __size_of_pad 00C6  
         ??_ring_buff_is_full 0003                       main@buf 009A                       main@cnt 0098  
        end_of_initialization 2078          ring_buff_write_arr@i 0011     ring_buff_num_items@buffer 0001  
                     fputc@fp 0004  __size_of_ring_buff_num_items 0028                       fputs@fp 000D  
    __size_of_ring_buff_write 0082             __end_of_vfpfcnvrt 15D8     __end_of_ring_buff_is_full 2040  
                     postdec1 000FE5                       postdec2 000FDD                       postinc0 000FEE  
                     postinc1 000FE6                       postinc2 000FDE                    ??_vfprintf 005A  
                     strlen@a 0003                       strlen@s 0001        __end_of_ring_buff_init 2226  
      __end_of_ring_buff_peek 1FF4        __end_of_ring_buff_read 1F3C  __size_of_ring_buff_write_arr 0044  
                   _TRISBbits 000F93                     _TRISCbits 000F94    __end_of_ring_buff_is_empty 21B4  
  __end_of_ring_buff_read_arr 1ECC                   vfpfcnvrt@ap 0045                   vfpfcnvrt@cp 0051  
                 vfpfcnvrt@fp 0041                   vfpfcnvrt@ll 0049               ?_ring_buff_init 0001  
             ?_ring_buff_peek 0005               ?_ring_buff_read 0005                __end_of_printf 2204  
              __end_of_strlen 2184           start_initialization 2040                   __end_of_abs 214E  
                 __end_of_pad 1D42       ring_buff_write_arr@data 000C           ring_buff_peek@index 0009  
     ring_buff_write_arr@size 000E                   vfprintf@fmt 0056    __size_of_ring_buff_is_full 004C  
                 __pdataBANK0 00E5             ??_ring_buff_write 0009                      ??_printf 0060  
                    ??_strlen 0003                 __pcstackBANK0 0060              ___aodiv@dividend 0001  
    ring_buff_is_empty@buffer 0001                      ?___aodiv 0001                      ?___aomod 0001  
            ___aodiv@quotient 0013           _ring_buff_num_items 21B4             __size_of_vfprintf 0062  
                 __smallconst 1000                __size_of_fputc 0096                __size_of_fputs 0044  
              __size_of_putch 0016           ring_buff_write@data 0008          ?_ring_buff_num_items 0001  
         _ring_buff_write_arr 2086        ring_buff_read_arr@data 000C                     _vfpfcnvrt 1338  
        ?_ring_buff_write_arr 000A                    vfpfcnvrt@c 0053                     copy_data0 2054  
       ??_ring_buff_num_items 0003                      __Hrparam 0000                    vfprintf@ap 0058  
                    __Lrparam 0000                    vfprintf@fp 0054                  __Lsmallconst 1000  
            ??_ring_buff_init 0003              ??_ring_buff_peek 000A              ??_ring_buff_read 0009  
            __size_of___aodiv 0188              __size_of___aomod 0164                    ?_vfpfcnvrt 0041  
       ??_ring_buff_write_arr 000F               ___aodiv@divisor 0009               ___aodiv@counter 0011  
          _ring_buff_is_empty 2184            _ring_buff_read_arr 1E5A                      _dtoa$933 002F  
                    __ptext10 21DC                      __ptext11 1F3C                      __ptext20 15D8  
                    __ptext12 1338                      __ptext21 1BA4                      __ptext13 1760  
                    __ptext22 1D42                      __ptext14 1054                      __ptext23 2242  
                    __ptext15 1C7C                      __ptext24 2226                      __ptext16 214E  
                    __ptext17 20CA                      __ptext18 210E                      __ptext19 18E6  
         ?_ring_buff_is_empty 0001           ?_ring_buff_read_arr 000A                 __size_of_ctoa 00D8  
               __size_of_main 015A                 __size_of_dtoa 02E4                 __size_of_init 001C  
               __size_of_stoa 0186               _ring_buff_write 1DD8               main@ring_buffer 009B  
       ring_buff_write@buffer 0006                     stoa@F1146 00E5          ??_ring_buff_is_empty 0003  
        ??_ring_buff_read_arr 000F                      _vfprintf 1F3C                     printf@fmt 005C  
   ring_buff_write_arr@buffer 000A              ___aomod@dividend 0001                     putch@data 0001  
    ring_buff_read_arr@buffer 000A                    _RCSTA1bits 000FAB                      printf@ap 0062  
             ___aomod@divisor 0009                   ??_vfpfcnvrt 0047                      stoa@nuls 0010  
             ___aomod@counter 0011       __end_of_ring_buff_write 1E5A                  ___aodiv@sign 0012  
                ___aomod@sign 0012  
