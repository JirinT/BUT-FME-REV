

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Apr 08 14:12:32 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    42  0000                     
    43                           ; Version 2.20
    44                           ; Generated 05/05/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F46K22 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     
    78                           	psect	idataBANK0
    79  002256                     __pidataBANK0:
    80                           	callstack 0
    81                           
    82                           ;initializer for stoa@F1146
    83  002256  28                 	db	40
    84  002257  6E                 	db	110
    85  002258  75                 	db	117
    86  002259  6C                 	db	108
    87  00225A  6C                 	db	108
    88  00225B  29                 	db	41
    89  00225C  00                 	db	0
    90  0000                     _ANSELC	set	3898
    91  0000                     _TXREG1	set	4013
    92  0000                     _TXSTA1bits	set	4012
    93  0000                     _RCSTA1bits	set	4011
    94  0000                     _SPBRG1	set	4015
    95  0000                     _TRISCbits	set	3988
    96  0000                     _TRISD	set	3989
    97  0000                     _TRISBbits	set	3987
    98  0000                     _TX1IF	set	31988
    99                           
   100                           	psect	smallconst
   101  001000                     __psmallconst:
   102                           	callstack 0
   103  001000  00                 	db	0
   104  001001                     STR_4:
   105                           
   106                           ; BSR set to: 15
   107  001001  54                 	db	84	;'T'
   108  001002  65                 	db	101	;'e'
   109  001003  73                 	db	115	;'s'
   110  001004  74                 	db	116	;'t'
   111  001005  6F                 	db	111	;'o'
   112  001006  76                 	db	118	;'v'
   113  001007  61                 	db	97	;'a'
   114  001008  63                 	db	99	;'c'
   115  001009  69                 	db	105	;'i'
   116  00100A  20                 	db	32
   117  00100B  7A                 	db	122	;'z'
   118  00100C  70                 	db	112	;'p'
   119  00100D  72                 	db	114	;'r'
   120  00100E  61                 	db	97	;'a'
   121  00100F  76                 	db	118	;'v'
   122  001010  61                 	db	97	;'a'
   123  001011  20                 	db	32
   124  001012  70                 	db	112	;'p'
   125  001013  72                 	db	114	;'r'
   126  001014  6F                 	db	111	;'o'
   127  001015  20                 	db	32
   128  001016  62                 	db	98	;'b'
   129  001017  75                 	db	117	;'u'
   130  001018  66                 	db	102	;'f'
   131  001019  66                 	db	102	;'f'
   132  00101A  65                 	db	101	;'e'
   133  00101B  72                 	db	114	;'r'
   134  00101C  2C                 	db	44
   135  00101D  20                 	db	32
   136  00101E  7A                 	db	122	;'z'
   137  00101F  6E                 	db	110	;'n'
   138  001020  6F                 	db	111	;'o'
   139  001021  76                 	db	118	;'v'
   140  001022  75                 	db	117	;'u'
   141  001023  00                 	db	0
   142  001024                     STR_2:
   143                           
   144                           ; BSR set to: 15
   145  001024  54                 	db	84	;'T'
   146  001025  65                 	db	101	;'e'
   147  001026  73                 	db	115	;'s'
   148  001027  74                 	db	116	;'t'
   149  001028  6F                 	db	111	;'o'
   150  001029  76                 	db	118	;'v'
   151  00102A  61                 	db	97	;'a'
   152  00102B  63                 	db	99	;'c'
   153  00102C  69                 	db	105	;'i'
   154  00102D  20                 	db	32
   155  00102E  7A                 	db	122	;'z'
   156  00102F  70                 	db	112	;'p'
   157  001030  72                 	db	114	;'r'
   158  001031  61                 	db	97	;'a'
   159  001032  76                 	db	118	;'v'
   160  001033  61                 	db	97	;'a'
   161  001034  20                 	db	32
   162  001035  70                 	db	112	;'p'
   163  001036  72                 	db	114	;'r'
   164  001037  6F                 	db	111	;'o'
   165  001038  20                 	db	32
   166  001039  62                 	db	98	;'b'
   167  00103A  75                 	db	117	;'u'
   168  00103B  66                 	db	102	;'f'
   169  00103C  66                 	db	102	;'f'
   170  00103D  65                 	db	101	;'e'
   171  00103E  72                 	db	114	;'r'
   172  00103F  21                 	db	33
   173  001040  00                 	db	0
   174  001041                     STR_3:
   175                           
   176                           ; BSR set to: 15
   177  001041  52                 	db	82	;'R'
   178  001042  3A                 	db	58	;':'
   179  001043  20                 	db	32
   180  001044  25                 	db	37
   181  001045  63                 	db	99	;'c'
   182  001046  0A                 	db	10
   183  001047  00                 	db	0
   184  001048                     STR_1:
   185                           
   186                           ; BSR set to: 15
   187  001048  52                 	db	82	;'R'
   188  001049  3A                 	db	58	;':'
   189  00104A  20                 	db	32
   190  00104B  25                 	db	37
   191  00104C  64                 	db	100	;'d'
   192  00104D  0A                 	db	10
   193  00104E  00                 	db	0
   194  00104F                     STR_5:
   195                           
   196                           ; BSR set to: 15
   197  00104F  25                 	db	37
   198  001050  73                 	db	115	;'s'
   199  001051  00                 	db	0
   200  001052  00                 	db	0	; dummy byte at the end
   201  0000                     
   202                           ; #config settings
   203                           
   204                           	psect	cinit
   205  00203E                     __pcinit:
   206                           	callstack 0
   207  00203E                     start_initialization:
   208                           	callstack 0
   209  00203E                     __initialization:
   210                           	callstack 0
   211                           
   212                           ; Initialize objects allocated to BANK0 (7 bytes)
   213                           ; load TBLPTR registers with __pidataBANK0
   214  00203E  0E56               	movlw	low __pidataBANK0
   215  002040  6EF6               	movwf	tblptrl,c
   216  002042  0E22               	movlw	high __pidataBANK0
   217  002044  6EF7               	movwf	tblptrh,c
   218  002046  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   219  002048  6EF8               	movwf	tblptru,c
   220  00204A  EE00  F0E5         	lfsr	0,__pdataBANK0
   221  00204E  EE10 F007          	lfsr	1,7
   222  002052                     copy_data0:
   223  002052  0009               	tblrd		*+
   224  002054  CFF5 FFEE          	movff	tablat,postinc0
   225  002058  50E5               	movf	postdec1,w,c
   226  00205A  50E1               	movf	fsr1l,w,c
   227  00205C  E1FA               	bnz	copy_data0
   228                           
   229                           ; Clear objects allocated to BANK1 (32 bytes)
   230  00205E  EE01  F000         	lfsr	0,__pbssBANK1
   231  002062  0E20               	movlw	32
   232  002064                     clear_0:
   233  002064  6AEE               	clrf	postinc0,c
   234  002066  06E8               	decf	wreg,f,c
   235  002068  E1FD               	bnz	clear_0
   236                           
   237                           ; Clear objects allocated to BANK0 (8 bytes)
   238  00206A  EE00  F0DD         	lfsr	0,__pbssBANK0
   239  00206E  0E08               	movlw	8
   240  002070                     clear_1:
   241  002070  6AEE               	clrf	postinc0,c
   242  002072  06E8               	decf	wreg,f,c
   243  002074  E1FD               	bnz	clear_1
   244  002076                     end_of_initialization:
   245                           	callstack 0
   246  002076                     __end_of__initialization:
   247                           	callstack 0
   248  002076  0E00               	movlw	low (__Lsmallconst shr (0+16))
   249  002078  6EF8               	movwf	tblptru,c
   250  00207A  0E10               	movlw	high __Lsmallconst
   251  00207C  6EF7               	movwf	tblptrh,c
   252  00207E  0100               	movlb	0
   253  002080  EF25  F00D         	goto	_main	;jump to C main() function
   254                           
   255                           	psect	bssBANK0
   256  0000DD                     __pbssBANK0:
   257                           	callstack 0
   258  0000DD                     _nout:
   259                           	callstack 0
   260  0000DD                     	ds	2
   261  0000DF                     _width:
   262                           	callstack 0
   263  0000DF                     	ds	2
   264  0000E1                     _prec:
   265                           	callstack 0
   266  0000E1                     	ds	2
   267  0000E3                     _flags:
   268                           	callstack 0
   269  0000E3                     	ds	2
   270                           
   271                           	psect	dataBANK0
   272  0000E5                     __pdataBANK0:
   273                           	callstack 0
   274  0000E5                     stoa@F1146:
   275                           	callstack 0
   276  0000E5                     	ds	7
   277                           
   278                           	psect	bssBANK1
   279  000100                     __pbssBANK1:
   280                           	callstack 0
   281  000100                     _dbuf:
   282                           	callstack 0
   283  000100                     	ds	32
   284                           
   285                           	psect	cstackBANK0
   286  000060                     __pcstackBANK0:
   287                           	callstack 0
   288  000060                     	ds	2
   289  000062                     printf@ap:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x2
   293  000062                     	ds	2
   294  000064                     ??_main:
   295                           
   296                           ; 1 bytes @ 0x4
   297  000064                     	ds	2
   298  000066                     main@buf_arr:
   299                           	callstack 0
   300                           
   301                           ; 50 bytes @ 0x6
   302  000066                     	ds	50
   303  000098                     main@cnt:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x38
   307  000098                     	ds	1
   308  000099                     main@i:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x39
   312  000099                     	ds	1
   313  00009A                     main@buf:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0x3A
   317  00009A                     	ds	1
   318  00009B                     main@ring_buffer:
   319                           	callstack 0
   320                           
   321                           ; 66 bytes @ 0x3B
   322  00009B                     	ds	66
   323                           
   324                           	psect	cstackCOMRAM
   325  000001                     __pcstackCOMRAM:
   326                           	callstack 0
   327  000001                     ?_strlen:
   328                           	callstack 0
   329  000001                     ?___aodiv:
   330                           	callstack 0
   331  000001                     ?___aomod:
   332                           	callstack 0
   333  000001                     putch@data:
   334                           	callstack 0
   335  000001                     ring_buff_init@buffer:
   336                           	callstack 0
   337  000001                     ring_buff_is_empty@buffer:
   338                           	callstack 0
   339  000001                     ring_buff_is_full@buffer:
   340                           	callstack 0
   341  000001                     ring_buff_num_items@buffer:
   342                           	callstack 0
   343  000001                     strlen@s:
   344                           	callstack 0
   345  000001                     ___aodiv@dividend:
   346                           	callstack 0
   347  000001                     ___aomod@dividend:
   348                           	callstack 0
   349                           
   350                           ; 8 bytes @ 0x0
   351  000001                     	ds	1
   352  000002                     fputc@c:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x1
   356  000002                     	ds	1
   357  000003                     ??_ring_buff_num_items:
   358  000003                     ??_ring_buff_is_full:
   359  000003                     strlen@a:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x2
   363  000003                     	ds	1
   364  000004                     fputc@fp:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x3
   368  000004                     	ds	1
   369  000005                     ring_buff_read@buffer:
   370                           	callstack 0
   371  000005                     ring_buff_peek@buffer:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x4
   375  000005                     	ds	1
   376  000006                     ??_fputc:
   377  000006                     ring_buff_write@buffer:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x5
   381  000006                     	ds	1
   382  000007                     ring_buff_read@data:
   383                           	callstack 0
   384  000007                     ring_buff_peek@data:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x6
   388  000007                     	ds	1
   389  000008                     ring_buff_write@data:
   390                           	callstack 0
   391                           
   392                           ; 1 bytes @ 0x7
   393  000008                     	ds	1
   394  000009                     ??_ring_buff_write:
   395  000009                     ??_ring_buff_read:
   396  000009                     ring_buff_peek@index:
   397                           	callstack 0
   398  000009                     ___aodiv@divisor:
   399                           	callstack 0
   400  000009                     ___aomod@divisor:
   401                           	callstack 0
   402                           
   403                           ; 8 bytes @ 0x8
   404  000009                     	ds	1
   405  00000A                     ??_ring_buff_peek:
   406  00000A                     ring_buff_write_arr@buffer:
   407                           	callstack 0
   408  00000A                     ring_buff_read_arr@buffer:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x9
   412  00000A                     	ds	1
   413  00000B                     ?_ctoa:
   414                           	callstack 0
   415  00000B                     ?_stoa:
   416                           	callstack 0
   417  00000B                     ring_buff_peek@data_index:
   418                           	callstack 0
   419  00000B                     ctoa@fp:
   420                           	callstack 0
   421  00000B                     stoa@fp:
   422                           	callstack 0
   423  00000B                     fputs@s:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0xA
   427  00000B                     	ds	1
   428  00000C                     ring_buff_write_arr@data:
   429                           	callstack 0
   430  00000C                     ring_buff_read_arr@data:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0xB
   434  00000C                     	ds	1
   435  00000D                     ctoa@c:
   436                           	callstack 0
   437  00000D                     stoa@s:
   438                           	callstack 0
   439  00000D                     fputs@fp:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0xC
   443  00000D                     	ds	1
   444  00000E                     ??_ctoa:
   445  00000E                     ring_buff_write_arr@size:
   446                           	callstack 0
   447  00000E                     ring_buff_read_arr@len:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0xD
   451  00000E                     	ds	1
   452  00000F                     ??_ring_buff_write_arr:
   453  00000F                     ??_stoa:
   454  00000F                     fputs@c:
   455                           	callstack 0
   456  00000F                     ring_buff_read_arr@data_ptr:
   457                           	callstack 0
   458  00000F                     ctoa@l:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0xE
   462  00000F                     	ds	1
   463  000010                     fputs@i:
   464                           	callstack 0
   465  000010                     stoa@nuls:
   466                           	callstack 0
   467                           
   468                           ; 7 bytes @ 0xF
   469  000010                     	ds	1
   470  000011                     ring_buff_write_arr@i:
   471                           	callstack 0
   472  000011                     ring_buff_read_arr@cnt:
   473                           	callstack 0
   474  000011                     ___aodiv@counter:
   475                           	callstack 0
   476  000011                     ___aomod@counter:
   477                           	callstack 0
   478  000011                     ctoa@w:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x10
   482  000011                     	ds	1
   483  000012                     ?_pad:
   484                           	callstack 0
   485  000012                     ___aodiv@sign:
   486                           	callstack 0
   487  000012                     ___aomod@sign:
   488                           	callstack 0
   489  000012                     pad@fp:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x11
   493  000012                     	ds	1
   494  000013                     ?_abs:
   495                           	callstack 0
   496  000013                     abs@a:
   497                           	callstack 0
   498  000013                     ___aodiv@quotient:
   499                           	callstack 0
   500                           
   501                           ; 8 bytes @ 0x12
   502  000013                     	ds	1
   503  000014                     pad@buf:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x13
   507  000014                     	ds	1
   508  000015                     ??_abs:
   509                           
   510                           ; 1 bytes @ 0x14
   511  000015                     	ds	1
   512  000016                     pad@p:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x15
   516  000016                     	ds	1
   517  000017                     stoa@i:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x16
   521  000017                     	ds	1
   522  000018                     ??_pad:
   523                           
   524                           ; 1 bytes @ 0x17
   525  000018                     	ds	1
   526  000019                     pad@i:
   527                           	callstack 0
   528  000019                     stoa@w:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x18
   532  000019                     	ds	2
   533  00001B                     pad@w:
   534                           	callstack 0
   535  00001B                     stoa@cp:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x1A
   539  00001B                     	ds	2
   540  00001D                     ?_dtoa:
   541                           	callstack 0
   542  00001D                     dtoa@fp:
   543                           	callstack 0
   544  00001D                     stoa@p:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x1C
   548  00001D                     	ds	2
   549  00001F                     stoa@l:
   550                           	callstack 0
   551  00001F                     dtoa@d:
   552                           	callstack 0
   553                           
   554                           ; 8 bytes @ 0x1E
   555  00001F                     	ds	8
   556  000027                     ??_dtoa:
   557                           
   558                           ; 1 bytes @ 0x26
   559  000027                     	ds	8
   560  00002F                     _dtoa$932:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x2E
   564  00002F                     	ds	2
   565  000031                     dtoa@p:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x30
   569  000031                     	ds	2
   570  000033                     dtoa@w:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x32
   574  000033                     	ds	2
   575  000035                     dtoa@s:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x34
   579  000035                     	ds	2
   580  000037                     dtoa@n:
   581                           	callstack 0
   582                           
   583                           ; 8 bytes @ 0x36
   584  000037                     	ds	8
   585  00003F                     dtoa@i:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x3E
   589  00003F                     	ds	2
   590  000041                     ?_vfpfcnvrt:
   591                           	callstack 0
   592  000041                     vfpfcnvrt@fp:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x40
   596  000041                     	ds	2
   597  000043                     vfpfcnvrt@fmt:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x42
   601  000043                     	ds	2
   602  000045                     vfpfcnvrt@ap:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x44
   606  000045                     	ds	2
   607  000047                     ??_vfpfcnvrt:
   608                           
   609                           ; 1 bytes @ 0x46
   610  000047                     	ds	2
   611  000049                     vfpfcnvrt@ll:
   612                           	callstack 0
   613                           
   614                           ; 8 bytes @ 0x48
   615  000049                     	ds	8
   616  000051                     vfpfcnvrt@cp:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x50
   620  000051                     	ds	2
   621  000053                     vfpfcnvrt@c:
   622                           	callstack 0
   623                           
   624                           ; 1 bytes @ 0x52
   625  000053                     	ds	1
   626  000054                     ?_vfprintf:
   627                           	callstack 0
   628  000054                     vfprintf@fp:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x53
   632  000054                     	ds	2
   633  000056                     vfprintf@fmt:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x55
   637  000056                     	ds	2
   638  000058                     vfprintf@ap:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x57
   642  000058                     	ds	2
   643  00005A                     vfprintf@cfmt:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x59
   647  00005A                     	ds	2
   648  00005C                     ?_printf:
   649                           	callstack 0
   650  00005C                     printf@fmt:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x5B
   654  00005C                     	ds	4
   655  000060                     
   656                           ; 1 bytes @ 0x5F
   657 ;;
   658 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   659 ;;
   660 ;; *************** function _main *****************
   661 ;; Defined at:
   662 ;;		line 93 in file "main.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;		None
   665 ;; Auto vars:     Size  Location     Type
   666 ;;  ring_buffer    66   59[BANK0 ] struct ring_buffer_t
   667 ;;  buf_arr        50    6[BANK0 ] unsigned char [50]
   668 ;;  buf             1   58[BANK0 ] unsigned char 
   669 ;;  i               1   57[BANK0 ] unsigned char 
   670 ;;  cnt             1   56[BANK0 ] unsigned char 
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   681 ;;      Locals:         0     119       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   682 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   683 ;;      Totals:         0     121       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   684 ;;Total ram usage:      121 bytes
   685 ;; Hardware stack levels required when called:    8
   686 ;; This function calls:
   687 ;;		_init
   688 ;;		_printf
   689 ;;		_ring_buff_init
   690 ;;		_ring_buff_num_items
   691 ;;		_ring_buff_peek
   692 ;;		_ring_buff_read
   693 ;;		_ring_buff_read_arr
   694 ;;		_ring_buff_write
   695 ;;		_ring_buff_write_arr
   696 ;; This function is called by:
   697 ;;		Startup code after reset
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text0
   702  001A4A                     __ptext0:
   703                           	callstack 0
   704  001A4A                     _main:
   705                           	callstack 23
   706  001A4A                     
   707                           ;main.c: 95:     init();
   708  001A4A  EC12  F011         	call	_init	;wreg free
   709  001A4E                     
   710                           ;main.c: 97:     char i, cnt;;main.c: 98:     char buf;;main.c: 99:     char buf_arr[50]
      +                          ;;main.c: 101:     ring_buffer_t ring_buffer;;main.c: 102:     ring_buff_init(&ring_buff
      +                          er);
   711  001A4E  0E9B               	movlw	low main@ring_buffer
   712  001A50  6E01               	movwf	ring_buff_init@buffer^0,c
   713  001A52  0E00               	movlw	high main@ring_buffer
   714  001A54  6E02               	movwf	(ring_buff_init@buffer+1)^0,c
   715  001A56  EC01  F011         	call	_ring_buff_init	;wreg free
   716  001A5A                     l1851:
   717                           
   718                           ;main.c: 106:         for(i = 0; i < 50; i++) {
   719  001A5A  0E00               	movlw	0
   720  001A5C  0100               	movlb	0	; () banked
   721  001A5E  6F99               	movwf	main@i& (0+255),b
   722  001A60                     l1857:
   723                           
   724                           ; BSR set to: 0
   725                           ;main.c: 107:             ring_buff_write(&ring_buffer, i);
   726  001A60  0E9B               	movlw	low main@ring_buffer
   727  001A62  6E06               	movwf	ring_buff_write@buffer^0,c
   728  001A64  0E00               	movlw	high main@ring_buffer
   729  001A66  6E07               	movwf	(ring_buff_write@buffer+1)^0,c
   730  001A68  C099  F008         	movff	main@i,ring_buff_write@data
   731  001A6C  ECEB  F00E         	call	_ring_buff_write	;wreg free
   732  001A70                     
   733                           ;main.c: 108:         }
   734  001A70  0100               	movlb	0	; () banked
   735  001A72  2B99               	incf	main@i& (0+255),f,b
   736  001A74                     
   737                           ; BSR set to: 0
   738  001A74  0E31               	movlw	49
   739  001A76  6599               	cpfsgt	main@i& (0+255),b
   740  001A78  EF40  F00D         	goto	u1481
   741  001A7C  EF42  F00D         	goto	u1480
   742  001A80                     u1481:
   743  001A80  EF30  F00D         	goto	l1857
   744  001A84                     u1480:
   745  001A84                     
   746                           ; BSR set to: 0
   747  001A84  0E9B               	movlw	low main@ring_buffer
   748  001A86  6E05               	movwf	ring_buff_peek@buffer^0,c
   749  001A88  0E00               	movlw	high main@ring_buffer
   750  001A8A  6E06               	movwf	(ring_buff_peek@buffer+1)^0,c
   751  001A8C  0E9A               	movlw	low main@buf
   752  001A8E  6E07               	movwf	ring_buff_peek@data^0,c
   753  001A90  0E00               	movlw	high main@buf
   754  001A92  6E08               	movwf	(ring_buff_peek@data+1)^0,c
   755  001A94  0E01               	movlw	1
   756  001A96  6E09               	movwf	ring_buff_peek@index^0,c
   757  001A98  ECCE  F00F         	call	_ring_buff_peek	;wreg free
   758  001A9C  0E9B               	movlw	low main@ring_buffer
   759  001A9E  6E01               	movwf	ring_buff_num_items@buffer^0,c
   760  001AA0  0E00               	movlw	high main@ring_buffer
   761  001AA2  6E02               	movwf	(ring_buff_num_items@buffer+1)^0,c
   762  001AA4  ECD9  F010         	call	_ring_buff_num_items	;wreg free
   763  001AA8                     
   764                           ;main.c: 115:         for(cnt = 0; ring_buff_read(&ring_buffer, &buf) > 0; cnt++) {
   765  001AA8  0E00               	movlw	0
   766  001AAA  0100               	movlb	0	; () banked
   767  001AAC  6F98               	movwf	main@cnt& (0+255),b
   768  001AAE  EF64  F00D         	goto	l1873
   769  001AB2                     l1869:
   770                           
   771                           ;main.c: 116:             printf("R: %d\n", buf);
   772  001AB2  0E48               	movlw	low STR_1
   773  001AB4  6E5C               	movwf	printf@fmt^0,c
   774  001AB6  0E10               	movlw	high STR_1
   775  001AB8  6E5D               	movwf	(printf@fmt+1)^0,c
   776  001ABA  C09A  F05E         	movff	main@buf,?_printf+2
   777  001ABE  6A5F               	clrf	(?_printf+3)^0,c
   778  001AC0  ECED  F010         	call	_printf	;wreg free
   779  001AC4                     
   780                           ;main.c: 117:         }
   781  001AC4  0100               	movlb	0	; () banked
   782  001AC6  2B98               	incf	main@cnt& (0+255),f,b
   783  001AC8                     l1873:
   784                           
   785                           ; BSR set to: 0
   786  001AC8  0E9B               	movlw	low main@ring_buffer
   787  001ACA  6E05               	movwf	ring_buff_read@buffer^0,c
   788  001ACC  0E00               	movlw	high main@ring_buffer
   789  001ACE  6E06               	movwf	(ring_buff_read@buffer+1)^0,c
   790  001AD0  0E9A               	movlw	low main@buf
   791  001AD2  6E07               	movwf	ring_buff_read@data^0,c
   792  001AD4  0E00               	movlw	high main@buf
   793  001AD6  6E08               	movwf	(ring_buff_read@data+1)^0,c
   794  001AD8  EC65  F00F         	call	_ring_buff_read	;wreg free
   795  001ADC  0900               	iorlw	0
   796  001ADE  A4D8               	btfss	status,2,c
   797  001AE0  EF74  F00D         	goto	u1491
   798  001AE4  EF76  F00D         	goto	u1490
   799  001AE8                     u1491:
   800  001AE8  EF59  F00D         	goto	l1869
   801  001AEC                     u1490:
   802  001AEC                     
   803                           ;main.c: 119:         ring_buff_write_arr(&ring_buffer, "Testovaci zprava pro buffer!", 
      +                          28);
   804  001AEC  0E9B               	movlw	low main@ring_buffer
   805  001AEE  6E0A               	movwf	ring_buff_write_arr@buffer^0,c
   806  001AF0  0E00               	movlw	high main@ring_buffer
   807  001AF2  6E0B               	movwf	(ring_buff_write_arr@buffer+1)^0,c
   808  001AF4  0E24               	movlw	low STR_2
   809  001AF6  6E0C               	movwf	ring_buff_write_arr@data^0,c
   810  001AF8  0E10               	movlw	high STR_2
   811  001AFA  6E0D               	movwf	(ring_buff_write_arr@data+1)^0,c
   812  001AFC  0E1C               	movlw	28
   813  001AFE  6E0E               	movwf	ring_buff_write_arr@size^0,c
   814  001B00  EC42  F010         	call	_ring_buff_write_arr	;wreg free
   815                           
   816                           ;main.c: 121:         while(ring_buff_read(&ring_buffer, &buf) > 0) {
   817  001B04  EF8D  F00D         	goto	l1879
   818  001B08                     l1877:
   819                           
   820                           ;main.c: 122:             printf("R: %c\n", buf);
   821  001B08  0E41               	movlw	low STR_3
   822  001B0A  6E5C               	movwf	printf@fmt^0,c
   823  001B0C  0E10               	movlw	high STR_3
   824  001B0E  6E5D               	movwf	(printf@fmt+1)^0,c
   825  001B10  C09A  F05E         	movff	main@buf,?_printf+2
   826  001B14  6A5F               	clrf	(?_printf+3)^0,c
   827  001B16  ECED  F010         	call	_printf	;wreg free
   828  001B1A                     l1879:
   829                           
   830                           ;main.c: 121:         while(ring_buff_read(&ring_buffer, &buf) > 0) {
   831  001B1A  0E9B               	movlw	low main@ring_buffer
   832  001B1C  6E05               	movwf	ring_buff_read@buffer^0,c
   833  001B1E  0E00               	movlw	high main@ring_buffer
   834  001B20  6E06               	movwf	(ring_buff_read@buffer+1)^0,c
   835  001B22  0E9A               	movlw	low main@buf
   836  001B24  6E07               	movwf	ring_buff_read@data^0,c
   837  001B26  0E00               	movlw	high main@buf
   838  001B28  6E08               	movwf	(ring_buff_read@data+1)^0,c
   839  001B2A  EC65  F00F         	call	_ring_buff_read	;wreg free
   840  001B2E  0900               	iorlw	0
   841  001B30  A4D8               	btfss	status,2,c
   842  001B32  EF9D  F00D         	goto	u1501
   843  001B36  EF9F  F00D         	goto	u1500
   844  001B3A                     u1501:
   845  001B3A  EF84  F00D         	goto	l1877
   846  001B3E                     u1500:
   847  001B3E                     
   848                           ;main.c: 125:         ring_buff_write_arr(&ring_buffer, "Testovaci zprava pro buffer, zn
      +                          ovu", 35);
   849  001B3E  0E9B               	movlw	low main@ring_buffer
   850  001B40  6E0A               	movwf	ring_buff_write_arr@buffer^0,c
   851  001B42  0E00               	movlw	high main@ring_buffer
   852  001B44  6E0B               	movwf	(ring_buff_write_arr@buffer+1)^0,c
   853  001B46  0E01               	movlw	low STR_4
   854  001B48  6E0C               	movwf	ring_buff_write_arr@data^0,c
   855  001B4A  0E10               	movlw	high STR_4
   856  001B4C  6E0D               	movwf	(ring_buff_write_arr@data+1)^0,c
   857  001B4E  0E23               	movlw	35
   858  001B50  6E0E               	movwf	ring_buff_write_arr@size^0,c
   859  001B52  EC42  F010         	call	_ring_buff_write_arr	;wreg free
   860  001B56  0E9B               	movlw	low main@ring_buffer
   861  001B58  6E0A               	movwf	ring_buff_read_arr@buffer^0,c
   862  001B5A  0E00               	movlw	high main@ring_buffer
   863  001B5C  6E0B               	movwf	(ring_buff_read_arr@buffer+1)^0,c
   864  001B5E  0E66               	movlw	low main@buf_arr
   865  001B60  6E0C               	movwf	ring_buff_read_arr@data^0,c
   866  001B62  0E00               	movlw	high main@buf_arr
   867  001B64  6E0D               	movwf	(ring_buff_read_arr@data+1)^0,c
   868  001B66  0E23               	movlw	35
   869  001B68  6E0E               	movwf	ring_buff_read_arr@len^0,c
   870  001B6A  EC2C  F00F         	call	_ring_buff_read_arr	;wreg free
   871  001B6E                     
   872                           ;main.c: 128:         printf("%s", buf_arr);
   873  001B6E  0E4F               	movlw	low STR_5
   874  001B70  6E5C               	movwf	printf@fmt^0,c
   875  001B72  0E10               	movlw	high STR_5
   876  001B74  6E5D               	movwf	(printf@fmt+1)^0,c
   877  001B76  0E66               	movlw	low main@buf_arr
   878  001B78  6E5E               	movwf	(?_printf+2)^0,c
   879  001B7A  0E00               	movlw	high main@buf_arr
   880  001B7C  6E5F               	movwf	(?_printf+3)^0,c
   881  001B7E  ECED  F010         	call	_printf	;wreg free
   882  001B82                     
   883                           ;main.c: 129:        _delay((unsigned long)((1000)*(32E6/4000.0)));
   884  001B82  0E29               	movlw	41
   885  001B84  0100               	movlb	0	; () banked
   886  001B86  6F65               	movwf	(??_main+1)& (0+255),b
   887  001B88  0E96               	movlw	150
   888  001B8A  6F64               	movwf	??_main& (0+255),b
   889  001B8C  0E7F               	movlw	127
   890  001B8E                     u1517:
   891  001B8E  2EE8               	decfsz	wreg,f,c
   892  001B90  D7FE               	bra	u1517
   893  001B92  2F64               	decfsz	??_main& (0+255),f,b
   894  001B94  D7FC               	bra	u1517
   895  001B96  2F65               	decfsz	(??_main+1)& (0+255),f,b
   896  001B98  D7FA               	bra	u1517
   897  001B9A  EF2D  F00D         	goto	l1851
   898  001B9E  EF00  F000         	goto	start
   899  001BA2                     __end_of_main:
   900                           	callstack 0
   901                           
   902 ;; *************** function _ring_buff_write_arr *****************
   903 ;; Defined at:
   904 ;;		line 34 in file "ring_buff.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;  buffer          2    9[COMRAM] const PTR struct ring_bu
   907 ;;		 -> main@ring_buffer(66), 
   908 ;;  data            2   11[COMRAM] PTR const unsigned char 
   909 ;;		 -> STR_4(35), STR_2(29), 
   910 ;;  size            1   13[COMRAM] unsigned char 
   911 ;; Auto vars:     Size  Location     Type
   912 ;;  i               1   16[COMRAM] unsigned char 
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      void 
   915 ;; Registers used:
   916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   922 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   924 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   925 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   926 ;;Total ram usage:        8 bytes
   927 ;; Hardware stack levels used:    1
   928 ;; Hardware stack levels required when called:    2
   929 ;; This function calls:
   930 ;;		_ring_buff_write
   931 ;; This function is called by:
   932 ;;		_main
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           	psect	text1
   937  002084                     __ptext1:
   938                           	callstack 0
   939  002084                     _ring_buff_write_arr:
   940                           	callstack 28
   941  002084                     
   942                           ;ring_buff.c: 36:   ring_buffer_size_t i;;ring_buff.c: 37:   for(i = 0; i < size; i++) {
   943  002084  0E00               	movlw	0
   944  002086  6E11               	movwf	ring_buff_write_arr@i^0,c
   945  002088  EF5A  F010         	goto	l1825
   946  00208C                     l1821:
   947                           
   948                           ;ring_buff.c: 38:     ring_buff_write(buffer, data[i]);
   949  00208C  C00A  F006         	movff	ring_buff_write_arr@buffer,ring_buff_write@buffer
   950  002090  C00B  F007         	movff	ring_buff_write_arr@buffer+1,ring_buff_write@buffer+1
   951  002094  5011               	movf	ring_buff_write_arr@i^0,w,c
   952  002096  240C               	addwf	ring_buff_write_arr@data^0,w,c
   953  002098  6E0F               	movwf	??_ring_buff_write_arr^0,c
   954  00209A  0E00               	movlw	0
   955  00209C  200D               	addwfc	(ring_buff_write_arr@data+1)^0,w,c
   956  00209E  6E10               	movwf	(??_ring_buff_write_arr+1)^0,c
   957  0020A0  C00F  FFF6         	movff	??_ring_buff_write_arr,tblptrl
   958  0020A4  C010  FFF7         	movff	??_ring_buff_write_arr+1,tblptrh
   959  0020A8                     	if	0	;tblptru may be non-zero
   960  0020A8                     	endif
   961  0020A8                     	if	0	;tblptru may be non-zero
   962  0020A8                     	endif
   963  0020A8  0008               	tblrd		*
   964  0020AA  CFF5 F008          	movff	tablat,ring_buff_write@data
   965  0020AE  ECEB  F00E         	call	_ring_buff_write	;wreg free
   966  0020B2                     
   967                           ;ring_buff.c: 39:   }
   968  0020B2  2A11               	incf	ring_buff_write_arr@i^0,f,c
   969  0020B4                     l1825:
   970  0020B4  500E               	movf	ring_buff_write_arr@size^0,w,c
   971  0020B6  5C11               	subwf	ring_buff_write_arr@i^0,w,c
   972  0020B8  A0D8               	btfss	status,0,c
   973  0020BA  EF61  F010         	goto	u1441
   974  0020BE  EF63  F010         	goto	u1440
   975  0020C2                     u1441:
   976  0020C2  EF46  F010         	goto	l1821
   977  0020C6                     u1440:
   978  0020C6  0012               	return		;funcret
   979  0020C8                     __end_of_ring_buff_write_arr:
   980                           	callstack 0
   981                           
   982 ;; *************** function _ring_buff_write *****************
   983 ;; Defined at:
   984 ;;		line 24 in file "ring_buff.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;  buffer          2    5[COMRAM] const PTR struct ring_bu
   987 ;;		 -> main@ring_buffer(66), 
   988 ;;  data            1    7[COMRAM] unsigned char 
   989 ;; Auto vars:     Size  Location     Type
   990 ;;		None
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1000 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1002 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1003 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1004 ;;Total ram usage:        4 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; Hardware stack levels required when called:    1
  1007 ;; This function calls:
  1008 ;;		_ring_buff_is_full
  1009 ;; This function is called by:
  1010 ;;		_main
  1011 ;;		_ring_buff_write_arr
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           	psect	text2
  1016  001DD6                     __ptext2:
  1017                           	callstack 0
  1018  001DD6                     _ring_buff_write:
  1019                           	callstack 28
  1020  001DD6                     
  1021                           ;ring_buff.c: 26:   if(ring_buff_is_full(buffer)) {
  1022  001DD6  C006  F001         	movff	ring_buff_write@buffer,ring_buff_is_full@buffer
  1023  001DDA  C007  F002         	movff	ring_buff_write@buffer+1,ring_buff_is_full@buffer+1
  1024  001DDE  ECF9  F00F         	call	_ring_buff_is_full	;wreg free
  1025  001DE2  0900               	iorlw	0
  1026  001DE4  B4D8               	btfsc	status,2,c
  1027  001DE6  EFF7  F00E         	goto	u1401
  1028  001DEA  EFF9  F00E         	goto	u1400
  1029  001DEE                     u1401:
  1030  001DEE  EF0A  F00F         	goto	l1753
  1031  001DF2                     u1400:
  1032  001DF2                     
  1033                           ;ring_buff.c: 27:     buffer->tail_index = ((buffer->tail_index + 1) & (64 -1));
  1034  001DF2  EE20 F040          	lfsr	2,64
  1035  001DF6  5006               	movf	ring_buff_write@buffer^0,w,c
  1036  001DF8  26D9               	addwf	fsr2l,f,c
  1037  001DFA  5007               	movf	(ring_buff_write@buffer+1)^0,w,c
  1038  001DFC  22DA               	addwfc	fsr2h,f,c
  1039  001DFE  EE10 F040          	lfsr	1,64
  1040  001E02  5006               	movf	ring_buff_write@buffer^0,w,c
  1041  001E04  26E1               	addwf	fsr1l,f,c
  1042  001E06  5007               	movf	(ring_buff_write@buffer+1)^0,w,c
  1043  001E08  22E2               	addwfc	fsr1h,f,c
  1044  001E0A  50E7               	movf	indf1,w,c
  1045  001E0C  6E09               	movwf	??_ring_buff_write^0,c
  1046  001E0E  2809               	incf	??_ring_buff_write^0,w,c
  1047  001E10  0B3F               	andlw	63
  1048  001E12  6EDF               	movwf	indf2,c
  1049  001E14                     l1753:
  1050                           
  1051                           ;ring_buff.c: 30:   buffer->buffer[buffer->head_index] = data;
  1052  001E14  EE20 F041          	lfsr	2,65
  1053  001E18  5006               	movf	ring_buff_write@buffer^0,w,c
  1054  001E1A  26D9               	addwf	fsr2l,f,c
  1055  001E1C  5007               	movf	(ring_buff_write@buffer+1)^0,w,c
  1056  001E1E  22DA               	addwfc	fsr2h,f,c
  1057  001E20  50DF               	movf	indf2,w,c
  1058  001E22  6E09               	movwf	??_ring_buff_write^0,c
  1059  001E24  5009               	movf	??_ring_buff_write^0,w,c
  1060  001E26  2406               	addwf	ring_buff_write@buffer^0,w,c
  1061  001E28  6ED9               	movwf	fsr2l,c
  1062  001E2A  0E00               	movlw	0
  1063  001E2C  2007               	addwfc	(ring_buff_write@buffer+1)^0,w,c
  1064  001E2E  6EDA               	movwf	fsr2h,c
  1065  001E30  C008  FFDF         	movff	ring_buff_write@data,indf2
  1066  001E34                     
  1067                           ;ring_buff.c: 31:   buffer->head_index = ((buffer->head_index + 1) & (64 -1));
  1068  001E34  EE20 F041          	lfsr	2,65
  1069  001E38  5006               	movf	ring_buff_write@buffer^0,w,c
  1070  001E3A  26D9               	addwf	fsr2l,f,c
  1071  001E3C  5007               	movf	(ring_buff_write@buffer+1)^0,w,c
  1072  001E3E  22DA               	addwfc	fsr2h,f,c
  1073  001E40  EE10 F041          	lfsr	1,65
  1074  001E44  5006               	movf	ring_buff_write@buffer^0,w,c
  1075  001E46  26E1               	addwf	fsr1l,f,c
  1076  001E48  5007               	movf	(ring_buff_write@buffer+1)^0,w,c
  1077  001E4A  22E2               	addwfc	fsr1h,f,c
  1078  001E4C  50E7               	movf	indf1,w,c
  1079  001E4E  6E09               	movwf	??_ring_buff_write^0,c
  1080  001E50  2809               	incf	??_ring_buff_write^0,w,c
  1081  001E52  0B3F               	andlw	63
  1082  001E54  6EDF               	movwf	indf2,c
  1083  001E56  0012               	return		;funcret
  1084  001E58                     __end_of_ring_buff_write:
  1085                           	callstack 0
  1086                           
  1087 ;; *************** function _ring_buff_is_full *****************
  1088 ;; Defined at:
  1089 ;;		line 14 in file "ring_buff.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;  buffer          2    0[COMRAM] const PTR struct ring_bu
  1092 ;;		 -> main@ring_buffer(66), 
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;		None
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      unsigned char 
  1097 ;; Registers used:
  1098 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1104 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1106 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1107 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1108 ;;Total ram usage:        5 bytes
  1109 ;; Hardware stack levels used:    1
  1110 ;; This function calls:
  1111 ;;		Nothing
  1112 ;; This function is called by:
  1113 ;;		_ring_buff_write
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           	psect	text3
  1118  001FF2                     __ptext3:
  1119                           	callstack 0
  1120  001FF2                     _ring_buff_is_full:
  1121                           	callstack 28
  1122  001FF2                     
  1123                           ;ring_buff.c: 15:   return ((buffer->head_index - buffer->tail_index) & (64 -1)) == (64 
      +                          -1);
  1124  001FF2  EE20 F041          	lfsr	2,65
  1125  001FF6  5001               	movf	ring_buff_is_full@buffer^0,w,c
  1126  001FF8  26D9               	addwf	fsr2l,f,c
  1127  001FFA  5002               	movf	(ring_buff_is_full@buffer+1)^0,w,c
  1128  001FFC  22DA               	addwfc	fsr2h,f,c
  1129  001FFE  50DF               	movf	indf2,w,c
  1130  002000  6E03               	movwf	??_ring_buff_is_full^0,c
  1131  002002  6A04               	clrf	(??_ring_buff_is_full+1)^0,c
  1132  002004  EE20 F040          	lfsr	2,64
  1133  002008  5001               	movf	ring_buff_is_full@buffer^0,w,c
  1134  00200A  26D9               	addwf	fsr2l,f,c
  1135  00200C  5002               	movf	(ring_buff_is_full@buffer+1)^0,w,c
  1136  00200E  22DA               	addwfc	fsr2h,f,c
  1137  002010  50DF               	movf	indf2,w,c
  1138  002012  6E05               	movwf	(??_ring_buff_is_full+2)^0,c
  1139  002014  5005               	movf	(??_ring_buff_is_full+2)^0,w,c
  1140  002016  5E03               	subwf	??_ring_buff_is_full^0,f,c
  1141  002018  0E00               	movlw	0
  1142  00201A  5A04               	subwfb	(??_ring_buff_is_full+1)^0,f,c
  1143  00201C  0E3F               	movlw	63
  1144  00201E  1603               	andwf	??_ring_buff_is_full^0,f,c
  1145  002020  0E00               	movlw	0
  1146  002022  1604               	andwf	(??_ring_buff_is_full+1)^0,f,c
  1147  002024  0E3F               	movlw	63
  1148  002026  1803               	xorwf	??_ring_buff_is_full^0,w,c
  1149  002028  1004               	iorwf	(??_ring_buff_is_full+1)^0,w,c
  1150  00202A  B4D8               	btfsc	status,2,c
  1151  00202C  EF1A  F010         	goto	u1321
  1152  002030  EF1D  F010         	goto	u1320
  1153  002034                     u1321:
  1154  002034  0E01               	movlw	1
  1155  002036  EF1E  F010         	goto	u1330
  1156  00203A                     u1320:
  1157  00203A  0E00               	movlw	0
  1158  00203C                     u1330:
  1159  00203C  0012               	return		;funcret
  1160  00203E                     __end_of_ring_buff_is_full:
  1161                           	callstack 0
  1162                           
  1163 ;; *************** function _ring_buff_read_arr *****************
  1164 ;; Defined at:
  1165 ;;		line 53 in file "ring_buff.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;  buffer          2    9[COMRAM] const PTR struct ring_bu
  1168 ;;		 -> main@ring_buffer(66), 
  1169 ;;  data            2   11[COMRAM] PTR unsigned char 
  1170 ;;		 -> main@buf_arr(50), 
  1171 ;;  len             1   13[COMRAM] unsigned char 
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  data_ptr        2   14[COMRAM] PTR unsigned char 
  1174 ;;		 -> main@buf_arr(50), 
  1175 ;;  cnt             1   16[COMRAM] unsigned char 
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  1    wreg      unsigned char 
  1178 ;; Registers used:
  1179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1185 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1189 ;;Total ram usage:        8 bytes
  1190 ;; Hardware stack levels used:    1
  1191 ;; Hardware stack levels required when called:    2
  1192 ;; This function calls:
  1193 ;;		_ring_buff_is_empty
  1194 ;;		_ring_buff_read
  1195 ;; This function is called by:
  1196 ;;		_main
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           	psect	text4
  1201  001E58                     __ptext4:
  1202                           	callstack 0
  1203  001E58                     _ring_buff_read_arr:
  1204                           	callstack 28
  1205  001E58                     
  1206                           ;ring_buff.c: 54:   if(ring_buff_is_empty(buffer)) {
  1207  001E58  C00A  F001         	movff	ring_buff_read_arr@buffer,ring_buff_is_empty@buffer
  1208  001E5C  C00B  F002         	movff	ring_buff_read_arr@buffer+1,ring_buff_is_empty@buffer+1
  1209  001E60  ECC1  F010         	call	_ring_buff_is_empty	;wreg free
  1210  001E64  0900               	iorlw	0
  1211  001E66  B4D8               	btfsc	status,2,c
  1212  001E68  EF38  F00F         	goto	u1451
  1213  001E6C  EF3A  F00F         	goto	u1450
  1214  001E70                     u1451:
  1215  001E70  EF3D  F00F         	goto	l1833
  1216  001E74                     u1450:
  1217  001E74                     
  1218                           ;ring_buff.c: 56:     return 0;
  1219  001E74  0E00               	movlw	0
  1220  001E76  EF64  F00F         	goto	l91
  1221  001E7A                     l1833:
  1222                           
  1223                           ;ring_buff.c: 59:   char *data_ptr = data;
  1224  001E7A  C00C  F00F         	movff	ring_buff_read_arr@data,ring_buff_read_arr@data_ptr
  1225  001E7E  C00D  F010         	movff	ring_buff_read_arr@data+1,ring_buff_read_arr@data_ptr+1
  1226  001E82                     
  1227                           ;ring_buff.c: 60:   ring_buffer_size_t cnt = 0;
  1228  001E82  0E00               	movlw	0
  1229  001E84  6E11               	movwf	ring_buff_read_arr@cnt^0,c
  1230                           
  1231                           ;ring_buff.c: 61:   while((cnt < len) && ring_buff_read(buffer, data_ptr)) {
  1232  001E86  EF48  F00F         	goto	l1839
  1233  001E8A                     l1837:
  1234                           
  1235                           ;ring_buff.c: 62:     cnt++;
  1236  001E8A  2A11               	incf	ring_buff_read_arr@cnt^0,f,c
  1237                           
  1238                           ;ring_buff.c: 63:     data_ptr++;
  1239  001E8C  4A0F               	infsnz	ring_buff_read_arr@data_ptr^0,f,c
  1240  001E8E  2A10               	incf	(ring_buff_read_arr@data_ptr+1)^0,f,c
  1241  001E90                     l1839:
  1242                           
  1243                           ;ring_buff.c: 61:   while((cnt < len) && ring_buff_read(buffer, data_ptr)) {
  1244  001E90  500E               	movf	ring_buff_read_arr@len^0,w,c
  1245  001E92  5C11               	subwf	ring_buff_read_arr@cnt^0,w,c
  1246  001E94  B0D8               	btfsc	status,0,c
  1247  001E96  EF4F  F00F         	goto	u1461
  1248  001E9A  EF51  F00F         	goto	u1460
  1249  001E9E                     u1461:
  1250  001E9E  EF63  F00F         	goto	l1843
  1251  001EA2                     u1460:
  1252  001EA2  C00A  F005         	movff	ring_buff_read_arr@buffer,ring_buff_read@buffer
  1253  001EA6  C00B  F006         	movff	ring_buff_read_arr@buffer+1,ring_buff_read@buffer+1
  1254  001EAA  C00F  F007         	movff	ring_buff_read_arr@data_ptr,ring_buff_read@data
  1255  001EAE  C010  F008         	movff	ring_buff_read_arr@data_ptr+1,ring_buff_read@data+1
  1256  001EB2  EC65  F00F         	call	_ring_buff_read	;wreg free
  1257  001EB6  0900               	iorlw	0
  1258  001EB8  A4D8               	btfss	status,2,c
  1259  001EBA  EF61  F00F         	goto	u1471
  1260  001EBE  EF63  F00F         	goto	u1470
  1261  001EC2                     u1471:
  1262  001EC2  EF45  F00F         	goto	l1837
  1263  001EC6                     u1470:
  1264  001EC6                     l1843:
  1265                           
  1266                           ;ring_buff.c: 65:   return cnt;
  1267  001EC6  5011               	movf	ring_buff_read_arr@cnt^0,w,c
  1268  001EC8                     l91:
  1269  001EC8  0012               	return		;funcret
  1270  001ECA                     __end_of_ring_buff_read_arr:
  1271                           	callstack 0
  1272                           
  1273 ;; *************** function _ring_buff_read *****************
  1274 ;; Defined at:
  1275 ;;		line 42 in file "ring_buff.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;  buffer          2    4[COMRAM] const PTR struct ring_bu
  1278 ;;		 -> main@ring_buffer(66), 
  1279 ;;  data            2    6[COMRAM] PTR unsigned char 
  1280 ;;		 -> main@buf_arr(50), main@buf(1), 
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;		None
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      unsigned char 
  1285 ;; Registers used:
  1286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1292 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1294 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;Total ram usage:        5 bytes
  1297 ;; Hardware stack levels used:    1
  1298 ;; Hardware stack levels required when called:    1
  1299 ;; This function calls:
  1300 ;;		_ring_buff_is_empty
  1301 ;; This function is called by:
  1302 ;;		_main
  1303 ;;		_ring_buff_read_arr
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           	psect	text5
  1308  001ECA                     __ptext5:
  1309                           	callstack 0
  1310  001ECA                     _ring_buff_read:
  1311                           	callstack 28
  1312  001ECA                     
  1313                           ;ring_buff.c: 43:   if(ring_buff_is_empty(buffer)) {
  1314  001ECA  C005  F001         	movff	ring_buff_read@buffer,ring_buff_is_empty@buffer
  1315  001ECE  C006  F002         	movff	ring_buff_read@buffer+1,ring_buff_is_empty@buffer+1
  1316  001ED2  ECC1  F010         	call	_ring_buff_is_empty	;wreg free
  1317  001ED6  0900               	iorlw	0
  1318  001ED8  B4D8               	btfsc	status,2,c
  1319  001EDA  EF71  F00F         	goto	u1411
  1320  001EDE  EF73  F00F         	goto	u1410
  1321  001EE2                     u1411:
  1322  001EE2  EF76  F00F         	goto	l1767
  1323  001EE6                     u1410:
  1324  001EE6                     
  1325                           ;ring_buff.c: 45:     return 0;
  1326  001EE6  0E00               	movlw	0
  1327  001EE8  EF9C  F00F         	goto	l87
  1328  001EEC                     l1767:
  1329                           
  1330                           ;ring_buff.c: 48:   *data = buffer->buffer[buffer->tail_index];
  1331  001EEC  EE20 F040          	lfsr	2,64
  1332  001EF0  5005               	movf	ring_buff_read@buffer^0,w,c
  1333  001EF2  26D9               	addwf	fsr2l,f,c
  1334  001EF4  5006               	movf	(ring_buff_read@buffer+1)^0,w,c
  1335  001EF6  22DA               	addwfc	fsr2h,f,c
  1336  001EF8  50DF               	movf	indf2,w,c
  1337  001EFA  6E09               	movwf	??_ring_buff_read^0,c
  1338  001EFC  5009               	movf	??_ring_buff_read^0,w,c
  1339  001EFE  2405               	addwf	ring_buff_read@buffer^0,w,c
  1340  001F00  6ED9               	movwf	fsr2l,c
  1341  001F02  0E00               	movlw	0
  1342  001F04  2006               	addwfc	(ring_buff_read@buffer+1)^0,w,c
  1343  001F06  6EDA               	movwf	fsr2h,c
  1344  001F08  C007  FFE1         	movff	ring_buff_read@data,fsr1l
  1345  001F0C  C008  FFE2         	movff	ring_buff_read@data+1,fsr1h
  1346  001F10  CFDF FFE7          	movff	indf2,indf1
  1347                           
  1348                           ;ring_buff.c: 49:   buffer->tail_index = ((buffer->tail_index + 1) & (64 -1));
  1349  001F14  EE20 F040          	lfsr	2,64
  1350  001F18  5005               	movf	ring_buff_read@buffer^0,w,c
  1351  001F1A  26D9               	addwf	fsr2l,f,c
  1352  001F1C  5006               	movf	(ring_buff_read@buffer+1)^0,w,c
  1353  001F1E  22DA               	addwfc	fsr2h,f,c
  1354  001F20  EE10 F040          	lfsr	1,64
  1355  001F24  5005               	movf	ring_buff_read@buffer^0,w,c
  1356  001F26  26E1               	addwf	fsr1l,f,c
  1357  001F28  5006               	movf	(ring_buff_read@buffer+1)^0,w,c
  1358  001F2A  22E2               	addwfc	fsr1h,f,c
  1359  001F2C  50E7               	movf	indf1,w,c
  1360  001F2E  6E09               	movwf	??_ring_buff_read^0,c
  1361  001F30  2809               	incf	??_ring_buff_read^0,w,c
  1362  001F32  0B3F               	andlw	63
  1363  001F34  6EDF               	movwf	indf2,c
  1364  001F36                     
  1365                           ;ring_buff.c: 50:   return 1;
  1366  001F36  0E01               	movlw	1
  1367  001F38                     l87:
  1368  001F38  0012               	return		;funcret
  1369  001F3A                     __end_of_ring_buff_read:
  1370                           	callstack 0
  1371                           
  1372 ;; *************** function _ring_buff_is_empty *****************
  1373 ;; Defined at:
  1374 ;;		line 9 in file "ring_buff.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;  buffer          2    0[COMRAM] const PTR struct ring_bu
  1377 ;;		 -> main@ring_buffer(66), 
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;		None
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  1    wreg      unsigned char 
  1382 ;; Registers used:
  1383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1389 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;Total ram usage:        4 bytes
  1394 ;; Hardware stack levels used:    1
  1395 ;; This function calls:
  1396 ;;		Nothing
  1397 ;; This function is called by:
  1398 ;;		_ring_buff_read
  1399 ;;		_ring_buff_read_arr
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           	psect	text6
  1404  002182                     __ptext6:
  1405                           	callstack 0
  1406  002182                     _ring_buff_is_empty:
  1407                           	callstack 28
  1408  002182                     
  1409                           ;ring_buff.c: 10:   return (buffer->head_index == buffer->tail_index);
  1410  002182  EE20 F040          	lfsr	2,64
  1411  002186  5001               	movf	ring_buff_is_empty@buffer^0,w,c
  1412  002188  26D9               	addwf	fsr2l,f,c
  1413  00218A  5002               	movf	(ring_buff_is_empty@buffer+1)^0,w,c
  1414  00218C  22DA               	addwfc	fsr2h,f,c
  1415  00218E  EE10 F041          	lfsr	1,65
  1416  002192  5001               	movf	ring_buff_is_empty@buffer^0,w,c
  1417  002194  26E1               	addwf	fsr1l,f,c
  1418  002196  5002               	movf	(ring_buff_is_empty@buffer+1)^0,w,c
  1419  002198  22E2               	addwfc	fsr1h,f,c
  1420  00219A  50DE               	movf	postinc2,w,c
  1421  00219C  18E6               	xorwf	postinc1,w,c
  1422  00219E  B4D8               	btfsc	status,2,c
  1423  0021A0  EFD4  F010         	goto	u1301
  1424  0021A4  EFD7  F010         	goto	u1300
  1425  0021A8                     u1301:
  1426  0021A8  0E01               	movlw	1
  1427  0021AA  EFD8  F010         	goto	u1310
  1428  0021AE                     u1300:
  1429  0021AE  0E00               	movlw	0
  1430  0021B0                     u1310:
  1431  0021B0  0012               	return		;funcret
  1432  0021B2                     __end_of_ring_buff_is_empty:
  1433                           	callstack 0
  1434                           
  1435 ;; *************** function _ring_buff_peek *****************
  1436 ;; Defined at:
  1437 ;;		line 68 in file "ring_buff.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;  buffer          2    4[COMRAM] const PTR struct ring_bu
  1440 ;;		 -> main@ring_buffer(66), 
  1441 ;;  data            2    6[COMRAM] PTR unsigned char 
  1442 ;;		 -> main@buf(1), 
  1443 ;;  index           1    8[COMRAM] unsigned char 
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;  data_index      1   10[COMRAM] unsigned char 
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  1    wreg      unsigned char 
  1448 ;; Registers used:
  1449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1455 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1456 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1457 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1458 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1459 ;;Total ram usage:        7 bytes
  1460 ;; Hardware stack levels used:    1
  1461 ;; Hardware stack levels required when called:    1
  1462 ;; This function calls:
  1463 ;;		_ring_buff_num_items
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text7
  1470  001F9C                     __ptext7:
  1471                           	callstack 0
  1472  001F9C                     _ring_buff_peek:
  1473                           	callstack 29
  1474  001F9C                     
  1475                           ;ring_buff.c: 69:   if(index >= ring_buff_num_items(buffer)) {
  1476  001F9C  C005  F001         	movff	ring_buff_peek@buffer,ring_buff_num_items@buffer
  1477  001FA0  C006  F002         	movff	ring_buff_peek@buffer+1,ring_buff_num_items@buffer+1
  1478  001FA4  ECD9  F010         	call	_ring_buff_num_items	;wreg free
  1479  001FA8  6E0A               	movwf	??_ring_buff_peek^0,c
  1480  001FAA  500A               	movf	??_ring_buff_peek^0,w,c
  1481  001FAC  5C09               	subwf	ring_buff_peek@index^0,w,c
  1482  001FAE  A0D8               	btfss	status,0,c
  1483  001FB0  EFDC  F00F         	goto	u1431
  1484  001FB4  EFDE  F00F         	goto	u1430
  1485  001FB8                     u1431:
  1486  001FB8  EFE1  F00F         	goto	l1805
  1487  001FBC                     u1430:
  1488  001FBC                     
  1489                           ;ring_buff.c: 70:     return 0;
  1490  001FBC  0E00               	movlw	0
  1491  001FBE  EFF8  F00F         	goto	l100
  1492  001FC2                     l1805:
  1493                           
  1494                           ;ring_buff.c: 73:   ring_buffer_size_t data_index = ((buffer->tail_index + index) & (64 
      +                          -1));
  1495  001FC2  EE20 F040          	lfsr	2,64
  1496  001FC6  5005               	movf	ring_buff_peek@buffer^0,w,c
  1497  001FC8  26D9               	addwf	fsr2l,f,c
  1498  001FCA  5006               	movf	(ring_buff_peek@buffer+1)^0,w,c
  1499  001FCC  22DA               	addwfc	fsr2h,f,c
  1500  001FCE  50DF               	movf	indf2,w,c
  1501  001FD0  2409               	addwf	ring_buff_peek@index^0,w,c
  1502  001FD2  0B3F               	andlw	63
  1503  001FD4  6E0B               	movwf	ring_buff_peek@data_index^0,c
  1504  001FD6                     
  1505                           ;ring_buff.c: 74:   *data = buffer->buffer[data_index];
  1506  001FD6  500B               	movf	ring_buff_peek@data_index^0,w,c
  1507  001FD8  2405               	addwf	ring_buff_peek@buffer^0,w,c
  1508  001FDA  6ED9               	movwf	fsr2l,c
  1509  001FDC  0E00               	movlw	0
  1510  001FDE  2006               	addwfc	(ring_buff_peek@buffer+1)^0,w,c
  1511  001FE0  6EDA               	movwf	fsr2h,c
  1512  001FE2  C007  FFE1         	movff	ring_buff_peek@data,fsr1l
  1513  001FE6  C008  FFE2         	movff	ring_buff_peek@data+1,fsr1h
  1514  001FEA  CFDF FFE7          	movff	indf2,indf1
  1515  001FEE                     
  1516                           ;ring_buff.c: 75:   return 1;
  1517  001FEE  0E01               	movlw	1
  1518  001FF0                     l100:
  1519  001FF0  0012               	return		;funcret
  1520  001FF2                     __end_of_ring_buff_peek:
  1521                           	callstack 0
  1522                           
  1523 ;; *************** function _ring_buff_num_items *****************
  1524 ;; Defined at:
  1525 ;;		line 19 in file "ring_buff.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  buffer          2    0[COMRAM] const PTR struct ring_bu
  1528 ;;		 -> main@ring_buffer(66), 
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;		None
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      unsigned char 
  1533 ;; Registers used:
  1534 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1540 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1542 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1543 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1544 ;;Total ram usage:        4 bytes
  1545 ;; Hardware stack levels used:    1
  1546 ;; This function calls:
  1547 ;;		Nothing
  1548 ;; This function is called by:
  1549 ;;		_main
  1550 ;;		_ring_buff_peek
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553                           
  1554                           	psect	text8
  1555  0021B2                     __ptext8:
  1556                           	callstack 0
  1557  0021B2                     _ring_buff_num_items:
  1558                           	callstack 29
  1559  0021B2                     
  1560                           ;ring_buff.c: 20:   return ((buffer->head_index - buffer->tail_index) & (64 -1));
  1561  0021B2  EE20 F040          	lfsr	2,64
  1562  0021B6  5001               	movf	ring_buff_num_items@buffer^0,w,c
  1563  0021B8  26D9               	addwf	fsr2l,f,c
  1564  0021BA  5002               	movf	(ring_buff_num_items@buffer+1)^0,w,c
  1565  0021BC  22DA               	addwfc	fsr2h,f,c
  1566  0021BE  50DF               	movf	indf2,w,c
  1567  0021C0  6E03               	movwf	??_ring_buff_num_items^0,c
  1568  0021C2  EE20 F041          	lfsr	2,65
  1569  0021C6  5001               	movf	ring_buff_num_items@buffer^0,w,c
  1570  0021C8  26D9               	addwf	fsr2l,f,c
  1571  0021CA  5002               	movf	(ring_buff_num_items@buffer+1)^0,w,c
  1572  0021CC  22DA               	addwfc	fsr2h,f,c
  1573  0021CE  50DF               	movf	indf2,w,c
  1574  0021D0  6E04               	movwf	(??_ring_buff_num_items+1)^0,c
  1575  0021D2  5003               	movf	??_ring_buff_num_items^0,w,c
  1576  0021D4  5C04               	subwf	(??_ring_buff_num_items+1)^0,w,c
  1577  0021D6  0B3F               	andlw	63
  1578  0021D8  0012               	return		;funcret
  1579  0021DA                     __end_of_ring_buff_num_items:
  1580                           	callstack 0
  1581                           
  1582 ;; *************** function _ring_buff_init *****************
  1583 ;; Defined at:
  1584 ;;		line 3 in file "ring_buff.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;  buffer          2    0[COMRAM] const PTR struct ring_bu
  1587 ;;		 -> main@ring_buffer(66), 
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;		None
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      void 
  1592 ;; Registers used:
  1593 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1599 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1602 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1603 ;;Total ram usage:        2 bytes
  1604 ;; Hardware stack levels used:    1
  1605 ;; This function calls:
  1606 ;;		Nothing
  1607 ;; This function is called by:
  1608 ;;		_main
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           	psect	text9
  1613  002202                     __ptext9:
  1614                           	callstack 0
  1615  002202                     _ring_buff_init:
  1616                           	callstack 30
  1617  002202                     
  1618                           ;ring_buff.c: 4:   buffer->tail_index = 0;
  1619  002202  EE20 F040          	lfsr	2,64
  1620  002206  5001               	movf	ring_buff_init@buffer^0,w,c
  1621  002208  26D9               	addwf	fsr2l,f,c
  1622  00220A  5002               	movf	(ring_buff_init@buffer+1)^0,w,c
  1623  00220C  22DA               	addwfc	fsr2h,f,c
  1624  00220E  0E00               	movlw	0
  1625  002210  6EDF               	movwf	indf2,c
  1626                           
  1627                           ;ring_buff.c: 5:   buffer->head_index = 0;
  1628  002212  EE20 F041          	lfsr	2,65
  1629  002216  5001               	movf	ring_buff_init@buffer^0,w,c
  1630  002218  26D9               	addwf	fsr2l,f,c
  1631  00221A  5002               	movf	(ring_buff_init@buffer+1)^0,w,c
  1632  00221C  22DA               	addwfc	fsr2h,f,c
  1633  00221E  0E00               	movlw	0
  1634  002220  6EDF               	movwf	indf2,c
  1635  002222  0012               	return		;funcret
  1636  002224                     __end_of_ring_buff_init:
  1637                           	callstack 0
  1638                           
  1639 ;; *************** function _printf *****************
  1640 ;; Defined at:
  1641 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\printf.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;  fmt             2   91[COMRAM] PTR const unsigned char 
  1644 ;;		 -> STR_5(3), STR_3(7), STR_1(7), 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  ap              2    2[BANK0 ] PTR void [1]
  1647 ;;		 -> ?_printf(2), 
  1648 ;;  ret             2    0        int 
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  2   91[COMRAM] int 
  1651 ;; Registers used:
  1652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1658 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1659 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1661 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1662 ;;Total ram usage:        8 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; Hardware stack levels required when called:    7
  1665 ;; This function calls:
  1666 ;;		_vfprintf
  1667 ;; This function is called by:
  1668 ;;		_main
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text10
  1673  0021DA                     __ptext10:
  1674                           	callstack 0
  1675  0021DA                     _printf:
  1676                           	callstack 23
  1677  0021DA  0E5E               	movlw	low (?_printf+2)
  1678  0021DC  0100               	movlb	0	; () banked
  1679  0021DE  6F62               	movwf	printf@ap& (0+255),b
  1680  0021E0  0E00               	movlw	high (?_printf+2)
  1681  0021E2  6F63               	movwf	(printf@ap+1)& (0+255),b
  1682  0021E4                     
  1683                           ; BSR set to: 0
  1684  0021E4  0E00               	movlw	0
  1685  0021E6  6E54               	movwf	vfprintf@fp^0,c
  1686  0021E8  0E00               	movlw	0
  1687  0021EA  6E55               	movwf	(vfprintf@fp+1)^0,c
  1688  0021EC  C05C  F056         	movff	printf@fmt,vfprintf@fmt
  1689  0021F0  C05D  F057         	movff	printf@fmt+1,vfprintf@fmt+1
  1690  0021F4  0E62               	movlw	low printf@ap
  1691  0021F6  6E58               	movwf	vfprintf@ap^0,c
  1692  0021F8  0E00               	movlw	high printf@ap
  1693  0021FA  6E59               	movwf	(vfprintf@ap+1)^0,c
  1694  0021FC  EC9D  F00F         	call	_vfprintf	;wreg free
  1695  002200  0012               	return		;funcret
  1696  002202                     __end_of_printf:
  1697                           	callstack 0
  1698                           
  1699 ;; *************** function _vfprintf *****************
  1700 ;; Defined at:
  1701 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
  1704 ;;		 -> NULL(0), 
  1705 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
  1706 ;;		 -> STR_5(3), STR_3(7), STR_1(7), 
  1707 ;;  ap              2   87[COMRAM] PTR PTR void 
  1708 ;;		 -> printf@ap(2), 
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
  1711 ;;		 -> STR_5(3), STR_3(7), STR_1(7), 
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  2   83[COMRAM] int 
  1714 ;; Registers used:
  1715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1721 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1722 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1724 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1725 ;;Total ram usage:        8 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    6
  1728 ;; This function calls:
  1729 ;;		_vfpfcnvrt
  1730 ;; This function is called by:
  1731 ;;		_printf
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           	psect	text11
  1736  001F3A                     __ptext11:
  1737                           	callstack 0
  1738  001F3A                     _vfprintf:
  1739                           	callstack 23
  1740  001F3A                     
  1741                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1742  001F3A  C056  F05A         	movff	vfprintf@fmt,vfprintf@cfmt
  1743  001F3E  C057  F05B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1744  001F42                     
  1745                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1746  001F42  0E00               	movlw	0
  1747  001F44  0100               	movlb	0	; () banked
  1748  001F46  6FDE               	movwf	(_nout+1)& (0+255),b
  1749  001F48  0E00               	movlw	0
  1750  001F4A  6FDD               	movwf	_nout& (0+255),b
  1751                           
  1752                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1753  001F4C  EFBB  F00F         	goto	l1779
  1754  001F50                     l1777:
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1758  001F50  C054  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
  1759  001F54  C055  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1760  001F58  0E5A               	movlw	low vfprintf@cfmt
  1761  001F5A  6E43               	movwf	vfpfcnvrt@fmt^0,c
  1762  001F5C  0E00               	movlw	high vfprintf@cfmt
  1763  001F5E  6E44               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1764  001F60  C058  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
  1765  001F64  C059  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1766  001F68  EC9C  F009         	call	_vfpfcnvrt	;wreg free
  1767  001F6C  5041               	movf	?_vfpfcnvrt^0,w,c
  1768  001F6E  0100               	movlb	0	; () banked
  1769  001F70  27DD               	addwf	_nout& (0+255),f,b
  1770  001F72  5042               	movf	(?_vfpfcnvrt+1)^0,w,c
  1771  001F74  23DE               	addwfc	(_nout+1)& (0+255),f,b
  1772  001F76                     l1779:
  1773                           
  1774                           ; BSR set to: 0
  1775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1776  001F76  C05A  FFF6         	movff	vfprintf@cfmt,tblptrl
  1777  001F7A  C05B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1778  001F7E                     	if	0	;tblptru may be non-zero
  1779  001F7E                     	endif
  1780  001F7E                     	if	0	;tblptru may be non-zero
  1781  001F7E                     	endif
  1782  001F7E  0008               	tblrd		*
  1783  001F80  50F5               	movf	tablat,w,c
  1784  001F82  0900               	iorlw	0
  1785  001F84  A4D8               	btfss	status,2,c
  1786  001F86  EFC7  F00F         	goto	u1421
  1787  001F8A  EFC9  F00F         	goto	u1420
  1788  001F8E                     u1421:
  1789  001F8E  EFA8  F00F         	goto	l1777
  1790  001F92                     u1420:
  1791  001F92                     
  1792                           ; BSR set to: 0
  1793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1794  001F92  C0DD  F054         	movff	_nout,?_vfprintf
  1795  001F96  C0DE  F055         	movff	_nout+1,?_vfprintf+1
  1796  001F9A                     
  1797                           ; BSR set to: 0
  1798  001F9A  0012               	return		;funcret
  1799  001F9C                     __end_of_vfprintf:
  1800                           	callstack 0
  1801                           
  1802 ;; *************** function _vfpfcnvrt *****************
  1803 ;; Defined at:
  1804 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  1807 ;;		 -> NULL(0), 
  1808 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  1809 ;;		 -> vfprintf@cfmt(2), 
  1810 ;;  ap              2   68[COMRAM] PTR PTR void 
  1811 ;;		 -> printf@ap(2), 
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;  ll              8   72[COMRAM] long long 
  1814 ;;  llu             8    0        unsigned long long 
  1815 ;;  f               4    0        unsigned long long 
  1816 ;;  vp              3    0        PTR void 
  1817 ;;  ct              3    0        unsigned char [3]
  1818 ;;  cp              2   80[COMRAM] PTR unsigned char 
  1819 ;;		 -> ?_printf(2), main@buf_arr(50), 
  1820 ;;  i               2    0        int 
  1821 ;;  done            2    0        int 
  1822 ;;  c               1   82[COMRAM] unsigned char 
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  2   64[COMRAM] int 
  1825 ;; Registers used:
  1826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1832 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1833 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1834 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1835 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1836 ;;Total ram usage:       19 bytes
  1837 ;; Hardware stack levels used:    1
  1838 ;; Hardware stack levels required when called:    5
  1839 ;; This function calls:
  1840 ;;		_ctoa
  1841 ;;		_dtoa
  1842 ;;		_fputc
  1843 ;;		_stoa
  1844 ;; This function is called by:
  1845 ;;		_vfprintf
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           	psect	text12
  1850  001338                     __ptext12:
  1851                           	callstack 0
  1852  001338                     _vfpfcnvrt:
  1853                           	callstack 23
  1854  001338                     
  1855                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1856  001338  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1857  00133C  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1858  001340  CFDE FFF6          	movff	postinc2,tblptrl
  1859  001344  CFDD FFF7          	movff	postdec2,tblptrh
  1860  001348                     	if	0	;tblptru may be non-zero
  1861  001348                     	endif
  1862  001348                     	if	0	;tblptru may be non-zero
  1863  001348                     	endif
  1864  001348  0008               	tblrd		*
  1865  00134A  50F5               	movf	tablat,w,c
  1866  00134C  0A25               	xorlw	37
  1867  00134E  A4D8               	btfss	status,2,c
  1868  001350  EFAC  F009         	goto	u1341
  1869  001354  EFAE  F009         	goto	u1340
  1870  001358                     u1341:
  1871  001358  EFD0  F00A         	goto	l1741
  1872  00135C                     u1340:
  1873  00135C                     
  1874                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1875  00135C  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1876  001360  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1877  001364  2ADE               	incf	postinc2,f,c
  1878  001366  0E00               	movlw	0
  1879  001368  22DD               	addwfc	postdec2,f,c
  1880  00136A                     
  1881                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1882  00136A  0E00               	movlw	0
  1883  00136C  0100               	movlb	0	; () banked
  1884  00136E  6FE0               	movwf	(_width+1)& (0+255),b
  1885  001370  0E00               	movlw	0
  1886  001372  6FDF               	movwf	_width& (0+255),b
  1887  001374  C0DF  F0E3         	movff	_width,_flags
  1888  001378  C0E0  F0E4         	movff	_width+1,_flags+1
  1889  00137C                     
  1890                           ; BSR set to: 0
  1891                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1892  00137C  69E1               	setf	_prec& (0+255),b
  1893  00137E  69E2               	setf	(_prec+1)& (0+255),b
  1894  001380                     
  1895                           ; BSR set to: 0
  1896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  1897  001380  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1898  001384  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1899  001388  CFDE FFF6          	movff	postinc2,tblptrl
  1900  00138C  CFDD FFF7          	movff	postdec2,tblptrh
  1901  001390                     	if	0	;tblptru may be non-zero
  1902  001390                     	endif
  1903  001390                     	if	0	;tblptru may be non-zero
  1904  001390                     	endif
  1905  001390  0008               	tblrd		*
  1906  001392  50F5               	movf	tablat,w,c
  1907  001394  0A63               	xorlw	99
  1908  001396  A4D8               	btfss	status,2,c
  1909  001398  EFD0  F009         	goto	u1351
  1910  00139C  EFD2  F009         	goto	u1350
  1911  0013A0                     u1351:
  1912  0013A0  EFF9  F009         	goto	l1707
  1913  0013A4                     u1350:
  1914  0013A4                     
  1915                           ; BSR set to: 0
  1916                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  1917  0013A4  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1918  0013A8  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1919  0013AC  2ADE               	incf	postinc2,f,c
  1920  0013AE  0E00               	movlw	0
  1921  0013B0  22DD               	addwfc	postdec2,f,c
  1922                           
  1923                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  1924  0013B2  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1925  0013B6  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1926  0013BA  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1927  0013BE  0E02               	movlw	2
  1928  0013C0  26DE               	addwf	postinc2,f,c
  1929  0013C2  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1930  0013C6  0E00               	movlw	0
  1931  0013C8  22DD               	addwfc	postdec2,f,c
  1932  0013CA  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1933  0013CE  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1934  0013D2  50DF               	movf	indf2,w,c
  1935  0013D4  6E53               	movwf	vfpfcnvrt@c^0,c
  1936  0013D6                     
  1937                           ; BSR set to: 0
  1938                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  1939  0013D6  C041  F00B         	movff	vfpfcnvrt@fp,ctoa@fp
  1940  0013DA  C042  F00C         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  1941  0013DE  C053  F00D         	movff	vfpfcnvrt@c,ctoa@c
  1942  0013E2  ECD1  F00D         	call	_ctoa	;wreg free
  1943  0013E6  C00B  F041         	movff	?_ctoa,?_vfpfcnvrt
  1944  0013EA  C00C  F042         	movff	?_ctoa+1,?_vfpfcnvrt+1
  1945  0013EE  EFEB  F00A         	goto	l883
  1946  0013F2                     l1707:
  1947                           
  1948                           ; BSR set to: 0
  1949                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1950  0013F2  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1951  0013F6  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1952  0013FA  CFDE FFF6          	movff	postinc2,tblptrl
  1953  0013FE  CFDD FFF7          	movff	postdec2,tblptrh
  1954  001402                     	if	0	;tblptru may be non-zero
  1955  001402                     	endif
  1956  001402                     	if	0	;tblptru may be non-zero
  1957  001402                     	endif
  1958  001402  0008               	tblrd		*
  1959  001404  50F5               	movf	tablat,w,c
  1960  001406  0A64               	xorlw	100
  1961  001408  B4D8               	btfsc	status,2,c
  1962  00140A  EF09  F00A         	goto	u1361
  1963  00140E  EF0B  F00A         	goto	u1360
  1964  001412                     u1361:
  1965  001412  EF1D  F00A         	goto	l1711
  1966  001416                     u1360:
  1967  001416                     
  1968                           ; BSR set to: 0
  1969  001416  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1970  00141A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1971  00141E  CFDE FFF6          	movff	postinc2,tblptrl
  1972  001422  CFDD FFF7          	movff	postdec2,tblptrh
  1973  001426                     	if	0	;tblptru may be non-zero
  1974  001426                     	endif
  1975  001426                     	if	0	;tblptru may be non-zero
  1976  001426                     	endif
  1977  001426  0008               	tblrd		*
  1978  001428  50F5               	movf	tablat,w,c
  1979  00142A  0A69               	xorlw	105
  1980  00142C  A4D8               	btfss	status,2,c
  1981  00142E  EF1B  F00A         	goto	u1371
  1982  001432  EF1D  F00A         	goto	u1370
  1983  001436                     u1371:
  1984  001436  EF5D  F00A         	goto	l1717
  1985  00143A                     u1370:
  1986  00143A                     l1711:
  1987                           
  1988                           ; BSR set to: 0
  1989                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1990  00143A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1991  00143E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1992  001442  2ADE               	incf	postinc2,f,c
  1993  001444  0E00               	movlw	0
  1994  001446  22DD               	addwfc	postdec2,f,c
  1995                           
  1996                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1997  001448  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1998  00144C  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1999  001450  CFDF F047          	movff	indf2,??_vfpfcnvrt
  2000  001454  0E02               	movlw	2
  2001  001456  26DE               	addwf	postinc2,f,c
  2002  001458  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  2003  00145C  0E00               	movlw	0
  2004  00145E  22DD               	addwfc	postdec2,f,c
  2005  001460  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2006  001464  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2007  001468  CFDE F049          	movff	postinc2,vfpfcnvrt@ll
  2008  00146C  CFDD F04A          	movff	postdec2,vfpfcnvrt@ll+1
  2009  001470  0E00               	movlw	0
  2010  001472  BE4A               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2011  001474  0EFF               	movlw	-1
  2012  001476  6E4B               	movwf	(vfpfcnvrt@ll+2)^0,c
  2013  001478  6E4C               	movwf	(vfpfcnvrt@ll+3)^0,c
  2014  00147A  6E4D               	movwf	(vfpfcnvrt@ll+4)^0,c
  2015  00147C  6E4E               	movwf	(vfpfcnvrt@ll+5)^0,c
  2016  00147E  6E4F               	movwf	(vfpfcnvrt@ll+6)^0,c
  2017  001480  6E50               	movwf	(vfpfcnvrt@ll+7)^0,c
  2018  001482                     
  2019                           ; BSR set to: 0
  2020                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2021  001482  C041  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  2022  001486  C042  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2023  00148A  C049  F01F         	movff	vfpfcnvrt@ll,dtoa@d
  2024  00148E  C04A  F020         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2025  001492  C04B  F021         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2026  001496  C04C  F022         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2027  00149A  C04D  F023         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2028  00149E  C04E  F024         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2029  0014A2  C04F  F025         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2030  0014A6  C050  F026         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2031  0014AA  EC2A  F008         	call	_dtoa	;wreg free
  2032  0014AE  C01D  F041         	movff	?_dtoa,?_vfpfcnvrt
  2033  0014B2  C01E  F042         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2034  0014B6  EFEB  F00A         	goto	l883
  2035  0014BA                     l1717:
  2036                           
  2037                           ; BSR set to: 0
  2038                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
  2039  0014BA  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2040  0014BE  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2041  0014C2  CFDE FFF6          	movff	postinc2,tblptrl
  2042  0014C6  CFDD FFF7          	movff	postdec2,tblptrh
  2043  0014CA                     	if	0	;tblptru may be non-zero
  2044  0014CA                     	endif
  2045  0014CA                     	if	0	;tblptru may be non-zero
  2046  0014CA                     	endif
  2047  0014CA  0008               	tblrd		*
  2048  0014CC  50F5               	movf	tablat,w,c
  2049  0014CE  0A73               	xorlw	115
  2050  0014D0  A4D8               	btfss	status,2,c
  2051  0014D2  EF6D  F00A         	goto	u1381
  2052  0014D6  EF6F  F00A         	goto	u1380
  2053  0014DA                     u1381:
  2054  0014DA  EF9A  F00A         	goto	l1725
  2055  0014DE                     u1380:
  2056  0014DE                     
  2057                           ; BSR set to: 0
  2058                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
  2059  0014DE  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2060  0014E2  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2061  0014E6  2ADE               	incf	postinc2,f,c
  2062  0014E8  0E00               	movlw	0
  2063  0014EA  22DD               	addwfc	postdec2,f,c
  2064                           
  2065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  2066  0014EC  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2067  0014F0  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2068  0014F4  CFDF F047          	movff	indf2,??_vfpfcnvrt
  2069  0014F8  0E02               	movlw	2
  2070  0014FA  26DE               	addwf	postinc2,f,c
  2071  0014FC  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  2072  001500  0E00               	movlw	0
  2073  001502  22DD               	addwfc	postdec2,f,c
  2074  001504  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2075  001508  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2076  00150C  CFDE F051          	movff	postinc2,vfpfcnvrt@cp
  2077  001510  CFDD F052          	movff	postdec2,vfpfcnvrt@cp+1
  2078  001514                     
  2079                           ; BSR set to: 0
  2080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
  2081  001514  C041  F00B         	movff	vfpfcnvrt@fp,stoa@fp
  2082  001518  C042  F00C         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  2083  00151C  C051  F00D         	movff	vfpfcnvrt@cp,stoa@s
  2084  001520  C052  F00E         	movff	vfpfcnvrt@cp+1,stoa@s+1
  2085  001524  ECB0  F00B         	call	_stoa	;wreg free
  2086  001528  C00B  F041         	movff	?_stoa,?_vfpfcnvrt
  2087  00152C  C00C  F042         	movff	?_stoa+1,?_vfpfcnvrt+1
  2088  001530  EFEB  F00A         	goto	l883
  2089  001534                     l1725:
  2090                           
  2091                           ; BSR set to: 0
  2092                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2093  001534  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2094  001538  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2095  00153C  CFDE FFF6          	movff	postinc2,tblptrl
  2096  001540  CFDD FFF7          	movff	postdec2,tblptrh
  2097  001544                     	if	0	;tblptru may be non-zero
  2098  001544                     	endif
  2099  001544                     	if	0	;tblptru may be non-zero
  2100  001544                     	endif
  2101  001544  0008               	tblrd		*
  2102  001546  50F5               	movf	tablat,w,c
  2103  001548  0A25               	xorlw	37
  2104  00154A  A4D8               	btfss	status,2,c
  2105  00154C  EFAA  F00A         	goto	u1391
  2106  001550  EFAC  F00A         	goto	u1390
  2107  001554                     u1391:
  2108  001554  EFC3  F00A         	goto	l1735
  2109  001558                     u1390:
  2110  001558                     
  2111                           ; BSR set to: 0
  2112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2113  001558  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2114  00155C  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2115  001560  2ADE               	incf	postinc2,f,c
  2116  001562  0E00               	movlw	0
  2117  001564  22DD               	addwfc	postdec2,f,c
  2118  001566                     
  2119                           ; BSR set to: 0
  2120                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2121  001566  0E00               	movlw	0
  2122  001568  6E03               	movwf	(fputc@c+1)^0,c
  2123  00156A  0E25               	movlw	37
  2124  00156C  6E02               	movwf	fputc@c^0,c
  2125  00156E  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2126  001572  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2127  001576  ECA0  F00E         	call	_fputc	;wreg free
  2128  00157A                     l1731:
  2129                           
  2130                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2131  00157A  0E00               	movlw	0
  2132  00157C  6E42               	movwf	(?_vfpfcnvrt+1)^0,c
  2133  00157E  0E01               	movlw	1
  2134  001580  6E41               	movwf	?_vfpfcnvrt^0,c
  2135  001582  EFEB  F00A         	goto	l883
  2136  001586                     l1735:
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2140  001586  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2141  00158A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2142  00158E  2ADE               	incf	postinc2,f,c
  2143  001590  0E00               	movlw	0
  2144  001592  22DD               	addwfc	postdec2,f,c
  2145  001594                     
  2146                           ; BSR set to: 0
  2147                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2148  001594  0E00               	movlw	0
  2149  001596  6E42               	movwf	(?_vfpfcnvrt+1)^0,c
  2150  001598  0E00               	movlw	0
  2151  00159A  6E41               	movwf	?_vfpfcnvrt^0,c
  2152  00159C  EFEB  F00A         	goto	l883
  2153  0015A0                     l1741:
  2154                           
  2155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2156  0015A0  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2157  0015A4  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2158  0015A8  CFDE FFF6          	movff	postinc2,tblptrl
  2159  0015AC  CFDD FFF7          	movff	postdec2,tblptrh
  2160  0015B0                     	if	0	;tblptru may be non-zero
  2161  0015B0                     	endif
  2162  0015B0                     	if	0	;tblptru may be non-zero
  2163  0015B0                     	endif
  2164  0015B0  0008               	tblrd		*
  2165  0015B2  50F5               	movf	tablat,w,c
  2166  0015B4  6E02               	movwf	fputc@c^0,c
  2167  0015B6  6A03               	clrf	(fputc@c+1)^0,c
  2168  0015B8  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2169  0015BC  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2170  0015C0  ECA0  F00E         	call	_fputc	;wreg free
  2171  0015C4                     
  2172                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2173  0015C4  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2174  0015C8  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2175  0015CC  2ADE               	incf	postinc2,f,c
  2176  0015CE  0E00               	movlw	0
  2177  0015D0  22DD               	addwfc	postdec2,f,c
  2178  0015D2  EFBD  F00A         	goto	l1731
  2179  0015D6                     l883:
  2180  0015D6  0012               	return		;funcret
  2181  0015D8                     __end_of_vfpfcnvrt:
  2182                           	callstack 0
  2183                           
  2184 ;; *************** function _stoa *****************
  2185 ;; Defined at:
  2186 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  2189 ;;		 -> NULL(0), 
  2190 ;;  s               2   12[COMRAM] PTR unsigned char 
  2191 ;;		 -> ?_printf(2), main@buf_arr(50), 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  nuls            7   15[COMRAM] unsigned char [7]
  2194 ;;  l               2   30[COMRAM] int 
  2195 ;;  p               2   28[COMRAM] int 
  2196 ;;  cp              2   26[COMRAM] PTR unsigned char 
  2197 ;;		 -> stoa@nuls(7), ?_printf(2), main@buf_arr(50), 
  2198 ;;  w               2   24[COMRAM] int 
  2199 ;;  i               2   22[COMRAM] int 
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  2   10[COMRAM] int 
  2202 ;; Registers used:
  2203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2209 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2210 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2211 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2212 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2213 ;;Total ram usage:       22 bytes
  2214 ;; Hardware stack levels used:    1
  2215 ;; Hardware stack levels required when called:    2
  2216 ;; This function calls:
  2217 ;;		_fputc
  2218 ;;		_strlen
  2219 ;; This function is called by:
  2220 ;;		_vfpfcnvrt
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           	psect	text13
  2225  001760                     __ptext13:
  2226                           	callstack 0
  2227  001760                     _stoa:
  2228                           	callstack 25
  2229  001760                     
  2230                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
  2231  001760  EE20  F0E5         	lfsr	2,stoa@F1146
  2232  001764  EE10  F010         	lfsr	1,stoa@nuls
  2233  001768  0E06               	movlw	6
  2234  00176A                     u1211:
  2235  00176A  CFDB FFE3          	movff	plusw2,plusw1
  2236  00176E  06E8               	decf	wreg,f,c
  2237  001770  E2FC               	bc	u1211
  2238  001772                     
  2239                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
  2240  001772  C00D  F01B         	movff	stoa@s,stoa@cp
  2241  001776  C00E  F01C         	movff	stoa@s+1,stoa@cp+1
  2242  00177A                     
  2243                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
  2244  00177A  501B               	movf	stoa@cp^0,w,c
  2245  00177C  101C               	iorwf	(stoa@cp+1)^0,w,c
  2246  00177E  A4D8               	btfss	status,2,c
  2247  001780  EFC4  F00B         	goto	u1221
  2248  001784  EFC6  F00B         	goto	u1220
  2249  001788                     u1221:
  2250  001788  EFCA  F00B         	goto	l1649
  2251  00178C                     u1220:
  2252  00178C                     
  2253                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
  2254  00178C  0E10               	movlw	low stoa@nuls
  2255  00178E  6E1B               	movwf	stoa@cp^0,c
  2256  001790  0E00               	movlw	high stoa@nuls
  2257  001792  6E1C               	movwf	(stoa@cp+1)^0,c
  2258  001794                     l1649:
  2259                           
  2260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
  2261  001794  C01B  F001         	movff	stoa@cp,strlen@s
  2262  001798  C01C  F002         	movff	stoa@cp+1,strlen@s+1
  2263  00179C  ECA6  F010         	call	_strlen	;wreg free
  2264  0017A0  C001  F01F         	movff	?_strlen,stoa@l
  2265  0017A4  C002  F020         	movff	?_strlen+1,stoa@l+1
  2266  0017A8                     
  2267                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
  2268  0017A8  C0E1  F01D         	movff	_prec,stoa@p
  2269  0017AC  C0E2  F01E         	movff	_prec+1,stoa@p+1
  2270  0017B0                     
  2271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  2272  0017B0  BE1E               	btfsc	(stoa@p+1)^0,7,c
  2273  0017B2  EFDD  F00B         	goto	u1231
  2274  0017B6  EFDF  F00B         	goto	u1230
  2275  0017BA                     u1231:
  2276  0017BA  EFF4  F00B         	goto	l864
  2277  0017BE                     u1230:
  2278  0017BE  501F               	movf	stoa@l^0,w,c
  2279  0017C0  5C1D               	subwf	stoa@p^0,w,c
  2280  0017C2  501E               	movf	(stoa@p+1)^0,w,c
  2281  0017C4  0A80               	xorlw	128
  2282  0017C6  6E0F               	movwf	??_stoa^0,c
  2283  0017C8  5020               	movf	(stoa@l+1)^0,w,c
  2284  0017CA  0A80               	xorlw	128
  2285  0017CC  580F               	subwfb	??_stoa^0,w,c
  2286  0017CE  A0D8               	btfss	status,0,c
  2287  0017D0  EFEC  F00B         	goto	u1241
  2288  0017D4  EFEE  F00B         	goto	u1240
  2289  0017D8                     u1241:
  2290  0017D8  EFF0  F00B         	goto	l862
  2291  0017DC                     u1240:
  2292  0017DC  EFF4  F00B         	goto	l864
  2293  0017E0                     l862:
  2294  0017E0  C01D  F01F         	movff	stoa@p,stoa@l
  2295  0017E4  C01E  F020         	movff	stoa@p+1,stoa@l+1
  2296  0017E8                     l864:
  2297                           
  2298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 583:     p = l;
  2299  0017E8  C01F  F01D         	movff	stoa@l,stoa@p
  2300  0017EC  C020  F01E         	movff	stoa@l+1,stoa@p+1
  2301                           
  2302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
  2303  0017F0  C0DF  F019         	movff	_width,stoa@w
  2304  0017F4  C0E0  F01A         	movff	_width+1,stoa@w+1
  2305                           
  2306                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
  2307  0017F8  0100               	movlb	0	; () banked
  2308  0017FA  B1E3               	btfsc	_flags& (0+255),0,b
  2309  0017FC  EF02  F00C         	goto	u1251
  2310  001800  EF04  F00C         	goto	u1250
  2311  001804                     u1251:
  2312  001804  EF21  F00C         	goto	l1665
  2313  001808                     u1250:
  2314  001808  EF12  F00C         	goto	l1663
  2315  00180C                     l1659:
  2316                           
  2317                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
  2318  00180C  0E00               	movlw	0
  2319  00180E  6E03               	movwf	(fputc@c+1)^0,c
  2320  001810  0E20               	movlw	32
  2321  001812  6E02               	movwf	fputc@c^0,c
  2322  001814  C00B  F004         	movff	stoa@fp,fputc@fp
  2323  001818  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  2324  00181C  ECA0  F00E         	call	_fputc	;wreg free
  2325  001820                     
  2326                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
  2327  001820  4A1F               	infsnz	stoa@l^0,f,c
  2328  001822  2A20               	incf	(stoa@l+1)^0,f,c
  2329  001824                     l1663:
  2330                           
  2331                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
  2332  001824  5019               	movf	stoa@w^0,w,c
  2333  001826  5C1F               	subwf	stoa@l^0,w,c
  2334  001828  5020               	movf	(stoa@l+1)^0,w,c
  2335  00182A  0A80               	xorlw	128
  2336  00182C  6E0F               	movwf	??_stoa^0,c
  2337  00182E  501A               	movf	(stoa@w+1)^0,w,c
  2338  001830  0A80               	xorlw	128
  2339  001832  580F               	subwfb	??_stoa^0,w,c
  2340  001834  A0D8               	btfss	status,0,c
  2341  001836  EF1F  F00C         	goto	u1261
  2342  00183A  EF21  F00C         	goto	u1260
  2343  00183E                     u1261:
  2344  00183E  EF06  F00C         	goto	l1659
  2345  001842                     u1260:
  2346  001842                     l1665:
  2347                           
  2348                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 595:     i = 0;
  2349  001842  0E00               	movlw	0
  2350  001844  6E18               	movwf	(stoa@i+1)^0,c
  2351  001846  0E00               	movlw	0
  2352  001848  6E17               	movwf	stoa@i^0,c
  2353                           
  2354                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  2355  00184A  EF3A  F00C         	goto	l1673
  2356  00184E                     l1667:
  2357                           
  2358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
  2359  00184E  C01B  FFD9         	movff	stoa@cp,fsr2l
  2360  001852  C01C  FFDA         	movff	stoa@cp+1,fsr2h
  2361  001856  50DF               	movf	indf2,w,c
  2362  001858  6E0F               	movwf	??_stoa^0,c
  2363  00185A  500F               	movf	??_stoa^0,w,c
  2364  00185C  6E02               	movwf	fputc@c^0,c
  2365  00185E  6A03               	clrf	(fputc@c+1)^0,c
  2366  001860  C00B  F004         	movff	stoa@fp,fputc@fp
  2367  001864  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  2368  001868  ECA0  F00E         	call	_fputc	;wreg free
  2369  00186C                     
  2370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
  2371  00186C  4A1B               	infsnz	stoa@cp^0,f,c
  2372  00186E  2A1C               	incf	(stoa@cp+1)^0,f,c
  2373  001870                     
  2374                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 599:         ++i;
  2375  001870  4A17               	infsnz	stoa@i^0,f,c
  2376  001872  2A18               	incf	(stoa@i+1)^0,f,c
  2377  001874                     l1673:
  2378                           
  2379                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  2380  001874  501D               	movf	stoa@p^0,w,c
  2381  001876  5C17               	subwf	stoa@i^0,w,c
  2382  001878  5018               	movf	(stoa@i+1)^0,w,c
  2383  00187A  0A80               	xorlw	128
  2384  00187C  6E0F               	movwf	??_stoa^0,c
  2385  00187E  501E               	movf	(stoa@p+1)^0,w,c
  2386  001880  0A80               	xorlw	128
  2387  001882  580F               	subwfb	??_stoa^0,w,c
  2388  001884  A0D8               	btfss	status,0,c
  2389  001886  EF47  F00C         	goto	u1271
  2390  00188A  EF49  F00C         	goto	u1270
  2391  00188E                     u1271:
  2392  00188E  EF27  F00C         	goto	l1667
  2393  001892                     u1270:
  2394  001892                     
  2395                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
  2396  001892  0100               	movlb	0	; () banked
  2397  001894  A1E3               	btfss	_flags& (0+255),0,b
  2398  001896  EF4F  F00C         	goto	u1281
  2399  00189A  EF51  F00C         	goto	u1280
  2400  00189E                     u1281:
  2401  00189E  EF6E  F00C         	goto	l874
  2402  0018A2                     u1280:
  2403  0018A2  EF5F  F00C         	goto	l1681
  2404  0018A6                     l1677:
  2405                           
  2406                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
  2407  0018A6  0E00               	movlw	0
  2408  0018A8  6E03               	movwf	(fputc@c+1)^0,c
  2409  0018AA  0E20               	movlw	32
  2410  0018AC  6E02               	movwf	fputc@c^0,c
  2411  0018AE  C00B  F004         	movff	stoa@fp,fputc@fp
  2412  0018B2  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  2413  0018B6  ECA0  F00E         	call	_fputc	;wreg free
  2414  0018BA                     
  2415                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
  2416  0018BA  4A1F               	infsnz	stoa@l^0,f,c
  2417  0018BC  2A20               	incf	(stoa@l+1)^0,f,c
  2418  0018BE                     l1681:
  2419                           
  2420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
  2421  0018BE  5019               	movf	stoa@w^0,w,c
  2422  0018C0  5C1F               	subwf	stoa@l^0,w,c
  2423  0018C2  5020               	movf	(stoa@l+1)^0,w,c
  2424  0018C4  0A80               	xorlw	128
  2425  0018C6  6E0F               	movwf	??_stoa^0,c
  2426  0018C8  501A               	movf	(stoa@w+1)^0,w,c
  2427  0018CA  0A80               	xorlw	128
  2428  0018CC  580F               	subwfb	??_stoa^0,w,c
  2429  0018CE  A0D8               	btfss	status,0,c
  2430  0018D0  EF6C  F00C         	goto	u1291
  2431  0018D4  EF6E  F00C         	goto	u1290
  2432  0018D8                     u1291:
  2433  0018D8  EF53  F00C         	goto	l1677
  2434  0018DC                     u1290:
  2435  0018DC                     l874:
  2436                           
  2437                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
  2438  0018DC  C01F  F00B         	movff	stoa@l,?_stoa
  2439  0018E0  C020  F00C         	movff	stoa@l+1,?_stoa+1
  2440  0018E4  0012               	return		;funcret
  2441  0018E6                     __end_of_stoa:
  2442                           	callstack 0
  2443                           
  2444 ;; *************** function _dtoa *****************
  2445 ;; Defined at:
  2446 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  2449 ;;		 -> NULL(0), 
  2450 ;;  d               8   30[COMRAM] long long 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;  n               8   54[COMRAM] long long 
  2453 ;;  i               2   62[COMRAM] int 
  2454 ;;  s               2   52[COMRAM] int 
  2455 ;;  w               2   50[COMRAM] int 
  2456 ;;  p               2   48[COMRAM] int 
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  2   28[COMRAM] int 
  2459 ;; Registers used:
  2460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2466 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2467 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2468 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2469 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2470 ;;Total ram usage:       36 bytes
  2471 ;; Hardware stack levels used:    1
  2472 ;; Hardware stack levels required when called:    4
  2473 ;; This function calls:
  2474 ;;		___aodiv
  2475 ;;		___aomod
  2476 ;;		_abs
  2477 ;;		_pad
  2478 ;; This function is called by:
  2479 ;;		_vfpfcnvrt
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text14
  2484  001054                     __ptext14:
  2485                           	callstack 0
  2486  001054                     _dtoa:
  2487                           	callstack 23
  2488  001054                     
  2489                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2490  001054  C01F  F037         	movff	dtoa@d,dtoa@n
  2491  001058  C020  F038         	movff	dtoa@d+1,dtoa@n+1
  2492  00105C  C021  F039         	movff	dtoa@d+2,dtoa@n+2
  2493  001060  C022  F03A         	movff	dtoa@d+3,dtoa@n+3
  2494  001064  C023  F03B         	movff	dtoa@d+4,dtoa@n+4
  2495  001068  C024  F03C         	movff	dtoa@d+5,dtoa@n+5
  2496  00106C  C025  F03D         	movff	dtoa@d+6,dtoa@n+6
  2497  001070  C026  F03E         	movff	dtoa@d+7,dtoa@n+7
  2498  001074                     
  2499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2500  001074  BE3E               	btfsc	(dtoa@n+7)^0,7,c
  2501  001076  EF3F  F008         	goto	u1061
  2502  00107A  EF42  F008         	goto	u1060
  2503  00107E                     u1061:
  2504  00107E  0E01               	movlw	1
  2505  001080  EF43  F008         	goto	u1070
  2506  001084                     u1060:
  2507  001084  0E00               	movlw	0
  2508  001086                     u1070:
  2509  001086  6E35               	movwf	dtoa@s^0,c
  2510  001088  6A36               	clrf	(dtoa@s+1)^0,c
  2511                           
  2512                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2513  00108A  5035               	movf	dtoa@s^0,w,c
  2514  00108C  1036               	iorwf	(dtoa@s+1)^0,w,c
  2515  00108E  B4D8               	btfsc	status,2,c
  2516  001090  EF4C  F008         	goto	u1081
  2517  001094  EF4E  F008         	goto	u1080
  2518  001098                     u1081:
  2519  001098  EF5E  F008         	goto	l1585
  2520  00109C                     u1080:
  2521  00109C                     
  2522                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2523  00109C  1E3E               	comf	(dtoa@n+7)^0,f,c
  2524  00109E  1E3D               	comf	(dtoa@n+6)^0,f,c
  2525  0010A0  1E3C               	comf	(dtoa@n+5)^0,f,c
  2526  0010A2  1E3B               	comf	(dtoa@n+4)^0,f,c
  2527  0010A4  1E3A               	comf	(dtoa@n+3)^0,f,c
  2528  0010A6  1E39               	comf	(dtoa@n+2)^0,f,c
  2529  0010A8  1E38               	comf	(dtoa@n+1)^0,f,c
  2530  0010AA  6C37               	negf	dtoa@n^0,c
  2531  0010AC  0E00               	movlw	0
  2532  0010AE  2238               	addwfc	(dtoa@n+1)^0,f,c
  2533  0010B0  2239               	addwfc	(dtoa@n+2)^0,f,c
  2534  0010B2  223A               	addwfc	(dtoa@n+3)^0,f,c
  2535  0010B4  223B               	addwfc	(dtoa@n+4)^0,f,c
  2536  0010B6  223C               	addwfc	(dtoa@n+5)^0,f,c
  2537  0010B8  223D               	addwfc	(dtoa@n+6)^0,f,c
  2538  0010BA  223E               	addwfc	(dtoa@n+7)^0,f,c
  2539  0010BC                     l1585:
  2540                           
  2541                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2542  0010BC  0100               	movlb	0	; () banked
  2543  0010BE  BFE2               	btfsc	(_prec+1)& (0+255),7,b
  2544  0010C0  EF64  F008         	goto	u1091
  2545  0010C4  EF66  F008         	goto	u1090
  2546  0010C8                     u1091:
  2547  0010C8  EF67  F008         	goto	l1589
  2548  0010CC                     u1090:
  2549  0010CC                     
  2550                           ; BSR set to: 0
  2551                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2552  0010CC  93E3               	bcf	_flags& (0+255),1,b
  2553  0010CE                     l1589:
  2554                           
  2555                           ; BSR set to: 0
  2556                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2557  0010CE  BFE2               	btfsc	(_prec+1)& (0+255),7,b
  2558  0010D0  EF74  F008         	goto	u1100
  2559  0010D4  51E2               	movf	(_prec+1)& (0+255),w,b
  2560  0010D6  E106               	bnz	u1101
  2561  0010D8  05E1               	decf	_prec& (0+255),w,b
  2562  0010DA  B0D8               	btfsc	status,0,c
  2563  0010DC  EF72  F008         	goto	u1101
  2564  0010E0  EF74  F008         	goto	u1100
  2565  0010E4                     u1101:
  2566  0010E4  EF7A  F008         	goto	l835
  2567  0010E8                     u1100:
  2568  0010E8                     
  2569                           ; BSR set to: 0
  2570  0010E8  0E00               	movlw	0
  2571  0010EA  6E32               	movwf	(dtoa@p+1)^0,c
  2572  0010EC  0E01               	movlw	1
  2573  0010EE  6E31               	movwf	dtoa@p^0,c
  2574  0010F0  EF7E  F008         	goto	l837
  2575  0010F4                     l835:
  2576                           
  2577                           ; BSR set to: 0
  2578  0010F4  C0E1  F031         	movff	_prec,dtoa@p
  2579  0010F8  C0E2  F032         	movff	_prec+1,dtoa@p+1
  2580  0010FC                     l837:
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2584  0010FC  C0DF  F033         	movff	_width,dtoa@w
  2585  001100  C0E0  F034         	movff	_width+1,dtoa@w+1
  2586  001104                     
  2587                           ; BSR set to: 0
  2588                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2589  001104  5035               	movf	dtoa@s^0,w,c
  2590  001106  1036               	iorwf	(dtoa@s+1)^0,w,c
  2591  001108  A4D8               	btfss	status,2,c
  2592  00110A  EF89  F008         	goto	u1111
  2593  00110E  EF8B  F008         	goto	u1110
  2594  001112                     u1111:
  2595  001112  EF92  F008         	goto	l1597
  2596  001116                     u1110:
  2597  001116                     
  2598                           ; BSR set to: 0
  2599  001116  A5E3               	btfss	_flags& (0+255),2,b
  2600  001118  EF90  F008         	goto	u1121
  2601  00111C  EF92  F008         	goto	u1120
  2602  001120                     u1121:
  2603  001120  EF95  F008         	goto	l1599
  2604  001124                     u1120:
  2605  001124                     l1597:
  2606                           
  2607                           ; BSR set to: 0
  2608                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  2609  001124  0633               	decf	dtoa@w^0,f,c
  2610  001126  A0D8               	btfss	status,0,c
  2611  001128  0634               	decf	(dtoa@w+1)^0,f,c
  2612  00112A                     l1599:
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2616  00112A  0E00               	movlw	0
  2617  00112C  6E40               	movwf	(dtoa@i+1)^0,c
  2618  00112E  0E1F               	movlw	31
  2619  001130  6E3F               	movwf	dtoa@i^0,c
  2620  001132                     
  2621                           ; BSR set to: 0
  2622                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2623  001132  0E00               	movlw	0
  2624  001134  0101               	movlb	1	; () banked
  2625  001136  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2626                           
  2627                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2628  001138  EF1A  F009         	goto	l1613
  2629  00113C                     l1603:
  2630                           
  2631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  2632  00113C  063F               	decf	dtoa@i^0,f,c
  2633  00113E  A0D8               	btfss	status,0,c
  2634  001140  0640               	decf	(dtoa@i+1)^0,f,c
  2635  001142                     
  2636                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2637  001142  0E00               	movlw	low _dbuf
  2638  001144  243F               	addwf	dtoa@i^0,w,c
  2639  001146  6ED9               	movwf	fsr2l,c
  2640  001148  0E01               	movlw	high _dbuf
  2641  00114A  2040               	addwfc	(dtoa@i+1)^0,w,c
  2642  00114C  6EDA               	movwf	fsr2h,c
  2643  00114E  C037  F001         	movff	dtoa@n,___aomod@dividend
  2644  001152  C038  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2645  001156  C039  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2646  00115A  C03A  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2647  00115E  C03B  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2648  001162  C03C  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2649  001166  C03D  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2650  00116A  C03E  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2651  00116E  0E0A               	movlw	10
  2652  001170  6E09               	movwf	___aomod@divisor^0,c
  2653  001172  0E00               	movlw	0
  2654  001174  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2655  001176  0E00               	movlw	0
  2656  001178  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2657  00117A  0E00               	movlw	0
  2658  00117C  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2659  00117E  0E00               	movlw	0
  2660  001180  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2661  001182  0E00               	movlw	0
  2662  001184  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2663  001186  0E00               	movlw	0
  2664  001188  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2665  00118A  0E00               	movlw	0
  2666  00118C  6E10               	movwf	(___aomod@divisor+7)^0,c
  2667  00118E  EC73  F00C         	call	___aomod	;wreg free
  2668  001192  C001  F027         	movff	?___aomod,??_dtoa
  2669  001196  C002  F028         	movff	?___aomod+1,??_dtoa+1
  2670  00119A  C003  F029         	movff	?___aomod+2,??_dtoa+2
  2671  00119E  C004  F02A         	movff	?___aomod+3,??_dtoa+3
  2672  0011A2  C005  F02B         	movff	?___aomod+4,??_dtoa+4
  2673  0011A6  C006  F02C         	movff	?___aomod+5,??_dtoa+5
  2674  0011AA  C007  F02D         	movff	?___aomod+6,??_dtoa+6
  2675  0011AE  C008  F02E         	movff	?___aomod+7,??_dtoa+7
  2676  0011B2  C027  F013         	movff	??_dtoa,abs@a
  2677  0011B6  C029  F014         	movff	??_dtoa+2,abs@a+1
  2678  0011BA  EC86  F010         	call	_abs	;wreg free
  2679  0011BE  5013               	movf	?_abs^0,w,c
  2680  0011C0  0F30               	addlw	48
  2681  0011C2  6EDF               	movwf	indf2,c
  2682  0011C4                     
  2683                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  2684  0011C4  0631               	decf	dtoa@p^0,f,c
  2685  0011C6  A0D8               	btfss	status,0,c
  2686  0011C8  0632               	decf	(dtoa@p+1)^0,f,c
  2687  0011CA                     
  2688                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  2689  0011CA  0633               	decf	dtoa@w^0,f,c
  2690  0011CC  A0D8               	btfss	status,0,c
  2691  0011CE  0634               	decf	(dtoa@w+1)^0,f,c
  2692  0011D0                     
  2693                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2694  0011D0  C037  F001         	movff	dtoa@n,___aodiv@dividend
  2695  0011D4  C038  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2696  0011D8  C039  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2697  0011DC  C03A  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2698  0011E0  C03B  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2699  0011E4  C03C  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2700  0011E8  C03D  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2701  0011EC  C03E  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2702  0011F0  0E0A               	movlw	10
  2703  0011F2  6E09               	movwf	___aodiv@divisor^0,c
  2704  0011F4  0E00               	movlw	0
  2705  0011F6  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2706  0011F8  0E00               	movlw	0
  2707  0011FA  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2708  0011FC  0E00               	movlw	0
  2709  0011FE  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2710  001200  0E00               	movlw	0
  2711  001202  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2712  001204  0E00               	movlw	0
  2713  001206  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2714  001208  0E00               	movlw	0
  2715  00120A  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2716  00120C  0E00               	movlw	0
  2717  00120E  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2718  001210  ECEC  F00A         	call	___aodiv	;wreg free
  2719  001214  C001  F037         	movff	?___aodiv,dtoa@n
  2720  001218  C002  F038         	movff	?___aodiv+1,dtoa@n+1
  2721  00121C  C003  F039         	movff	?___aodiv+2,dtoa@n+2
  2722  001220  C004  F03A         	movff	?___aodiv+3,dtoa@n+3
  2723  001224  C005  F03B         	movff	?___aodiv+4,dtoa@n+4
  2724  001228  C006  F03C         	movff	?___aodiv+5,dtoa@n+5
  2725  00122C  C007  F03D         	movff	?___aodiv+6,dtoa@n+6
  2726  001230  C008  F03E         	movff	?___aodiv+7,dtoa@n+7
  2727  001234                     l1613:
  2728                           
  2729                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2730  001234  BE40               	btfsc	(dtoa@i+1)^0,7,c
  2731  001236  EF25  F009         	goto	u1131
  2732  00123A  5040               	movf	(dtoa@i+1)^0,w,c
  2733  00123C  E108               	bnz	u1130
  2734  00123E  043F               	decf	dtoa@i^0,w,c
  2735  001240  A0D8               	btfss	status,0,c
  2736  001242  EF25  F009         	goto	u1131
  2737  001246  EF27  F009         	goto	u1130
  2738  00124A                     u1131:
  2739  00124A  EF58  F009         	goto	l1623
  2740  00124E                     u1130:
  2741  00124E  5037               	movf	dtoa@n^0,w,c
  2742  001250  1038               	iorwf	(dtoa@n+1)^0,w,c
  2743  001252  1039               	iorwf	(dtoa@n+2)^0,w,c
  2744  001254  103A               	iorwf	(dtoa@n+3)^0,w,c
  2745  001256  103B               	iorwf	(dtoa@n+4)^0,w,c
  2746  001258  103C               	iorwf	(dtoa@n+5)^0,w,c
  2747  00125A  103D               	iorwf	(dtoa@n+6)^0,w,c
  2748  00125C  103E               	iorwf	(dtoa@n+7)^0,w,c
  2749  00125E  A4D8               	btfss	status,2,c
  2750  001260  EF34  F009         	goto	u1141
  2751  001264  EF36  F009         	goto	u1140
  2752  001268                     u1141:
  2753  001268  EF9E  F008         	goto	l1603
  2754  00126C                     u1140:
  2755  00126C  BE32               	btfsc	(dtoa@p+1)^0,7,c
  2756  00126E  EF43  F009         	goto	u1150
  2757  001272  5032               	movf	(dtoa@p+1)^0,w,c
  2758  001274  E106               	bnz	u1151
  2759  001276  0431               	decf	dtoa@p^0,w,c
  2760  001278  B0D8               	btfsc	status,0,c
  2761  00127A  EF41  F009         	goto	u1151
  2762  00127E  EF43  F009         	goto	u1150
  2763  001282                     u1151:
  2764  001282  EF9E  F008         	goto	l1603
  2765  001286                     u1150:
  2766  001286  BE34               	btfsc	(dtoa@w+1)^0,7,c
  2767  001288  EF4E  F009         	goto	u1161
  2768  00128C  5034               	movf	(dtoa@w+1)^0,w,c
  2769  00128E  E108               	bnz	u1160
  2770  001290  0433               	decf	dtoa@w^0,w,c
  2771  001292  A0D8               	btfss	status,0,c
  2772  001294  EF4E  F009         	goto	u1161
  2773  001298  EF50  F009         	goto	u1160
  2774  00129C                     u1161:
  2775  00129C  EF58  F009         	goto	l1623
  2776  0012A0                     u1160:
  2777  0012A0  0100               	movlb	0	; () banked
  2778  0012A2  B3E3               	btfsc	_flags& (0+255),1,b
  2779  0012A4  EF56  F009         	goto	u1171
  2780  0012A8  EF58  F009         	goto	u1170
  2781  0012AC                     u1171:
  2782  0012AC  EF9E  F008         	goto	l1603
  2783  0012B0                     u1170:
  2784  0012B0                     l1623:
  2785                           
  2786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2787  0012B0  5035               	movf	dtoa@s^0,w,c
  2788  0012B2  1036               	iorwf	(dtoa@s+1)^0,w,c
  2789  0012B4  A4D8               	btfss	status,2,c
  2790  0012B6  EF5F  F009         	goto	u1181
  2791  0012BA  EF61  F009         	goto	u1180
  2792  0012BE                     u1181:
  2793  0012BE  EF69  F009         	goto	l1627
  2794  0012C2                     u1180:
  2795  0012C2  0100               	movlb	0	; () banked
  2796  0012C4  A5E3               	btfss	_flags& (0+255),2,b
  2797  0012C6  EF67  F009         	goto	u1191
  2798  0012CA  EF69  F009         	goto	u1190
  2799  0012CE                     u1191:
  2800  0012CE  EF87  F009         	goto	l1637
  2801  0012D2                     u1190:
  2802  0012D2                     l1627:
  2803                           
  2804                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  2805  0012D2  063F               	decf	dtoa@i^0,f,c
  2806  0012D4  A0D8               	btfss	status,0,c
  2807  0012D6  0640               	decf	(dtoa@i+1)^0,f,c
  2808  0012D8                     
  2809                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2810  0012D8  5035               	movf	dtoa@s^0,w,c
  2811  0012DA  1036               	iorwf	(dtoa@s+1)^0,w,c
  2812  0012DC  A4D8               	btfss	status,2,c
  2813  0012DE  EF73  F009         	goto	u1201
  2814  0012E2  EF75  F009         	goto	u1200
  2815  0012E6                     u1201:
  2816  0012E6  EF7B  F009         	goto	l1633
  2817  0012EA                     u1200:
  2818  0012EA  0E00               	movlw	0
  2819  0012EC  6E30               	movwf	(_dtoa$932+1)^0,c
  2820  0012EE  0E2B               	movlw	43
  2821  0012F0  6E2F               	movwf	_dtoa$932^0,c
  2822  0012F2  EF7F  F009         	goto	l1635
  2823  0012F6                     l1633:
  2824  0012F6  0E00               	movlw	0
  2825  0012F8  6E30               	movwf	(_dtoa$932+1)^0,c
  2826  0012FA  0E2D               	movlw	45
  2827  0012FC  6E2F               	movwf	_dtoa$932^0,c
  2828  0012FE                     l1635:
  2829  0012FE  0E00               	movlw	low _dbuf
  2830  001300  243F               	addwf	dtoa@i^0,w,c
  2831  001302  6ED9               	movwf	fsr2l,c
  2832  001304  0E01               	movlw	high _dbuf
  2833  001306  2040               	addwfc	(dtoa@i+1)^0,w,c
  2834  001308  6EDA               	movwf	fsr2h,c
  2835  00130A  C02F  FFDF         	movff	_dtoa$932,indf2
  2836  00130E                     l1637:
  2837                           
  2838                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2839  00130E  C01D  F012         	movff	dtoa@fp,pad@fp
  2840  001312  C01E  F013         	movff	dtoa@fp+1,pad@fp+1
  2841  001316  0E00               	movlw	low _dbuf
  2842  001318  243F               	addwf	dtoa@i^0,w,c
  2843  00131A  6E14               	movwf	pad@buf^0,c
  2844  00131C  0E01               	movlw	high _dbuf
  2845  00131E  2040               	addwfc	(dtoa@i+1)^0,w,c
  2846  001320  6E15               	movwf	(pad@buf+1)^0,c
  2847  001322  C033  F016         	movff	dtoa@w,pad@p
  2848  001326  C034  F017         	movff	dtoa@w+1,pad@p+1
  2849  00132A  EC3D  F00E         	call	_pad	;wreg free
  2850  00132E  C012  F01D         	movff	?_pad,?_dtoa
  2851  001332  C013  F01E         	movff	?_pad+1,?_dtoa+1
  2852  001336  0012               	return		;funcret
  2853  001338                     __end_of_dtoa:
  2854                           	callstack 0
  2855                           
  2856 ;; *************** function _pad *****************
  2857 ;; Defined at:
  2858 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  2861 ;;		 -> NULL(0), 
  2862 ;;  buf             2   19[COMRAM] PTR unsigned char 
  2863 ;;		 -> dbuf(32), 
  2864 ;;  p               2   21[COMRAM] int 
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;  w               2   26[COMRAM] int 
  2867 ;;  i               2   24[COMRAM] int 
  2868 ;; Return value:  Size  Location     Type
  2869 ;;                  2   17[COMRAM] int 
  2870 ;; Registers used:
  2871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2877 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2880 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2881 ;;Total ram usage:       11 bytes
  2882 ;; Hardware stack levels used:    1
  2883 ;; Hardware stack levels required when called:    3
  2884 ;; This function calls:
  2885 ;;		_fputc
  2886 ;;		_fputs
  2887 ;;		_strlen
  2888 ;; This function is called by:
  2889 ;;		_dtoa
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           	psect	text15
  2894  001C7A                     __ptext15:
  2895                           	callstack 0
  2896  001C7A                     _pad:
  2897                           	callstack 23
  2898  001C7A                     
  2899                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2900  001C7A  0100               	movlb	0	; () banked
  2901  001C7C  A1E3               	btfss	_flags& (0+255),0,b
  2902  001C7E  EF43  F00E         	goto	u961
  2903  001C82  EF45  F00E         	goto	u960
  2904  001C86                     u961:
  2905  001C86  EF4F  F00E         	goto	l1529
  2906  001C8A                     u960:
  2907  001C8A                     
  2908                           ; BSR set to: 0
  2909                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2910  001C8A  C014  F00B         	movff	pad@buf,fputs@s
  2911  001C8E  C015  F00C         	movff	pad@buf+1,fputs@s+1
  2912  001C92  C012  F00D         	movff	pad@fp,fputs@fp
  2913  001C96  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  2914  001C9A  EC64  F010         	call	_fputs	;wreg free
  2915  001C9E                     l1529:
  2916                           
  2917                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2918  001C9E  BE17               	btfsc	(pad@p+1)^0,7,c
  2919  001CA0  EF54  F00E         	goto	u971
  2920  001CA4  EF56  F00E         	goto	u970
  2921  001CA8                     u971:
  2922  001CA8  EF5C  F00E         	goto	l1533
  2923  001CAC                     u970:
  2924  001CAC  C016  F01B         	movff	pad@p,pad@w
  2925  001CB0  C017  F01C         	movff	pad@p+1,pad@w+1
  2926  001CB4  EF60  F00E         	goto	l808
  2927  001CB8                     l1533:
  2928  001CB8  0E00               	movlw	0
  2929  001CBA  6E1C               	movwf	(pad@w+1)^0,c
  2930  001CBC  0E00               	movlw	0
  2931  001CBE  6E1B               	movwf	pad@w^0,c
  2932  001CC0                     l808:
  2933                           
  2934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2935  001CC0  0E00               	movlw	0
  2936  001CC2  6E1A               	movwf	(pad@i+1)^0,c
  2937  001CC4  0E00               	movlw	0
  2938  001CC6  6E19               	movwf	pad@i^0,c
  2939                           
  2940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2941  001CC8  EF72  F00E         	goto	l1539
  2942  001CCC                     l1535:
  2943                           
  2944                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2945  001CCC  0E00               	movlw	0
  2946  001CCE  6E03               	movwf	(fputc@c+1)^0,c
  2947  001CD0  0E20               	movlw	32
  2948  001CD2  6E02               	movwf	fputc@c^0,c
  2949  001CD4  C012  F004         	movff	pad@fp,fputc@fp
  2950  001CD8  C013  F005         	movff	pad@fp+1,fputc@fp+1
  2951  001CDC  ECA0  F00E         	call	_fputc	;wreg free
  2952  001CE0                     
  2953                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2954  001CE0  4A19               	infsnz	pad@i^0,f,c
  2955  001CE2  2A1A               	incf	(pad@i+1)^0,f,c
  2956  001CE4                     l1539:
  2957                           
  2958                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2959  001CE4  501B               	movf	pad@w^0,w,c
  2960  001CE6  5C19               	subwf	pad@i^0,w,c
  2961  001CE8  501A               	movf	(pad@i+1)^0,w,c
  2962  001CEA  0A80               	xorlw	128
  2963  001CEC  6E18               	movwf	??_pad^0,c
  2964  001CEE  501C               	movf	(pad@w+1)^0,w,c
  2965  001CF0  0A80               	xorlw	128
  2966  001CF2  5818               	subwfb	??_pad^0,w,c
  2967  001CF4  A0D8               	btfss	status,0,c
  2968  001CF6  EF7F  F00E         	goto	u981
  2969  001CFA  EF81  F00E         	goto	u980
  2970  001CFE                     u981:
  2971  001CFE  EF66  F00E         	goto	l1535
  2972  001D02                     u980:
  2973  001D02                     
  2974                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2975  001D02  0100               	movlb	0	; () banked
  2976  001D04  B1E3               	btfsc	_flags& (0+255),0,b
  2977  001D06  EF87  F00E         	goto	u991
  2978  001D0A  EF89  F00E         	goto	u990
  2979  001D0E                     u991:
  2980  001D0E  EF93  F00E         	goto	l1543
  2981  001D12                     u990:
  2982  001D12                     
  2983                           ; BSR set to: 0
  2984                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2985  001D12  C014  F00B         	movff	pad@buf,fputs@s
  2986  001D16  C015  F00C         	movff	pad@buf+1,fputs@s+1
  2987  001D1A  C012  F00D         	movff	pad@fp,fputs@fp
  2988  001D1E  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  2989  001D22  EC64  F010         	call	_fputs	;wreg free
  2990  001D26                     l1543:
  2991                           
  2992                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2993  001D26  C014  F001         	movff	pad@buf,strlen@s
  2994  001D2A  C015  F002         	movff	pad@buf+1,strlen@s+1
  2995  001D2E  ECA6  F010         	call	_strlen	;wreg free
  2996  001D32  501B               	movf	pad@w^0,w,c
  2997  001D34  2401               	addwf	?_strlen^0,w,c
  2998  001D36  6E12               	movwf	?_pad^0,c
  2999  001D38  501C               	movf	(pad@w+1)^0,w,c
  3000  001D3A  2002               	addwfc	(?_strlen+1)^0,w,c
  3001  001D3C  6E13               	movwf	(?_pad+1)^0,c
  3002  001D3E  0012               	return		;funcret
  3003  001D40                     __end_of_pad:
  3004                           	callstack 0
  3005                           
  3006 ;; *************** function _strlen *****************
  3007 ;; Defined at:
  3008 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3011 ;;		 -> stoa@nuls(7), dbuf(32), ?_printf(2), main@buf_arr(50), 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3014 ;;		 -> stoa@nuls(7), dbuf(32), ?_printf(2), main@buf_arr(50), 
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  2    0[COMRAM] unsigned int 
  3017 ;; Registers used:
  3018 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3024 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3027 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3028 ;;Total ram usage:        4 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_pad
  3034 ;;		_stoa
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           	psect	text16
  3039  00214C                     __ptext16:
  3040                           	callstack 0
  3041  00214C                     _strlen:
  3042                           	callstack 26
  3043  00214C  C001  F003         	movff	strlen@s,strlen@a
  3044  002150  C002  F004         	movff	strlen@s+1,strlen@a+1
  3045  002154  EFAE  F010         	goto	l1439
  3046  002158                     l1437:
  3047  002158  4A01               	infsnz	strlen@s^0,f,c
  3048  00215A  2A02               	incf	(strlen@s+1)^0,f,c
  3049  00215C                     l1439:
  3050  00215C  C001  FFD9         	movff	strlen@s,fsr2l
  3051  002160  C002  FFDA         	movff	strlen@s+1,fsr2h
  3052  002164  50DF               	movf	indf2,w,c
  3053  002166  A4D8               	btfss	status,2,c
  3054  002168  EFB8  F010         	goto	u821
  3055  00216C  EFBA  F010         	goto	u820
  3056  002170                     u821:
  3057  002170  EFAC  F010         	goto	l1437
  3058  002174                     u820:
  3059  002174  5003               	movf	strlen@a^0,w,c
  3060  002176  5C01               	subwf	strlen@s^0,w,c
  3061  002178  6E01               	movwf	?_strlen^0,c
  3062  00217A  5004               	movf	(strlen@a+1)^0,w,c
  3063  00217C  5802               	subwfb	(strlen@s+1)^0,w,c
  3064  00217E  6E02               	movwf	(?_strlen+1)^0,c
  3065  002180  0012               	return		;funcret
  3066  002182                     __end_of_strlen:
  3067                           	callstack 0
  3068                           
  3069 ;; *************** function _fputs *****************
  3070 ;; Defined at:
  3071 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;  s               2   10[COMRAM] PTR const unsigned char 
  3074 ;;		 -> dbuf(32), 
  3075 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  3076 ;;		 -> NULL(0), 
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;  i               2   15[COMRAM] int 
  3079 ;;  c               1   14[COMRAM] unsigned char 
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  2   10[COMRAM] int 
  3082 ;; Registers used:
  3083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3089 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3090 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3092 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3093 ;;Total ram usage:        7 bytes
  3094 ;; Hardware stack levels used:    1
  3095 ;; Hardware stack levels required when called:    2
  3096 ;; This function calls:
  3097 ;;		_fputc
  3098 ;; This function is called by:
  3099 ;;		_pad
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           	psect	text17
  3104  0020C8                     __ptext17:
  3105                           	callstack 0
  3106  0020C8                     _fputs:
  3107                           	callstack 23
  3108  0020C8  0E00               	movlw	0
  3109  0020CA  6E11               	movwf	(fputs@i+1)^0,c
  3110  0020CC  0E00               	movlw	0
  3111  0020CE  6E10               	movwf	fputs@i^0,c
  3112  0020D0  EF75  F010         	goto	l1433
  3113  0020D4                     l1429:
  3114  0020D4  C00F  F002         	movff	fputs@c,fputc@c
  3115  0020D8  6A03               	clrf	(fputc@c+1)^0,c
  3116  0020DA  C00D  F004         	movff	fputs@fp,fputc@fp
  3117  0020DE  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  3118  0020E2  ECA0  F00E         	call	_fputc	;wreg free
  3119  0020E6  4A10               	infsnz	fputs@i^0,f,c
  3120  0020E8  2A11               	incf	(fputs@i+1)^0,f,c
  3121  0020EA                     l1433:
  3122  0020EA  5010               	movf	fputs@i^0,w,c
  3123  0020EC  240B               	addwf	fputs@s^0,w,c
  3124  0020EE  6ED9               	movwf	fsr2l,c
  3125  0020F0  5011               	movf	(fputs@i+1)^0,w,c
  3126  0020F2  200C               	addwfc	(fputs@s+1)^0,w,c
  3127  0020F4  6EDA               	movwf	fsr2h,c
  3128  0020F6  50DF               	movf	indf2,w,c
  3129  0020F8  6E0F               	movwf	fputs@c^0,c
  3130  0020FA  500F               	movf	fputs@c^0,w,c
  3131  0020FC  A4D8               	btfss	status,2,c
  3132  0020FE  EF83  F010         	goto	u811
  3133  002102  EF85  F010         	goto	u810
  3134  002106                     u811:
  3135  002106  EF6A  F010         	goto	l1429
  3136  00210A                     u810:
  3137  00210A  0012               	return		;funcret
  3138  00210C                     __end_of_fputs:
  3139                           	callstack 0
  3140                           
  3141 ;; *************** function _abs *****************
  3142 ;; Defined at:
  3143 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;  a               2   18[COMRAM] int 
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;		None
  3148 ;; Return value:  Size  Location     Type
  3149 ;;                  2   18[COMRAM] int 
  3150 ;; Registers used:
  3151 ;;		wreg, status,2, status,0
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3157 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3159 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3160 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3161 ;;Total ram usage:        4 bytes
  3162 ;; Hardware stack levels used:    1
  3163 ;; This function calls:
  3164 ;;		Nothing
  3165 ;; This function is called by:
  3166 ;;		_dtoa
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           	psect	text18
  3171  00210C                     __ptext18:
  3172                           	callstack 0
  3173  00210C                     _abs:
  3174                           	callstack 26
  3175  00210C  BE14               	btfsc	(abs@a+1)^0,7,c
  3176  00210E  EF93  F010         	goto	u1000
  3177  002112  5014               	movf	(abs@a+1)^0,w,c
  3178  002114  E106               	bnz	u1001
  3179  002116  0413               	decf	abs@a^0,w,c
  3180  002118  B0D8               	btfsc	status,0,c
  3181  00211A  EF91  F010         	goto	u1001
  3182  00211E  EF93  F010         	goto	u1000
  3183  002122                     u1001:
  3184  002122  EFA1  F010         	goto	l898
  3185  002126                     u1000:
  3186  002126  C013  F015         	movff	abs@a,??_abs
  3187  00212A  C014  F016         	movff	abs@a+1,??_abs+1
  3188  00212E  1E15               	comf	??_abs^0,f,c
  3189  002130  1E16               	comf	(??_abs+1)^0,f,c
  3190  002132  4A15               	infsnz	??_abs^0,f,c
  3191  002134  2A16               	incf	(??_abs+1)^0,f,c
  3192  002136  C015  F013         	movff	??_abs,?_abs
  3193  00213A  C016  F014         	movff	??_abs+1,?_abs+1
  3194  00213E  EFA5  F010         	goto	l901
  3195  002142                     l898:
  3196  002142  C013  F013         	movff	abs@a,?_abs
  3197  002146  C014  F014         	movff	abs@a+1,?_abs+1
  3198  00214A                     l901:
  3199  00214A  0012               	return		;funcret
  3200  00214C                     __end_of_abs:
  3201                           	callstack 0
  3202                           
  3203 ;; *************** function ___aomod *****************
  3204 ;; Defined at:
  3205 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;  dividend        8    0[COMRAM] long long 
  3208 ;;  divisor         8    8[COMRAM] long long 
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;  sign            1   17[COMRAM] unsigned char 
  3211 ;;  counter         1   16[COMRAM] unsigned char 
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  8    0[COMRAM] long long 
  3214 ;; Registers used:
  3215 ;;		wreg, status,2, status,0
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3221 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3222 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3224 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3225 ;;Total ram usage:       18 bytes
  3226 ;; Hardware stack levels used:    1
  3227 ;; This function calls:
  3228 ;;		Nothing
  3229 ;; This function is called by:
  3230 ;;		_dtoa
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           	psect	text19
  3235  0018E6                     __ptext19:
  3236                           	callstack 0
  3237  0018E6                     ___aomod:
  3238                           	callstack 26
  3239  0018E6  0E00               	movlw	0
  3240  0018E8  6E12               	movwf	___aomod@sign^0,c
  3241  0018EA  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3242  0018EC  EF7C  F00C         	goto	u900
  3243  0018F0  EF7A  F00C         	goto	u901
  3244  0018F4                     u901:
  3245  0018F4  EF8E  F00C         	goto	l1497
  3246  0018F8                     u900:
  3247  0018F8  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3248  0018FA  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3249  0018FC  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3250  0018FE  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3251  001900  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3252  001902  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3253  001904  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3254  001906  6C01               	negf	___aomod@dividend^0,c
  3255  001908  0E00               	movlw	0
  3256  00190A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3257  00190C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3258  00190E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3259  001910  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3260  001912  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3261  001914  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3262  001916  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3263  001918  0E01               	movlw	1
  3264  00191A  6E12               	movwf	___aomod@sign^0,c
  3265  00191C                     l1497:
  3266  00191C  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3267  00191E  EF95  F00C         	goto	u910
  3268  001922  EF93  F00C         	goto	u911
  3269  001926                     u911:
  3270  001926  EFA5  F00C         	goto	l1501
  3271  00192A                     u910:
  3272  00192A  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3273  00192C  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3274  00192E  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3275  001930  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3276  001932  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3277  001934  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3278  001936  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3279  001938  6C09               	negf	___aomod@divisor^0,c
  3280  00193A  0E00               	movlw	0
  3281  00193C  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3282  00193E  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3283  001940  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3284  001942  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3285  001944  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3286  001946  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3287  001948  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3288  00194A                     l1501:
  3289  00194A  5009               	movf	___aomod@divisor^0,w,c
  3290  00194C  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3291  00194E  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3292  001950  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3293  001952  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3294  001954  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3295  001956  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3296  001958  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3297  00195A  B4D8               	btfsc	status,2,c
  3298  00195C  EFB2  F00C         	goto	u921
  3299  001960  EFB4  F00C         	goto	u920
  3300  001964                     u921:
  3301  001964  EFFC  F00C         	goto	l1517
  3302  001968                     u920:
  3303  001968  0E01               	movlw	1
  3304  00196A  6E11               	movwf	___aomod@counter^0,c
  3305  00196C  EFC2  F00C         	goto	l1507
  3306  001970                     l1505:
  3307  001970  90D8               	bcf	status,0,c
  3308  001972  3609               	rlcf	___aomod@divisor^0,f,c
  3309  001974  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3310  001976  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3311  001978  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3312  00197A  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3313  00197C  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3314  00197E  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3315  001980  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3316  001982  2A11               	incf	___aomod@counter^0,f,c
  3317  001984                     l1507:
  3318  001984  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3319  001986  EFC7  F00C         	goto	u931
  3320  00198A  EFC9  F00C         	goto	u930
  3321  00198E                     u931:
  3322  00198E  EFB8  F00C         	goto	l1505
  3323  001992                     u930:
  3324  001992                     l1509:
  3325  001992  5009               	movf	___aomod@divisor^0,w,c
  3326  001994  5C01               	subwf	___aomod@dividend^0,w,c
  3327  001996  500A               	movf	(___aomod@divisor+1)^0,w,c
  3328  001998  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3329  00199A  500B               	movf	(___aomod@divisor+2)^0,w,c
  3330  00199C  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3331  00199E  500C               	movf	(___aomod@divisor+3)^0,w,c
  3332  0019A0  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3333  0019A2  500D               	movf	(___aomod@divisor+4)^0,w,c
  3334  0019A4  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3335  0019A6  500E               	movf	(___aomod@divisor+5)^0,w,c
  3336  0019A8  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3337  0019AA  500F               	movf	(___aomod@divisor+6)^0,w,c
  3338  0019AC  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3339  0019AE  5010               	movf	(___aomod@divisor+7)^0,w,c
  3340  0019B0  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3341  0019B2  A0D8               	btfss	status,0,c
  3342  0019B4  EFDE  F00C         	goto	u941
  3343  0019B8  EFE0  F00C         	goto	u940
  3344  0019BC                     u941:
  3345  0019BC  EFF0  F00C         	goto	l1513
  3346  0019C0                     u940:
  3347  0019C0  5009               	movf	___aomod@divisor^0,w,c
  3348  0019C2  5E01               	subwf	___aomod@dividend^0,f,c
  3349  0019C4  500A               	movf	(___aomod@divisor+1)^0,w,c
  3350  0019C6  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3351  0019C8  500B               	movf	(___aomod@divisor+2)^0,w,c
  3352  0019CA  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3353  0019CC  500C               	movf	(___aomod@divisor+3)^0,w,c
  3354  0019CE  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3355  0019D0  500D               	movf	(___aomod@divisor+4)^0,w,c
  3356  0019D2  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3357  0019D4  500E               	movf	(___aomod@divisor+5)^0,w,c
  3358  0019D6  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3359  0019D8  500F               	movf	(___aomod@divisor+6)^0,w,c
  3360  0019DA  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3361  0019DC  5010               	movf	(___aomod@divisor+7)^0,w,c
  3362  0019DE  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3363  0019E0                     l1513:
  3364  0019E0  90D8               	bcf	status,0,c
  3365  0019E2  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3366  0019E4  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3367  0019E6  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3368  0019E8  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3369  0019EA  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3370  0019EC  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3371  0019EE  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3372  0019F0  3209               	rrcf	___aomod@divisor^0,f,c
  3373  0019F2  2E11               	decfsz	___aomod@counter^0,f,c
  3374  0019F4  EFC9  F00C         	goto	l1509
  3375  0019F8                     l1517:
  3376  0019F8  5012               	movf	___aomod@sign^0,w,c
  3377  0019FA  B4D8               	btfsc	status,2,c
  3378  0019FC  EF02  F00D         	goto	u951
  3379  001A00  EF04  F00D         	goto	u950
  3380  001A04                     u951:
  3381  001A04  EF14  F00D         	goto	l1521
  3382  001A08                     u950:
  3383  001A08  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3384  001A0A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3385  001A0C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3386  001A0E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3387  001A10  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3388  001A12  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3389  001A14  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3390  001A16  6C01               	negf	___aomod@dividend^0,c
  3391  001A18  0E00               	movlw	0
  3392  001A1A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3393  001A1C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3394  001A1E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3395  001A20  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3396  001A22  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3397  001A24  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3398  001A26  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3399  001A28                     l1521:
  3400  001A28  C001  F001         	movff	___aomod@dividend,?___aomod
  3401  001A2C  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3402  001A30  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3403  001A34  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3404  001A38  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3405  001A3C  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3406  001A40  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3407  001A44  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3408  001A48  0012               	return		;funcret
  3409  001A4A                     __end_of___aomod:
  3410                           	callstack 0
  3411                           
  3412 ;; *************** function ___aodiv *****************
  3413 ;; Defined at:
  3414 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  dividend        8    0[COMRAM] long long 
  3417 ;;  divisor         8    8[COMRAM] long long 
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;  quotient        8   18[COMRAM] long long 
  3420 ;;  sign            1   17[COMRAM] unsigned char 
  3421 ;;  counter         1   16[COMRAM] unsigned char 
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  8    0[COMRAM] long long 
  3424 ;; Registers used:
  3425 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3431 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3432 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3434 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3435 ;;Total ram usage:       26 bytes
  3436 ;; Hardware stack levels used:    1
  3437 ;; This function calls:
  3438 ;;		Nothing
  3439 ;; This function is called by:
  3440 ;;		_dtoa
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444                           	psect	text20
  3445  0015D8                     __ptext20:
  3446                           	callstack 0
  3447  0015D8                     ___aodiv:
  3448                           	callstack 26
  3449  0015D8  0E00               	movlw	0
  3450  0015DA  6E12               	movwf	___aodiv@sign^0,c
  3451  0015DC  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3452  0015DE  EFF5  F00A         	goto	u830
  3453  0015E2  EFF3  F00A         	goto	u831
  3454  0015E6                     u831:
  3455  0015E6  EF07  F00B         	goto	l1453
  3456  0015EA                     u830:
  3457  0015EA  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3458  0015EC  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3459  0015EE  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3460  0015F0  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3461  0015F2  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3462  0015F4  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3463  0015F6  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3464  0015F8  6C09               	negf	___aodiv@divisor^0,c
  3465  0015FA  0E00               	movlw	0
  3466  0015FC  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3467  0015FE  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3468  001600  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3469  001602  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3470  001604  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3471  001606  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3472  001608  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3473  00160A  0E01               	movlw	1
  3474  00160C  6E12               	movwf	___aodiv@sign^0,c
  3475  00160E                     l1453:
  3476  00160E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3477  001610  EF0E  F00B         	goto	u840
  3478  001614  EF0C  F00B         	goto	u841
  3479  001618                     u841:
  3480  001618  EF20  F00B         	goto	l1459
  3481  00161C                     u840:
  3482  00161C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3483  00161E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3484  001620  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3485  001622  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3486  001624  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3487  001626  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3488  001628  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3489  00162A  6C01               	negf	___aodiv@dividend^0,c
  3490  00162C  0E00               	movlw	0
  3491  00162E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3492  001630  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3493  001632  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3494  001634  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3495  001636  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3496  001638  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3497  00163A  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3498  00163C  0E01               	movlw	1
  3499  00163E  1A12               	xorwf	___aodiv@sign^0,f,c
  3500  001640                     l1459:
  3501  001640  EE20  F013         	lfsr	2,___aodiv@quotient
  3502  001644  0E07               	movlw	7
  3503  001646                     u851:
  3504  001646  6ADE               	clrf	postinc2,c
  3505  001648  06E8               	decf	wreg,f,c
  3506  00164A  E2FD               	bc	u851
  3507  00164C  5009               	movf	___aodiv@divisor^0,w,c
  3508  00164E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3509  001650  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3510  001652  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3511  001654  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3512  001656  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3513  001658  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3514  00165A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3515  00165C  B4D8               	btfsc	status,2,c
  3516  00165E  EF33  F00B         	goto	u861
  3517  001662  EF35  F00B         	goto	u860
  3518  001666                     u861:
  3519  001666  EF87  F00B         	goto	l1481
  3520  00166A                     u860:
  3521  00166A  0E01               	movlw	1
  3522  00166C  6E11               	movwf	___aodiv@counter^0,c
  3523  00166E  EF43  F00B         	goto	l1467
  3524  001672                     l1465:
  3525  001672  90D8               	bcf	status,0,c
  3526  001674  3609               	rlcf	___aodiv@divisor^0,f,c
  3527  001676  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3528  001678  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3529  00167A  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3530  00167C  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3531  00167E  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3532  001680  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3533  001682  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3534  001684  2A11               	incf	___aodiv@counter^0,f,c
  3535  001686                     l1467:
  3536  001686  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3537  001688  EF48  F00B         	goto	u871
  3538  00168C  EF4A  F00B         	goto	u870
  3539  001690                     u871:
  3540  001690  EF39  F00B         	goto	l1465
  3541  001694                     u870:
  3542  001694                     l1469:
  3543  001694  90D8               	bcf	status,0,c
  3544  001696  3613               	rlcf	___aodiv@quotient^0,f,c
  3545  001698  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3546  00169A  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3547  00169C  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3548  00169E  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3549  0016A0  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3550  0016A2  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3551  0016A4  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3552  0016A6  5009               	movf	___aodiv@divisor^0,w,c
  3553  0016A8  5C01               	subwf	___aodiv@dividend^0,w,c
  3554  0016AA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3555  0016AC  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3556  0016AE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3557  0016B0  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3558  0016B2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3559  0016B4  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3560  0016B6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3561  0016B8  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3562  0016BA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3563  0016BC  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3564  0016BE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3565  0016C0  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3566  0016C2  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3567  0016C4  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3568  0016C6  A0D8               	btfss	status,0,c
  3569  0016C8  EF68  F00B         	goto	u881
  3570  0016CC  EF6A  F00B         	goto	u880
  3571  0016D0                     u881:
  3572  0016D0  EF7B  F00B         	goto	l1477
  3573  0016D4                     u880:
  3574  0016D4  5009               	movf	___aodiv@divisor^0,w,c
  3575  0016D6  5E01               	subwf	___aodiv@dividend^0,f,c
  3576  0016D8  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3577  0016DA  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3578  0016DC  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3579  0016DE  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3580  0016E0  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3581  0016E2  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3582  0016E4  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3583  0016E6  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3584  0016E8  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3585  0016EA  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3586  0016EC  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3587  0016EE  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3588  0016F0  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3589  0016F2  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3590  0016F4  8013               	bsf	___aodiv@quotient^0,0,c
  3591  0016F6                     l1477:
  3592  0016F6  90D8               	bcf	status,0,c
  3593  0016F8  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3594  0016FA  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3595  0016FC  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3596  0016FE  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3597  001700  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3598  001702  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3599  001704  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3600  001706  3209               	rrcf	___aodiv@divisor^0,f,c
  3601  001708  2E11               	decfsz	___aodiv@counter^0,f,c
  3602  00170A  EF4A  F00B         	goto	l1469
  3603  00170E                     l1481:
  3604  00170E  5012               	movf	___aodiv@sign^0,w,c
  3605  001710  B4D8               	btfsc	status,2,c
  3606  001712  EF8D  F00B         	goto	u891
  3607  001716  EF8F  F00B         	goto	u890
  3608  00171A                     u891:
  3609  00171A  EF9F  F00B         	goto	l1485
  3610  00171E                     u890:
  3611  00171E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3612  001720  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3613  001722  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3614  001724  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3615  001726  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3616  001728  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3617  00172A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3618  00172C  6C13               	negf	___aodiv@quotient^0,c
  3619  00172E  0E00               	movlw	0
  3620  001730  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3621  001732  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3622  001734  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3623  001736  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3624  001738  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3625  00173A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3626  00173C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3627  00173E                     l1485:
  3628  00173E  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3629  001742  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3630  001746  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3631  00174A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3632  00174E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3633  001752  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3634  001756  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3635  00175A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3636  00175E  0012               	return		;funcret
  3637  001760                     __end_of___aodiv:
  3638                           	callstack 0
  3639                           
  3640 ;; *************** function _ctoa *****************
  3641 ;; Defined at:
  3642 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  3645 ;;		 -> NULL(0), 
  3646 ;;  c               1   12[COMRAM] unsigned char 
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;  w               2   16[COMRAM] int 
  3649 ;;  l               2   14[COMRAM] int 
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  2   10[COMRAM] int 
  3652 ;; Registers used:
  3653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3659 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3663 ;;Total ram usage:        8 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; Hardware stack levels required when called:    2
  3666 ;; This function calls:
  3667 ;;		_fputc
  3668 ;; This function is called by:
  3669 ;;		_vfpfcnvrt
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text21
  3674  001BA2                     __ptext21:
  3675                           	callstack 0
  3676  001BA2                     _ctoa:
  3677                           	callstack 25
  3678  001BA2                     
  3679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  3680  001BA2  0100               	movlb	0	; () banked
  3681  001BA4  51DF               	movf	_width& (0+255),w,b
  3682  001BA6  11E0               	iorwf	(_width+1)& (0+255),w,b
  3683  001BA8  A4D8               	btfss	status,2,c
  3684  001BAA  EFD9  F00D         	goto	u1011
  3685  001BAE  EFDB  F00D         	goto	u1010
  3686  001BB2                     u1011:
  3687  001BB2  EFE1  F00D         	goto	l1555
  3688  001BB6                     u1010:
  3689  001BB6                     
  3690                           ; BSR set to: 0
  3691  001BB6  C0DF  F011         	movff	_width,ctoa@w
  3692  001BBA  C0E0  F012         	movff	_width+1,ctoa@w+1
  3693  001BBE  EFE7  F00D         	goto	l1557
  3694  001BC2                     l1555:
  3695                           
  3696                           ; BSR set to: 0
  3697  001BC2  0EFF               	movlw	255
  3698  001BC4  25DF               	addwf	_width& (0+255),w,b
  3699  001BC6  6E11               	movwf	ctoa@w^0,c
  3700  001BC8  0EFF               	movlw	255
  3701  001BCA  21E0               	addwfc	(_width+1)& (0+255),w,b
  3702  001BCC  6E12               	movwf	(ctoa@w+1)^0,c
  3703  001BCE                     l1557:
  3704                           
  3705                           ; BSR set to: 0
  3706                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  3707  001BCE  A1E3               	btfss	_flags& (0+255),0,b
  3708  001BD0  EFEC  F00D         	goto	u1021
  3709  001BD4  EFEE  F00D         	goto	u1020
  3710  001BD8                     u1021:
  3711  001BD8  EFF7  F00D         	goto	l1561
  3712  001BDC                     u1020:
  3713  001BDC                     
  3714                           ; BSR set to: 0
  3715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  3716  001BDC  C00D  F002         	movff	ctoa@c,fputc@c
  3717  001BE0  6A03               	clrf	(fputc@c+1)^0,c
  3718  001BE2  C00B  F004         	movff	ctoa@fp,fputc@fp
  3719  001BE6  C00C  F005         	movff	ctoa@fp+1,fputc@fp+1
  3720  001BEA  ECA0  F00E         	call	_fputc	;wreg free
  3721  001BEE                     l1561:
  3722                           
  3723                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  3724  001BEE  BE12               	btfsc	(ctoa@w+1)^0,7,c
  3725  001BF0  EFFC  F00D         	goto	u1031
  3726  001BF4  EFFE  F00D         	goto	u1030
  3727  001BF8                     u1031:
  3728  001BF8  EF00  F00E         	goto	l1565
  3729  001BFC                     u1030:
  3730  001BFC  EF04  F00E         	goto	l824
  3731  001C00                     l1565:
  3732  001C00  0E00               	movlw	0
  3733  001C02  6E12               	movwf	(ctoa@w+1)^0,c
  3734  001C04  0E00               	movlw	0
  3735  001C06  6E11               	movwf	ctoa@w^0,c
  3736  001C08                     l824:
  3737                           
  3738                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  3739  001C08  0E00               	movlw	0
  3740  001C0A  6E10               	movwf	(ctoa@l+1)^0,c
  3741  001C0C  0E00               	movlw	0
  3742  001C0E  6E0F               	movwf	ctoa@l^0,c
  3743                           
  3744                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  3745  001C10  EF16  F00E         	goto	l1571
  3746  001C14                     l1567:
  3747                           
  3748                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  3749  001C14  0E00               	movlw	0
  3750  001C16  6E03               	movwf	(fputc@c+1)^0,c
  3751  001C18  0E20               	movlw	32
  3752  001C1A  6E02               	movwf	fputc@c^0,c
  3753  001C1C  C00B  F004         	movff	ctoa@fp,fputc@fp
  3754  001C20  C00C  F005         	movff	ctoa@fp+1,fputc@fp+1
  3755  001C24  ECA0  F00E         	call	_fputc	;wreg free
  3756  001C28                     
  3757                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 275:         ++l;
  3758  001C28  4A0F               	infsnz	ctoa@l^0,f,c
  3759  001C2A  2A10               	incf	(ctoa@l+1)^0,f,c
  3760  001C2C                     l1571:
  3761                           
  3762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  3763  001C2C  5011               	movf	ctoa@w^0,w,c
  3764  001C2E  5C0F               	subwf	ctoa@l^0,w,c
  3765  001C30  5010               	movf	(ctoa@l+1)^0,w,c
  3766  001C32  0A80               	xorlw	128
  3767  001C34  6E0E               	movwf	??_ctoa^0,c
  3768  001C36  5012               	movf	(ctoa@w+1)^0,w,c
  3769  001C38  0A80               	xorlw	128
  3770  001C3A  580E               	subwfb	??_ctoa^0,w,c
  3771  001C3C  A0D8               	btfss	status,0,c
  3772  001C3E  EF23  F00E         	goto	u1041
  3773  001C42  EF25  F00E         	goto	u1040
  3774  001C46                     u1041:
  3775  001C46  EF0A  F00E         	goto	l1567
  3776  001C4A                     u1040:
  3777  001C4A                     
  3778                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  3779  001C4A  0100               	movlb	0	; () banked
  3780  001C4C  B1E3               	btfsc	_flags& (0+255),0,b
  3781  001C4E  EF2B  F00E         	goto	u1051
  3782  001C52  EF2D  F00E         	goto	u1050
  3783  001C56                     u1051:
  3784  001C56  EF36  F00E         	goto	l1575
  3785  001C5A                     u1050:
  3786  001C5A                     
  3787                           ; BSR set to: 0
  3788                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  3789  001C5A  C00D  F002         	movff	ctoa@c,fputc@c
  3790  001C5E  6A03               	clrf	(fputc@c+1)^0,c
  3791  001C60  C00B  F004         	movff	ctoa@fp,fputc@fp
  3792  001C64  C00C  F005         	movff	ctoa@fp+1,fputc@fp+1
  3793  001C68  ECA0  F00E         	call	_fputc	;wreg free
  3794  001C6C                     l1575:
  3795                           
  3796                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  3797  001C6C  0E01               	movlw	1
  3798  001C6E  240F               	addwf	ctoa@l^0,w,c
  3799  001C70  6E0B               	movwf	?_ctoa^0,c
  3800  001C72  0E00               	movlw	0
  3801  001C74  2010               	addwfc	(ctoa@l+1)^0,w,c
  3802  001C76  6E0C               	movwf	(?_ctoa+1)^0,c
  3803  001C78  0012               	return		;funcret
  3804  001C7A                     __end_of_ctoa:
  3805                           	callstack 0
  3806                           
  3807 ;; *************** function _fputc *****************
  3808 ;; Defined at:
  3809 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  3810 ;; Parameters:    Size  Location     Type
  3811 ;;  c               2    1[COMRAM] int 
  3812 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  3813 ;;		 -> NULL(0), 
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;		None
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  2    1[COMRAM] int 
  3818 ;; Registers used:
  3819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3825 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3827 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3828 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3829 ;;Total ram usage:        9 bytes
  3830 ;; Hardware stack levels used:    1
  3831 ;; Hardware stack levels required when called:    1
  3832 ;; This function calls:
  3833 ;;		_putch
  3834 ;; This function is called by:
  3835 ;;		_pad
  3836 ;;		_ctoa
  3837 ;;		_stoa
  3838 ;;		_vfpfcnvrt
  3839 ;;		_fputs
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           	psect	text22
  3844  001D40                     __ptext22:
  3845                           	callstack 0
  3846  001D40                     _fputc:
  3847                           	callstack 25
  3848  001D40  5004               	movf	fputc@fp^0,w,c
  3849  001D42  1005               	iorwf	(fputc@fp+1)^0,w,c
  3850  001D44  B4D8               	btfsc	status,2,c
  3851  001D46  EFA7  F00E         	goto	u771
  3852  001D4A  EFA9  F00E         	goto	u770
  3853  001D4E                     u771:
  3854  001D4E  EFB2  F00E         	goto	l1417
  3855  001D52                     u770:
  3856  001D52  5004               	movf	fputc@fp^0,w,c
  3857  001D54  1005               	iorwf	(fputc@fp+1)^0,w,c
  3858  001D56  A4D8               	btfss	status,2,c
  3859  001D58  EFB0  F00E         	goto	u781
  3860  001D5C  EFB2  F00E         	goto	u780
  3861  001D60                     u781:
  3862  001D60  EFB7  F00E         	goto	l1419
  3863  001D64                     u780:
  3864  001D64                     l1417:
  3865  001D64  5002               	movf	fputc@c^0,w,c
  3866  001D66  EC20  F011         	call	_putch
  3867  001D6A  EFEA  F00E         	goto	l913
  3868  001D6E                     l1419:
  3869  001D6E  EE20 F004          	lfsr	2,4
  3870  001D72  5004               	movf	fputc@fp^0,w,c
  3871  001D74  26D9               	addwf	fsr2l,f,c
  3872  001D76  5005               	movf	(fputc@fp+1)^0,w,c
  3873  001D78  22DA               	addwfc	fsr2h,f,c
  3874  001D7A  50DE               	movf	postinc2,w,c
  3875  001D7C  10DE               	iorwf	postinc2,w,c
  3876  001D7E  B4D8               	btfsc	status,2,c
  3877  001D80  EFC4  F00E         	goto	u791
  3878  001D84  EFC6  F00E         	goto	u790
  3879  001D88                     u791:
  3880  001D88  EFE1  F00E         	goto	l1423
  3881  001D8C                     u790:
  3882  001D8C  EE20 F004          	lfsr	2,4
  3883  001D90  5004               	movf	fputc@fp^0,w,c
  3884  001D92  26D9               	addwf	fsr2l,f,c
  3885  001D94  5005               	movf	(fputc@fp+1)^0,w,c
  3886  001D96  22DA               	addwfc	fsr2h,f,c
  3887  001D98  EE10 F002          	lfsr	1,2
  3888  001D9C  5004               	movf	fputc@fp^0,w,c
  3889  001D9E  26E1               	addwf	fsr1l,f,c
  3890  001DA0  5005               	movf	(fputc@fp+1)^0,w,c
  3891  001DA2  22E2               	addwfc	fsr1h,f,c
  3892  001DA4  50DE               	movf	postinc2,w,c
  3893  001DA6  5CE6               	subwf	postinc1,w,c
  3894  001DA8  50E6               	movf	postinc1,w,c
  3895  001DAA  0A80               	xorlw	128
  3896  001DAC  6E0A               	movwf	(??_fputc+4)^0,c
  3897  001DAE  50DE               	movf	postinc2,w,c
  3898  001DB0  0A80               	xorlw	128
  3899  001DB2  580A               	subwfb	(??_fputc+4)^0,w,c
  3900  001DB4  B0D8               	btfsc	status,0,c
  3901  001DB6  EFDF  F00E         	goto	u801
  3902  001DBA  EFE1  F00E         	goto	u800
  3903  001DBE                     u801:
  3904  001DBE  EFEA  F00E         	goto	l913
  3905  001DC2                     u800:
  3906  001DC2                     l1423:
  3907  001DC2  EE20 F002          	lfsr	2,2
  3908  001DC6  5004               	movf	fputc@fp^0,w,c
  3909  001DC8  26D9               	addwf	fsr2l,f,c
  3910  001DCA  5005               	movf	(fputc@fp+1)^0,w,c
  3911  001DCC  22DA               	addwfc	fsr2h,f,c
  3912  001DCE  2ADE               	incf	postinc2,f,c
  3913  001DD0  0E00               	movlw	0
  3914  001DD2  22DD               	addwfc	postdec2,f,c
  3915  001DD4                     l913:
  3916  001DD4  0012               	return		;funcret
  3917  001DD6                     __end_of_fputc:
  3918                           	callstack 0
  3919                           
  3920 ;; *************** function _putch *****************
  3921 ;; Defined at:
  3922 ;;		line 135 in file "main.c"
  3923 ;; Parameters:    Size  Location     Type
  3924 ;;  data            1    wreg     unsigned char 
  3925 ;; Auto vars:     Size  Location     Type
  3926 ;;  data            1    0[COMRAM] unsigned char 
  3927 ;; Return value:  Size  Location     Type
  3928 ;;                  1    wreg      void 
  3929 ;; Registers used:
  3930 ;;		wreg
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : 0/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3937 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3939 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3940 ;;Total ram usage:        1 bytes
  3941 ;; Hardware stack levels used:    1
  3942 ;; This function calls:
  3943 ;;		Nothing
  3944 ;; This function is called by:
  3945 ;;		_fputc
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           	psect	text23
  3950  002240                     __ptext23:
  3951                           	callstack 0
  3952  002240                     _putch:
  3953                           	callstack 25
  3954                           
  3955                           ;incstack = 0
  3956                           ;putch@data stored from wreg
  3957  002240  6E01               	movwf	putch@data^0,c
  3958  002242                     l58:
  3959  002242  A89E               	btfss	3998,4,c	;volatile
  3960  002244  EF26  F011         	goto	u761
  3961  002248  EF28  F011         	goto	u760
  3962  00224C                     u761:
  3963  00224C  EF21  F011         	goto	l58
  3964  002250                     u760:
  3965  002250                     
  3966                           ;main.c: 137:     TXREG1 = data;
  3967  002250  C001  FFAD         	movff	putch@data,4013	;volatile
  3968  002254  0012               	return		;funcret
  3969  002256                     __end_of_putch:
  3970                           	callstack 0
  3971                           
  3972 ;; *************** function _init *****************
  3973 ;; Defined at:
  3974 ;;		line 72 in file "main.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;		None
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;		None
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  1    wreg      void 
  3981 ;; Registers used:
  3982 ;;		wreg, status,2
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/0
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;Total ram usage:        0 bytes
  3993 ;; Hardware stack levels used:    1
  3994 ;; This function calls:
  3995 ;;		Nothing
  3996 ;; This function is called by:
  3997 ;;		_main
  3998 ;; This function uses a non-reentrant model
  3999 ;;
  4000                           
  4001                           	psect	text24
  4002  002224                     __ptext24:
  4003                           	callstack 0
  4004  002224                     _init:
  4005                           	callstack 30
  4006  002224                     
  4007                           ;main.c: 74:     TRISBbits.TRISB5 = 0;
  4008  002224  9A93               	bcf	147,5,c	;volatile
  4009  002226                     
  4010                           ;main.c: 76:     ANSELC = 0x00;
  4011  002226  0E00               	movlw	0
  4012  002228  010F               	movlb	15	; () banked
  4013  00222A  6F3A               	movwf	58,b	;volatile
  4014                           
  4015                           ;main.c: 77:     TRISD = 0x00;
  4016  00222C  0E00               	movlw	0
  4017  00222E  6E95               	movwf	149,c	;volatile
  4018  002230                     
  4019                           ; BSR set to: 15
  4020                           ;main.c: 78:     TRISCbits.TRISC6 = 1;
  4021  002230  8C94               	bsf	148,6,c	;volatile
  4022  002232                     
  4023                           ; BSR set to: 15
  4024                           ;main.c: 79:     TRISCbits.TRISC7 = 1;
  4025  002232  8E94               	bsf	148,7,c	;volatile
  4026                           
  4027                           ;main.c: 82:     SPBRG1 = 51;
  4028  002234  0E33               	movlw	51
  4029  002236  6EAF               	movwf	175,c	;volatile
  4030  002238                     
  4031                           ; BSR set to: 15
  4032                           ;main.c: 84:     RCSTA1bits.SPEN = 1;
  4033  002238  8EAB               	bsf	171,7,c	;volatile
  4034  00223A                     
  4035                           ; BSR set to: 15
  4036                           ;main.c: 85:     TXSTA1bits.TXEN = 1;
  4037  00223A  8AAC               	bsf	172,5,c	;volatile
  4038  00223C                     
  4039                           ; BSR set to: 15
  4040                           ;main.c: 86:     RCSTA1bits.CREN = 1;
  4041  00223C  88AB               	bsf	171,4,c	;volatile
  4042  00223E                     
  4043                           ; BSR set to: 15
  4044  00223E  0012               	return		;funcret
  4045  002240                     __end_of_init:
  4046                           	callstack 0
  4047                           
  4048                           	psect	rparam
  4049  0000                     
  4050                           	psect	idloc
  4051                           
  4052                           ;Config register IDLOC0 @ 0x200000
  4053                           ;	unspecified, using default values
  4054  200000                     	org	2097152
  4055  200000  FF                 	db	255
  4056                           
  4057                           ;Config register IDLOC1 @ 0x200001
  4058                           ;	unspecified, using default values
  4059  200001                     	org	2097153
  4060  200001  FF                 	db	255
  4061                           
  4062                           ;Config register IDLOC2 @ 0x200002
  4063                           ;	unspecified, using default values
  4064  200002                     	org	2097154
  4065  200002  FF                 	db	255
  4066                           
  4067                           ;Config register IDLOC3 @ 0x200003
  4068                           ;	unspecified, using default values
  4069  200003                     	org	2097155
  4070  200003  FF                 	db	255
  4071                           
  4072                           ;Config register IDLOC4 @ 0x200004
  4073                           ;	unspecified, using default values
  4074  200004                     	org	2097156
  4075  200004  FF                 	db	255
  4076                           
  4077                           ;Config register IDLOC5 @ 0x200005
  4078                           ;	unspecified, using default values
  4079  200005                     	org	2097157
  4080  200005  FF                 	db	255
  4081                           
  4082                           ;Config register IDLOC6 @ 0x200006
  4083                           ;	unspecified, using default values
  4084  200006                     	org	2097158
  4085  200006  FF                 	db	255
  4086                           
  4087                           ;Config register IDLOC7 @ 0x200007
  4088                           ;	unspecified, using default values
  4089  200007                     	org	2097159
  4090  200007  FF                 	db	255
  4091                           
  4092                           	psect	config
  4093                           
  4094                           ; Padding undefined space
  4095  300000                     	org	3145728
  4096  300000  FF                 	db	255
  4097                           
  4098                           ;Config register CONFIG1H @ 0x300001
  4099                           ;	Oscillator Selection bits
  4100                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
  4101                           ;	4X PLL Enable
  4102                           ;	PLLCFG = ON, Oscillator multiplied by 4
  4103                           ;	Primary clock enable bit
  4104                           ;	PRICLKEN = ON, Primary clock is always enabled
  4105                           ;	Fail-Safe Clock Monitor Enable bit
  4106                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4107                           ;	Internal/External Oscillator Switchover bit
  4108                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4109  300001                     	org	3145729
  4110  300001  33                 	db	51
  4111                           
  4112                           ;Config register CONFIG2L @ 0x300002
  4113                           ;	Power-up Timer Enable bit
  4114                           ;	PWRTEN = OFF, Power up timer disabled
  4115                           ;	Brown-out Reset Enable bits
  4116                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4117                           ;	Brown Out Reset Voltage bits
  4118                           ;	BORV = 190, VBOR set to 1.90 V nominal
  4119  300002                     	org	3145730
  4120  300002  1F                 	db	31
  4121                           
  4122                           ;Config register CONFIG2H @ 0x300003
  4123                           ;	Watchdog Timer Enable bits
  4124                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  4125                           ;	Watchdog Timer Postscale Select bits
  4126                           ;	WDTPS = 32768, 1:32768
  4127  300003                     	org	3145731
  4128  300003  3C                 	db	60
  4129                           
  4130                           ; Padding undefined space
  4131  300004                     	org	3145732
  4132  300004  FF                 	db	255
  4133                           
  4134                           ;Config register CONFIG3H @ 0x300005
  4135                           ;	CCP2 MUX bit
  4136                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  4137                           ;	PORTB A/D Enable bit
  4138                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  4139                           ;	P3A/CCP3 Mux bit
  4140                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  4141                           ;	HFINTOSC Fast Start-up
  4142                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  4143                           ;	Timer3 Clock input mux bit
  4144                           ;	T3CMX = PORTC0, T3CKI is on RC0
  4145                           ;	ECCP2 B output mux bit
  4146                           ;	P2BMX = PORTD2, P2B is on RD2
  4147                           ;	MCLR Pin Enable bit
  4148                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  4149  300005                     	org	3145733
  4150  300005  BF                 	db	191
  4151                           
  4152                           ;Config register CONFIG4L @ 0x300006
  4153                           ;	Stack Full/Underflow Reset Enable bit
  4154                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4155                           ;	Single-Supply ICSP Enable bit
  4156                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4157                           ;	Extended Instruction Set Enable bit
  4158                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4159                           ;	Background Debug
  4160                           ;	DEBUG = 0x1, unprogrammed default
  4161  300006                     	org	3145734
  4162  300006  85                 	db	133
  4163                           
  4164                           ; Padding undefined space
  4165  300007                     	org	3145735
  4166  300007  FF                 	db	255
  4167                           
  4168                           ;Config register CONFIG5L @ 0x300008
  4169                           ;	Code Protection Block 0
  4170                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4171                           ;	Code Protection Block 1
  4172                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4173                           ;	Code Protection Block 2
  4174                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4175                           ;	Code Protection Block 3
  4176                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4177  300008                     	org	3145736
  4178  300008  0F                 	db	15
  4179                           
  4180                           ;Config register CONFIG5H @ 0x300009
  4181                           ;	Boot Block Code Protection bit
  4182                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4183                           ;	Data EEPROM Code Protection bit
  4184                           ;	CPD = OFF, Data EEPROM not code-protected
  4185  300009                     	org	3145737
  4186  300009  C0                 	db	192
  4187                           
  4188                           ;Config register CONFIG6L @ 0x30000A
  4189                           ;	Write Protection Block 0
  4190                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4191                           ;	Write Protection Block 1
  4192                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4193                           ;	Write Protection Block 2
  4194                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4195                           ;	Write Protection Block 3
  4196                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  4197  30000A                     	org	3145738
  4198  30000A  0F                 	db	15
  4199                           
  4200                           ;Config register CONFIG6H @ 0x30000B
  4201                           ;	Configuration Register Write Protection bit
  4202                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4203                           ;	Boot Block Write Protection bit
  4204                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4205                           ;	Data EEPROM Write Protection bit
  4206                           ;	WRTD = OFF, Data EEPROM not write-protected
  4207  30000B                     	org	3145739
  4208  30000B  E0                 	db	224
  4209                           
  4210                           ;Config register CONFIG7L @ 0x30000C
  4211                           ;	Table Read Protection Block 0
  4212                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  4213                           ;	Table Read Protection Block 1
  4214                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4215                           ;	Table Read Protection Block 2
  4216                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  4217                           ;	Table Read Protection Block 3
  4218                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  4219  30000C                     	org	3145740
  4220  30000C  0F                 	db	15
  4221                           
  4222                           ;Config register CONFIG7H @ 0x30000D
  4223                           ;	Boot Block Table Read Protection bit
  4224                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4225  30000D                     	org	3145741
  4226  30000D  40                 	db	64
  4227                           tosu	equ	0xFFF
  4228                           tosh	equ	0xFFE
  4229                           tosl	equ	0xFFD
  4230                           stkptr	equ	0xFFC
  4231                           pclatu	equ	0xFFB
  4232                           pclath	equ	0xFFA
  4233                           pcl	equ	0xFF9
  4234                           tblptru	equ	0xFF8
  4235                           tblptrh	equ	0xFF7
  4236                           tblptrl	equ	0xFF6
  4237                           tablat	equ	0xFF5
  4238                           prodh	equ	0xFF4
  4239                           prodl	equ	0xFF3
  4240                           indf0	equ	0xFEF
  4241                           postinc0	equ	0xFEE
  4242                           postdec0	equ	0xFED
  4243                           preinc0	equ	0xFEC
  4244                           plusw0	equ	0xFEB
  4245                           fsr0h	equ	0xFEA
  4246                           fsr0l	equ	0xFE9
  4247                           wreg	equ	0xFE8
  4248                           indf1	equ	0xFE7
  4249                           postinc1	equ	0xFE6
  4250                           postdec1	equ	0xFE5
  4251                           preinc1	equ	0xFE4
  4252                           plusw1	equ	0xFE3
  4253                           fsr1h	equ	0xFE2
  4254                           fsr1l	equ	0xFE1
  4255                           bsr	equ	0xFE0
  4256                           indf2	equ	0xFDF
  4257                           postinc2	equ	0xFDE
  4258                           postdec2	equ	0xFDD
  4259                           preinc2	equ	0xFDC
  4260                           plusw2	equ	0xFDB
  4261                           fsr2h	equ	0xFDA
  4262                           fsr2l	equ	0xFD9
  4263                           status	equ	0xFD8

Data Sizes:
    Strings     81
    Constant    0
    Data        7
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    125     140
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ?_printf(COMRAM[2]), main@buf_arr(BANK0[50]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ?_printf(COMRAM[2]), main@buf_arr(BANK0[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S863_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_5(CODE[3]), STR_3(CODE[7]), STR_1(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_5(CODE[3]), STR_3(CODE[7]), STR_1(CODE[7]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), main@buf_arr(BANK0[50]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), main@buf_arr(BANK0[50]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_printf(COMRAM[2]), main@buf_arr(BANK0[50]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_5(CODE[3]), STR_3(CODE[7]), STR_1(CODE[7]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    ring_buff_peek@data	PTR unsigned char  size(2) Largest target is 1
		 -> main@buf(BANK0[1]), 

    ring_buff_peek@buffer	const PTR struct ring_buffer_t size(2) Largest target is 66
		 -> main@ring_buffer(BANK0[66]), 

    ring_buff_read_arr@data	PTR unsigned char  size(2) Largest target is 50
		 -> main@buf_arr(BANK0[50]), 

    ring_buff_read_arr@data_ptr	PTR unsigned char  size(2) Largest target is 50
		 -> main@buf_arr(BANK0[50]), 

    ring_buff_read_arr@buffer	const PTR struct ring_buffer_t size(2) Largest target is 66
		 -> main@ring_buffer(BANK0[66]), 

    ring_buff_read@data	PTR unsigned char  size(2) Largest target is 50
		 -> main@buf_arr(BANK0[50]), main@buf(BANK0[1]), 

    ring_buff_read@buffer	const PTR struct ring_buffer_t size(2) Largest target is 66
		 -> main@ring_buffer(BANK0[66]), 

    ring_buff_write_arr@data	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_4(CODE[35]), STR_2(CODE[29]), 

    ring_buff_write_arr@buffer	const PTR struct ring_buffer_t size(2) Largest target is 66
		 -> main@ring_buffer(BANK0[66]), 

    ring_buff_write@buffer	const PTR struct ring_buffer_t size(2) Largest target is 66
		 -> main@ring_buffer(BANK0[66]), 

    ring_buff_num_items@buffer	const PTR struct ring_buffer_t size(2) Largest target is 66
		 -> main@ring_buffer(BANK0[66]), 

    ring_buff_is_full@buffer	const PTR struct ring_buffer_t size(2) Largest target is 66
		 -> main@ring_buffer(BANK0[66]), 

    ring_buff_is_empty@buffer	const PTR struct ring_buffer_t size(2) Largest target is 66
		 -> main@ring_buffer(BANK0[66]), 

    ring_buff_init@buffer	const PTR struct ring_buffer_t size(2) Largest target is 66
		 -> main@ring_buffer(BANK0[66]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _ring_buff_write_arr->_ring_buff_write
    _ring_buff_write->_ring_buff_is_full
    _ring_buff_read_arr->_ring_buff_read
    _ring_buff_read->_ring_buff_is_empty
    _ring_buff_peek->_ring_buff_num_items
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               121   121      0   19179
                                              4 BANK0    121   121      0
                               _init
                             _printf
                     _ring_buff_init
                _ring_buff_num_items
                     _ring_buff_peek
                     _ring_buff_read
                 _ring_buff_read_arr
                    _ring_buff_write
                _ring_buff_write_arr
 ---------------------------------------------------------------------------------
 (1) _ring_buff_write_arr                                  8     3      5    1168
                                              9 COMRAM     8     3      5
                    _ring_buff_write
 ---------------------------------------------------------------------------------
 (2) _ring_buff_write                                      4     1      3     600
                                              5 COMRAM     4     1      3
                  _ring_buff_is_full
 ---------------------------------------------------------------------------------
 (3) _ring_buff_is_full                                    5     3      2     120
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ring_buff_read_arr                                   8     3      5    1366
                                              9 COMRAM     8     3      5
                 _ring_buff_is_empty
                     _ring_buff_read
 ---------------------------------------------------------------------------------
 (2) _ring_buff_read                                       5     1      4     784
                                              4 COMRAM     5     1      4
                 _ring_buff_is_empty
 ---------------------------------------------------------------------------------
 (3) _ring_buff_is_empty                                   4     2      2     196
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ring_buff_peek                                       7     2      5     579
                                              4 COMRAM     7     2      5
                _ring_buff_num_items
 ---------------------------------------------------------------------------------
 (2) _ring_buff_num_items                                  4     2      2     196
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ring_buff_init                                       2     0      2     120
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   13907
                                             91 COMRAM     4     0      4
                                              0 BANK0      4     4      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   13621
                                             83 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           41    35      6   13261
                                             64 COMRAM    19    13      6
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2551
                                             10 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6170
                                             28 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4521
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2103
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    2057
                                             10 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1702
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
         _stoa
           _fputc
             _putch
           _strlen
   _ring_buff_init
   _ring_buff_num_items
   _ring_buff_peek
     _ring_buff_num_items
   _ring_buff_read
     _ring_buff_is_empty
   _ring_buff_read_arr
     _ring_buff_is_empty
     _ring_buff_read
       _ring_buff_is_empty
   _ring_buff_write
     _ring_buff_is_full
   _ring_buff_write_arr
     _ring_buff_write
       _ring_buff_is_full

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7D      8C       5       87.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10B      12        0.0%
DATA                 0      0     10B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Apr 08 14:12:32 2021

                          l61 2254                            l70 203C                            l39 223E  
                          l64 2222                            l73 21D8                            l58 2242  
                          l67 21B0                            l91 1EC8                            l83 20C6  
                          l77 1E56                            l87 1F38                           l100 1FF0  
                         l230 1A48                           l217 175E                           l811 1D02  
                         l901 214A                           l813 1D3E                           l824 1C08  
                         l808 1CC0                           l913 1DD4                           l921 210A  
                         l827 1C4A                           l835 10F4                           l829 1C78  
                         l837 10FC                           l781 2200                           l862 17E0  
                         l927 2180                           l855 1336                           l864 17E8  
                         l873 1892                           l874 18DC                           l883 15D6  
                         l893 1F92                           l878 18E4                           l894 1F9A  
                         l898 2142                           u800 1DC2                           u801 1DBE  
                         u810 210A                           u811 2106                           u900 18F8  
                         u820 2174                           u901 18F4                           u821 2170  
                         u830 15EA                           u910 192A                           u831 15E6  
                         u911 1926                           u760 2250                           u840 161C  
                         u920 1968                           u761 224C                           u841 1618  
                         u921 1964                           u770 1D52                           u930 1992  
                         u771 1D4E                           u851 1646                           u931 198E  
                         u780 1D64                           u860 166A                           u940 19C0  
                         u781 1D60                           u861 1666                           u941 19BC  
                         u790 1D8C                           u870 1694                           u950 1A08  
                         u791 1D88                           u871 1690                           u951 1A04  
                         u880 16D4                           u960 1C8A                           u881 16D0  
                         u961 1C86                           u890 171E                           u970 1CAC  
                         u891 171A                           u971 1CA8                           u980 1D02  
                         u981 1CFE                           u990 1D12                           u991 1D0E  
                         _abs 210C                           _pad 1C7A                           wreg 000FE8  
                  _TXSTA1bits 000FAC                   main@buf_arr 0066                          ?_abs 0013  
                        l1411 2250                          l1421 1D8C                          l1413 1D40  
                        l1501 194A                          l1423 1DC2                          l1415 1D52  
                        l1511 19C0                          l1503 1968                          l1431 20E6  
                        l1409 2242                          l1417 1D64                          l1521 1A28  
                        l1513 19E0                          l1505 1970                          l1433 20EA  
                        l1441 2174                          l1601 1132                          l1419 1D6E  
                        l1451 160A                          l1515 19F2                          l1507 1984  
                        l1427 20C8                          l1435 214C                          l1531 1CAC  
                        l1611 11D0                          l1603 113C                          l1461 164C  
                        l1453 160E                          l1445 15D8                          l1509 1992  
                        l1517 19F8                          l1429 20D4                          l1437 2158  
                        l1541 1D12                          l1533 1CB8                          l1525 1C7A  
                        l1621 12A0                          l1605 1142                          l1613 1234  
                        l1701 13A4                          l1551 1BA2                          l1471 16A6  
                        l1463 166A                          l1455 161C                          l1447 15DC  
                        l1519 1A08                          l1439 215C                          l1543 1D26  
                        l1535 1CCC                          l1527 1C8A                          l1631 12EA  
                        l1615 124E                          l1623 12B0                          l1607 11C4  
                        l1711 143A                          l1703 13D6                          l1561 1BEE  
                        l1553 1BB6                          l1473 16D4                          l1465 1672  
                        l1481 170E                          l1457 163C                          l1449 15EA  
                        l1537 1CE0                          l1529 1C9E                          l1633 12F6  
                        l1625 12C2                          l1617 126C                          l1609 11CA  
                        l1641 1760                          l1721 1514                          l1713 1482  
                        l1801 1FBC                          l1571 1C2C                          l1555 1BC2  
                        l1483 171E                          l1475 16F4                          l1467 1686  
                        l1459 1640                          l1491 18EA                          l1547 210C  
                        l1539 1CE4                          l1635 12FE                          l1627 12D2  
                        l1619 1286                          l1651 17A8                          l1643 1772  
                        l1731 157A                          l1707 13F2                          l1573 1C5A  
                        l1565 1C00                          l1557 1BCE                          l1485 173E  
                        l1477 16F6                          l1469 1694                          l1493 18F8  
                        l1549 2126                          l1629 12D8                          l1637 130E  
                        l1581 1074                          l1661 1820                          l1653 17B0  
                        l1645 177A                          l1725 1534                          l1717 14BA  
                        l1709 1416                          l1741 15A0                          l1813 21DA  
                        l1805 1FC2                          l1821 208C                          l1575 1C6C  
                        l1567 1C14                          l1559 1BDC                          l1479 1708  
                        l1495 1918                          l1591 10E8                          l1583 109C  
                        l1671 1870                          l1663 1824                          l1655 17BE  
                        l1647 178C                          l1743 15C4                          l1727 1558  
                        l1735 1586                          l1719 14DE                          l1815 21E4  
                        l1807 1FD6                          l1751 1DF2                          l1823 20B2  
                        l1569 1C28                          l1497 191C                          l1489 18E6  
                        l1593 1104                          l1585 10BC                          l1681 18BE  
                        l1673 1874                          l1665 1842                          l1649 1794  
                        l1737 1594                          l1729 1566                          l1809 1FEE  
                        l1761 1ECA                          l1841 1EA2                          l1833 1E7A  
                        l1753 1E14                          l1825 20B4                          l1499 192A  
                        l1595 1116                          l1587 10CC                          l1579 1054  
                        l1667 184E                          l1659 180C                          l1691 1338  
                        l1683 2182                          l1763 1EE6                          l1843 1EC6  
                        l1835 1E82                          l1827 1E58                          l1755 1E34  
                        l1819 2084                          l1851 1A5A                          l1781 2224  
                        l1597 1124                          l1589 10CE                          l1677 18A6  
                        l1669 186C                          l1693 135C                          l1773 1F3A  
                        l1757 21B2                          l1837 1E8A                          l1829 1E74  
                        l1749 1DD6                          l1861 1A74                          l1791 223A  
                        l1783 2226                          l1599 112A                          l1679 18BA  
                        l1695 136A                          l1775 1F42                          l1767 1EEC  
                        l1839 1E90                          l1687 1FF2                          l1871 1AC4  
                        l1863 1A84                          l1847 1A4A                          l1793 223C  
                        l1785 2230                          l1697 137C                          l1777 1F50  
                        l1769 1F36                          l1881 1B3E                          l1873 1AC8  
                        l1865 1A9C                          l1857 1A60                          l1849 1A4E  
                        l1787 2232                          l1699 1380                          l1779 1F76  
                        l1883 1B56                          l1875 1AEC                          l1867 1AA8  
                        l1859 1A70                          l1789 2238                          l1797 2202  
                        l1885 1B6E                          l1877 1B08                          l1869 1AB2  
                        ?_pad 0012                          l1799 1F9C                          l1887 1B82  
                        l1879 1B1A                          STR_1 1048                          STR_2 1024  
                        STR_3 1041                          STR_4 1001                          STR_5 104F  
                        u1000 2126                          u1001 2122                          u1010 1BB6  
                        u1011 1BB2                          u1020 1BDC                          u1100 10E8  
                        u1021 1BD8                          u1101 10E4                          u1030 1BFC  
                        u1110 1116                          u1031 1BF8                          u1111 1112  
                        u1040 1C4A                          u1200 12EA                          u1120 1124  
                        u1041 1C46                          u1201 12E6                          u1121 1120  
                        u1050 1C5A                          u1130 124E                          u1051 1C56  
                        u1131 124A                          u1211 176A                          u1140 126C  
                        u1060 1084                          u1220 178C                          u1300 21AE  
                        u1141 1268                          u1061 107E                          u1221 1788  
                        u1301 21A8                          u1150 1286                          u1070 1086  
                        u1230 17BE                          u1310 21B0                          u1151 1282  
                        u1231 17BA                          u1160 12A0                          u1080 109C  
                        u1240 17DC                          u1320 203A                          u1400 1DF2  
                        u1161 129C                          u1081 1098                          u1241 17D8  
                        u1321 2034                          u1401 1DEE                          u1170 12B0  
                        u1090 10CC                          u1250 1808                          u1410 1EE6  
                        u1330 203C                          u1171 12AC                          u1091 10C8  
                        u1251 1804                          u1411 1EE2                          u1180 12C2  
                        u1260 1842                          u1340 135C                          u1420 1F92  
                        u1500 1B3E                          u1181 12BE                          u1261 183E  
                        u1341 1358                          u1421 1F8E                          u1501 1B3A  
                        u1190 12D2                          u1270 1892                          u1350 13A4  
                        u1430 1FBC                          u1191 12CE                          u1271 188E  
                        u1351 13A0                          u1431 1FB8                          u1280 18A2  
                        u1360 1416                          u1440 20C6                          u1281 189E  
                        u1361 1412                          u1441 20C2                          u1290 18DC  
                        u1370 143A                          u1450 1E74                          u1291 18D8  
                        u1371 1436                          u1451 1E70                          u1380 14DE  
                        u1460 1EA2                          u1381 14DA                          u1461 1E9E  
                        u1517 1B8E                          u1390 1558                          u1470 1EC6  
                        u1391 1554                          u1471 1EC2                          u1480 1A84  
                        u1481 1A80                          u1490 1AEC                          u1491 1AE8  
                        abs@a 0013                          _dbuf 0100                          _ctoa 1BA2  
                        _main 1A4A                          _dtoa 1054                          _init 2224  
                        _prec 00E1                          _nout 00DD                          pad@i 0019  
                        pad@p 0016                          fsr1h 000FE2                          fsr2h 000FDA  
                        indf1 000FE7                          indf2 000FDF                          fsr1l 000FE1  
                        pad@w 001B                          fsr2l 000FD9                          _stoa 1760  
                        start 0000                  ___param_bank 000000                         ??_abs 0015  
                       ??_pad 0018               __end_of___aodiv 1760                         ?_ctoa 000B  
                       ?_main 0001                         ?_dtoa 001D               __end_of___aomod 1A4A  
                       ?_init 0001                         ?_stoa 000B                  vfpfcnvrt@fmt 0043  
                       _TX1IF 007CF4                         _TRISD 000F95   __end_of_ring_buff_num_items 21DA  
                       _flags 00E3                         _fputc 1D40                         _fputs 20C8  
                       pad@fp 0012                         _width 00DF              ?_ring_buff_write 0006  
                       ctoa@c 000D                         _putch 2240                         ctoa@l 000F  
                       ctoa@w 0011                         main@i 0099                         dtoa@d 001F  
                       dtoa@i 003F                         dtoa@n 0037                         dtoa@p 0031  
                       dtoa@s 0035                         dtoa@w 0033                         tablat 000FF5  
                       plusw1 000FE3                         plusw2 000FDB                         stoa@i 0017  
                       stoa@l 001F                         stoa@p 001D                         stoa@s 000D  
                       stoa@w 0019                         status 000FD8   __end_of_ring_buff_write_arr 20C8  
             __initialization 203E                  __end_of_ctoa 1C7A                  __end_of_main 1BA2  
                __end_of_dtoa 1338                  __end_of_init 2240                  __end_of_stoa 18E6  
        ring_buff_init@buffer 0001          ring_buff_peek@buffer 0005          ring_buff_read@buffer 0005  
                      ??_ctoa 000E                        ??_main 0064                        ??_dtoa 0027  
                      ??_init 0001                        ??_stoa 000F                 __activetblptr 000001  
                      ?_fputc 0002                        ?_fputs 000B                        ?_putch 0001  
                      _ANSELC 000F3A                        _SPBRG1 000FAF                        _TXREG1 000FAD  
                vfprintf@cfmt 005A                     ??___aodiv 0011                     ??___aomod 0011  
 __size_of_ring_buff_is_empty 0030   __size_of_ring_buff_read_arr 0072                        clear_0 2064  
                      clear_1 2070                        _printf 21DA                        pad@buf 0014  
                      ctoa@fp 000B                        dtoa@fp 001D                        _strlen 214C  
                      fputc@c 0002                        fputs@c 000F                        fputs@i 0010  
                      fputs@s 000B       __size_of_ring_buff_init 0022       __size_of_ring_buff_peek 0056  
     __size_of_ring_buff_read 0070                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                        stoa@cp 001B  
                      stoa@fp 000B              __end_of_vfprintf 1F9C                    __accesstop 0060  
     __end_of__initialization 2076                 ___rparam_used 000001                __pcstackCOMRAM 0001  
                __pidataBANK0 2256                 __end_of_fputc 1DD6                 __end_of_fputs 210C  
               __end_of_putch 2256            ring_buff_peek@data 0007            ring_buff_read@data 0007  
                     ??_fputc 0006                       ??_fputs 000F                       ??_putch 0001  
                  __pbssBANK0 00DD                    __pbssBANK1 0100      ring_buff_peek@data_index 000B  
     ring_buff_is_full@buffer 0001                       ?_printf 005C                       ?_strlen 0001  
       ring_buff_read_arr@cnt 0011         ring_buff_read_arr@len 000E            __size_of_vfpfcnvrt 02A0  
  ring_buff_read_arr@data_ptr 000F                       __Hparam 0000                       __Lparam 0000  
                     ___aodiv 15D8                       ___aomod 18E6                     ?_vfprintf 0054  
                __psmallconst 1000             _ring_buff_is_full 1FF2                       __pcinit 203E  
                     __ramtop 1000                       __ptext0 1A4A                       __ptext1 2084  
                     __ptext2 1DD6                       __ptext3 1FF2                       __ptext4 1E58  
                     __ptext5 1ECA                       __ptext6 2182                       __ptext7 1F9C  
                     __ptext8 21B2                       __ptext9 2202            ?_ring_buff_is_full 0001  
             __size_of_printf 0028               __size_of_strlen 0036                  __size_of_abs 0040  
              _ring_buff_init 2202                _ring_buff_peek 1F9C                _ring_buff_read 1ECA  
                __size_of_pad 00C6           ??_ring_buff_is_full 0003                       main@buf 009A  
                     main@cnt 0098          end_of_initialization 2076          ring_buff_write_arr@i 0011  
   ring_buff_num_items@buffer 0001                       fputc@fp 0004  __size_of_ring_buff_num_items 0028  
                     fputs@fp 000D      __size_of_ring_buff_write 0082             __end_of_vfpfcnvrt 15D8  
   __end_of_ring_buff_is_full 203E                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc1 000FE6                       postinc2 000FDE  
                  ??_vfprintf 005A                       strlen@a 0003                       strlen@s 0001  
      __end_of_ring_buff_init 2224        __end_of_ring_buff_peek 1FF2        __end_of_ring_buff_read 1F3A  
__size_of_ring_buff_write_arr 0044                     _TRISBbits 000F93                     _TRISCbits 000F94  
  __end_of_ring_buff_is_empty 21B2    __end_of_ring_buff_read_arr 1ECA                   vfpfcnvrt@ap 0045  
                 vfpfcnvrt@cp 0051                   vfpfcnvrt@fp 0041                   vfpfcnvrt@ll 0049  
             ?_ring_buff_init 0001               ?_ring_buff_peek 0005               ?_ring_buff_read 0005  
              __end_of_printf 2202                __end_of_strlen 2182           start_initialization 203E  
                 __end_of_abs 214C                   __end_of_pad 1D40       ring_buff_write_arr@data 000C  
         ring_buff_peek@index 0009       ring_buff_write_arr@size 000E                   vfprintf@fmt 0056  
  __size_of_ring_buff_is_full 004C                   __pdataBANK0 00E5             ??_ring_buff_write 0009  
                    ??_printf 0060                      ??_strlen 0003                 __pcstackBANK0 0060  
            ___aodiv@dividend 0001      ring_buff_is_empty@buffer 0001                      ?___aodiv 0001  
                    ?___aomod 0001              ___aodiv@quotient 0013           _ring_buff_num_items 21B2  
           __size_of_vfprintf 0062                   __smallconst 1000                __size_of_fputc 0096  
              __size_of_fputs 0044                __size_of_putch 0016           ring_buff_write@data 0008  
        ?_ring_buff_num_items 0001           _ring_buff_write_arr 2084        ring_buff_read_arr@data 000C  
                   _vfpfcnvrt 1338          ?_ring_buff_write_arr 000A                    vfpfcnvrt@c 0053  
                   copy_data0 2052         ??_ring_buff_num_items 0003                      __Hrparam 0000  
                  vfprintf@ap 0058                      __Lrparam 0000                    vfprintf@fp 0054  
                __Lsmallconst 1000              ??_ring_buff_init 0003              ??_ring_buff_peek 000A  
            ??_ring_buff_read 0009              __size_of___aodiv 0188              __size_of___aomod 0164  
                  ?_vfpfcnvrt 0041         ??_ring_buff_write_arr 000F               ___aodiv@divisor 0009  
             ___aodiv@counter 0011            _ring_buff_is_empty 2182            _ring_buff_read_arr 1E58  
                    _dtoa$932 002F                      __ptext10 21DA                      __ptext11 1F3A  
                    __ptext20 15D8                      __ptext12 1338                      __ptext21 1BA2  
                    __ptext13 1760                      __ptext22 1D40                      __ptext14 1054  
                    __ptext23 2240                      __ptext15 1C7A                      __ptext24 2224  
                    __ptext16 214C                      __ptext17 20C8                      __ptext18 210C  
                    __ptext19 18E6           ?_ring_buff_is_empty 0001           ?_ring_buff_read_arr 000A  
               __size_of_ctoa 00D8                 __size_of_main 0158                 __size_of_dtoa 02E4  
               __size_of_init 001C                 __size_of_stoa 0186               _ring_buff_write 1DD6  
             main@ring_buffer 009B         ring_buff_write@buffer 0006                     stoa@F1146 00E5  
        ??_ring_buff_is_empty 0003          ??_ring_buff_read_arr 000F                      _vfprintf 1F3A  
                   printf@fmt 005C     ring_buff_write_arr@buffer 000A              ___aomod@dividend 0001  
                   putch@data 0001      ring_buff_read_arr@buffer 000A                    _RCSTA1bits 000FAB  
                    printf@ap 0062               ___aomod@divisor 0009                   ??_vfpfcnvrt 0047  
                    stoa@nuls 0010               ___aomod@counter 0011       __end_of_ring_buff_write 1E58  
                ___aodiv@sign 0012                  ___aomod@sign 0012  
