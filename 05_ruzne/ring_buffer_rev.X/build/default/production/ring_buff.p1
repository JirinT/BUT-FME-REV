Version 4.0 HI-TECH Software Intermediate Code
"17 ./ring_buff.h
[; ;./ring_buff.h: 17: typedef struct ring_buffer_t {
[s S1 `uc -> 64 `i `uc 1 `uc 1 ]
[n S1 ring_buffer_t buffer tail_index head_index ]
[v F87 `*S1 ~T0 @X0 1 t ]
[v F91 `*S1 ~T0 @X0 1 t ]
[v F95 `*S1 ~T0 @X0 1 t ]
[v F99 `*S1 ~T0 @X0 1 t ]
[v F103 `*S1 ~T0 @X0 1 t ]
[v F108 `*S1 ~T0 @X0 1 t ]
[v F115 `*S1 ~T0 @X0 1 t ]
[v F120 `*S1 ~T0 @X0 1 t ]
[v F128 `*S1 ~T0 @X0 1 t ]
"3 ring_buff.c
[; ;ring_buff.c: 3: void ring_buff_init(ring_buffer_t *const buffer) {
[v _ring_buff_init `(v ~T0 @X0 1 ef1`C*S1 ]
{
[e :U _ring_buff_init ]
[v F89 `*S1 ~T0 @X0 1 t ]
[v _buffer `C*S1 ~T0 @X0 1 r1 ]
[f ]
"4
[; ;ring_buff.c: 4:   buffer->tail_index = 0;
[e = . *U _buffer 1 -> -> 0 `i `uc ]
"5
[; ;ring_buff.c: 5:   buffer->head_index = 0;
[e = . *U _buffer 2 -> -> 0 `i `uc ]
"6
[; ;ring_buff.c: 6: }
[e :UE 2 ]
}
"9
[; ;ring_buff.c: 9: uint8_t ring_buff_is_empty(ring_buffer_t *const buffer) {
[v _ring_buff_is_empty `(uc ~T0 @X0 1 ef1`C*S1 ]
{
[e :U _ring_buff_is_empty ]
[v F93 `*S1 ~T0 @X0 1 t ]
[v _buffer `C*S1 ~T0 @X0 1 r1 ]
[f ]
"10
[; ;ring_buff.c: 10:   return (buffer->head_index == buffer->tail_index);
[e ) -> -> == -> . *U _buffer 2 `i -> . *U _buffer 1 `i `i `uc ]
[e $UE 3  ]
"11
[; ;ring_buff.c: 11: }
[e :UE 3 ]
}
"14
[; ;ring_buff.c: 14: uint8_t ring_buff_is_full(ring_buffer_t *const buffer) {
[v _ring_buff_is_full `(uc ~T0 @X0 1 ef1`C*S1 ]
{
[e :U _ring_buff_is_full ]
[v F97 `*S1 ~T0 @X0 1 t ]
[v _buffer `C*S1 ~T0 @X0 1 r1 ]
[f ]
"15
[; ;ring_buff.c: 15:   return ((buffer->head_index - buffer->tail_index) & (64 -1)) == (64 -1);
[e ) -> -> == & - -> . *U _buffer 2 `i -> . *U _buffer 1 `i - -> 64 `i -> 1 `i - -> 64 `i -> 1 `i `i `uc ]
[e $UE 4  ]
"16
[; ;ring_buff.c: 16: }
[e :UE 4 ]
}
"19
[; ;ring_buff.c: 19: ring_buffer_size_t ring_buff_num_items(ring_buffer_t *const buffer) {
[v _ring_buff_num_items `(uc ~T0 @X0 1 ef1`C*S1 ]
{
[e :U _ring_buff_num_items ]
[v F101 `*S1 ~T0 @X0 1 t ]
[v _buffer `C*S1 ~T0 @X0 1 r1 ]
[f ]
"20
[; ;ring_buff.c: 20:   return ((buffer->head_index - buffer->tail_index) & (64 -1));
[e ) -> & - -> . *U _buffer 2 `i -> . *U _buffer 1 `i - -> 64 `i -> 1 `i `uc ]
[e $UE 5  ]
"21
[; ;ring_buff.c: 21: }
[e :UE 5 ]
}
"24
[; ;ring_buff.c: 24: void ring_buff_write(ring_buffer_t *const buffer, char data) {
[v _ring_buff_write `(v ~T0 @X0 1 ef2`C*S1`uc ]
{
[e :U _ring_buff_write ]
[v F105 `*S1 ~T0 @X0 1 t ]
[v _buffer `C*S1 ~T0 @X0 1 r1 ]
[v _data `uc ~T0 @X0 1 r2 ]
[f ]
"26
[; ;ring_buff.c: 26:   if(ring_buff_is_full(buffer)) {
[e $ ! != -> ( _ring_buff_is_full (1 _buffer `i -> 0 `i 7  ]
{
"27
[; ;ring_buff.c: 27:     buffer->tail_index = ((buffer->tail_index + 1) & (64 -1));
[e = . *U _buffer 1 -> & + -> . *U _buffer 1 `i -> 1 `i - -> 64 `i -> 1 `i `uc ]
"28
[; ;ring_buff.c: 28:   }
}
[e :U 7 ]
"30
[; ;ring_buff.c: 30:   buffer->buffer[buffer->head_index] = data;
[e = *U + &U . *U _buffer 0 * -> . *U _buffer 2 `ux -> -> # *U &U . *U _buffer 0 `ui `ux _data ]
"31
[; ;ring_buff.c: 31:   buffer->head_index = ((buffer->head_index + 1) & (64 -1));
[e = . *U _buffer 2 -> & + -> . *U _buffer 2 `i -> 1 `i - -> 64 `i -> 1 `i `uc ]
"32
[; ;ring_buff.c: 32: }
[e :UE 6 ]
}
"34
[; ;ring_buff.c: 34: void ring_buff_write_arr(ring_buffer_t *const buffer, const char *data, ring_buffer_size_t size) {
[v _ring_buff_write_arr `(v ~T0 @X0 1 ef3`C*S1`*Cuc`uc ]
{
[e :U _ring_buff_write_arr ]
[v F110 `*S1 ~T0 @X0 1 t ]
[v _buffer `C*S1 ~T0 @X0 1 r1 ]
[v _data `*Cuc ~T0 @X0 1 r2 ]
[v _size `uc ~T0 @X0 1 r3 ]
[f ]
"36
[; ;ring_buff.c: 36:   ring_buffer_size_t i;
[v _i `uc ~T0 @X0 1 a ]
"37
[; ;ring_buff.c: 37:   for(i = 0; i < size; i++) {
{
[e = _i -> -> 0 `i `uc ]
[e $U 12  ]
[e :U 9 ]
{
"38
[; ;ring_buff.c: 38:     ring_buff_write(buffer, data[i]);
[e ( _ring_buff_write (2 , _buffer *U + _data * -> _i `ux -> -> # *U _data `ui `ux ]
"39
[; ;ring_buff.c: 39:   }
}
[e ++ _i -> -> 1 `i `uc ]
[e :U 12 ]
[e $ < -> _i `i -> _size `i 9  ]
[e :U 10 ]
}
"40
[; ;ring_buff.c: 40: }
[e :UE 8 ]
}
"42
[; ;ring_buff.c: 42: uint8_t ring_buff_read(ring_buffer_t *const buffer, char *data) {
[v _ring_buff_read `(uc ~T0 @X0 1 ef2`C*S1`*uc ]
{
[e :U _ring_buff_read ]
[v F117 `*S1 ~T0 @X0 1 t ]
[v _buffer `C*S1 ~T0 @X0 1 r1 ]
[v _data `*uc ~T0 @X0 1 r2 ]
[f ]
"43
[; ;ring_buff.c: 43:   if(ring_buff_is_empty(buffer)) {
[e $ ! != -> ( _ring_buff_is_empty (1 _buffer `i -> 0 `i 14  ]
{
"45
[; ;ring_buff.c: 45:     return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 13  ]
"46
[; ;ring_buff.c: 46:   }
}
[e :U 14 ]
"48
[; ;ring_buff.c: 48:   *data = buffer->buffer[buffer->tail_index];
[e = *U _data *U + &U . *U _buffer 0 * -> . *U _buffer 1 `ux -> -> # *U &U . *U _buffer 0 `ui `ux ]
"49
[; ;ring_buff.c: 49:   buffer->tail_index = ((buffer->tail_index + 1) & (64 -1));
[e = . *U _buffer 1 -> & + -> . *U _buffer 1 `i -> 1 `i - -> 64 `i -> 1 `i `uc ]
"50
[; ;ring_buff.c: 50:   return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 13  ]
"51
[; ;ring_buff.c: 51: }
[e :UE 13 ]
}
"53
[; ;ring_buff.c: 53: ring_buffer_size_t ring_buff_read_arr(ring_buffer_t *const buffer, char *data, ring_buffer_size_t len) {
[v _ring_buff_read_arr `(uc ~T0 @X0 1 ef3`C*S1`*uc`uc ]
{
[e :U _ring_buff_read_arr ]
[v F122 `*S1 ~T0 @X0 1 t ]
[v _buffer `C*S1 ~T0 @X0 1 r1 ]
[v _data `*uc ~T0 @X0 1 r2 ]
[v _len `uc ~T0 @X0 1 r3 ]
[f ]
"54
[; ;ring_buff.c: 54:   if(ring_buff_is_empty(buffer)) {
[e $ ! != -> ( _ring_buff_is_empty (1 _buffer `i -> 0 `i 16  ]
{
"56
[; ;ring_buff.c: 56:     return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 15  ]
"57
[; ;ring_buff.c: 57:   }
}
[e :U 16 ]
"59
[; ;ring_buff.c: 59:   char *data_ptr = data;
[v _data_ptr `*uc ~T0 @X0 1 a ]
[e = _data_ptr _data ]
"60
[; ;ring_buff.c: 60:   ring_buffer_size_t cnt = 0;
[v _cnt `uc ~T0 @X0 1 a ]
[e = _cnt -> -> 0 `i `uc ]
"61
[; ;ring_buff.c: 61:   while((cnt < len) && ring_buff_read(buffer, data_ptr)) {
[e $U 17  ]
[e :U 18 ]
{
"62
[; ;ring_buff.c: 62:     cnt++;
[e ++ _cnt -> -> 1 `i `uc ]
"63
[; ;ring_buff.c: 63:     data_ptr++;
[e ++ _data_ptr * -> -> 1 `i `x -> -> # *U _data_ptr `i `x ]
"64
[; ;ring_buff.c: 64:   }
}
[e :U 17 ]
"61
[; ;ring_buff.c: 61:   while((cnt < len) && ring_buff_read(buffer, data_ptr)) {
[e $ && < -> _cnt `i -> _len `i != -> ( _ring_buff_read (2 , _buffer _data_ptr `i -> 0 `i 18  ]
[e :U 19 ]
"65
[; ;ring_buff.c: 65:   return cnt;
[e ) _cnt ]
[e $UE 15  ]
"66
[; ;ring_buff.c: 66: }
[e :UE 15 ]
}
"68
[; ;ring_buff.c: 68: uint8_t ring_buff_peek(ring_buffer_t *const buffer, char *data, ring_buffer_size_t index) {
[v _ring_buff_peek `(uc ~T0 @X0 1 ef3`C*S1`*uc`uc ]
{
[e :U _ring_buff_peek ]
[v F130 `*S1 ~T0 @X0 1 t ]
[v _buffer `C*S1 ~T0 @X0 1 r1 ]
[v _data `*uc ~T0 @X0 1 r2 ]
[v _index `uc ~T0 @X0 1 r3 ]
[f ]
"69
[; ;ring_buff.c: 69:   if(index >= ring_buff_num_items(buffer)) {
[e $ ! >= -> _index `i -> ( _ring_buff_num_items (1 _buffer `i 21  ]
{
"70
[; ;ring_buff.c: 70:     return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 20  ]
"71
[; ;ring_buff.c: 71:   }
}
[e :U 21 ]
"73
[; ;ring_buff.c: 73:   ring_buffer_size_t data_index = ((buffer->tail_index + index) & (64 -1));
[v _data_index `uc ~T0 @X0 1 a ]
[e = _data_index -> & + -> . *U _buffer 1 `i -> _index `i - -> 64 `i -> 1 `i `uc ]
"74
[; ;ring_buff.c: 74:   *data = buffer->buffer[data_index];
[e = *U _data *U + &U . *U _buffer 0 * -> _data_index `ux -> -> # *U &U . *U _buffer 0 `ui `ux ]
"75
[; ;ring_buff.c: 75:   return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 20  ]
"76
[; ;ring_buff.c: 76: }
[e :UE 20 ]
}
