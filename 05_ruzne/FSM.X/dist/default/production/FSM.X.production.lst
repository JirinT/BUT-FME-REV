

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Apr 16 09:38:28 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53  0000                     
    54                           ; Version 2.20
    55                           ; Generated 05/05/2020 GMT
    56                           ; 
    57                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F46K22 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     
    89 ;;_fsm	offset	0
    90 ;;_event	offset	2
    91 ;;_fsm	offset=-2 (param)
    92 ;;_init_state	offset=-4 (param)
    93 ;;_out	offset=-2 (param)
    94 ;;_tmp	offset	0
    95 ;;_queue	offset=-2 (param)
    96 ;;_out	offset=-4 (param)
    97 ;;_fsm	offset=-2 (param)
    98 ;;_event	offset=-3 (param)
    99 ;;_i	offset	0
   100 ;;_lineNum	offset=-1 (param)
   101 ;;_textData	offset=-3 (param)
   102 ;;_timeout_in	offset=-4 (param)
   103 ;;_ap	offset	0
   104 ;;_fmt	offset=-3 (param)
   105 ;;_fsm	offset=-2 (param)
   106 ;;_new_state	offset=-4 (param)
   107 ;;_fsm	offset=-2 (param)
   108 ;;_event	offset=-3 (param)
   109 ;;_str	offset	0
   110 ;;_fsm	offset=-2 (param)
   111 ;;_event	offset=-3 (param)
   112 ;;_f	offset	0
   113 ;;_ap	offset	6
   114 ;;_s	offset=-3 (param)
   115 ;;_fmt	offset=-5 (param)
   116 ;;_cfmt	offset	0
   117 ;;_fp	offset=-2 (param)
   118 ;;_fmt	offset=-4 (param)
   119 ;;_ap	offset=-6 (param)
   120 ;;_ll	offset	0
   121 ;;_fp	offset=-2 (param)
   122 ;;_fmt	offset=-4 (param)
   123 ;;_ap	offset=-6 (param)
   124 ;;_dtoa$2388	offset	0
   125 ;;_n	offset	2
   126 ;;_i	offset	10
   127 ;;_s	offset	12
   128 ;;_w	offset	14
   129 ;;_p	offset	16
   130 ;;_fp	offset=-2 (param)
   131 ;;_d	offset=-10 (param)
   132 ;;_w	offset	0
   133 ;;_i	offset	2
   134 ;;_fp	offset=-2 (param)
   135 ;;_buf	offset=-4 (param)
   136 ;;_p	offset=-6 (param)
   137 ;;_a	offset	0
   138 ;;_s	offset=-2 (param)
   139 ;;_i	offset	0
   140 ;;_c	offset	2
   141 ;;_s	offset=-2 (param)
   142 ;;_fp	offset=-4 (param)
   143 ;;_c	offset=-2 (param)
   144 ;;_fp	offset=-4 (param)
   145 ;;_data	offset=-1 (param)
   146 ;;_a	offset=-2 (param)
   147 ;;_sign	offset	0
   148 ;;_counter	offset	1
   149 ;;_dividend	offset=-8 (param)
   150 ;;_divisor	offset=-16 (param)
   151 ;;_quotient	offset	0
   152 ;;_sign	offset	8
   153 ;;_counter	offset	9
   154 ;;_dividend	offset=-8 (param)
   155 ;;_divisor	offset=-16 (param)
   156 ;;_result	offset	0
   157 ;;_channel	offset=-1 (param)
   158 ;;_data	offset=-1 (param)
   159 ;;_fsm	offset=-2 (param)
   160 ;;_event	offset=-3 (param)
   161 ;;_in	offset=-1 (param)
   162 ;;_tmp	offset	0
   163 ;;_queue	offset=-2 (param)
   164 ;;_in	offset=-3 (param)
   165 ;;_in	offset=-1 (param)
   166 ;;_tmp	offset	0
   167 ;;_queue	offset=-2 (param)
   168 ;;_in	offset=-3 (param)
   169  0000                     _ANSELE	set	3900
   170  0000                     _TMR6	set	3916
   171  0000                     _PR6	set	3915
   172  0000                     _T6CONbits	set	3914
   173  0000                     _ANSELA	set	3896
   174  0000                     _ANSELDbits	set	3899
   175  0000                     _TMR6ON	set	31314
   176  0000                     _TMR1	set	4046
   177  0000                     _ADRESL	set	4035
   178  0000                     _ADRESH	set	4036
   179  0000                     _ADCON0bits	set	4034
   180  0000                     _ADCON2bits	set	4032
   181  0000                     _PORTAbits	set	3968
   182  0000                     _PORTCbits	set	3970
   183  0000                     _LATBbits	set	3978
   184  0000                     _T1CONbits	set	4045
   185  0000                     _IPR1bits	set	3999
   186  0000                     _PR2	set	4027
   187  0000                     _T2CONbits	set	4026
   188  0000                     _LATCbits	set	3979
   189  0000                     _TRISBbits	set	3987
   190  0000                     _SSP2STATbits	set	3949
   191  0000                     _SSP2BUF	set	3951
   192  0000                     _SSP2CON2bits	set	3947
   193  0000                     _SSP2ADD	set	3950
   194  0000                     _SSP2CON1bits	set	3948
   195  0000                     _LATAbits	set	3977
   196  0000                     _TRISAbits	set	3986
   197  0000                     _TRISDbits	set	3989
   198  0000                     _TXREG1	set	4013
   199  0000                     _RCSTA1bits	set	4011
   200  0000                     _TXSTA1bits	set	4012
   201  0000                     _SPBRG1	set	4015
   202  0000                     _TRISCbits	set	3988
   203  0000                     _LATDbits	set	3980
   204  0000                     _GODONE	set	32273
   205  0000                     _IPEN	set	32391
   206  0000                     _TMR1IF	set	31984
   207  0000                     _TMR1IE	set	31976
   208  0000                     _TMR6IF	set	31730
   209  0000                     _TMR6IE	set	31722
   210  0000                     _TMR2IF	set	31985
   211  0000                     _TMR2IE	set	31977
   212  0000                     _SSP2IF	set	32039
   213  0000                     _TX1IF	set	31988
   214  0000                     _GIE	set	32663
   215  0000                     _TMR1ON	set	32360
   216  0000                     _TMR2ON	set	32210
   217  0000                     _GIEH	set	32663
   218  0000                     _GIEL	set	32662
   219                           
   220                           	psect	smallconst
   221  001000                     __psmallconst:
   222                           	callstack 0
   223  001000  00                 	db	0
   224  001001                     STR_3:
   225  001001  53                 	db	83	;'S'
   226  001002  74                 	db	116	;'t'
   227  001003  61                 	db	97	;'a'
   228  001004  74                 	db	116	;'t'
   229  001005  65                 	db	101	;'e'
   230  001006  31                 	db	49	;'1'
   231  001007  20                 	db	32
   232  001008  20                 	db	32
   233  001009  20                 	db	32
   234  00100A  20                 	db	32
   235  00100B  20                 	db	32
   236  00100C  20                 	db	32
   237  00100D  20                 	db	32
   238  00100E  20                 	db	32
   239  00100F  20                 	db	32
   240  001010  20                 	db	32
   241  001011  20                 	db	32
   242  001012  00                 	db	0
   243  001013                     STR_5:
   244  001013  53                 	db	83	;'S'
   245  001014  74                 	db	116	;'t'
   246  001015  61                 	db	97	;'a'
   247  001016  74                 	db	116	;'t'
   248  001017  65                 	db	101	;'e'
   249  001018  32                 	db	50	;'2'
   250  001019  20                 	db	32
   251  00101A  20                 	db	32
   252  00101B  20                 	db	32
   253  00101C  20                 	db	32
   254  00101D  20                 	db	32
   255  00101E  20                 	db	32
   256  00101F  20                 	db	32
   257  001020  20                 	db	32
   258  001021  20                 	db	32
   259  001022  20                 	db	32
   260  001023  20                 	db	32
   261  001024  00                 	db	0
   262  001025                     STR_7:
   263  001025  50                 	db	80	;'P'
   264  001026  4F                 	db	79	;'O'
   265  001027  54                 	db	84	;'T'
   266  001028  3A                 	db	58	;':'
   267  001029  20                 	db	32
   268  00102A  25                 	db	37
   269  00102B  64                 	db	100	;'d'
   270  00102C  20                 	db	32
   271  00102D  20                 	db	32
   272  00102E  20                 	db	32
   273  00102F  20                 	db	32
   274  001030  20                 	db	32
   275  001031  20                 	db	32
   276  001032  20                 	db	32
   277  001033  20                 	db	32
   278  001034  20                 	db	32
   279  001035  20                 	db	32
   280  001036  00                 	db	0
   281  001037                     STR_2:
   282  001037  49                 	db	73	;'I'
   283  001038  6E                 	db	110	;'n'
   284  001039  69                 	db	105	;'i'
   285  00103A  74                 	db	116	;'t'
   286  00103B  20                 	db	32
   287  00103C  73                 	db	115	;'s'
   288  00103D  74                 	db	116	;'t'
   289  00103E  61                 	db	97	;'a'
   290  00103F  74                 	db	116	;'t'
   291  001040  65                 	db	101	;'e'
   292  001041  20                 	db	32
   293  001042  65                 	db	101	;'e'
   294  001043  78                 	db	120	;'x'
   295  001044  69                 	db	105	;'i'
   296  001045  74                 	db	116	;'t'
   297  001046  0A                 	db	10
   298  001047  00                 	db	0
   299  001048                     STR_1:
   300  001048  57                 	db	87	;'W'
   301  001049  65                 	db	101	;'e'
   302  00104A  6C                 	db	108	;'l'
   303  00104B  63                 	db	99	;'c'
   304  00104C  6F                 	db	111	;'o'
   305  00104D  6D                 	db	109	;'m'
   306  00104E  65                 	db	101	;'e'
   307  00104F  20                 	db	32
   308  001050  20                 	db	32
   309  001051  20                 	db	32
   310  001052  20                 	db	32
   311  001053  20                 	db	32
   312  001054  20                 	db	32
   313  001055  20                 	db	32
   314  001056  20                 	db	32
   315  001057  20                 	db	32
   316  001058  00                 	db	0
   317  001059                     STR_4:
   318  001059  45                 	db	69	;'E'
   319  00105A  78                 	db	120	;'x'
   320  00105B  69                 	db	105	;'i'
   321  00105C  74                 	db	116	;'t'
   322  00105D  20                 	db	32
   323  00105E  73                 	db	115	;'s'
   324  00105F  74                 	db	116	;'t'
   325  001060  61                 	db	97	;'a'
   326  001061  74                 	db	116	;'t'
   327  001062  65                 	db	101	;'e'
   328  001063  20                 	db	32
   329  001064  31                 	db	49	;'1'
   330  001065  0A                 	db	10
   331  001066  00                 	db	0
   332  001067                     STR_6:
   333  001067  45                 	db	69	;'E'
   334  001068  78                 	db	120	;'x'
   335  001069  69                 	db	105	;'i'
   336  00106A  74                 	db	116	;'t'
   337  00106B  20                 	db	32
   338  00106C  73                 	db	115	;'s'
   339  00106D  74                 	db	116	;'t'
   340  00106E  61                 	db	97	;'a'
   341  00106F  74                 	db	116	;'t'
   342  001070  65                 	db	101	;'e'
   343  001071  20                 	db	32
   344  001072  32                 	db	50	;'2'
   345  001073  0A                 	db	10
   346  001074  00                 	db	0
   347  001075  00                 	db	0	; dummy byte at the end
   348  0000                     
   349                           ; #config settings
   350                           
   351                           	psect	cinit
   352  002B16                     __pcinit:
   353                           	callstack 0
   354  002B16                     start_initialization:
   355                           	callstack 0
   356  002B16                     __initialization:
   357                           	callstack 0
   358                           
   359                           ; Clear objects allocated to BIGRAM (258 bytes)
   360  002B16  EE00  F080         	lfsr	0,__pbssBIGRAM
   361  002B1A  EE21 F002          	lfsr	2,258
   362  002B1E                     clear_0:
   363  002B1E  6AEE               	clrf	postinc0,c
   364  002B20  50DD               	movf	postdec2,w,c
   365  002B22  50D9               	movf	fsr2l,w,c
   366  002B24  E1FC               	bnz	clear_0
   367  002B26  50DA               	movf	fsr2h,w,c
   368  002B28  E1FA               	bnz	clear_0
   369                           
   370                           ; Clear objects allocated to BANK0 (32 bytes)
   371  002B2A  EE00  F060         	lfsr	0,__pbssBANK0
   372  002B2E  0E20               	movlw	32
   373  002B30                     clear_1:
   374  002B30  6AEE               	clrf	postinc0,c
   375  002B32  06E8               	decf	wreg,f,c
   376  002B34  E1FD               	bnz	clear_1
   377                           
   378                           ; Clear objects allocated to COMRAM (20 bytes)
   379  002B36  EE00  F021         	lfsr	0,__pbssCOMRAM
   380  002B3A  0E14               	movlw	20
   381  002B3C                     clear_2:
   382  002B3C  6AEE               	clrf	postinc0,c
   383  002B3E  06E8               	decf	wreg,f,c
   384  002B40  E1FD               	bnz	clear_2
   385  002B42                     end_of_initialization:
   386                           	callstack 0
   387  002B42                     __end_of__initialization:
   388                           	callstack 0
   389  002B42  0E00               	movlw	low (__Lmediumconst shr (0+16))
   390  002B44  6EF8               	movwf	tblptru,c
   391  002B46  0100               	movlb	0
   392  002B48  EF93  F012         	goto	_main	;jump to C main() function
   393                           
   394                           	psect	bssCOMRAM
   395  000021                     __pbssCOMRAM:
   396                           	callstack 0
   397  000021                     _buttons:
   398                           	callstack 0
   399  000021                     	ds	8
   400  000029                     _bsp_timeout:
   401                           	callstack 0
   402  000029                     	ds	4
   403  00002D                     _nout:
   404                           	callstack 0
   405  00002D                     	ds	2
   406  00002F                     _width:
   407                           	callstack 0
   408  00002F                     	ds	2
   409  000031                     _prec:
   410                           	callstack 0
   411  000031                     	ds	2
   412  000033                     _flags:
   413                           	callstack 0
   414  000033                     	ds	2
   415                           
   416                           	psect	bssBANK0
   417  000060                     __pbssBANK0:
   418                           	callstack 0
   419  000060                     _dbuf:
   420                           	callstack 0
   421  000060                     	ds	32
   422                           
   423                           	psect	bssBIGRAM
   424  000080                     __pbssBIGRAM:
   425                           	callstack 0
   426  000080                     _event_queue:
   427                           	callstack 0
   428  000080                     	ds	258
   429                           
   430                           	psect	cstackCOMRAM
   431  000035                     __pcstackCOMRAM:
   432                           	callstack 0
   433  000035                     ??_HIGH_ISR:
   434  000035                     
   435                           ; 1 bytes @ 0x0
   436  000035                     	ds	8
   437  00003D                     ??_LOW_ISR:
   438                           
   439                           ; 1 bytes @ 0x8
   440  00003D                     	ds	11
   441                           
   442 ;;
   443 ;;Main: autosize = 3, tempsize = 0, incstack = 0, save=0
   444 ;;
   445 ;; *************** function _main *****************
   446 ;; Defined at:
   447 ;;		line 22 in file "main.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;		None
   450 ;; Auto vars:     Size  Location     Type
   451 ;;  fsm             2  [STACK] struct fsm_t
   452 ;;  event           1  [STACK] unsigned char 
   453 ;; Return value:  Size  Location     Type
   454 ;;                  2  [STACK] int 
   455 ;; Registers used:
   456 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, bt
      +emp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, bt
      +emp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   457 ;; Tracked objects:
   458 ;;		On entry : 0/0
   459 ;;		On exit  : 0/0
   460 ;;		Unchanged: 0/0
   461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   466 ;;Total ram usage:        0 bytes
   467 ;; Hardware stack levels required when called: unknown (due to recursion)
   468 ;; This function calls:
   469 ;;		_LCD_Init
   470 ;;		_adc_init
   471 ;;		_bsp_init
   472 ;;		_fsm_dispatch
   473 ;;		_fsm_get_event
   474 ;;		_fsm_init
   475 ;;		_uart_init
   476 ;; This function is called by:
   477 ;;		Startup code after reset
   478 ;; This function uses a reentrant model
   479 ;;
   480                           
   481                           	psect	text0
   482  002526                     __ptext0:
   483                           	callstack 0
   484  002526                     _main:
   485                           	callstack 0
   486                           
   487                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   488  002526  52E6               	movf	postinc1,f,c
   489  002528  52E6               	movf	postinc1,f,c
   490  00252A  52E6               	movf	postinc1,f,c
   491  00252C                     
   492                           ;main.c: 23:     _delay((unsigned long)((100)*(32e6/4000.0)));
   493  00252C  0E05               	movlw	5
   494  00252E  6E02               	movwf	(wtemp0+1)^0,c
   495  002530  0E0F               	movlw	15
   496  002532  6E01               	movwf	wtemp0^0,c
   497  002534  0EF1               	movlw	241
   498  002536                     u1567:
   499  002536  2EE8               	decfsz	wreg,f,c
   500  002538  D7FE               	bra	u1567
   501  00253A  2E01               	decfsz	wtemp0^0,f,c
   502  00253C  D7FC               	bra	u1567
   503  00253E  2E02               	decfsz	(wtemp0+1)^0,f,c
   504  002540  D7FA               	bra	u1567
   505  002542  F000               	nop	
   506  002544                     
   507                           ;main.c: 24:     bsp_init();
   508  002544  EC50  F014         	call	_bsp_init	;wreg free
   509  002548                     
   510                           ; BSR set to: 15
   511                           ;main.c: 25:     uart_init();
   512  002548  EC05  F016         	call	_uart_init	;wreg free
   513  00254C                     
   514                           ;main.c: 26:     adc_init();
   515  00254C  ECD1  F015         	call	_adc_init	;wreg free
   516  002550                     
   517                           ; BSR set to: 15
   518                           ;main.c: 27:     LCD_Init();
   519  002550  ECE6  F00F         	call	_LCD_Init	;wreg free
   520  002554                     
   521                           ;main.c: 30:     GIEL = 1;
   522  002554  8CF2               	bsf	4082,6,c	;volatile
   523  002556                     
   524                           ;main.c: 31:     GIEH = 1;
   525  002556  8EF2               	bsf	4082,7,c	;volatile
   526  002558                     
   527                           ;main.c: 33:     TMR2ON = 1;
   528  002558  84BA               	bsf	4026,2,c	;volatile
   529  00255A                     
   530                           ;main.c: 34:     TMR1ON = 1;
   531  00255A  80CD               	bsf	4045,0,c	;volatile
   532  00255C                     
   533                           ;main.c: 37:  fsm_t fsm;;main.c: 38:     uint8_t event = 0;
   534                           ;stkvar	_event @ sp[(-3)+2]
   535  00255C  0EFF               	movlw	-1
   536  00255E  6AE3               	clrf	plusw1,c
   537  002560                     
   538                           ;main.c: 40:     fsm_init(&fsm, &init);
   539  002560  0E68               	movlw	low _init
   540  002562  6EE6               	movwf	postinc1,c
   541  002564  0E26               	movlw	high _init
   542  002566  6EE6               	movwf	postinc1,c
   543                           
   544                           ;stkvar	_fsm @ sp[(-5)+0]
   545  002568  0EFB               	movlw	251
   546  00256A  24E1               	addwf	fsr1l,w,c
   547  00256C  6E01               	movwf	btemp^0,c
   548  00256E  0EFF               	movlw	255
   549  002570  20E2               	addwfc	fsr1h,w,c
   550  002572  6E02               	movwf	(btemp+1)^0,c
   551  002574  C001  FFE6         	movff	btemp,postinc1
   552  002578  C002  FFE6         	movff	btemp+1,postinc1
   553  00257C  EC4D  F015         	call	_fsm_init	;wreg free
   554  002580                     l2184:
   555                           
   556                           ;main.c: 43:         if (fsm_get_event(&event)){
   557                           ;stkvar	_event @ sp[(-3)+2]
   558  002580  0EFF               	movlw	255
   559  002582  24E1               	addwf	fsr1l,w,c
   560  002584  6E01               	movwf	btemp^0,c
   561  002586  0EFF               	movlw	255
   562  002588  20E2               	addwfc	fsr1h,w,c
   563  00258A  6E02               	movwf	(btemp+1)^0,c
   564  00258C  C001  FFE6         	movff	btemp,postinc1
   565  002590  C002  FFE6         	movff	btemp+1,postinc1
   566  002594  ECE0  F015         	call	_fsm_get_event	;wreg free
   567  002598  5001               	movf	btemp^0,w,c
   568  00259A  B4D8               	btfsc	status,2,c
   569  00259C  EFD2  F012         	goto	u1551
   570  0025A0  EFD4  F012         	goto	u1550
   571  0025A4                     u1551:
   572  0025A4  EFC0  F012         	goto	l2184
   573  0025A8                     u1550:
   574  0025A8                     
   575                           ;main.c: 45:             fsm_dispatch(&fsm, event);
   576                           ;stkvar	_event @ sp[(-3)+2]
   577  0025A8  0EFF               	movlw	-1
   578  0025AA  50E3               	movf	plusw1,w,c
   579  0025AC  6EE6               	movwf	postinc1,c
   580                           
   581                           ;stkvar	_fsm @ sp[(-4)+0]
   582  0025AE  0EFC               	movlw	252
   583  0025B0  24E1               	addwf	fsr1l,w,c
   584  0025B2  6E01               	movwf	btemp^0,c
   585  0025B4  0EFF               	movlw	255
   586  0025B6  20E2               	addwfc	fsr1h,w,c
   587  0025B8  6E02               	movwf	(btemp+1)^0,c
   588  0025BA  C001  FFE6         	movff	btemp,postinc1
   589  0025BE  C002  FFE6         	movff	btemp+1,postinc1
   590  0025C2  EC6C  F015         	call	_fsm_dispatch	;wreg free
   591  0025C6  EFC0  F012         	goto	l2184
   592  0025CA  EFAE  F000         	goto	start
   593  0025CE                     __end_of_main:
   594                           	callstack 0
   595                           
   596 ;; *************** function _uart_init *****************
   597 ;; Defined at:
   598 ;;		line 4 in file "uart.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;		None
   601 ;; Auto vars:     Size  Location     Type
   602 ;;		None
   603 ;; Return value:  Size  Location     Type
   604 ;;                  1  [STACK] void 
   605 ;; Registers used:
   606 ;;		wreg, status,2
   607 ;; Tracked objects:
   608 ;;		On entry : 3F/F
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   616 ;;Total ram usage:        0 bytes
   617 ;; Hardware stack levels used: 1
   618 ;; Hardware stack levels required when called: 6
   619 ;; This function calls:
   620 ;;		Nothing
   621 ;; This function is called by:
   622 ;;		_main
   623 ;; This function uses a reentrant model
   624 ;;
   625                           
   626                           	psect	text1
   627  002C0A                     __ptext1:
   628                           	callstack 0
   629  002C0A                     _uart_init:
   630                           	callstack 24
   631  002C0A                     
   632                           ;uart.c: 6:     TRISCbits.TRISC6 = 1;
   633  002C0A  8C94               	bsf	148,6,c	;volatile
   634                           
   635                           ;uart.c: 7:     TRISCbits.TRISC7 = 1;
   636  002C0C  8E94               	bsf	148,7,c	;volatile
   637  002C0E                     
   638                           ;uart.c: 10:     SPBRG1 = 51;
   639  002C0E  0E33               	movlw	51
   640  002C10  6EAF               	movwf	175,c	;volatile
   641  002C12                     
   642                           ;uart.c: 12:     TXSTA1bits.SYNC = 0;
   643  002C12  98AC               	bcf	172,4,c	;volatile
   644  002C14                     
   645                           ;uart.c: 13:     RCSTA1bits.SPEN = 1;
   646  002C14  8EAB               	bsf	171,7,c	;volatile
   647  002C16                     
   648                           ;uart.c: 14:     TXSTA1bits.TXEN = 1;
   649  002C16  8AAC               	bsf	172,5,c	;volatile
   650  002C18                     
   651                           ;uart.c: 15:     RCSTA1bits.CREN = 1;
   652  002C18  88AB               	bsf	171,4,c	;volatile
   653  002C1A                     
   654                           ; _uart_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
   655  002C1A  0012               	return		;funcret
   656  002C1C                     __end_of_uart_init:
   657                           	callstack 0
   658                           
   659 ;; *************** function _fsm_init *****************
   660 ;; Defined at:
   661 ;;		line 15 in file "fsm.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;  fsm             2  [STACK] PTR struct fsm_t
   664 ;;		 -> fsm(2), 
   665 ;;  init_state      2  [STACK] PTR FTN(PTR struct fsm_t
   666 ;;		 -> init(1), 
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1  [STACK] void 
   671 ;; Registers used:
   672 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, bt
      +emp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, bt
      +emp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   673 ;; Tracked objects:
   674 ;;		On entry : 0/F
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   682 ;;Total ram usage:        0 bytes
   683 ;; Hardware stack levels used: 1
   684 ;; Hardware stack levels required when called: unknown (due to recursion)
   685 ;; This function calls:
   686 ;;		_fsm_dispatch
   687 ;; This function is called by:
   688 ;;		_main
   689 ;; This function uses a reentrant model
   690 ;;
   691                           
   692                           	psect	text2
   693  002A9A                     __ptext2:
   694                           	callstack 0
   695  002A9A                     _fsm_init:
   696                           	callstack 31
   697  002A9A                     
   698                           ;fsm.c: 16:     fsm->state = init_state;
   699                           ;stkvar	_init_state @ sp[(0)+-4]
   700  002A9A  50E1               	movf	fsr1l,w,c
   701  002A9C  0FFC               	addlw	-4
   702  002A9E  6ED9               	movwf	fsr2l,c
   703  002AA0  50E2               	movf	fsr1h,w,c
   704  002AA2  6EDA               	movwf	fsr2h,c
   705  002AA4  0EFF               	movlw	255
   706  002AA6  22DA               	addwfc	fsr2h,f,c
   707                           
   708                           ;stkvar	_fsm @ sp[(0)+-2]
   709  002AA8  0EFE               	movlw	-2
   710  002AAA  CFE3 FFE9          	movff	plusw1,fsr0l
   711  002AAE  0EFF               	movlw	-1
   712  002AB0  CFE3 FFEA          	movff	plusw1,fsr0h
   713  002AB4  CFDE FFEE          	movff	postinc2,postinc0
   714  002AB8  CFDD FFED          	movff	postdec2,postdec0
   715  002ABC                     
   716                           ;fsm.c: 17:     fsm_dispatch(fsm, 1U);
   717  002ABC  0E01               	movlw	1
   718  002ABE  6EE6               	movwf	postinc1,c
   719                           
   720                           ;stkvar	_fsm @ sp[(-1)+-2]
   721  002AC0  0EFD               	movlw	-3
   722  002AC2  CFE3 FFE6          	movff	plusw1,postinc1
   723  002AC6  CFE3 FFE6          	movff	plusw1,postinc1
   724  002ACA  EC6C  F015         	call	_fsm_dispatch	;wreg free
   725  002ACE                     
   726                           ; _fsm_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
   727  002ACE  52E5               	movf	postdec1,f,c
   728  002AD0  52E5               	movf	postdec1,f,c
   729  002AD2  52E5               	movf	postdec1,f,c
   730  002AD4  52E5               	movf	postdec1,f,c
   731  002AD6  0012               	return		;funcret
   732  002AD8                     __end_of_fsm_init:
   733                           	callstack 0
   734                           
   735 ;; *************** function _fsm_get_event *****************
   736 ;; Defined at:
   737 ;;		line 10 in file "fsm.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;  out             2  [STACK] PTR unsigned char 
   740 ;;		 -> event(1), 
   741 ;; Auto vars:     Size  Location     Type
   742 ;;		None
   743 ;; Return value:  Size  Location     Type
   744 ;;                  1  [STACK] unsigned char 
   745 ;; Registers used:
   746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
   747 ;; Tracked objects:
   748 ;;		On entry : 0/F
   749 ;;		On exit  : 0/0
   750 ;;		Unchanged: 0/0
   751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   756 ;;Total ram usage:        0 bytes
   757 ;; Hardware stack levels used: 1
   758 ;; Hardware stack levels required when called: 7
   759 ;; This function calls:
   760 ;;		_get_evt
   761 ;; This function is called by:
   762 ;;		_main
   763 ;; This function uses a reentrant model
   764 ;;
   765                           
   766                           	psect	text3
   767  002BC0                     __ptext3:
   768                           	callstack 0
   769  002BC0                     _fsm_get_event:
   770                           	callstack 23
   771  002BC0                     
   772                           ;fsm.c: 11:  return get_evt(&event_queue, out);
   773                           ;stkvar	_out @ sp[(0)+-2]
   774  002BC0  0EFE               	movlw	-2
   775  002BC2  CFE3 FFE6          	movff	plusw1,postinc1
   776  002BC6  CFE3 FFE6          	movff	plusw1,postinc1
   777  002BCA  0E80               	movlw	low _event_queue
   778  002BCC  6EE6               	movwf	postinc1,c
   779  002BCE  0E00               	movlw	high _event_queue
   780  002BD0  6EE6               	movwf	postinc1,c
   781  002BD2  EC68  F010         	call	_get_evt	;wreg free
   782  002BD6                     
   783                           ; _fsm_get_event: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
   784  002BD6  52E5               	movf	postdec1,f,c
   785  002BD8  52E5               	movf	postdec1,f,c
   786  002BDA  0012               	return		;funcret
   787  002BDC                     __end_of_fsm_get_event:
   788                           	callstack 0
   789                           
   790 ;; *************** function _get_evt *****************
   791 ;; Defined at:
   792 ;;		line 9 in file "evt_queue.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;  queue           2  [STACK] PTR volatile struct .
   795 ;;		 -> event_queue(258), 
   796 ;;  out             2  [STACK] PTR unsigned char 
   797 ;;		 -> event(1), 
   798 ;; Auto vars:     Size  Location     Type
   799 ;;  tmp             1  [STACK] unsigned char 
   800 ;; Return value:  Size  Location     Type
   801 ;;                  1  [STACK] unsigned char 
   802 ;; Registers used:
   803 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
   804 ;; Tracked objects:
   805 ;;		On entry : 0/F
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;Total ram usage:        0 bytes
   814 ;; Hardware stack levels used: 1
   815 ;; Hardware stack levels required when called: 6
   816 ;; This function calls:
   817 ;;		Nothing
   818 ;; This function is called by:
   819 ;;		_fsm_get_event
   820 ;; This function uses a reentrant model
   821 ;;
   822                           
   823                           	psect	text4
   824  0020D0                     __ptext4:
   825                           	callstack 0
   826  0020D0                     _get_evt:
   827                           	callstack 0
   828                           
   829                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   830  0020D0  52E6               	movf	postinc1,f,c
   831  0020D2                     
   832                           ;evt_queue.c: 10:     while(queue->head == queue->tail){
   833  0020D2  EF6F  F010         	goto	l1554
   834  0020D6                     l1550:
   835                           
   836                           ;evt_queue.c: 11:      return 0;
   837  0020D6  0E00               	movlw	0
   838  0020D8  6E01               	movwf	btemp^0,c
   839  0020DA  EFDE  F010         	goto	l96
   840  0020DE                     l1554:
   841                           
   842                           ;evt_queue.c: 10:     while(queue->head == queue->tail){
   843                           ;stkvar	_queue @ sp[(-1)+-2]
   844  0020DE  0EFD               	movlw	-3
   845  0020E0  CFE3 F00B          	movff	plusw1,btemp+10
   846  0020E4  0EFE               	movlw	-2
   847  0020E6  CFE3 F00C          	movff	plusw1,btemp+11
   848  0020EA  0E01               	movlw	1
   849  0020EC  240B               	addwf	(btemp+10)^0,w,c
   850  0020EE  6ED9               	movwf	fsr2l,c
   851  0020F0  0E01               	movlw	1
   852  0020F2  200C               	addwfc	(btemp+11)^0,w,c
   853  0020F4  6EDA               	movwf	fsr2h,c
   854                           
   855                           ;stkvar	_queue @ sp[(-1)+-2]
   856  0020F6  0EFD               	movlw	-3
   857  0020F8  CFE3 F00B          	movff	plusw1,btemp+10
   858  0020FC  0EFE               	movlw	-2
   859  0020FE  CFE3 F00C          	movff	plusw1,btemp+11
   860  002102  0E00               	movlw	0
   861  002104  240B               	addwf	(btemp+10)^0,w,c
   862  002106  6EE9               	movwf	fsr0l,c
   863  002108  0E01               	movlw	1
   864  00210A  200C               	addwfc	(btemp+11)^0,w,c
   865  00210C  6EEA               	movwf	fsr0h,c
   866  00210E  50DE               	movf	postinc2,w,c
   867  002110  18EE               	xorwf	postinc0,w,c
   868  002112  B4D8               	btfsc	status,2,c
   869  002114  EF8E  F010         	goto	u741
   870  002118  EF90  F010         	goto	u740
   871  00211C                     u741:
   872  00211C  EF6B  F010         	goto	l1550
   873  002120                     u740:
   874  002120                     
   875                           ;evt_queue.c: 14:  char tmp = (GIE & 0b1); GIE=0;;
   876  002120  BEF2               	btfsc	4082,7,c	;volatile
   877  002122  EF95  F010         	goto	u751
   878  002126  EF99  F010         	goto	u750
   879  00212A                     u751:
   880  00212A  6A0C               	clrf	(btemp+11)^0,c
   881  00212C  2A0C               	incf	(btemp+11)^0,f,c
   882  00212E  EF9A  F010         	goto	u768
   883  002132                     u750:
   884  002132  6A0C               	clrf	(btemp+11)^0,c
   885  002134                     u768:
   886  002134  0E01               	movlw	1
   887  002136  160C               	andwf	(btemp+11)^0,f,c
   888                           
   889                           ;stkvar	_tmp @ sp[(-1)+0]
   890  002138  0EFF               	movlw	-1
   891  00213A  C00C  FFE3         	movff	btemp+11,plusw1
   892  00213E  9EF2               	bcf	4082,7,c	;volatile
   893  002140                     
   894                           ;evt_queue.c: 15:     *out = queue->fifo[queue->head++];
   895                           ;stkvar	_queue @ sp[(-1)+-2]
   896  002140  0EFD               	movlw	-3
   897  002142  CFE3 F00B          	movff	plusw1,btemp+10
   898  002146  0EFE               	movlw	-2
   899  002148  CFE3 F00C          	movff	plusw1,btemp+11
   900  00214C  0E00               	movlw	0
   901  00214E  240B               	addwf	(btemp+10)^0,w,c
   902  002150  6ED9               	movwf	fsr2l,c
   903  002152  0E01               	movlw	1
   904  002154  200C               	addwfc	(btemp+11)^0,w,c
   905  002156  6EDA               	movwf	fsr2h,c
   906  002158  50DF               	movf	indf2,w,c
   907  00215A  6E0C               	movwf	(btemp+11)^0,c
   908                           
   909                           ;stkvar	_queue @ sp[(-1)+-2]
   910  00215C  0EFD               	movlw	-3
   911  00215E  CFE3 F009          	movff	plusw1,btemp+8
   912  002162  0EFE               	movlw	-2
   913  002164  CFE3 F00A          	movff	plusw1,btemp+9
   914  002168  500C               	movf	(btemp+11)^0,w,c
   915  00216A  2409               	addwf	(btemp+8)^0,w,c
   916  00216C  6ED9               	movwf	fsr2l,c
   917  00216E  0E00               	movlw	0
   918  002170  200A               	addwfc	(btemp+9)^0,w,c
   919  002172  6EDA               	movwf	fsr2h,c
   920                           
   921                           ;stkvar	_out @ sp[(-1)+-4]
   922  002174  0EFB               	movlw	-5
   923  002176  CFE3 FFE9          	movff	plusw1,fsr0l
   924  00217A  0EFC               	movlw	-4
   925  00217C  CFE3 FFEA          	movff	plusw1,fsr0h
   926  002180  CFDF FFEF          	movff	indf2,indf0
   927  002184                     
   928                           ;stkvar	_queue @ sp[(-1)+-2]
   929  002184  0EFD               	movlw	-3
   930  002186  CFE3 F00B          	movff	plusw1,btemp+10
   931  00218A  0EFE               	movlw	-2
   932  00218C  CFE3 F00C          	movff	plusw1,btemp+11
   933  002190  0E00               	movlw	0
   934  002192  240B               	addwf	(btemp+10)^0,w,c
   935  002194  6ED9               	movwf	fsr2l,c
   936  002196  0E01               	movlw	1
   937  002198  200C               	addwfc	(btemp+11)^0,w,c
   938  00219A  6EDA               	movwf	fsr2h,c
   939  00219C  2ADF               	incf	indf2,f,c
   940  00219E                     
   941                           ;evt_queue.c: 16:  GIE = (tmp & 0b1);;
   942                           ;stkvar	_tmp @ sp[(-1)+0]
   943  00219E  0EFF               	movlw	-1
   944  0021A0  CFE3 F00C          	movff	plusw1,btemp+11
   945  0021A4  300C               	rrcf	(btemp+11)^0,w,c
   946  0021A6  B0D8               	btfsc	status,0,c
   947  0021A8  EFD8  F010         	goto	u771
   948  0021AC  EFDB  F010         	goto	u770
   949  0021B0                     u771:
   950  0021B0  8EF2               	bsf	4082,7,c	;volatile
   951  0021B2  EFDC  F010         	goto	u785
   952  0021B6                     u770:
   953  0021B6  9EF2               	bcf	4082,7,c	;volatile
   954  0021B8                     u785:
   955  0021B8                     
   956                           ;evt_queue.c: 17:  return 1;
   957  0021B8  0E01               	movlw	1
   958  0021BA  6E01               	movwf	btemp^0,c
   959  0021BC                     l96:
   960                           
   961                           ; _get_evt: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
   962  0021BC  0EFB               	movlw	251
   963  0021BE  26E1               	addwf	fsr1l,f,c
   964  0021C0  0EFF               	movlw	255
   965  0021C2  22E2               	addwfc	fsr1h,f,c
   966  0021C4  0012               	return		;funcret
   967  0021C6                     __end_of_get_evt:
   968                           	callstack 0
   969                           
   970 ;; *************** function _bsp_init *****************
   971 ;; Defined at:
   972 ;;		line 8 in file "bsp.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;		None
   975 ;; Auto vars:     Size  Location     Type
   976 ;;		None
   977 ;; Return value:  Size  Location     Type
   978 ;;                  1  [STACK] void 
   979 ;; Registers used:
   980 ;;		wreg, status,2
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 3F/F
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   990 ;;Total ram usage:        0 bytes
   991 ;; Hardware stack levels used: 1
   992 ;; Hardware stack levels required when called: 6
   993 ;; This function calls:
   994 ;;		Nothing
   995 ;; This function is called by:
   996 ;;		_main
   997 ;; This function uses a reentrant model
   998 ;;
   999                           
  1000                           	psect	text5
  1001  0028A0                     __ptext5:
  1002                           	callstack 0
  1003  0028A0                     _bsp_init:
  1004                           	callstack 24
  1005  0028A0                     
  1006                           ;bsp.c: 9:     TRISCbits.RC0 = 1;
  1007  0028A0  8094               	bsf	148,0,c	;volatile
  1008                           
  1009                           ;bsp.c: 10:     TRISAbits.RA4 = 1;
  1010  0028A2  8892               	bsf	146,4,c	;volatile
  1011                           
  1012                           ;bsp.c: 11:     TRISAbits.RA3 = 1;
  1013  0028A4  8692               	bsf	146,3,c	;volatile
  1014                           
  1015                           ;bsp.c: 12:     TRISAbits.RA2 = 1;
  1016  0028A6  8492               	bsf	146,2,c	;volatile
  1017                           
  1018                           ;bsp.c: 14:     TRISDbits.RD2 = 0;
  1019  0028A8  9495               	bcf	149,2,c	;volatile
  1020                           
  1021                           ;bsp.c: 15:     TRISDbits.RD3 = 0;
  1022  0028AA  9695               	bcf	149,3,c	;volatile
  1023                           
  1024                           ;bsp.c: 16:     TRISCbits.RC4 = 0;
  1025  0028AC  9894               	bcf	148,4,c	;volatile
  1026                           
  1027                           ;bsp.c: 17:     TRISDbits.RD4 = 0;
  1028  0028AE  9895               	bcf	149,4,c	;volatile
  1029                           
  1030                           ;bsp.c: 18:     TRISDbits.RD5 = 0;
  1031  0028B0  9A95               	bcf	149,5,c	;volatile
  1032                           
  1033                           ;bsp.c: 19:     TRISDbits.RD6 = 0;
  1034  0028B2  9C95               	bcf	149,6,c	;volatile
  1035                           
  1036                           ;bsp.c: 21:     TRISBbits.TRISB5 = 0;
  1037  0028B4  9A93               	bcf	147,5,c	;volatile
  1038                           
  1039                           ;bsp.c: 23:     ANSELA = 0;
  1040  0028B6  010F               	movlb	15	; () banked
  1041  0028B8  6B38               	clrf	56,b	;volatile
  1042                           
  1043                           ;bsp.c: 25:     LATDbits.LD2 = 1;
  1044  0028BA  848C               	bsf	140,2,c	;volatile
  1045                           
  1046                           ;bsp.c: 26:     LATDbits.LD3 = 1;
  1047  0028BC  868C               	bsf	140,3,c	;volatile
  1048                           
  1049                           ;bsp.c: 27:     LATCbits.LC4 = 1;
  1050  0028BE  888B               	bsf	139,4,c	;volatile
  1051                           
  1052                           ;bsp.c: 28:     LATDbits.LD4 = 1;
  1053  0028C0  888C               	bsf	140,4,c	;volatile
  1054                           
  1055                           ;bsp.c: 29:     LATDbits.LD5 = 1;
  1056  0028C2  8A8C               	bsf	140,5,c	;volatile
  1057                           
  1058                           ;bsp.c: 30:     LATDbits.LD6 = 1;
  1059  0028C4  8C8C               	bsf	140,6,c	;volatile
  1060  0028C6                     
  1061                           ; BSR set to: 15
  1062                           ;bsp.c: 32:     T2CONbits.T2CKPS = 0b11;
  1063  0028C6  0E03               	movlw	3
  1064  0028C8  12BA               	iorwf	186,f,c	;volatile
  1065                           
  1066                           ;bsp.c: 33:     T2CONbits.T2OUTPS = 0b1001;
  1067  0028CA  50BA               	movf	186,w,c	;volatile
  1068  0028CC  0B87               	andlw	-121
  1069  0028CE  0948               	iorlw	72
  1070  0028D0  6EBA               	movwf	186,c	;volatile
  1071                           
  1072                           ;bsp.c: 34:     PR2 = 250;
  1073  0028D2  0EFA               	movlw	250
  1074  0028D4  6EBB               	movwf	187,c	;volatile
  1075  0028D6                     
  1076                           ; BSR set to: 15
  1077                           ;bsp.c: 35:     IPR1bits.TMR2IP = 0;
  1078  0028D6  929F               	bcf	159,1,c	;volatile
  1079  0028D8                     
  1080                           ; BSR set to: 15
  1081                           ;bsp.c: 36:     TMR2IE = 1;
  1082  0028D8  829D               	bsf	3997,1,c	;volatile
  1083  0028DA                     
  1084                           ; BSR set to: 15
  1085                           ;bsp.c: 37:     TMR2IF = 0;
  1086  0028DA  929E               	bcf	3998,1,c	;volatile
  1087                           
  1088                           ;bsp.c: 39:     T6CONbits.T6CKPS = 0b11;
  1089  0028DC  0E03               	movlw	3
  1090  0028DE  134A               	iorwf	74,f,b	;volatile
  1091                           
  1092                           ;bsp.c: 40:     T6CONbits.T6OUTPS = 0b0100;
  1093  0028E0  514A               	movf	74,w,b	;volatile
  1094  0028E2  0B87               	andlw	-121
  1095  0028E4  0920               	iorlw	32
  1096  0028E6  6F4A               	movwf	74,b	;volatile
  1097                           
  1098                           ;bsp.c: 41:     PR6 = 100;
  1099  0028E8  0E64               	movlw	100
  1100  0028EA  6F4B               	movwf	75,b	;volatile
  1101  0028EC                     
  1102                           ; BSR set to: 15
  1103                           ;bsp.c: 42:     TMR6IE = 1;
  1104  0028EC  847D               	bsf	3965,2,c	;volatile
  1105  0028EE                     
  1106                           ; BSR set to: 15
  1107                           ;bsp.c: 43:     TMR6IF = 0;
  1108  0028EE  947E               	bcf	3966,2,c	;volatile
  1109                           
  1110                           ;bsp.c: 46:     T1CONbits.TMR1CS = 0b00;
  1111  0028F0  0E3F               	movlw	-193
  1112  0028F2  16CD               	andwf	205,f,c	;volatile
  1113                           
  1114                           ;bsp.c: 47:     T1CONbits.T1CKPS = 0b11;
  1115  0028F4  0E30               	movlw	48
  1116  0028F6  12CD               	iorwf	205,f,c	;volatile
  1117  0028F8                     
  1118                           ; BSR set to: 15
  1119                           ;bsp.c: 48:     TMR1IE = 1;
  1120  0028F8  809D               	bsf	3997,0,c	;volatile
  1121  0028FA                     
  1122                           ; BSR set to: 15
  1123                           ;bsp.c: 49:     TMR1IF = 0;
  1124  0028FA  909E               	bcf	3998,0,c	;volatile
  1125  0028FC                     
  1126                           ; BSR set to: 15
  1127                           ;bsp.c: 51:     IPEN = 1;
  1128  0028FC  8ED0               	bsf	4048,7,c	;volatile
  1129  0028FE                     
  1130                           ; BSR set to: 15
  1131                           ; _bsp_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  1132  0028FE  0012               	return		;funcret
  1133  002900                     __end_of_bsp_init:
  1134                           	callstack 0
  1135                           
  1136 ;; *************** function _adc_init *****************
  1137 ;; Defined at:
  1138 ;;		line 3 in file "adc.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;		None
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;		None
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1  [STACK] void 
  1145 ;; Registers used:
  1146 ;;		wreg, status,2, status,0
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/F
  1149 ;;		On exit  : 3F/F
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1156 ;;Total ram usage:        0 bytes
  1157 ;; Hardware stack levels used: 1
  1158 ;; Hardware stack levels required when called: 6
  1159 ;; This function calls:
  1160 ;;		Nothing
  1161 ;; This function is called by:
  1162 ;;		_main
  1163 ;; This function uses a reentrant model
  1164 ;;
  1165                           
  1166                           	psect	text6
  1167  002BA2                     __ptext6:
  1168                           	callstack 0
  1169  002BA2                     _adc_init:
  1170                           	callstack 24
  1171  002BA2                     
  1172                           ;adc.c: 5:     ANSELA |= (1 << 5);
  1173  002BA2  010F               	movlb	15	; () banked
  1174  002BA4  8B38               	bsf	56,5,b	;volatile
  1175  002BA6                     
  1176                           ; BSR set to: 15
  1177                           ;adc.c: 6:     ANSELE = 0b1;
  1178  002BA6  0E01               	movlw	1
  1179  002BA8  6F3C               	movwf	60,b	;volatile
  1180  002BAA                     
  1181                           ; BSR set to: 15
  1182                           ;adc.c: 8:     ADCON2bits.ADFM = 1;
  1183  002BAA  8EC0               	bsf	192,7,c	;volatile
  1184  002BAC                     
  1185                           ; BSR set to: 15
  1186                           ;adc.c: 9:     ADCON2bits.ADCS = 0b110;
  1187  002BAC  50C0               	movf	192,w,c	;volatile
  1188  002BAE  0BF8               	andlw	-8
  1189  002BB0  0906               	iorlw	6
  1190  002BB2  6EC0               	movwf	192,c	;volatile
  1191  002BB4                     
  1192                           ; BSR set to: 15
  1193                           ;adc.c: 10:     ADCON2bits.ACQT = 0b110;
  1194  002BB4  50C0               	movf	192,w,c	;volatile
  1195  002BB6  0BC7               	andlw	-57
  1196  002BB8  0930               	iorlw	48
  1197  002BBA  6EC0               	movwf	192,c	;volatile
  1198  002BBC                     
  1199                           ; BSR set to: 15
  1200                           ;adc.c: 11:     ADCON0bits.ADON = 1;
  1201  002BBC  80C2               	bsf	194,0,c	;volatile
  1202  002BBE                     
  1203                           ; BSR set to: 15
  1204                           ; _adc_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  1205  002BBE  0012               	return		;funcret
  1206  002BC0                     __end_of_adc_init:
  1207                           	callstack 0
  1208                           
  1209 ;; *************** function _LCD_Init *****************
  1210 ;; Defined at:
  1211 ;;		line 6 in file "lcd.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;		None
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;		None
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1  [STACK] void 
  1218 ;; Registers used:
  1219 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  1220 ;; Tracked objects:
  1221 ;;		On entry : 3F/F
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1229 ;;Total ram usage:        0 bytes
  1230 ;; Hardware stack levels used: 1
  1231 ;; Hardware stack levels required when called: 7
  1232 ;; This function calls:
  1233 ;;		_LCD_Send
  1234 ;; This function is called by:
  1235 ;;		_main
  1236 ;; This function uses a reentrant model
  1237 ;;
  1238                           
  1239                           	psect	text7
  1240  001FCC                     __ptext7:
  1241                           	callstack 0
  1242  001FCC                     _LCD_Init:
  1243                           	callstack 23
  1244  001FCC                     
  1245                           ;lcd.c: 8:     ANSELDbits.ANSD0 = 0;
  1246  001FCC  010F               	movlb	15	; () banked
  1247  001FCE  913B               	bcf	59,0,b	;volatile
  1248                           
  1249                           ;lcd.c: 9:     ANSELDbits.ANSD1 = 0;
  1250  001FD0  933B               	bcf	59,1,b	;volatile
  1251                           
  1252                           ;lcd.c: 11:     TRISDbits.TRISD0 = 1;
  1253  001FD2  8095               	bsf	149,0,c	;volatile
  1254                           
  1255                           ;lcd.c: 12:     TRISDbits.TRISD1 = 1;
  1256  001FD4  8295               	bsf	149,1,c	;volatile
  1257                           
  1258                           ;lcd.c: 13:     TRISAbits.TRISA0 = 0;
  1259  001FD6  9092               	bcf	146,0,c	;volatile
  1260                           
  1261                           ;lcd.c: 14:     LATAbits.LATA0 = 1;
  1262  001FD8  8089               	bsf	137,0,c	;volatile
  1263  001FDA                     
  1264                           ; BSR set to: 15
  1265                           ;lcd.c: 17:     SSP2CON1bits.SSPM = 0b1000;
  1266  001FDA  506C               	movf	108,w,c	;volatile
  1267  001FDC  0BF0               	andlw	-16
  1268  001FDE  0908               	iorlw	8
  1269  001FE0  6E6C               	movwf	108,c	;volatile
  1270                           
  1271                           ;lcd.c: 18:     SSP2ADD = 19;
  1272  001FE2  0E13               	movlw	19
  1273  001FE4  6E6E               	movwf	110,c	;volatile
  1274  001FE6                     
  1275                           ; BSR set to: 15
  1276                           ;lcd.c: 19:     SSP2CON1bits.SSPEN = 1;
  1277  001FE6  8A6C               	bsf	108,5,c	;volatile
  1278  001FE8                     
  1279                           ; BSR set to: 15
  1280                           ;lcd.c: 21:     _delay((unsigned long)((5)*(32E6/4000.0)));
  1281  001FE8  0E34               	movlw	52
  1282  001FEA  6E01               	movwf	btemp^0,c
  1283  001FEC  0EF2               	movlw	242
  1284  001FEE                     u1577:
  1285  001FEE  2EE8               	decfsz	wreg,f,c
  1286  001FF0  D7FE               	bra	u1577
  1287  001FF2  2E01               	decfsz	btemp^0,f,c
  1288  001FF4  D7FC               	bra	u1577
  1289  001FF6                     
  1290                           ;lcd.c: 23:     SSP2CON2bits.SEN = 1;
  1291  001FF6  806B               	bsf	107,0,c	;volatile
  1292  001FF8                     l168:
  1293  001FF8  B06B               	btfsc	107,0,c	;volatile
  1294  001FFA  EF01  F010         	goto	u791
  1295  001FFE  EF03  F010         	goto	u790
  1296  002002                     u791:
  1297  002002  EFFC  F00F         	goto	l168
  1298  002006                     u790:
  1299  002006                     
  1300                           ;lcd.c: 25:     SSP2IF = 0;
  1301  002006  9EA4               	bcf	4004,7,c	;volatile
  1302  002008                     
  1303                           ;lcd.c: 30:     LCD_Send(0x7C);
  1304  002008  0E7C               	movlw	124
  1305  00200A  6EE6               	movwf	postinc1,c
  1306  00200C  ECBD  F015         	call	_LCD_Send	;wreg free
  1307                           
  1308                           ;lcd.c: 31:     LCD_Send(0x80);
  1309  002010  0E80               	movlw	128
  1310  002012  6EE6               	movwf	postinc1,c
  1311  002014  ECBD  F015         	call	_LCD_Send	;wreg free
  1312                           
  1313                           ;lcd.c: 32:     LCD_Send(0x38);
  1314  002018  0E38               	movlw	56
  1315  00201A  6EE6               	movwf	postinc1,c
  1316  00201C  ECBD  F015         	call	_LCD_Send	;wreg free
  1317                           
  1318                           ;lcd.c: 33:     LCD_Send(0x80);
  1319  002020  0E80               	movlw	128
  1320  002022  6EE6               	movwf	postinc1,c
  1321  002024  ECBD  F015         	call	_LCD_Send	;wreg free
  1322                           
  1323                           ;lcd.c: 34:     LCD_Send(0x39);
  1324  002028  0E39               	movlw	57
  1325  00202A  6EE6               	movwf	postinc1,c
  1326  00202C  ECBD  F015         	call	_LCD_Send	;wreg free
  1327                           
  1328                           ;lcd.c: 35:     LCD_Send(0x80);
  1329  002030  0E80               	movlw	128
  1330  002032  6EE6               	movwf	postinc1,c
  1331  002034  ECBD  F015         	call	_LCD_Send	;wreg free
  1332                           
  1333                           ;lcd.c: 36:     LCD_Send(0x17);
  1334  002038  0E17               	movlw	23
  1335  00203A  6EE6               	movwf	postinc1,c
  1336  00203C  ECBD  F015         	call	_LCD_Send	;wreg free
  1337                           
  1338                           ;lcd.c: 37:     LCD_Send(0x80);
  1339  002040  0E80               	movlw	128
  1340  002042  6EE6               	movwf	postinc1,c
  1341  002044  ECBD  F015         	call	_LCD_Send	;wreg free
  1342                           
  1343                           ;lcd.c: 38:     LCD_Send(0x7A);
  1344  002048  0E7A               	movlw	122
  1345  00204A  6EE6               	movwf	postinc1,c
  1346  00204C  ECBD  F015         	call	_LCD_Send	;wreg free
  1347                           
  1348                           ;lcd.c: 39:     LCD_Send(0x80);
  1349  002050  0E80               	movlw	128
  1350  002052  6EE6               	movwf	postinc1,c
  1351  002054  ECBD  F015         	call	_LCD_Send	;wreg free
  1352                           
  1353                           ;lcd.c: 40:     LCD_Send(0x5E);
  1354  002058  0E5E               	movlw	94
  1355  00205A  6EE6               	movwf	postinc1,c
  1356  00205C  ECBD  F015         	call	_LCD_Send	;wreg free
  1357                           
  1358                           ;lcd.c: 41:     LCD_Send(0x80);
  1359  002060  0E80               	movlw	128
  1360  002062  6EE6               	movwf	postinc1,c
  1361  002064  ECBD  F015         	call	_LCD_Send	;wreg free
  1362                           
  1363                           ;lcd.c: 42:     LCD_Send(0x6B);
  1364  002068  0E6B               	movlw	107
  1365  00206A  6EE6               	movwf	postinc1,c
  1366  00206C  ECBD  F015         	call	_LCD_Send	;wreg free
  1367                           
  1368                           ;lcd.c: 43:     LCD_Send(0x80);
  1369  002070  0E80               	movlw	128
  1370  002072  6EE6               	movwf	postinc1,c
  1371  002074  ECBD  F015         	call	_LCD_Send	;wreg free
  1372                           
  1373                           ;lcd.c: 44:     LCD_Send(0x0C);
  1374  002078  0E0C               	movlw	12
  1375  00207A  6EE6               	movwf	postinc1,c
  1376  00207C  ECBD  F015         	call	_LCD_Send	;wreg free
  1377                           
  1378                           ;lcd.c: 45:     LCD_Send(0x80);
  1379  002080  0E80               	movlw	128
  1380  002082  6EE6               	movwf	postinc1,c
  1381  002084  ECBD  F015         	call	_LCD_Send	;wreg free
  1382                           
  1383                           ;lcd.c: 46:     LCD_Send(0x01);
  1384  002088  0E01               	movlw	1
  1385  00208A  6EE6               	movwf	postinc1,c
  1386  00208C  ECBD  F015         	call	_LCD_Send	;wreg free
  1387                           
  1388                           ;lcd.c: 47:     LCD_Send(0x80);
  1389  002090  0E80               	movlw	128
  1390  002092  6EE6               	movwf	postinc1,c
  1391  002094  ECBD  F015         	call	_LCD_Send	;wreg free
  1392                           
  1393                           ;lcd.c: 48:     LCD_Send(0x06);
  1394  002098  0E06               	movlw	6
  1395  00209A  6EE6               	movwf	postinc1,c
  1396  00209C  ECBD  F015         	call	_LCD_Send	;wreg free
  1397                           
  1398                           ;lcd.c: 49:     LCD_Send(0x80);
  1399  0020A0  0E80               	movlw	128
  1400  0020A2  6EE6               	movwf	postinc1,c
  1401  0020A4  ECBD  F015         	call	_LCD_Send	;wreg free
  1402                           
  1403                           ;lcd.c: 50:     LCD_Send(0x02);
  1404  0020A8  0E02               	movlw	2
  1405  0020AA  6EE6               	movwf	postinc1,c
  1406  0020AC  ECBD  F015         	call	_LCD_Send	;wreg free
  1407  0020B0                     
  1408                           ;lcd.c: 52:     SSP2CON2bits.PEN = 1;
  1409  0020B0  846B               	bsf	107,2,c	;volatile
  1410  0020B2                     l171:
  1411  0020B2  B46B               	btfsc	107,2,c	;volatile
  1412  0020B4  EF5E  F010         	goto	u801
  1413  0020B8  EF60  F010         	goto	u800
  1414  0020BC                     u801:
  1415  0020BC  EF59  F010         	goto	l171
  1416  0020C0                     u800:
  1417  0020C0                     
  1418                           ;lcd.c: 55:     _delay((unsigned long)((5)*(32E6/4000.0)));
  1419  0020C0  0E34               	movlw	52
  1420  0020C2  6E01               	movwf	btemp^0,c
  1421  0020C4  0EF2               	movlw	242
  1422  0020C6                     u1587:
  1423  0020C6  2EE8               	decfsz	wreg,f,c
  1424  0020C8  D7FE               	bra	u1587
  1425  0020CA  2E01               	decfsz	btemp^0,f,c
  1426  0020CC  D7FC               	bra	u1587
  1427  0020CE                     
  1428                           ; _LCD_Init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  1429  0020CE  0012               	return		;funcret
  1430  0020D0                     __end_of_LCD_Init:
  1431                           	callstack 0
  1432                           
  1433 ;; *************** function _state2 *****************
  1434 ;; Defined at:
  1435 ;;		line 96 in file "main.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;  fsm             2  [STACK] PTR struct fsm_t
  1438 ;;		 -> fsm(2), 
  1439 ;;  event           1  [STACK] unsigned char 
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;  str            17  [STACK] unsigned char [17]
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1  [STACK] void 
  1444 ;; Registers used:
  1445 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, bt
      +emp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, bt
      +emp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/F
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;Total ram usage:        0 bytes
  1456 ;; Hardware stack levels used: 1
  1457 ;; Hardware stack levels required when called: 14
  1458 ;; This function calls:
  1459 ;;		_LCD_Clear
  1460 ;;		_LCD_ShowString
  1461 ;;		_adc_read
  1462 ;;		_bsp_set_timeout
  1463 ;;		_fsm_transition
  1464 ;;		_printf
  1465 ;;		_sprintf
  1466 ;; This function is called by:
  1467 ;;		_state1
  1468 ;;		_fsm_dispatch
  1469 ;; This function uses a reentrant model (it is recursive)
  1470 ;;
  1471                           
  1472                           	psect	text8
  1473  001EB8                     __ptext8:
  1474                           	callstack 0
  1475  001EB8                     _state2:
  1476                           	callstack 0
  1477                           
  1478                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  1479  001EB8  0E11               	movlw	17
  1480  001EBA  26E1               	addwf	fsr1l,f,c
  1481  001EBC  0E00               	movlw	0
  1482  001EBE  22E2               	addwfc	fsr1h,f,c
  1483  001EC0                     
  1484                           ;main.c: 98:  switch(event){
  1485  001EC0  EFBB  F00F         	goto	l2150
  1486  001EC4                     l2132:
  1487                           
  1488                           ;main.c: 100:             LCD_ShowString(1, "State2           ");
  1489  001EC4  0E13               	movlw	low STR_5
  1490  001EC6  6EE6               	movwf	postinc1,c
  1491  001EC8  0E10               	movlw	high STR_5
  1492  001ECA  6EE6               	movwf	postinc1,c
  1493  001ECC  0E01               	movlw	1
  1494  001ECE  6EE6               	movwf	postinc1,c
  1495  001ED0  EC58  F011         	call	_LCD_ShowString	;wreg free
  1496                           
  1497                           ;main.c: 101:             break;
  1498  001ED4  EFE1  F00F         	goto	l86
  1499  001ED8                     l2134:
  1500                           
  1501                           ;main.c: 103:             printf("Exit state 2\n");
  1502  001ED8  0E67               	movlw	low STR_6
  1503  001EDA  6EE6               	movwf	postinc1,c
  1504  001EDC  0E10               	movlw	high STR_6
  1505  001EDE  6EE6               	movwf	postinc1,c
  1506  001EE0  0E02               	movlw	2
  1507  001EE2  6EE6               	movwf	postinc1,c
  1508  001EE4  ECAE  F014         	call	_printf	;wreg free
  1509  001EE8                     
  1510                           ;main.c: 104:             LCD_Clear();
  1511  001EE8  EC27  F015         	call	_LCD_Clear	;wreg free
  1512                           
  1513                           ;main.c: 105:             break;
  1514  001EEC  EFE1  F00F         	goto	l86
  1515  001EF0                     l2138:
  1516                           
  1517                           ;main.c: 107:             fsm_transition(fsm, &state1);
  1518  001EF0  0E5C               	movlw	low _state1
  1519  001EF2  6EE6               	movwf	postinc1,c
  1520  001EF4  0E24               	movlw	high _state1
  1521  001EF6  6EE6               	movwf	postinc1,c
  1522                           
  1523                           ;stkvar	_fsm @ sp[(-19)+-2]
  1524  001EF8  0EEB               	movlw	-21
  1525  001EFA  CFE3 FFE6          	movff	plusw1,postinc1
  1526  001EFE  CFE3 FFE6          	movff	plusw1,postinc1
  1527  001F02  ECD9  F014         	call	_fsm_transition	;wreg free
  1528                           
  1529                           ;main.c: 108:             break;
  1530  001F06  EFE1  F00F         	goto	l86
  1531  001F0A                     l2140:
  1532                           
  1533                           ;main.c: 110:             bsp_set_timeout(1000);
  1534  001F0A  0EE8               	movlw	232
  1535  001F0C  6EE6               	movwf	postinc1,c
  1536  001F0E  0E03               	movlw	3
  1537  001F10  6EE6               	movwf	postinc1,c
  1538  001F12  0E00               	movlw	0
  1539  001F14  6EE6               	movwf	postinc1,c
  1540  001F16  0E00               	movlw	0
  1541  001F18  6EE6               	movwf	postinc1,c
  1542  001F1A  ECA6  F015         	call	_bsp_set_timeout	;wreg free
  1543                           
  1544                           ;main.c: 111:             break;
  1545  001F1E  EFE1  F00F         	goto	l86
  1546  001F22                     l2144:
  1547                           
  1548                           ;main.c: 116:         {;main.c: 117:             char str[17];;main.c: 118:             
      +                          sprintf(str, "POT: %d          ", adc_read(5));
  1549  001F22  0E05               	movlw	5
  1550  001F24  6EE6               	movwf	postinc1,c
  1551  001F26  EC80  F014         	call	_adc_read	;wreg free
  1552  001F2A  C001  FFE6         	movff	btemp,postinc1
  1553  001F2E  C002  FFE6         	movff	btemp+1,postinc1
  1554  001F32  0E25               	movlw	low STR_7
  1555  001F34  6EE6               	movwf	postinc1,c
  1556  001F36  0E10               	movlw	high STR_7
  1557  001F38  6EE6               	movwf	postinc1,c
  1558                           
  1559                           ;stkvar	_str @ sp[(-21)+0]
  1560  001F3A  0EEB               	movlw	235
  1561  001F3C  24E1               	addwf	fsr1l,w,c
  1562  001F3E  6E01               	movwf	btemp^0,c
  1563  001F40  0EFF               	movlw	255
  1564  001F42  20E2               	addwfc	fsr1h,w,c
  1565  001F44  6E02               	movwf	(btemp+1)^0,c
  1566  001F46  C001  FFE6         	movff	btemp,postinc1
  1567  001F4A  C002  FFE6         	movff	btemp+1,postinc1
  1568  001F4E  0E06               	movlw	6
  1569  001F50  6EE6               	movwf	postinc1,c
  1570  001F52  ECE3  F010         	call	_sprintf	;wreg free
  1571  001F56                     
  1572                           ;main.c: 119:             LCD_ShowString(2, str);
  1573                           ;stkvar	_str @ sp[(-17)+0]
  1574  001F56  0EEF               	movlw	239
  1575  001F58  24E1               	addwf	fsr1l,w,c
  1576  001F5A  6E01               	movwf	btemp^0,c
  1577  001F5C  0EFF               	movlw	255
  1578  001F5E  20E2               	addwfc	fsr1h,w,c
  1579  001F60  6E02               	movwf	(btemp+1)^0,c
  1580  001F62  C001  FFE6         	movff	btemp,postinc1
  1581  001F66  C002  FFE6         	movff	btemp+1,postinc1
  1582  001F6A  0E02               	movlw	2
  1583  001F6C  6EE6               	movwf	postinc1,c
  1584  001F6E  EC58  F011         	call	_LCD_ShowString	;wreg free
  1585                           
  1586                           ;main.c: 120:             break;
  1587  001F72  EFE1  F00F         	goto	l86
  1588  001F76                     l2150:
  1589                           
  1590                           ;stkvar	_event @ sp[(-17)+-3]
  1591  001F76  0EEC               	movlw	-20
  1592  001F78  50E3               	movf	plusw1,w,c
  1593  001F7A  6E0B               	movwf	(btemp+10)^0,c
  1594  001F7C  6A0C               	clrf	(btemp+11)^0,c
  1595                           
  1596                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1597                           ; Switch size 1, requested type "simple"
  1598                           ; Number of cases is 1, Range of values is 0 to 0
  1599                           ; switch strategies available:
  1600                           ; Name         Instructions Cycles
  1601                           ; simple_byte            4     3 (average)
  1602                           ;	Chosen strategy is simple_byte
  1603  001F7E  500C               	movf	(btemp+11)^0,w,c
  1604  001F80  0A00               	xorlw	0	; case 0
  1605  001F82  B4D8               	btfsc	status,2,c
  1606  001F84  EFC6  F00F         	goto	l2268
  1607  001F88  EFE1  F00F         	goto	l86
  1608  001F8C                     l2268:
  1609                           
  1610                           ; Switch size 1, requested type "simple"
  1611                           ; Number of cases is 6, Range of values is 1 to 8
  1612                           ; switch strategies available:
  1613                           ; Name         Instructions Cycles
  1614                           ; simple_byte           19    10 (average)
  1615                           ;	Chosen strategy is simple_byte
  1616  001F8C  500B               	movf	(btemp+10)^0,w,c
  1617  001F8E  0A01               	xorlw	1	; case 1
  1618  001F90  B4D8               	btfsc	status,2,c
  1619  001F92  EF62  F00F         	goto	l2132
  1620  001F96  0A03               	xorlw	3	; case 2
  1621  001F98  B4D8               	btfsc	status,2,c
  1622  001F9A  EF6C  F00F         	goto	l2134
  1623  001F9E  0A01               	xorlw	1	; case 3
  1624  001FA0  B4D8               	btfsc	status,2,c
  1625  001FA2  EF78  F00F         	goto	l2138
  1626  001FA6  0A07               	xorlw	7	; case 4
  1627  001FA8  B4D8               	btfsc	status,2,c
  1628  001FAA  EF85  F00F         	goto	l2140
  1629  001FAE  0A03               	xorlw	3	; case 7
  1630  001FB0  B4D8               	btfsc	status,2,c
  1631  001FB2  EF78  F00F         	goto	l2138
  1632  001FB6  0A0F               	xorlw	15	; case 8
  1633  001FB8  B4D8               	btfsc	status,2,c
  1634  001FBA  EF91  F00F         	goto	l2144
  1635  001FBE  EFE1  F00F         	goto	l86
  1636  001FC2                     l86:
  1637                           
  1638                           ; _state2: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsi
      +                          ze = 3, vargsize = 0
  1639  001FC2  0EEC               	movlw	236
  1640  001FC4  26E1               	addwf	fsr1l,f,c
  1641  001FC6  0EFF               	movlw	255
  1642  001FC8  22E2               	addwfc	fsr1h,f,c
  1643  001FCA  0012               	return		;funcret
  1644  001FCC                     __end_of_state2:
  1645                           	callstack 0
  1646                           
  1647 ;; *************** function _state1 *****************
  1648 ;; Defined at:
  1649 ;;		line 72 in file "main.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  fsm             2  [STACK] PTR struct fsm_t
  1652 ;;		 -> fsm(2), 
  1653 ;;  event           1  [STACK] unsigned char 
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;		None
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  1  [STACK] void 
  1658 ;; Registers used:
  1659 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, bt
      +emp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, bt
      +emp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/F
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1669 ;;Total ram usage:        0 bytes
  1670 ;; Hardware stack levels used: 1
  1671 ;; Hardware stack levels required when called: 14
  1672 ;; This function calls:
  1673 ;;		_LCD_ShowString
  1674 ;;		_bsp_set_timeout
  1675 ;;		_bsp_stop_timeout
  1676 ;;		_fsm_transition
  1677 ;;		_printf
  1678 ;; This function is called by:
  1679 ;;		_init
  1680 ;;		_state2
  1681 ;;		_fsm_dispatch
  1682 ;; This function uses a reentrant model (it is recursive)
  1683 ;;
  1684                           
  1685                           	psect	text9
  1686  00245C                     __ptext9:
  1687                           	callstack 0
  1688  00245C                     _state1:
  1689                           	callstack 0
  1690  00245C                     
  1691                           ;main.c: 74:  switch(event){
  1692  00245C  EF6D  F012         	goto	l2124
  1693  002460                     l2108:
  1694                           
  1695                           ;main.c: 76:             bsp_set_timeout(1000);
  1696  002460  0EE8               	movlw	232
  1697  002462  6EE6               	movwf	postinc1,c
  1698  002464  0E03               	movlw	3
  1699  002466  6EE6               	movwf	postinc1,c
  1700  002468  0E00               	movlw	0
  1701  00246A  6EE6               	movwf	postinc1,c
  1702  00246C  0E00               	movlw	0
  1703  00246E  6EE6               	movwf	postinc1,c
  1704  002470  ECA6  F015         	call	_bsp_set_timeout	;wreg free
  1705  002474                     
  1706                           ; BSR set to: 15
  1707                           ;main.c: 77:             LCD_ShowString(1, "State1           ");
  1708  002474  0E01               	movlw	low STR_3
  1709  002476  6EE6               	movwf	postinc1,c
  1710  002478  0E10               	movlw	high STR_3
  1711  00247A  6EE6               	movwf	postinc1,c
  1712  00247C  0E01               	movlw	1
  1713  00247E  6EE6               	movwf	postinc1,c
  1714  002480  EC58  F011         	call	_LCD_ShowString	;wreg free
  1715                           
  1716                           ;main.c: 78:             break;
  1717  002484  EF8F  F012         	goto	l75
  1718  002488                     l71:
  1719                           
  1720                           ;main.c: 80:             bsp_stop_timeout();
  1721  002488  EC0E  F016         	call	_bsp_stop_timeout	;wreg free
  1722  00248C                     
  1723                           ; BSR set to: 15
  1724                           ;main.c: 81:             printf("Exit state 1\n");
  1725  00248C  0E59               	movlw	low STR_4
  1726  00248E  6EE6               	movwf	postinc1,c
  1727  002490  0E10               	movlw	high STR_4
  1728  002492  6EE6               	movwf	postinc1,c
  1729  002494  0E02               	movlw	2
  1730  002496  6EE6               	movwf	postinc1,c
  1731  002498  ECAE  F014         	call	_printf	;wreg free
  1732                           
  1733                           ;main.c: 82:             break;
  1734  00249C  EF8F  F012         	goto	l75
  1735  0024A0                     l2114:
  1736                           
  1737                           ;main.c: 84:             fsm_transition(fsm, &state2);
  1738  0024A0  0EB8               	movlw	low _state2
  1739  0024A2  6EE6               	movwf	postinc1,c
  1740  0024A4  0E1E               	movlw	high _state2
  1741  0024A6  6EE6               	movwf	postinc1,c
  1742                           
  1743                           ;stkvar	_fsm @ sp[(-2)+-2]
  1744  0024A8  0EFC               	movlw	-4
  1745  0024AA  CFE3 FFE6          	movff	plusw1,postinc1
  1746  0024AE  CFE3 FFE6          	movff	plusw1,postinc1
  1747  0024B2  ECD9  F014         	call	_fsm_transition	;wreg free
  1748                           
  1749                           ;main.c: 85:             break;
  1750  0024B6  EF8F  F012         	goto	l75
  1751  0024BA                     l2116:
  1752                           
  1753                           ;main.c: 87:             LATDbits.LD6 ^= 1;
  1754  0024BA  7C8C               	btg	140,6,c	;volatile
  1755  0024BC                     
  1756                           ;main.c: 88:             bsp_set_timeout(1000);
  1757  0024BC  0EE8               	movlw	232
  1758  0024BE  6EE6               	movwf	postinc1,c
  1759  0024C0  0E03               	movlw	3
  1760  0024C2  6EE6               	movwf	postinc1,c
  1761  0024C4  0E00               	movlw	0
  1762  0024C6  6EE6               	movwf	postinc1,c
  1763  0024C8  0E00               	movlw	0
  1764  0024CA  6EE6               	movwf	postinc1,c
  1765  0024CC  ECA6  F015         	call	_bsp_set_timeout	;wreg free
  1766                           
  1767                           ;main.c: 89:             break;
  1768  0024D0  EF8F  F012         	goto	l75
  1769  0024D4                     l2120:
  1770                           
  1771                           ;main.c: 91:             LATDbits.LD2 ^= 1;
  1772  0024D4  748C               	btg	140,2,c	;volatile
  1773                           
  1774                           ;main.c: 92:             break;
  1775  0024D6  EF8F  F012         	goto	l75
  1776  0024DA                     l2124:
  1777                           
  1778                           ;stkvar	_event @ sp[(0)+-3]
  1779  0024DA  0EFD               	movlw	-3
  1780  0024DC  50E3               	movf	plusw1,w,c
  1781  0024DE  6E0B               	movwf	(btemp+10)^0,c
  1782  0024E0  6A0C               	clrf	(btemp+11)^0,c
  1783                           
  1784                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1785                           ; Switch size 1, requested type "simple"
  1786                           ; Number of cases is 1, Range of values is 0 to 0
  1787                           ; switch strategies available:
  1788                           ; Name         Instructions Cycles
  1789                           ; simple_byte            4     3 (average)
  1790                           ;	Chosen strategy is simple_byte
  1791  0024E2  500C               	movf	(btemp+11)^0,w,c
  1792  0024E4  0A00               	xorlw	0	; case 0
  1793  0024E6  B4D8               	btfsc	status,2,c
  1794  0024E8  EF78  F012         	goto	l2270
  1795  0024EC  EF8F  F012         	goto	l75
  1796  0024F0                     l2270:
  1797                           
  1798                           ; Switch size 1, requested type "simple"
  1799                           ; Number of cases is 5, Range of values is 1 to 7
  1800                           ; switch strategies available:
  1801                           ; Name         Instructions Cycles
  1802                           ; simple_byte           16     9 (average)
  1803                           ;	Chosen strategy is simple_byte
  1804  0024F0  500B               	movf	(btemp+10)^0,w,c
  1805  0024F2  0A01               	xorlw	1	; case 1
  1806  0024F4  B4D8               	btfsc	status,2,c
  1807  0024F6  EF30  F012         	goto	l2108
  1808  0024FA  0A03               	xorlw	3	; case 2
  1809  0024FC  B4D8               	btfsc	status,2,c
  1810  0024FE  EF44  F012         	goto	l71
  1811  002502  0A01               	xorlw	1	; case 3
  1812  002504  B4D8               	btfsc	status,2,c
  1813  002506  EF50  F012         	goto	l2114
  1814  00250A  0A05               	xorlw	5	; case 6
  1815  00250C  B4D8               	btfsc	status,2,c
  1816  00250E  EF6A  F012         	goto	l2120
  1817  002512  0A01               	xorlw	1	; case 7
  1818  002514  B4D8               	btfsc	status,2,c
  1819  002516  EF5D  F012         	goto	l2116
  1820  00251A  EF8F  F012         	goto	l75
  1821  00251E                     l75:
  1822                           
  1823                           ; _state1: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 3, vargsize = 0
  1824  00251E  52E5               	movf	postdec1,f,c
  1825  002520  52E5               	movf	postdec1,f,c
  1826  002522  52E5               	movf	postdec1,f,c
  1827  002524  0012               	return		;funcret
  1828  002526                     __end_of_state1:
  1829                           	callstack 0
  1830                           
  1831 ;; *************** function _init *****************
  1832 ;; Defined at:
  1833 ;;		line 56 in file "main.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;  fsm             2  [STACK] PTR struct fsm_t
  1836 ;;		 -> fsm(2), 
  1837 ;;  event           1  [STACK] unsigned char 
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;		None
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  1  [STACK] void 
  1842 ;; Registers used:
  1843 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, bt
      +emp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, bt
      +emp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/F
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1853 ;;Total ram usage:        0 bytes
  1854 ;; Hardware stack levels used: 1
  1855 ;; Hardware stack levels required when called: unknown (due to recursion)
  1856 ;; This function calls:
  1857 ;;		_LCD_ShowString
  1858 ;;		_bsp_set_timeout
  1859 ;;		_fsm_transition
  1860 ;;		_printf
  1861 ;; This function is called by:
  1862 ;;		_main
  1863 ;;		_fsm_dispatch
  1864 ;; This function uses a reentrant model (it is recursive)
  1865 ;;
  1866                           
  1867                           	psect	text10
  1868  002668                     __ptext10:
  1869                           	callstack 0
  1870  002668                     _init:
  1871                           	callstack 0
  1872  002668                     
  1873                           ;main.c: 58:     switch(event){
  1874  002668  EF61  F013         	goto	l2100
  1875  00266C                     l2090:
  1876                           
  1877                           ;main.c: 60:             LCD_ShowString(1, "Welcome         ");
  1878  00266C  0E48               	movlw	low STR_1
  1879  00266E  6EE6               	movwf	postinc1,c
  1880  002670  0E10               	movlw	high STR_1
  1881  002672  6EE6               	movwf	postinc1,c
  1882  002674  0E01               	movlw	1
  1883  002676  6EE6               	movwf	postinc1,c
  1884  002678  EC58  F011         	call	_LCD_ShowString	;wreg free
  1885  00267C                     
  1886                           ;main.c: 61:             bsp_set_timeout(5000);
  1887  00267C  0E88               	movlw	136
  1888  00267E  6EE6               	movwf	postinc1,c
  1889  002680  0E13               	movlw	19
  1890  002682  6EE6               	movwf	postinc1,c
  1891  002684  0E00               	movlw	0
  1892  002686  6EE6               	movwf	postinc1,c
  1893  002688  0E00               	movlw	0
  1894  00268A  6EE6               	movwf	postinc1,c
  1895  00268C  ECA6  F015         	call	_bsp_set_timeout	;wreg free
  1896                           
  1897                           ;main.c: 62:             break;
  1898  002690  EF7B  F013         	goto	l65
  1899  002694                     l2094:
  1900                           
  1901                           ;main.c: 64:             printf("Init state exit\n");
  1902  002694  0E37               	movlw	low STR_2
  1903  002696  6EE6               	movwf	postinc1,c
  1904  002698  0E10               	movlw	high STR_2
  1905  00269A  6EE6               	movwf	postinc1,c
  1906  00269C  0E02               	movlw	2
  1907  00269E  6EE6               	movwf	postinc1,c
  1908  0026A0  ECAE  F014         	call	_printf	;wreg free
  1909                           
  1910                           ;main.c: 65:             break;
  1911  0026A4  EF7B  F013         	goto	l65
  1912  0026A8                     l2096:
  1913                           
  1914                           ;main.c: 67:             fsm_transition(fsm, &state1);
  1915  0026A8  0E5C               	movlw	low _state1
  1916  0026AA  6EE6               	movwf	postinc1,c
  1917  0026AC  0E24               	movlw	high _state1
  1918  0026AE  6EE6               	movwf	postinc1,c
  1919                           
  1920                           ;stkvar	_fsm @ sp[(-2)+-2]
  1921  0026B0  0EFC               	movlw	-4
  1922  0026B2  CFE3 FFE6          	movff	plusw1,postinc1
  1923  0026B6  CFE3 FFE6          	movff	plusw1,postinc1
  1924  0026BA  ECD9  F014         	call	_fsm_transition	;wreg free
  1925                           
  1926                           ;main.c: 68:             break;
  1927  0026BE  EF7B  F013         	goto	l65
  1928  0026C2                     l2100:
  1929                           
  1930                           ;stkvar	_event @ sp[(0)+-3]
  1931  0026C2  0EFD               	movlw	-3
  1932  0026C4  50E3               	movf	plusw1,w,c
  1933  0026C6  6E0B               	movwf	(btemp+10)^0,c
  1934  0026C8  6A0C               	clrf	(btemp+11)^0,c
  1935                           
  1936                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1937                           ; Switch size 1, requested type "simple"
  1938                           ; Number of cases is 1, Range of values is 0 to 0
  1939                           ; switch strategies available:
  1940                           ; Name         Instructions Cycles
  1941                           ; simple_byte            4     3 (average)
  1942                           ;	Chosen strategy is simple_byte
  1943  0026CA  500C               	movf	(btemp+11)^0,w,c
  1944  0026CC  0A00               	xorlw	0	; case 0
  1945  0026CE  B4D8               	btfsc	status,2,c
  1946  0026D0  EF6C  F013         	goto	l2272
  1947  0026D4  EF7B  F013         	goto	l65
  1948  0026D8                     l2272:
  1949                           
  1950                           ; Switch size 1, requested type "simple"
  1951                           ; Number of cases is 3, Range of values is 1 to 7
  1952                           ; switch strategies available:
  1953                           ; Name         Instructions Cycles
  1954                           ; simple_byte           10     6 (average)
  1955                           ;	Chosen strategy is simple_byte
  1956  0026D8  500B               	movf	(btemp+10)^0,w,c
  1957  0026DA  0A01               	xorlw	1	; case 1
  1958  0026DC  B4D8               	btfsc	status,2,c
  1959  0026DE  EF36  F013         	goto	l2090
  1960  0026E2  0A03               	xorlw	3	; case 2
  1961  0026E4  B4D8               	btfsc	status,2,c
  1962  0026E6  EF4A  F013         	goto	l2094
  1963  0026EA  0A05               	xorlw	5	; case 7
  1964  0026EC  B4D8               	btfsc	status,2,c
  1965  0026EE  EF54  F013         	goto	l2096
  1966  0026F2  EF7B  F013         	goto	l65
  1967  0026F6                     l65:
  1968                           
  1969                           ; _init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
  1970  0026F6  52E5               	movf	postdec1,f,c
  1971  0026F8  52E5               	movf	postdec1,f,c
  1972  0026FA  52E5               	movf	postdec1,f,c
  1973  0026FC  0012               	return		;funcret
  1974  0026FE                     __end_of_init:
  1975                           	callstack 0
  1976                           
  1977 ;; *************** function _LCD_ShowString *****************
  1978 ;; Defined at:
  1979 ;;		line 58 in file "lcd.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;  lineNum         1  [STACK] unsigned char 
  1982 ;;  textData        2  [STACK] PTR unsigned char 
  1983 ;;		 -> str(17), STR_5(18), STR_3(18), STR_1(17), 
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;  i               1  [STACK] unsigned char 
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  1  [STACK] void 
  1988 ;; Registers used:
  1989 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/F
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1999 ;;Total ram usage:        0 bytes
  2000 ;; Hardware stack levels used: 1
  2001 ;; Hardware stack levels required when called: 7
  2002 ;; This function calls:
  2003 ;;		_LCD_Send
  2004 ;; This function is called by:
  2005 ;;		_init
  2006 ;;		_state1
  2007 ;;		_state2
  2008 ;; This function uses a reentrant model
  2009 ;;
  2010                           
  2011                           	psect	text11
  2012  0022B0                     __ptext11:
  2013                           	callstack 0
  2014  0022B0                     _LCD_ShowString:
  2015                           	callstack 0
  2016                           
  2017                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2018  0022B0  52E6               	movf	postinc1,f,c
  2019  0022B2                     
  2020                           ;lcd.c: 63:     SSP2CON2bits.SEN = 1;
  2021  0022B2  806B               	bsf	107,0,c	;volatile
  2022  0022B4                     l177:
  2023  0022B4  B06B               	btfsc	107,0,c	;volatile
  2024  0022B6  EF5F  F011         	goto	u601
  2025  0022BA  EF61  F011         	goto	u600
  2026  0022BE                     u601:
  2027  0022BE  EF5A  F011         	goto	l177
  2028  0022C2                     u600:
  2029  0022C2                     
  2030                           ;lcd.c: 65:     SSP2IF = 0;
  2031  0022C2  9EA4               	bcf	4004,7,c	;volatile
  2032  0022C4                     
  2033                           ;lcd.c: 67:     LCD_Send(0x7c);
  2034  0022C4  0E7C               	movlw	124
  2035  0022C6  6EE6               	movwf	postinc1,c
  2036  0022C8  ECBD  F015         	call	_LCD_Send	;wreg free
  2037                           
  2038                           ;lcd.c: 69:     LCD_Send(0x80);
  2039  0022CC  0E80               	movlw	128
  2040  0022CE  6EE6               	movwf	postinc1,c
  2041  0022D0  ECBD  F015         	call	_LCD_Send	;wreg free
  2042  0022D4                     
  2043                           ;lcd.c: 71:     if(lineNum == 1){
  2044                           ;stkvar	_lineNum @ sp[(-1)+-1]
  2045  0022D4  0EFE               	movlw	-2
  2046  0022D6  04E3               	decf	plusw1,w,c
  2047  0022D8  A4D8               	btfss	status,2,c
  2048  0022DA  EF71  F011         	goto	u611
  2049  0022DE  EF73  F011         	goto	u610
  2050  0022E2                     u611:
  2051  0022E2  EF79  F011         	goto	l1400
  2052  0022E6                     u610:
  2053  0022E6                     
  2054                           ;lcd.c: 72:         LCD_Send(0x80);
  2055  0022E6  0E80               	movlw	128
  2056  0022E8  6EE6               	movwf	postinc1,c
  2057  0022EA  ECBD  F015         	call	_LCD_Send	;wreg free
  2058                           
  2059                           ;lcd.c: 73:     }
  2060  0022EE  EF89  F011         	goto	l181
  2061  0022F2                     l1400:
  2062                           
  2063                           ;stkvar	_lineNum @ sp[(-1)+-1]
  2064  0022F2  0EFE               	movlw	-2
  2065  0022F4  CFE3 F001          	movff	plusw1,btemp
  2066  0022F8  0E02               	movlw	2
  2067  0022FA  1801               	xorwf	btemp^0,w,c
  2068  0022FC  A4D8               	btfss	status,2,c
  2069  0022FE  EF83  F011         	goto	u621
  2070  002302  EF85  F011         	goto	u620
  2071  002306                     u621:
  2072  002306  EF89  F011         	goto	l181
  2073  00230A                     u620:
  2074  00230A                     
  2075                           ;lcd.c: 75:         LCD_Send(0xC0);
  2076  00230A  0EC0               	movlw	192
  2077  00230C  6EE6               	movwf	postinc1,c
  2078  00230E  ECBD  F015         	call	_LCD_Send	;wreg free
  2079  002312                     l181:
  2080                           
  2081                           ;lcd.c: 78:     LCD_Send(0x40);
  2082  002312  0E40               	movlw	64
  2083  002314  6EE6               	movwf	postinc1,c
  2084  002316  ECBD  F015         	call	_LCD_Send	;wreg free
  2085  00231A                     
  2086                           ;lcd.c: 80:     for (i = 0; i<16; i++){
  2087                           ;stkvar	_i @ sp[(-1)+0]
  2088  00231A  0EFF               	movlw	-1
  2089  00231C  6AE3               	clrf	plusw1,c
  2090  00231E                     l1410:
  2091                           
  2092                           ;lcd.c: 81:         LCD_Send(textData[i]);
  2093                           ;stkvar	_i @ sp[(-1)+0]
  2094  00231E  0EFF               	movlw	-1
  2095  002320  50E3               	movf	plusw1,w,c
  2096  002322  6E0B               	movwf	(btemp+10)^0,c
  2097  002324  6A0C               	clrf	(btemp+11)^0,c
  2098                           
  2099                           ;stkvar	_textData @ sp[(-1)+-3]
  2100  002326  0EFC               	movlw	-4
  2101  002328  50E3               	movf	plusw1,w,c
  2102  00232A  260B               	addwf	(btemp+10)^0,f,c
  2103  00232C  0EFD               	movlw	-3
  2104  00232E  50E3               	movf	plusw1,w,c
  2105  002330  220C               	addwfc	(btemp+11)^0,f,c
  2106  002332  C00B  FFF6         	movff	btemp+10,tblptrl
  2107  002336  C00C  FFF7         	movff	btemp+11,tblptrh
  2108  00233A  0E00               	movlw	low (__smallconst shr (0+16))
  2109  00233C  6EF8               	movwf	tblptru,c
  2110  00233E  0E0F               	movlw	(high __ramtop+-1)
  2111  002340  64F7               	cpfsgt	tblptrh,c
  2112  002342  D003               	bra	u637
  2113  002344  0008               	tblrd		*
  2114  002346  50F5               	movf	tablat,w,c
  2115  002348  D005               	bra	u630
  2116  00234A                     u637:
  2117  00234A  CFF6 FFE9          	movff	tblptrl,fsr0l
  2118  00234E  CFF7 FFEA          	movff	tblptrh,fsr0h
  2119  002352  50EF               	movf	indf0,w,c
  2120  002354                     u630:
  2121  002354  6EE6               	movwf	postinc1,c
  2122  002356  ECBD  F015         	call	_LCD_Send	;wreg free
  2123  00235A                     
  2124                           ;lcd.c: 82:     }
  2125                           ;stkvar	_i @ sp[(-1)+0]
  2126  00235A  0EFF               	movlw	-1
  2127  00235C  2AE3               	incf	plusw1,f,c
  2128  00235E                     
  2129                           ;stkvar	_i @ sp[(-1)+0]
  2130  00235E  0EFF               	movlw	-1
  2131  002360  CFE3 F001          	movff	plusw1,btemp
  2132  002364  0E0F               	movlw	15
  2133  002366  6401               	cpfsgt	btemp^0,c
  2134  002368  EFB8  F011         	goto	u641
  2135  00236C  EFBA  F011         	goto	u640
  2136  002370                     u641:
  2137  002370  EF8F  F011         	goto	l1410
  2138  002374                     u640:
  2139  002374                     
  2140                           ;lcd.c: 84:     SSP2CON2bits.PEN = 1;
  2141  002374  846B               	bsf	107,2,c	;volatile
  2142  002376                     l185:
  2143  002376  B46B               	btfsc	107,2,c	;volatile
  2144  002378  EFC0  F011         	goto	u651
  2145  00237C  EFC2  F011         	goto	u650
  2146  002380                     u651:
  2147  002380  EFBB  F011         	goto	l185
  2148  002384                     u650:
  2149  002384                     
  2150                           ; _LCD_ShowString: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  2151  002384  52E5               	movf	postdec1,f,c
  2152  002386  52E5               	movf	postdec1,f,c
  2153  002388  52E5               	movf	postdec1,f,c
  2154  00238A  52E5               	movf	postdec1,f,c
  2155  00238C  0012               	return		;funcret
  2156  00238E                     __end_of_LCD_ShowString:
  2157                           	callstack 0
  2158                           
  2159 ;; *************** function _bsp_set_timeout *****************
  2160 ;; Defined at:
  2161 ;;		line 64 in file "bsp.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  timeout_in      4  [STACK] long 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;		None
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  1  [STACK] void 
  2168 ;; Registers used:
  2169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/F
  2172 ;;		On exit  : 3F/F
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2179 ;;Total ram usage:        0 bytes
  2180 ;; Hardware stack levels used: 1
  2181 ;; Hardware stack levels required when called: 6
  2182 ;; This function calls:
  2183 ;;		Nothing
  2184 ;; This function is called by:
  2185 ;;		_init
  2186 ;;		_state1
  2187 ;;		_state2
  2188 ;; This function uses a reentrant model
  2189 ;;
  2190                           
  2191                           	psect	text12
  2192  002B4C                     __ptext12:
  2193                           	callstack 0
  2194  002B4C                     _bsp_set_timeout:
  2195                           	callstack 0
  2196  002B4C                     
  2197                           ;bsp.c: 65:     bsp_timeout = timeout_in;
  2198                           ;stkvar	_timeout_in @ sp[(0)+-4]
  2199  002B4C  50E1               	movf	fsr1l,w,c
  2200  002B4E  0FFC               	addlw	-4
  2201  002B50  6ED9               	movwf	fsr2l,c
  2202  002B52  50E2               	movf	fsr1h,w,c
  2203  002B54  6EDA               	movwf	fsr2h,c
  2204  002B56  0EFF               	movlw	255
  2205  002B58  22DA               	addwfc	fsr2h,f,c
  2206  002B5A  CFDE F029          	movff	postinc2,_bsp_timeout	;volatile
  2207  002B5E  CFDE F02A          	movff	postinc2,_bsp_timeout+1	;volatile
  2208  002B62  CFDE F02B          	movff	postinc2,_bsp_timeout+2	;volatile
  2209  002B66  CFDE F02C          	movff	postinc2,_bsp_timeout+3	;volatile
  2210  002B6A                     
  2211                           ;bsp.c: 66:     TMR6 = 0;
  2212  002B6A  010F               	movlb	15	; () banked
  2213  002B6C  6B4C               	clrf	76,b	;volatile
  2214  002B6E                     
  2215                           ; BSR set to: 15
  2216                           ;bsp.c: 67:     TMR6ON = 1;
  2217  002B6E  854A               	bsf	74,2,b	;volatile
  2218  002B70                     
  2219                           ; BSR set to: 15
  2220                           ; _bsp_set_timeout: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  2221  002B70  52E5               	movf	postdec1,f,c
  2222  002B72  52E5               	movf	postdec1,f,c
  2223  002B74  52E5               	movf	postdec1,f,c
  2224  002B76  52E5               	movf	postdec1,f,c
  2225  002B78  0012               	return		;funcret
  2226  002B7A                     __end_of_bsp_set_timeout:
  2227                           	callstack 0
  2228                           
  2229 ;; *************** function _printf *****************
  2230 ;; Defined at:
  2231 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;  fmt             2  [STACK] PTR const unsigned char 
  2234 ;;		 -> STR_6(14), STR_4(14), STR_2(17), 
  2235 ;; Auto vars:     Size  Location     Type
  2236 ;;  ap              2  [STACK] PTR void [1]
  2237 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2238 ;;  ret             2    0        int 
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  2  [STACK] int 
  2241 ;; Registers used:
  2242 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/F
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2252 ;;Total ram usage:        0 bytes
  2253 ;; Hardware stack levels used: 1
  2254 ;; Hardware stack levels required when called: 13
  2255 ;; This function calls:
  2256 ;;		_vfprintf
  2257 ;; This function is called by:
  2258 ;;		_init
  2259 ;;		_state1
  2260 ;;		_state2
  2261 ;; This function uses a reentrant model
  2262 ;;
  2263                           
  2264                           	psect	text13
  2265  00295C                     __ptext13:
  2266                           	callstack 0
  2267  00295C                     _printf:
  2268                           	callstack 0
  2269                           
  2270                           ; BSR set to: 15
  2271                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2272  00295C  52E6               	movf	postinc1,f,c
  2273  00295E  52E6               	movf	postinc1,f,c
  2274  002960                     
  2275                           ;stkvar	?_printf @ sp[(-2)+-3]
  2276  002960  0EFB               	movlw	251
  2277  002962  24E1               	addwf	fsr1l,w,c
  2278  002964  6E0B               	movwf	(btemp+10)^0,c
  2279  002966  0EFF               	movlw	255
  2280  002968  20E2               	addwfc	fsr1h,w,c
  2281  00296A  6E0C               	movwf	(btemp+11)^0,c
  2282                           
  2283                           ;stkvar	_ap @ sp[(-2)+0]
  2284  00296C  0EFF               	movlw	-1
  2285  00296E  C00C  FFE3         	movff	btemp+11,plusw1
  2286  002972  0EFE               	movlw	-2
  2287  002974  C00B  FFE3         	movff	btemp+10,plusw1
  2288  002978                     
  2289                           ;stkvar	_ap @ sp[(-2)+0]
  2290  002978  0EFE               	movlw	254
  2291  00297A  24E1               	addwf	fsr1l,w,c
  2292  00297C  6E01               	movwf	btemp^0,c
  2293  00297E  0EFF               	movlw	255
  2294  002980  20E2               	addwfc	fsr1h,w,c
  2295  002982  6E02               	movwf	(btemp+1)^0,c
  2296  002984  C001  FFE6         	movff	btemp,postinc1
  2297  002988  C002  FFE6         	movff	btemp+1,postinc1
  2298                           
  2299                           ;stkvar	_fmt @ sp[(-4)+-3]
  2300  00298C  0EF9               	movlw	-7
  2301  00298E  CFE3 FFE6          	movff	plusw1,postinc1
  2302  002992  CFE3 FFE6          	movff	plusw1,postinc1
  2303  002996  0E00               	movlw	0
  2304  002998  6EE6               	movwf	postinc1,c
  2305  00299A  0E00               	movlw	0
  2306  00299C  6EE6               	movwf	postinc1,c
  2307  00299E  EC7F  F013         	call	_vfprintf	;wreg free
  2308  0029A2                     
  2309                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  2310  0029A2  52E5               	movf	postdec1,f,c
  2311  0029A4  52E5               	movf	postdec1,f,c
  2312  0029A6  52E5               	movf	postdec1,f,c
  2313  0029A8  50E7               	movf	indf1,w,c
  2314  0029AA  5EE1               	subwf	fsr1l,f,c
  2315  0029AC  0E00               	movlw	0
  2316  0029AE  5AE2               	subwfb	fsr1h,f,c
  2317  0029B0  0012               	return		;funcret
  2318  0029B2                     __end_of_printf:
  2319                           	callstack 0
  2320                           
  2321 ;; *************** function _fsm_transition *****************
  2322 ;; Defined at:
  2323 ;;		line 24 in file "fsm.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;  fsm             2  [STACK] PTR struct fsm_t
  2326 ;;		 -> fsm(2), 
  2327 ;;  new_state       2  [STACK] PTR FTN(PTR struct fsm_t
  2328 ;;		 -> state2(1), state1(1), 
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;		None
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1  [STACK] void 
  2333 ;; Registers used:
  2334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, bt
      +emp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, bt
      +emp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/F
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2344 ;;Total ram usage:        0 bytes
  2345 ;; Hardware stack levels used: 1
  2346 ;; Hardware stack levels required when called: 6
  2347 ;; This function calls:
  2348 ;;		_fsm_dispatch
  2349 ;; This function is called by:
  2350 ;;		_init
  2351 ;;		_state1
  2352 ;;		_state2
  2353 ;; This function uses a reentrant model (it is recursive)
  2354 ;;
  2355                           
  2356                           	psect	text14
  2357  0029B2                     __ptext14:
  2358                           	callstack 0
  2359  0029B2                     _fsm_transition:
  2360                           	callstack 0
  2361  0029B2                     
  2362                           ;fsm.c: 25:     fsm_dispatch(fsm, 2U);
  2363  0029B2  0E02               	movlw	2
  2364  0029B4  6EE6               	movwf	postinc1,c
  2365                           
  2366                           ;stkvar	_fsm @ sp[(-1)+-2]
  2367  0029B6  0EFD               	movlw	-3
  2368  0029B8  CFE3 FFE6          	movff	plusw1,postinc1
  2369  0029BC  CFE3 FFE6          	movff	plusw1,postinc1
  2370  0029C0  EC6C  F015         	call	_fsm_dispatch	;wreg free
  2371  0029C4                     
  2372                           ;fsm.c: 26:     fsm->state = new_state;
  2373                           ;stkvar	_new_state @ sp[(0)+-4]
  2374  0029C4  50E1               	movf	fsr1l,w,c
  2375  0029C6  0FFC               	addlw	-4
  2376  0029C8  6ED9               	movwf	fsr2l,c
  2377  0029CA  50E2               	movf	fsr1h,w,c
  2378  0029CC  6EDA               	movwf	fsr2h,c
  2379  0029CE  0EFF               	movlw	255
  2380  0029D0  22DA               	addwfc	fsr2h,f,c
  2381                           
  2382                           ;stkvar	_fsm @ sp[(0)+-2]
  2383  0029D2  0EFE               	movlw	-2
  2384  0029D4  CFE3 FFE9          	movff	plusw1,fsr0l
  2385  0029D8  0EFF               	movlw	-1
  2386  0029DA  CFE3 FFEA          	movff	plusw1,fsr0h
  2387  0029DE  CFDE FFEE          	movff	postinc2,postinc0
  2388  0029E2  CFDD FFED          	movff	postdec2,postdec0
  2389  0029E6                     
  2390                           ;fsm.c: 27:     fsm_dispatch(fsm, 1U);
  2391  0029E6  0E01               	movlw	1
  2392  0029E8  6EE6               	movwf	postinc1,c
  2393                           
  2394                           ;stkvar	_fsm @ sp[(-1)+-2]
  2395  0029EA  0EFD               	movlw	-3
  2396  0029EC  CFE3 FFE6          	movff	plusw1,postinc1
  2397  0029F0  CFE3 FFE6          	movff	plusw1,postinc1
  2398  0029F4  EC6C  F015         	call	_fsm_dispatch	;wreg free
  2399  0029F8                     
  2400                           ; _fsm_transition: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  2401  0029F8  52E5               	movf	postdec1,f,c
  2402  0029FA  52E5               	movf	postdec1,f,c
  2403  0029FC  52E5               	movf	postdec1,f,c
  2404  0029FE  52E5               	movf	postdec1,f,c
  2405  002A00  0012               	return		;funcret
  2406  002A02                     __end_of_fsm_transition:
  2407                           	callstack 0
  2408                           
  2409 ;; *************** function _fsm_dispatch *****************
  2410 ;; Defined at:
  2411 ;;		line 20 in file "fsm.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;  fsm             2  [STACK] PTR struct fsm_t
  2414 ;;		 -> fsm(2), 
  2415 ;;  event           1  [STACK] unsigned char 
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;		None
  2418 ;; Return value:  Size  Location     Type
  2419 ;;                  1  [STACK] void 
  2420 ;; Registers used:
  2421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, bt
      +emp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, bt
      +emp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2422 ;; Tracked objects:
  2423 ;;		On entry : 0/F
  2424 ;;		On exit  : 0/0
  2425 ;;		Unchanged: 0/0
  2426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;Total ram usage:        0 bytes
  2432 ;; Hardware stack levels used: 1
  2433 ;; Hardware stack levels required when called: 15
  2434 ;; This function calls:
  2435 ;;		_init
  2436 ;;		_state1
  2437 ;;		_state2
  2438 ;; This function is called by:
  2439 ;;		_main
  2440 ;;		_fsm_init
  2441 ;;		_fsm_transition
  2442 ;; This function uses a reentrant model (it is recursive)
  2443 ;;
  2444                           
  2445                           	psect	text15
  2446  002AD8                     __ptext15:
  2447                           	callstack 0
  2448  002AD8                     _fsm_dispatch:
  2449                           	callstack 0
  2450  002AD8                     
  2451                           ;fsm.c: 21:     (*(fsm)->state)(fsm, event);
  2452                           ;stkvar	_event @ sp[(0)+-3]
  2453  002AD8  0EFD               	movlw	-3
  2454  002ADA  50E3               	movf	plusw1,w,c
  2455  002ADC  6EE6               	movwf	postinc1,c
  2456                           
  2457                           ;stkvar	_fsm @ sp[(-1)+-2]
  2458  002ADE  0EFD               	movlw	-3
  2459  002AE0  CFE3 FFE6          	movff	plusw1,postinc1
  2460  002AE4  CFE3 FFE6          	movff	plusw1,postinc1
  2461                           
  2462                           ;stkvar	_fsm @ sp[(-3)+-2]
  2463  002AE8  0EFB               	movlw	-5
  2464  002AEA  CFE3 FFD9          	movff	plusw1,fsr2l
  2465  002AEE  0EFC               	movlw	-4
  2466  002AF0  CFE3 FFDA          	movff	plusw1,fsr2h
  2467  002AF4  D802               	call	u1548
  2468  002AF6  EF87  F015         	goto	u1549
  2469  002AFA                     u1548:
  2470  002AFA  0005               	push	
  2471  002AFC  6EFA               	movwf	pclath,c
  2472  002AFE  50DE               	movf	postinc2,w,c
  2473  002B00  6EFD               	movwf	tosl,c
  2474  002B02  50DE               	movf	postinc2,w,c
  2475  002B04  6EFE               	movwf	tosh,c
  2476  002B06  50F8               	movf	tblptru,w,c
  2477  002B08  6EFF               	movwf	tosu,c
  2478  002B0A  50FA               	movf	pclath,w,c
  2479  002B0C  0012               	return		;indir
  2480  002B0E                     u1549:
  2481  002B0E                     
  2482                           ; _fsm_dispatch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, 
      +                          argsize = 3, vargsize = 0
  2483  002B0E  52E5               	movf	postdec1,f,c
  2484  002B10  52E5               	movf	postdec1,f,c
  2485  002B12  52E5               	movf	postdec1,f,c
  2486  002B14  0012               	return		;funcret
  2487  002B16                     __end_of_fsm_dispatch:
  2488                           	callstack 0
  2489                           
  2490 ;; *************** function _sprintf *****************
  2491 ;; Defined at:
  2492 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  s               2  [STACK] PTR unsigned char 
  2495 ;;		 -> str(17), 
  2496 ;;  fmt             2  [STACK] PTR const unsigned char 
  2497 ;;		 -> STR_7(18), 
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;  f               6  [STACK] struct _IO_FILE
  2500 ;;  ap              2  [STACK] PTR void [1]
  2501 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2502 ;;  ret             2    0        int 
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  2  [STACK] int 
  2505 ;; Registers used:
  2506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/F
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;Total ram usage:        0 bytes
  2517 ;; Hardware stack levels used: 1
  2518 ;; Hardware stack levels required when called: 13
  2519 ;; This function calls:
  2520 ;;		_vfprintf
  2521 ;; This function is called by:
  2522 ;;		_state2
  2523 ;; This function uses a reentrant model
  2524 ;;
  2525                           
  2526                           	psect	text16
  2527  0021C6                     __ptext16:
  2528                           	callstack 0
  2529  0021C6                     _sprintf:
  2530                           	callstack 0
  2531                           
  2532                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2533  0021C6  0E08               	movlw	8
  2534  0021C8  26E1               	addwf	fsr1l,f,c
  2535  0021CA  0E00               	movlw	0
  2536  0021CC  22E2               	addwfc	fsr1h,f,c
  2537  0021CE  0EFE               	movlw	254
  2538  0021D0  6E0B               	movwf	(btemp+10)^0,c
  2539  0021D2  0EFF               	movlw	255
  2540  0021D4  6E0C               	movwf	(btemp+11)^0,c
  2541                           
  2542                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  2543  0021D6  0EF5               	movlw	245
  2544  0021D8  24E1               	addwf	fsr1l,w,c
  2545  0021DA  6E09               	movwf	(btemp+8)^0,c
  2546  0021DC  0EFF               	movlw	255
  2547  0021DE  20E2               	addwfc	fsr1h,w,c
  2548  0021E0  6E0A               	movwf	(btemp+9)^0,c
  2549  0021E2  500B               	movf	(btemp+10)^0,w,c
  2550  0021E4  2609               	addwf	(btemp+8)^0,f,c
  2551  0021E6  500C               	movf	(btemp+11)^0,w,c
  2552  0021E8  220A               	addwfc	(btemp+9)^0,f,c
  2553                           
  2554                           ;stkvar	_ap @ sp[(-8)+6]
  2555  0021EA  0EFF               	movlw	-1
  2556  0021EC  C00A  FFE3         	movff	btemp+9,plusw1
  2557  0021F0  0EFE               	movlw	-2
  2558  0021F2  C009  FFE3         	movff	btemp+8,plusw1
  2559  0021F6                     
  2560                           ;stkvar	_s @ sp[(-8)+-3]
  2561  0021F6  0EF5               	movlw	-11
  2562  0021F8  CFE3 F00B          	movff	plusw1,btemp+10
  2563  0021FC  0EF6               	movlw	-10
  2564  0021FE  CFE3 F00C          	movff	plusw1,btemp+11
  2565                           
  2566                           ;stkvar	_f @ sp[(-8)+0]
  2567  002202  0EF9               	movlw	-7
  2568  002204  C00C  FFE3         	movff	btemp+11,plusw1
  2569  002208  0EF8               	movlw	-8
  2570  00220A  C00B  FFE3         	movff	btemp+10,plusw1
  2571  00220E                     
  2572                           ;stkvar	_f @ sp[(-8)+0]
  2573  00220E  0EFA               	movlw	250
  2574  002210  24E1               	addwf	fsr1l,w,c
  2575  002212  6ED9               	movwf	fsr2l,c
  2576  002214  0EFF               	movlw	255
  2577  002216  20E2               	addwfc	fsr1h,w,c
  2578  002218  6EDA               	movwf	fsr2h,c
  2579  00221A  0E00               	movlw	0
  2580  00221C  6EDE               	movwf	postinc2,c
  2581  00221E  0E00               	movlw	0
  2582  002220  6EDD               	movwf	postdec2,c
  2583  002222                     
  2584                           ;stkvar	_f @ sp[(-8)+0]
  2585  002222  0EFC               	movlw	252
  2586  002224  24E1               	addwf	fsr1l,w,c
  2587  002226  6ED9               	movwf	fsr2l,c
  2588  002228  0EFF               	movlw	255
  2589  00222A  20E2               	addwfc	fsr1h,w,c
  2590  00222C  6EDA               	movwf	fsr2h,c
  2591  00222E  0E00               	movlw	0
  2592  002230  6EDE               	movwf	postinc2,c
  2593  002232  0E00               	movlw	0
  2594  002234  6EDD               	movwf	postdec2,c
  2595  002236                     
  2596                           ;stkvar	_ap @ sp[(-8)+6]
  2597  002236  0EFE               	movlw	254
  2598  002238  24E1               	addwf	fsr1l,w,c
  2599  00223A  6E01               	movwf	btemp^0,c
  2600  00223C  0EFF               	movlw	255
  2601  00223E  20E2               	addwfc	fsr1h,w,c
  2602  002240  6E02               	movwf	(btemp+1)^0,c
  2603  002242  C001  FFE6         	movff	btemp,postinc1
  2604  002246  C002  FFE6         	movff	btemp+1,postinc1
  2605                           
  2606                           ;stkvar	_fmt @ sp[(-10)+-5]
  2607  00224A  0EF1               	movlw	-15
  2608  00224C  CFE3 FFE6          	movff	plusw1,postinc1
  2609  002250  CFE3 FFE6          	movff	plusw1,postinc1
  2610                           
  2611                           ;stkvar	_f @ sp[(-12)+0]
  2612  002254  0EF4               	movlw	244
  2613  002256  24E1               	addwf	fsr1l,w,c
  2614  002258  6E01               	movwf	btemp^0,c
  2615  00225A  0EFF               	movlw	255
  2616  00225C  20E2               	addwfc	fsr1h,w,c
  2617  00225E  6E02               	movwf	(btemp+1)^0,c
  2618  002260  C001  FFE6         	movff	btemp,postinc1
  2619  002264  C002  FFE6         	movff	btemp+1,postinc1
  2620  002268  EC7F  F013         	call	_vfprintf	;wreg free
  2621  00226C                     
  2622                           ;stkvar	_f @ sp[(-8)+0]
  2623  00226C  0EFA               	movlw	250
  2624  00226E  24E1               	addwf	fsr1l,w,c
  2625  002270  6ED9               	movwf	fsr2l,c
  2626  002272  0EFF               	movlw	255
  2627  002274  20E2               	addwfc	fsr1h,w,c
  2628  002276  6EDA               	movwf	fsr2h,c
  2629  002278  CFDE F00B          	movff	postinc2,btemp+10
  2630  00227C  CFDD F00C          	movff	postdec2,btemp+11
  2631                           
  2632                           ;stkvar	_s @ sp[(-8)+-3]
  2633  002280  0EF5               	movlw	-11
  2634  002282  CFE3 F009          	movff	plusw1,btemp+8
  2635  002286  0EF6               	movlw	-10
  2636  002288  CFE3 F00A          	movff	plusw1,btemp+9
  2637  00228C  500B               	movf	(btemp+10)^0,w,c
  2638  00228E  2409               	addwf	(btemp+8)^0,w,c
  2639  002290  6ED9               	movwf	fsr2l,c
  2640  002292  500C               	movf	(btemp+11)^0,w,c
  2641  002294  200A               	addwfc	(btemp+9)^0,w,c
  2642  002296  6EDA               	movwf	fsr2h,c
  2643  002298  0E00               	movlw	0
  2644  00229A  6EDF               	movwf	indf2,c
  2645  00229C                     
  2646                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 4, vargsize = 0
  2647  00229C  0EF8               	movlw	248
  2648  00229E  26E1               	addwf	fsr1l,f,c
  2649  0022A0  0EFF               	movlw	255
  2650  0022A2  22E2               	addwfc	fsr1h,f,c
  2651  0022A4  52E5               	movf	postdec1,f,c
  2652  0022A6  50E7               	movf	indf1,w,c
  2653  0022A8  5EE1               	subwf	fsr1l,f,c
  2654  0022AA  0E00               	movlw	0
  2655  0022AC  5AE2               	subwfb	fsr1h,f,c
  2656  0022AE  0012               	return		;funcret
  2657  0022B0                     __end_of_sprintf:
  2658                           	callstack 0
  2659                           
  2660 ;; *************** function _vfprintf *****************
  2661 ;; Defined at:
  2662 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;  fp              2  [STACK] PTR struct _IO_FILE
  2665 ;;		 -> NULL(0), f(6), 
  2666 ;;  fmt             2  [STACK] PTR const unsigned char 
  2667 ;;		 -> STR_7(18), STR_6(14), STR_4(14), STR_2(17), 
  2668 ;;  ap              2  [STACK] PTR PTR void 
  2669 ;;		 -> ap(2), ap(2), 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  cfmt            2  [STACK] PTR unsigned char 
  2672 ;;		 -> STR_7(18), STR_6(14), STR_4(14), STR_2(17), 
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  2  [STACK] int 
  2675 ;; Registers used:
  2676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/F
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2686 ;;Total ram usage:        0 bytes
  2687 ;; Hardware stack levels used: 1
  2688 ;; Hardware stack levels required when called: 12
  2689 ;; This function calls:
  2690 ;;		_vfpfcnvrt
  2691 ;; This function is called by:
  2692 ;;		_sprintf
  2693 ;;		_printf
  2694 ;; This function uses a reentrant model
  2695 ;;
  2696                           
  2697                           	psect	text17
  2698  0026FE                     __ptext17:
  2699                           	callstack 0
  2700  0026FE                     _vfprintf:
  2701                           	callstack 0
  2702                           
  2703                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2704  0026FE  52E6               	movf	postinc1,f,c
  2705  002700  52E6               	movf	postinc1,f,c
  2706  002702                     
  2707                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2708                           ;stkvar	_fmt @ sp[(-2)+-4]
  2709  002702  0EFA               	movlw	-6
  2710  002704  CFE3 F00B          	movff	plusw1,btemp+10
  2711  002708  0EFB               	movlw	-5
  2712  00270A  CFE3 F00C          	movff	plusw1,btemp+11
  2713                           
  2714                           ;stkvar	_cfmt @ sp[(-2)+0]
  2715  00270E  0EFF               	movlw	-1
  2716  002710  C00C  FFE3         	movff	btemp+11,plusw1
  2717  002714  0EFE               	movlw	-2
  2718  002716  C00B  FFE3         	movff	btemp+10,plusw1
  2719  00271A                     
  2720                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2721  00271A  6A2D               	clrf	_nout^0,c
  2722  00271C  6A2E               	clrf	(_nout+1)^0,c
  2723                           
  2724                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2725  00271E  EFAB  F013         	goto	l2056
  2726  002722                     l2054:
  2727                           
  2728                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2729                           ;stkvar	_ap @ sp[(-2)+-6]
  2730  002722  0EF8               	movlw	-8
  2731  002724  CFE3 FFE6          	movff	plusw1,postinc1
  2732  002728  CFE3 FFE6          	movff	plusw1,postinc1
  2733                           
  2734                           ;stkvar	_cfmt @ sp[(-4)+0]
  2735  00272C  0EFC               	movlw	252
  2736  00272E  24E1               	addwf	fsr1l,w,c
  2737  002730  6E01               	movwf	btemp^0,c
  2738  002732  0EFF               	movlw	255
  2739  002734  20E2               	addwfc	fsr1h,w,c
  2740  002736  6E02               	movwf	(btemp+1)^0,c
  2741  002738  C001  FFE6         	movff	btemp,postinc1
  2742  00273C  C002  FFE6         	movff	btemp+1,postinc1
  2743                           
  2744                           ;stkvar	_fp @ sp[(-6)+-2]
  2745  002740  0EF8               	movlw	-8
  2746  002742  CFE3 FFE6          	movff	plusw1,postinc1
  2747  002746  CFE3 FFE6          	movff	plusw1,postinc1
  2748  00274A  EC2E  F00D         	call	_vfpfcnvrt	;wreg free
  2749  00274E  5001               	movf	btemp^0,w,c
  2750  002750  262D               	addwf	_nout^0,f,c
  2751  002752  5002               	movf	(btemp+1)^0,w,c
  2752  002754  222E               	addwfc	(_nout+1)^0,f,c
  2753  002756                     l2056:
  2754                           
  2755                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2756                           ;stkvar	_cfmt @ sp[(-2)+0]
  2757  002756  50E1               	movf	fsr1l,w,c
  2758  002758  0FFE               	addlw	-2
  2759  00275A  6ED9               	movwf	fsr2l,c
  2760  00275C  50E2               	movf	fsr1h,w,c
  2761  00275E  6EDA               	movwf	fsr2h,c
  2762  002760  0EFF               	movlw	255
  2763  002762  22DA               	addwfc	fsr2h,f,c
  2764  002764  CFDE FFF6          	movff	postinc2,tblptrl
  2765  002768  CFDD FFF7          	movff	postdec2,tblptrh
  2766  00276C                     	if	0	;tblptru may be non-zero
  2767  00276C                     	endif
  2768  00276C                     	if	0	;tblptru may be non-zero
  2769  00276C                     	endif
  2770  00276C  0008               	tblrd		*
  2771  00276E  50F5               	movf	tablat,w,c
  2772  002770  0900               	iorlw	0
  2773  002772  A4D8               	btfss	status,2,c
  2774  002774  EFBE  F013         	goto	u1531
  2775  002778  EFC0  F013         	goto	u1530
  2776  00277C                     u1531:
  2777  00277C  EF91  F013         	goto	l2054
  2778  002780                     u1530:
  2779  002780                     
  2780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2781  002780  C02D  F001         	movff	_nout,btemp
  2782  002784  C02E  F002         	movff	_nout+1,btemp+1
  2783  002788                     
  2784                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  2785  002788  0EF8               	movlw	248
  2786  00278A  26E1               	addwf	fsr1l,f,c
  2787  00278C  0EFF               	movlw	255
  2788  00278E  22E2               	addwfc	fsr1h,f,c
  2789  002790  0012               	return		;funcret
  2790  002792                     __end_of_vfprintf:
  2791                           	callstack 0
  2792                           
  2793 ;; *************** function _vfpfcnvrt *****************
  2794 ;; Defined at:
  2795 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  fp              2  [STACK] PTR struct _IO_FILE
  2798 ;;		 -> NULL(0), f(6), 
  2799 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  2800 ;;		 -> cfmt(2), 
  2801 ;;  ap              2  [STACK] PTR PTR void 
  2802 ;;		 -> ap(2), ap(2), 
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;  ll              8  [STACK] long long 
  2805 ;;  llu             8    0        unsigned long long 
  2806 ;;  f               4    0        unsigned long long 
  2807 ;;  vp              3    0        PTR void 
  2808 ;;  ct              3    0        unsigned char [3]
  2809 ;;  cp              3    0        PTR unsigned char 
  2810 ;;  i               2    0        int 
  2811 ;;  done            2    0        int 
  2812 ;;  c               1    0        unsigned char 
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  2  [STACK] int 
  2815 ;; Registers used:
  2816 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/F
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;Total ram usage:        0 bytes
  2827 ;; Hardware stack levels used: 1
  2828 ;; Hardware stack levels required when called: 11
  2829 ;; This function calls:
  2830 ;;		_dtoa
  2831 ;;		_fputc
  2832 ;; This function is called by:
  2833 ;;		_vfprintf
  2834 ;; This function uses a reentrant model
  2835 ;;
  2836                           
  2837                           	psect	text18
  2838  001A5C                     __ptext18:
  2839                           	callstack 0
  2840  001A5C                     _vfpfcnvrt:
  2841                           	callstack 0
  2842                           
  2843                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2844  001A5C  0E08               	movlw	8
  2845  001A5E  26E1               	addwf	fsr1l,f,c
  2846  001A60  0E00               	movlw	0
  2847  001A62  22E2               	addwfc	fsr1h,f,c
  2848  001A64                     
  2849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2850                           ;stkvar	_fmt @ sp[(-8)+-4]
  2851  001A64  0EF4               	movlw	-12
  2852  001A66  CFE3 FFD9          	movff	plusw1,fsr2l
  2853  001A6A  0EF5               	movlw	-11
  2854  001A6C  CFE3 FFDA          	movff	plusw1,fsr2h
  2855  001A70  CFDE FFF6          	movff	postinc2,tblptrl
  2856  001A74  CFDD FFF7          	movff	postdec2,tblptrh
  2857  001A78                     	if	0	;tblptru may be non-zero
  2858  001A78                     	endif
  2859  001A78                     	if	0	;tblptru may be non-zero
  2860  001A78                     	endif
  2861  001A78  0008               	tblrd		*
  2862  001A7A  50F5               	movf	tablat,w,c
  2863  001A7C  0A25               	xorlw	37
  2864  001A7E  A4D8               	btfss	status,2,c
  2865  001A80  EF44  F00D         	goto	u1491
  2866  001A84  EF46  F00D         	goto	u1490
  2867  001A88                     u1491:
  2868  001A88  EF14  F00E         	goto	l2042
  2869  001A8C                     u1490:
  2870  001A8C                     
  2871                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2872                           ;stkvar	_fmt @ sp[(-8)+-4]
  2873  001A8C  0EF4               	movlw	-12
  2874  001A8E  CFE3 FFD9          	movff	plusw1,fsr2l
  2875  001A92  0EF5               	movlw	-11
  2876  001A94  CFE3 FFDA          	movff	plusw1,fsr2h
  2877  001A98  2ADE               	incf	postinc2,f,c
  2878  001A9A  0E00               	movlw	0
  2879  001A9C  22DD               	addwfc	postdec2,f,c
  2880  001A9E                     
  2881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2882  001A9E  6A2F               	clrf	_width^0,c
  2883  001AA0  6A30               	clrf	(_width+1)^0,c
  2884  001AA2  6A33               	clrf	_flags^0,c
  2885  001AA4  6A34               	clrf	(_flags+1)^0,c
  2886  001AA6                     
  2887                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2888  001AA6  6831               	setf	_prec^0,c
  2889  001AA8  6832               	setf	(_prec+1)^0,c
  2890  001AAA                     
  2891                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2892                           ;stkvar	_fmt @ sp[(-8)+-4]
  2893  001AAA  0EF4               	movlw	-12
  2894  001AAC  CFE3 FFD9          	movff	plusw1,fsr2l
  2895  001AB0  0EF5               	movlw	-11
  2896  001AB2  CFE3 FFDA          	movff	plusw1,fsr2h
  2897  001AB6  CFDE FFF6          	movff	postinc2,tblptrl
  2898  001ABA  CFDD FFF7          	movff	postdec2,tblptrh
  2899  001ABE                     	if	0	;tblptru may be non-zero
  2900  001ABE                     	endif
  2901  001ABE                     	if	0	;tblptru may be non-zero
  2902  001ABE                     	endif
  2903  001ABE  0008               	tblrd		*
  2904  001AC0  50F5               	movf	tablat,w,c
  2905  001AC2  0A64               	xorlw	100
  2906  001AC4  B4D8               	btfsc	status,2,c
  2907  001AC6  EF67  F00D         	goto	u1501
  2908  001ACA  EF69  F00D         	goto	u1500
  2909  001ACE                     u1501:
  2910  001ACE  EF7D  F00D         	goto	l2018
  2911  001AD2                     u1500:
  2912  001AD2                     
  2913                           ;stkvar	_fmt @ sp[(-8)+-4]
  2914  001AD2  0EF4               	movlw	-12
  2915  001AD4  CFE3 FFD9          	movff	plusw1,fsr2l
  2916  001AD8  0EF5               	movlw	-11
  2917  001ADA  CFE3 FFDA          	movff	plusw1,fsr2h
  2918  001ADE  CFDE FFF6          	movff	postinc2,tblptrl
  2919  001AE2  CFDD FFF7          	movff	postdec2,tblptrh
  2920  001AE6                     	if	0	;tblptru may be non-zero
  2921  001AE6                     	endif
  2922  001AE6                     	if	0	;tblptru may be non-zero
  2923  001AE6                     	endif
  2924  001AE6  0008               	tblrd		*
  2925  001AE8  50F5               	movf	tablat,w,c
  2926  001AEA  0A69               	xorlw	105
  2927  001AEC  A4D8               	btfss	status,2,c
  2928  001AEE  EF7B  F00D         	goto	u1511
  2929  001AF2  EF7D  F00D         	goto	u1510
  2930  001AF6                     u1511:
  2931  001AF6  EFD7  F00D         	goto	l2026
  2932  001AFA                     u1510:
  2933  001AFA                     l2018:
  2934                           
  2935                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2936                           ;stkvar	_fmt @ sp[(-8)+-4]
  2937  001AFA  0EF4               	movlw	-12
  2938  001AFC  CFE3 FFD9          	movff	plusw1,fsr2l
  2939  001B00  0EF5               	movlw	-11
  2940  001B02  CFE3 FFDA          	movff	plusw1,fsr2h
  2941  001B06  2ADE               	incf	postinc2,f,c
  2942  001B08  0E00               	movlw	0
  2943  001B0A  22DD               	addwfc	postdec2,f,c
  2944  001B0C                     
  2945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2946                           ;stkvar	_ap @ sp[(-8)+-6]
  2947  001B0C  0EF2               	movlw	-14
  2948  001B0E  CFE3 FFD9          	movff	plusw1,fsr2l
  2949  001B12  0EF3               	movlw	-13
  2950  001B14  CFE3 FFDA          	movff	plusw1,fsr2h
  2951  001B18  0E02               	movlw	2
  2952  001B1A  5EDE               	subwf	postinc2,f,c
  2953  001B1C  0E00               	movlw	0
  2954  001B1E  5ADD               	subwfb	postdec2,f,c
  2955  001B20  CFDE F00B          	movff	postinc2,btemp+10
  2956  001B24  CFDD F00C          	movff	postdec2,btemp+11
  2957  001B28  C00B  FFD9         	movff	btemp+10,fsr2l
  2958  001B2C  C00C  FFDA         	movff	btemp+11,fsr2h
  2959  001B30  CFDE F00B          	movff	postinc2,btemp+10
  2960  001B34  CFDD F00C          	movff	postdec2,btemp+11
  2961                           
  2962                           ;stkvar	_ll @ sp[(-8)+0]
  2963  001B38  0EF8               	movlw	-8
  2964  001B3A  C00B  FFE3         	movff	btemp+10,plusw1
  2965  001B3E  0EF9               	movlw	-7
  2966  001B40  C00C  FFE3         	movff	btemp+11,plusw1
  2967  001B44  6A01               	clrf	btemp^0,c
  2968  001B46  BEE3               	btfsc	plusw1,7,c
  2969  001B48  6801               	setf	btemp^0,c
  2970  001B4A  0EFA               	movlw	-6
  2971  001B4C  C001  FFE3         	movff	btemp,plusw1
  2972  001B50  0EFB               	movlw	-5
  2973  001B52  C001  FFE3         	movff	btemp,plusw1
  2974  001B56  0EFC               	movlw	-4
  2975  001B58  C001  FFE3         	movff	btemp,plusw1
  2976  001B5C  0EFD               	movlw	-3
  2977  001B5E  C001  FFE3         	movff	btemp,plusw1
  2978  001B62  0EFE               	movlw	-2
  2979  001B64  C001  FFE3         	movff	btemp,plusw1
  2980  001B68  0EFF               	movlw	-1
  2981  001B6A  C001  FFE3         	movff	btemp,plusw1
  2982  001B6E                     
  2983                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2984                           ;stkvar	_ll @ sp[(-8)+0]
  2985  001B6E  50E1               	movf	fsr1l,w,c
  2986  001B70  0FF8               	addlw	-8
  2987  001B72  6ED9               	movwf	fsr2l,c
  2988  001B74  50E2               	movf	fsr1h,w,c
  2989  001B76  6EDA               	movwf	fsr2h,c
  2990  001B78  0EFF               	movlw	255
  2991  001B7A  22DA               	addwfc	fsr2h,f,c
  2992  001B7C  CFDE FFE6          	movff	postinc2,postinc1
  2993  001B80  CFDE FFE6          	movff	postinc2,postinc1
  2994  001B84  CFDE FFE6          	movff	postinc2,postinc1
  2995  001B88  CFDE FFE6          	movff	postinc2,postinc1
  2996  001B8C  CFDE FFE6          	movff	postinc2,postinc1
  2997  001B90  CFDE FFE6          	movff	postinc2,postinc1
  2998  001B94  CFDE FFE6          	movff	postinc2,postinc1
  2999  001B98  CFDE FFE6          	movff	postinc2,postinc1
  3000                           
  3001                           ;stkvar	_fp @ sp[(-16)+-2]
  3002  001B9C  0EEE               	movlw	-18
  3003  001B9E  CFE3 FFE6          	movff	plusw1,postinc1
  3004  001BA2  CFE3 FFE6          	movff	plusw1,postinc1
  3005  001BA6  EC3B  F008         	call	_dtoa	;wreg free
  3006  001BAA  EF35  F00E         	goto	l1069
  3007  001BAE                     l2026:
  3008                           
  3009                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3010                           ;stkvar	_fmt @ sp[(-8)+-4]
  3011  001BAE  0EF4               	movlw	-12
  3012  001BB0  CFE3 FFD9          	movff	plusw1,fsr2l
  3013  001BB4  0EF5               	movlw	-11
  3014  001BB6  CFE3 FFDA          	movff	plusw1,fsr2h
  3015  001BBA  CFDE FFF6          	movff	postinc2,tblptrl
  3016  001BBE  CFDD FFF7          	movff	postdec2,tblptrh
  3017  001BC2                     	if	0	;tblptru may be non-zero
  3018  001BC2                     	endif
  3019  001BC2                     	if	0	;tblptru may be non-zero
  3020  001BC2                     	endif
  3021  001BC2  0008               	tblrd		*
  3022  001BC4  50F5               	movf	tablat,w,c
  3023  001BC6  0A25               	xorlw	37
  3024  001BC8  A4D8               	btfss	status,2,c
  3025  001BCA  EFE9  F00D         	goto	u1521
  3026  001BCE  EFEB  F00D         	goto	u1520
  3027  001BD2                     u1521:
  3028  001BD2  EF05  F00E         	goto	l2036
  3029  001BD6                     u1520:
  3030  001BD6                     
  3031                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3032                           ;stkvar	_fmt @ sp[(-8)+-4]
  3033  001BD6  0EF4               	movlw	-12
  3034  001BD8  CFE3 FFD9          	movff	plusw1,fsr2l
  3035  001BDC  0EF5               	movlw	-11
  3036  001BDE  CFE3 FFDA          	movff	plusw1,fsr2h
  3037  001BE2  2ADE               	incf	postinc2,f,c
  3038  001BE4  0E00               	movlw	0
  3039  001BE6  22DD               	addwfc	postdec2,f,c
  3040  001BE8                     
  3041                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3042                           ;stkvar	_fp @ sp[(-8)+-2]
  3043  001BE8  0EF6               	movlw	-10
  3044  001BEA  CFE3 FFE6          	movff	plusw1,postinc1
  3045  001BEE  CFE3 FFE6          	movff	plusw1,postinc1
  3046  001BF2  0E25               	movlw	37
  3047  001BF4  6EE6               	movwf	postinc1,c
  3048  001BF6  0E00               	movlw	0
  3049  001BF8  6EE6               	movwf	postinc1,c
  3050  001BFA  EC3A  F00E         	call	_fputc	;wreg free
  3051  001BFE                     l2032:
  3052                           
  3053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3054  001BFE  0E01               	movlw	1
  3055  001C00  6E01               	movwf	btemp^0,c
  3056  001C02  0E00               	movlw	0
  3057  001C04  6E02               	movwf	(btemp+1)^0,c
  3058  001C06  EF35  F00E         	goto	l1069
  3059  001C0A                     l2036:
  3060                           
  3061                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3062                           ;stkvar	_fmt @ sp[(-8)+-4]
  3063  001C0A  0EF4               	movlw	-12
  3064  001C0C  CFE3 FFD9          	movff	plusw1,fsr2l
  3065  001C10  0EF5               	movlw	-11
  3066  001C12  CFE3 FFDA          	movff	plusw1,fsr2h
  3067  001C16  2ADE               	incf	postinc2,f,c
  3068  001C18  0E00               	movlw	0
  3069  001C1A  22DD               	addwfc	postdec2,f,c
  3070  001C1C                     
  3071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3072  001C1C  0E00               	movlw	0
  3073  001C1E  6E01               	movwf	btemp^0,c
  3074  001C20  0E00               	movlw	0
  3075  001C22  6E02               	movwf	(btemp+1)^0,c
  3076  001C24  EF35  F00E         	goto	l1069
  3077  001C28                     l2042:
  3078                           
  3079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3080                           ;stkvar	_fp @ sp[(-8)+-2]
  3081  001C28  0EF6               	movlw	-10
  3082  001C2A  CFE3 FFE6          	movff	plusw1,postinc1
  3083  001C2E  CFE3 FFE6          	movff	plusw1,postinc1
  3084                           
  3085                           ;stkvar	_fmt @ sp[(-10)+-4]
  3086  001C32  0EF2               	movlw	-14
  3087  001C34  CFE3 FFD9          	movff	plusw1,fsr2l
  3088  001C38  0EF3               	movlw	-13
  3089  001C3A  CFE3 FFDA          	movff	plusw1,fsr2h
  3090  001C3E  CFDE FFF6          	movff	postinc2,tblptrl
  3091  001C42  CFDD FFF7          	movff	postdec2,tblptrh
  3092  001C46                     	if	0	;tblptru may be non-zero
  3093  001C46                     	endif
  3094  001C46                     	if	0	;tblptru may be non-zero
  3095  001C46                     	endif
  3096  001C46  0008               	tblrd		*
  3097  001C48  50F5               	movf	tablat,w,c
  3098  001C4A  6EE6               	movwf	postinc1,c
  3099  001C4C  0E00               	movlw	0
  3100  001C4E  6EE6               	movwf	postinc1,c
  3101  001C50  EC3A  F00E         	call	_fputc	;wreg free
  3102  001C54                     
  3103                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3104                           ;stkvar	_fmt @ sp[(-8)+-4]
  3105  001C54  0EF4               	movlw	-12
  3106  001C56  CFE3 FFD9          	movff	plusw1,fsr2l
  3107  001C5A  0EF5               	movlw	-11
  3108  001C5C  CFE3 FFDA          	movff	plusw1,fsr2h
  3109  001C60  2ADE               	incf	postinc2,f,c
  3110  001C62  0E00               	movlw	0
  3111  001C64  22DD               	addwfc	postdec2,f,c
  3112  001C66  EFFF  F00D         	goto	l2032
  3113  001C6A                     l1069:
  3114                           
  3115                           ; _vfpfcnvrt: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
  3116  001C6A  0EF2               	movlw	242
  3117  001C6C  26E1               	addwf	fsr1l,f,c
  3118  001C6E  0EFF               	movlw	255
  3119  001C70  22E2               	addwfc	fsr1h,f,c
  3120  001C72  0012               	return		;funcret
  3121  001C74                     __end_of_vfpfcnvrt:
  3122                           	callstack 0
  3123                           
  3124 ;; *************** function _dtoa *****************
  3125 ;; Defined at:
  3126 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;  fp              2  [STACK] PTR struct _IO_FILE
  3129 ;;		 -> NULL(0), f(6), 
  3130 ;;  d               8  [STACK] long long 
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;  n               8  [STACK] long long 
  3133 ;;  i               2  [STACK] int 
  3134 ;;  s               2  [STACK] int 
  3135 ;;  w               2  [STACK] int 
  3136 ;;  p               2  [STACK] int 
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  2  [STACK] int 
  3139 ;; Registers used:
  3140 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, prodl
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/F
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3150 ;;Total ram usage:        0 bytes
  3151 ;; Hardware stack levels used: 1
  3152 ;; Hardware stack levels required when called: 10
  3153 ;; This function calls:
  3154 ;;		___aodiv
  3155 ;;		___aomod
  3156 ;;		_abs
  3157 ;;		_pad
  3158 ;; This function is called by:
  3159 ;;		_vfpfcnvrt
  3160 ;; This function uses a reentrant model
  3161 ;;
  3162                           
  3163                           	psect	text19
  3164  001076                     __ptext19:
  3165                           	callstack 0
  3166  001076                     _dtoa:
  3167                           	callstack 0
  3168                           
  3169                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  3170  001076  0E12               	movlw	18
  3171  001078  26E1               	addwf	fsr1l,f,c
  3172  00107A  0E00               	movlw	0
  3173  00107C  22E2               	addwfc	fsr1h,f,c
  3174  00107E                     
  3175                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3176                           ;stkvar	_d @ sp[(-18)+-10]
  3177  00107E  0EE4               	movlw	228
  3178  001080  24E1               	addwf	fsr1l,w,c
  3179  001082  6ED9               	movwf	fsr2l,c
  3180  001084  0EFF               	movlw	255
  3181  001086  20E2               	addwfc	fsr1h,w,c
  3182  001088  6EDA               	movwf	fsr2h,c
  3183                           
  3184                           ;stkvar	_n @ sp[(-18)+2]
  3185  00108A  0E08               	movlw	8
  3186  00108C  6E01               	movwf	btemp^0,c
  3187  00108E  0EF0               	movlw	-16
  3188  001090                     us132999:
  3189  001090  CFDE FFE3          	movff	postinc2,plusw1
  3190  001094  28E8               	incf	wreg,w,c
  3191  001096  2E01               	decfsz	btemp^0,f,c
  3192  001098  D7FB               	bra	us132999
  3193  00109A                     
  3194                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3195                           ;stkvar	_n @ sp[(-18)+2]
  3196  00109A  0EF7               	movlw	-9
  3197  00109C  BEE3               	btfsc	plusw1,7,c
  3198  00109E  EF53  F008         	goto	u1331
  3199  0010A2  EF56  F008         	goto	u1330
  3200  0010A6                     u1331:
  3201  0010A6  0E01               	movlw	1
  3202  0010A8  EF57  F008         	goto	u1340
  3203  0010AC                     u1330:
  3204  0010AC  0E00               	movlw	0
  3205  0010AE                     u1340:
  3206  0010AE  6E0B               	movwf	(btemp+10)^0,c
  3207  0010B0  6A0C               	clrf	(btemp+11)^0,c
  3208                           
  3209                           ;stkvar	_s @ sp[(-18)+12]
  3210  0010B2  0EFA               	movlw	-6
  3211  0010B4  C00B  FFE3         	movff	btemp+10,plusw1
  3212  0010B8  0EFB               	movlw	-5
  3213  0010BA  C00C  FFE3         	movff	btemp+11,plusw1
  3214  0010BE                     
  3215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3216                           ;stkvar	_s @ sp[(-18)+12]
  3217  0010BE  0EFA               	movlw	-6
  3218  0010C0  CFE3 F001          	movff	plusw1,btemp
  3219  0010C4  0EFB               	movlw	-5
  3220  0010C6  50E3               	movf	plusw1,w,c
  3221  0010C8  1001               	iorwf	btemp^0,w,c
  3222  0010CA  B4D8               	btfsc	status,2,c
  3223  0010CC  EF6A  F008         	goto	u1351
  3224  0010D0  EF6C  F008         	goto	u1350
  3225  0010D4                     u1351:
  3226  0010D4  EF91  F008         	goto	l1948
  3227  0010D8                     u1350:
  3228  0010D8                     
  3229                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3230                           ;stkvar	_n @ sp[(-18)+2]
  3231                           ;stkvar	_n @ sp[(-18)+2]
  3232  0010D8  0EF0               	movlw	-16
  3233  0010DA  6CE3               	negf	plusw1,c
  3234  0010DC  0EF1               	movlw	-15
  3235  0010DE  1EE3               	comf	plusw1,f,c
  3236  0010E0  0EF2               	movlw	-14
  3237  0010E2  1EE3               	comf	plusw1,f,c
  3238  0010E4  0EF3               	movlw	-13
  3239  0010E6  1EE3               	comf	plusw1,f,c
  3240  0010E8  0EF4               	movlw	-12
  3241  0010EA  1EE3               	comf	plusw1,f,c
  3242  0010EC  0EF5               	movlw	-11
  3243  0010EE  1EE3               	comf	plusw1,f,c
  3244  0010F0  0EF6               	movlw	-10
  3245  0010F2  1EE3               	comf	plusw1,f,c
  3246  0010F4  0EF7               	movlw	-9
  3247  0010F6  1EE3               	comf	plusw1,f,c
  3248  0010F8  E314               	bnc	u1360
  3249  0010FA  0EF1               	movlw	-15
  3250  0010FC  2AE3               	incf	plusw1,f,c
  3251  0010FE  E311               	bnc	u1360
  3252  001100  0EF2               	movlw	-14
  3253  001102  2AE3               	incf	plusw1,f,c
  3254  001104  E30E               	bnc	u1360
  3255  001106  0EF3               	movlw	-13
  3256  001108  2AE3               	incf	plusw1,f,c
  3257  00110A  E30B               	bnc	u1360
  3258  00110C  0EF4               	movlw	-12
  3259  00110E  2AE3               	incf	plusw1,f,c
  3260  001110  E308               	bnc	u1360
  3261  001112  0EF5               	movlw	-11
  3262  001114  2AE3               	incf	plusw1,f,c
  3263  001116  E305               	bnc	u1360
  3264  001118  0EF6               	movlw	-10
  3265  00111A  2AE3               	incf	plusw1,f,c
  3266  00111C  E302               	bnc	u1360
  3267  00111E  0EF7               	movlw	-9
  3268  001120  2AE3               	incf	plusw1,f,c
  3269  001122                     u1360:
  3270  001122                     l1948:
  3271                           
  3272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3273  001122  BE32               	btfsc	(_prec+1)^0,7,c
  3274  001124  EF96  F008         	goto	u1371
  3275  001128  EF98  F008         	goto	u1370
  3276  00112C                     u1371:
  3277  00112C  EF99  F008         	goto	l1952
  3278  001130                     u1370:
  3279  001130                     
  3280                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3281  001130  9233               	bcf	_flags^0,1,c
  3282  001132                     l1952:
  3283                           
  3284                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3285  001132  BE32               	btfsc	(_prec+1)^0,7,c
  3286  001134  EFA6  F008         	goto	u1380
  3287  001138  5032               	movf	(_prec+1)^0,w,c
  3288  00113A  E106               	bnz	u1381
  3289  00113C  0431               	decf	_prec^0,w,c
  3290  00113E  B0D8               	btfsc	status,0,c
  3291  001140  EFA4  F008         	goto	u1381
  3292  001144  EFA6  F008         	goto	u1380
  3293  001148                     u1381:
  3294  001148  EFB2  F008         	goto	l1956
  3295  00114C                     u1380:
  3296  00114C  0E01               	movlw	1
  3297  00114E  6E0B               	movwf	(btemp+10)^0,c
  3298  001150  0E00               	movlw	0
  3299  001152  6E0C               	movwf	(btemp+11)^0,c
  3300                           
  3301                           ;stkvar	_p @ sp[(-18)+16]
  3302  001154  0EFE               	movlw	-2
  3303  001156  C00B  FFE3         	movff	btemp+10,plusw1
  3304  00115A  0EFF               	movlw	-1
  3305  00115C  C00C  FFE3         	movff	btemp+11,plusw1
  3306  001160  EFB8  F008         	goto	l1044
  3307  001164                     l1956:
  3308                           
  3309                           ;stkvar	_p @ sp[(-18)+16]
  3310  001164  0EFE               	movlw	-2
  3311  001166  C031  FFE3         	movff	_prec,plusw1
  3312  00116A  0EFF               	movlw	-1
  3313  00116C  C032  FFE3         	movff	_prec+1,plusw1
  3314  001170                     l1044:
  3315                           
  3316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3317                           ;stkvar	_w @ sp[(-18)+14]
  3318  001170  0EFC               	movlw	-4
  3319  001172  C02F  FFE3         	movff	_width,plusw1
  3320  001176  0EFD               	movlw	-3
  3321  001178  C030  FFE3         	movff	_width+1,plusw1
  3322  00117C                     
  3323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3324                           ;stkvar	_s @ sp[(-18)+12]
  3325  00117C  0EFA               	movlw	-6
  3326  00117E  CFE3 F001          	movff	plusw1,btemp
  3327  001182  0EFB               	movlw	-5
  3328  001184  50E3               	movf	plusw1,w,c
  3329  001186  1001               	iorwf	btemp^0,w,c
  3330  001188  A4D8               	btfss	status,2,c
  3331  00118A  EFC9  F008         	goto	u1391
  3332  00118E  EFCB  F008         	goto	u1390
  3333  001192                     u1391:
  3334  001192  EFD2  F008         	goto	l1962
  3335  001196                     u1390:
  3336  001196  A433               	btfss	_flags^0,2,c
  3337  001198  EFD0  F008         	goto	u1401
  3338  00119C  EFD2  F008         	goto	u1400
  3339  0011A0                     u1401:
  3340  0011A0  EFDC  F008         	goto	l1964
  3341  0011A4                     u1400:
  3342  0011A4                     l1962:
  3343                           
  3344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  3345                           ;stkvar	_w @ sp[(-18)+14]
  3346  0011A4  50E1               	movf	fsr1l,w,c
  3347  0011A6  0FFC               	addlw	-4
  3348  0011A8  6ED9               	movwf	fsr2l,c
  3349  0011AA  50E2               	movf	fsr1h,w,c
  3350  0011AC  6EDA               	movwf	fsr2h,c
  3351  0011AE  0EFF               	movlw	255
  3352  0011B0  22DA               	addwfc	fsr2h,f,c
  3353  0011B2  06DE               	decf	postinc2,f,c
  3354  0011B4  0E00               	movlw	0
  3355  0011B6  5ADD               	subwfb	postdec2,f,c
  3356  0011B8                     l1964:
  3357                           
  3358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3359  0011B8  0E1F               	movlw	31
  3360  0011BA  6E0B               	movwf	(btemp+10)^0,c
  3361  0011BC  0E00               	movlw	0
  3362  0011BE  6E0C               	movwf	(btemp+11)^0,c
  3363                           
  3364                           ;stkvar	_i @ sp[(-18)+10]
  3365  0011C0  0EF8               	movlw	-8
  3366  0011C2  C00B  FFE3         	movff	btemp+10,plusw1
  3367  0011C6  0EF9               	movlw	-7
  3368  0011C8  C00C  FFE3         	movff	btemp+11,plusw1
  3369  0011CC                     
  3370                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3371  0011CC  0100               	movlb	0	; () banked
  3372  0011CE  6B7F               	clrf	(_dbuf+31)& (0+255),b
  3373                           
  3374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3375  0011D0  EFC4  F009         	goto	l1978
  3376  0011D4                     l1968:
  3377                           
  3378                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  3379                           ;stkvar	_i @ sp[(-18)+10]
  3380  0011D4  50E1               	movf	fsr1l,w,c
  3381  0011D6  0FF8               	addlw	-8
  3382  0011D8  6ED9               	movwf	fsr2l,c
  3383  0011DA  50E2               	movf	fsr1h,w,c
  3384  0011DC  6EDA               	movwf	fsr2h,c
  3385  0011DE  0EFF               	movlw	255
  3386  0011E0  22DA               	addwfc	fsr2h,f,c
  3387  0011E2  06DE               	decf	postinc2,f,c
  3388  0011E4  0E00               	movlw	0
  3389  0011E6  5ADD               	subwfb	postdec2,f,c
  3390  0011E8                     
  3391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3392  0011E8  0E0A               	movlw	10
  3393  0011EA  6EE6               	movwf	postinc1,c
  3394  0011EC  0E00               	movlw	0
  3395  0011EE  6EE6               	movwf	postinc1,c
  3396  0011F0  0E00               	movlw	0
  3397  0011F2  6EE6               	movwf	postinc1,c
  3398  0011F4  0E00               	movlw	0
  3399  0011F6  6EE6               	movwf	postinc1,c
  3400  0011F8  0E00               	movlw	0
  3401  0011FA  6EE6               	movwf	postinc1,c
  3402  0011FC  0E00               	movlw	0
  3403  0011FE  6EE6               	movwf	postinc1,c
  3404  001200  0E00               	movlw	0
  3405  001202  6EE6               	movwf	postinc1,c
  3406  001204  0E00               	movlw	0
  3407  001206  6EE6               	movwf	postinc1,c
  3408                           
  3409                           ;stkvar	_n @ sp[(-26)+2]
  3410  001208  50E1               	movf	fsr1l,w,c
  3411  00120A  0FE8               	addlw	-24
  3412  00120C  6ED9               	movwf	fsr2l,c
  3413  00120E  50E2               	movf	fsr1h,w,c
  3414  001210  6EDA               	movwf	fsr2h,c
  3415  001212  0EFF               	movlw	255
  3416  001214  22DA               	addwfc	fsr2h,f,c
  3417  001216  CFDE FFE6          	movff	postinc2,postinc1
  3418  00121A  CFDE FFE6          	movff	postinc2,postinc1
  3419  00121E  CFDE FFE6          	movff	postinc2,postinc1
  3420  001222  CFDE FFE6          	movff	postinc2,postinc1
  3421  001226  CFDE FFE6          	movff	postinc2,postinc1
  3422  00122A  CFDE FFE6          	movff	postinc2,postinc1
  3423  00122E  CFDE FFE6          	movff	postinc2,postinc1
  3424  001232  CFDE FFE6          	movff	postinc2,postinc1
  3425  001236  ECEB  F00B         	call	___aomod	;wreg free
  3426  00123A  52E5               	movf	postdec1,f,c
  3427  00123C  CFE7 F018          	movff	indf1,btemp+23
  3428  001240  52E5               	movf	postdec1,f,c
  3429  001242  CFE7 F017          	movff	indf1,btemp+22
  3430  001246  52E5               	movf	postdec1,f,c
  3431  001248  CFE7 F016          	movff	indf1,btemp+21
  3432  00124C  52E5               	movf	postdec1,f,c
  3433  00124E  CFE7 F015          	movff	indf1,btemp+20
  3434  001252  52E5               	movf	postdec1,f,c
  3435  001254  CFE7 F014          	movff	indf1,btemp+19
  3436  001258  52E5               	movf	postdec1,f,c
  3437  00125A  CFE7 F013          	movff	indf1,btemp+18
  3438  00125E  52E5               	movf	postdec1,f,c
  3439  001260  CFE7 F012          	movff	indf1,btemp+17
  3440  001264  52E5               	movf	postdec1,f,c
  3441  001266  CFE7 F011          	movff	indf1,btemp+16
  3442  00126A  0EF8               	movlw	248
  3443  00126C  26E1               	addwf	fsr1l,f,c
  3444  00126E  0EFF               	movlw	255
  3445  001270  22E2               	addwfc	fsr1h,f,c
  3446  001272  C011  F00B         	movff	btemp+16,btemp+10
  3447  001276  C012  F00C         	movff	btemp+17,btemp+11
  3448  00127A  C00B  FFE6         	movff	btemp+10,postinc1
  3449  00127E  C00C  FFE6         	movff	btemp+11,postinc1
  3450  001282  EC01  F015         	call	_abs	;wreg free
  3451  001286  0E30               	movlw	48
  3452  001288  2601               	addwf	btemp^0,f,c
  3453                           
  3454                           ;stkvar	_i @ sp[(-18)+10]
  3455  00128A  0EF8               	movlw	-8
  3456  00128C  CFE3 F00B          	movff	plusw1,btemp+10
  3457  001290  0EF9               	movlw	-7
  3458  001292  CFE3 F00C          	movff	plusw1,btemp+11
  3459  001296  0E60               	movlw	low _dbuf
  3460  001298  240B               	addwf	(btemp+10)^0,w,c
  3461  00129A  6ED9               	movwf	fsr2l,c
  3462  00129C  0E00               	movlw	high _dbuf
  3463  00129E  200C               	addwfc	(btemp+11)^0,w,c
  3464  0012A0  6EDA               	movwf	fsr2h,c
  3465  0012A2  C001  FFDF         	movff	btemp,indf2
  3466  0012A6                     
  3467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  3468                           ;stkvar	_p @ sp[(-18)+16]
  3469  0012A6  50E1               	movf	fsr1l,w,c
  3470  0012A8  0FFE               	addlw	-2
  3471  0012AA  6ED9               	movwf	fsr2l,c
  3472  0012AC  50E2               	movf	fsr1h,w,c
  3473  0012AE  6EDA               	movwf	fsr2h,c
  3474  0012B0  0EFF               	movlw	255
  3475  0012B2  22DA               	addwfc	fsr2h,f,c
  3476  0012B4  06DE               	decf	postinc2,f,c
  3477  0012B6  0E00               	movlw	0
  3478  0012B8  5ADD               	subwfb	postdec2,f,c
  3479  0012BA                     
  3480                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  3481                           ;stkvar	_w @ sp[(-18)+14]
  3482  0012BA  50E1               	movf	fsr1l,w,c
  3483  0012BC  0FFC               	addlw	-4
  3484  0012BE  6ED9               	movwf	fsr2l,c
  3485  0012C0  50E2               	movf	fsr1h,w,c
  3486  0012C2  6EDA               	movwf	fsr2h,c
  3487  0012C4  0EFF               	movlw	255
  3488  0012C6  22DA               	addwfc	fsr2h,f,c
  3489  0012C8  06DE               	decf	postinc2,f,c
  3490  0012CA  0E00               	movlw	0
  3491  0012CC  5ADD               	subwfb	postdec2,f,c
  3492  0012CE                     
  3493                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3494  0012CE  0E0A               	movlw	10
  3495  0012D0  6EE6               	movwf	postinc1,c
  3496  0012D2  0E00               	movlw	0
  3497  0012D4  6EE6               	movwf	postinc1,c
  3498  0012D6  0E00               	movlw	0
  3499  0012D8  6EE6               	movwf	postinc1,c
  3500  0012DA  0E00               	movlw	0
  3501  0012DC  6EE6               	movwf	postinc1,c
  3502  0012DE  0E00               	movlw	0
  3503  0012E0  6EE6               	movwf	postinc1,c
  3504  0012E2  0E00               	movlw	0
  3505  0012E4  6EE6               	movwf	postinc1,c
  3506  0012E6  0E00               	movlw	0
  3507  0012E8  6EE6               	movwf	postinc1,c
  3508  0012EA  0E00               	movlw	0
  3509  0012EC  6EE6               	movwf	postinc1,c
  3510                           
  3511                           ;stkvar	_n @ sp[(-26)+2]
  3512  0012EE  50E1               	movf	fsr1l,w,c
  3513  0012F0  0FE8               	addlw	-24
  3514  0012F2  6ED9               	movwf	fsr2l,c
  3515  0012F4  50E2               	movf	fsr1h,w,c
  3516  0012F6  6EDA               	movwf	fsr2h,c
  3517  0012F8  0EFF               	movlw	255
  3518  0012FA  22DA               	addwfc	fsr2h,f,c
  3519  0012FC  CFDE FFE6          	movff	postinc2,postinc1
  3520  001300  CFDE FFE6          	movff	postinc2,postinc1
  3521  001304  CFDE FFE6          	movff	postinc2,postinc1
  3522  001308  CFDE FFE6          	movff	postinc2,postinc1
  3523  00130C  CFDE FFE6          	movff	postinc2,postinc1
  3524  001310  CFDE FFE6          	movff	postinc2,postinc1
  3525  001314  CFDE FFE6          	movff	postinc2,postinc1
  3526  001318  CFDE FFE6          	movff	postinc2,postinc1
  3527  00131C  EC88  F00A         	call	___aodiv	;wreg free
  3528  001320  52E5               	movf	postdec1,f,c
  3529  001322  CFE7 F018          	movff	indf1,btemp+23
  3530  001326  52E5               	movf	postdec1,f,c
  3531  001328  CFE7 F017          	movff	indf1,btemp+22
  3532  00132C  52E5               	movf	postdec1,f,c
  3533  00132E  CFE7 F016          	movff	indf1,btemp+21
  3534  001332  52E5               	movf	postdec1,f,c
  3535  001334  CFE7 F015          	movff	indf1,btemp+20
  3536  001338  52E5               	movf	postdec1,f,c
  3537  00133A  CFE7 F014          	movff	indf1,btemp+19
  3538  00133E  52E5               	movf	postdec1,f,c
  3539  001340  CFE7 F013          	movff	indf1,btemp+18
  3540  001344  52E5               	movf	postdec1,f,c
  3541  001346  CFE7 F012          	movff	indf1,btemp+17
  3542  00134A  52E5               	movf	postdec1,f,c
  3543  00134C  CFE7 F011          	movff	indf1,btemp+16
  3544  001350  0EF8               	movlw	248
  3545  001352  26E1               	addwf	fsr1l,f,c
  3546  001354  0EFF               	movlw	255
  3547  001356  22E2               	addwfc	fsr1h,f,c
  3548                           
  3549                           ;stkvar	_n @ sp[(-18)+2]
  3550  001358  0EF0               	movlw	-16
  3551  00135A  C011  FFE3         	movff	btemp+16,plusw1
  3552  00135E  0EF1               	movlw	-15
  3553  001360  C012  FFE3         	movff	btemp+17,plusw1
  3554  001364  0EF2               	movlw	-14
  3555  001366  C013  FFE3         	movff	btemp+18,plusw1
  3556  00136A  0EF3               	movlw	-13
  3557  00136C  C014  FFE3         	movff	btemp+19,plusw1
  3558  001370  0EF4               	movlw	-12
  3559  001372  C015  FFE3         	movff	btemp+20,plusw1
  3560  001376  0EF5               	movlw	-11
  3561  001378  C016  FFE3         	movff	btemp+21,plusw1
  3562  00137C  0EF6               	movlw	-10
  3563  00137E  C017  FFE3         	movff	btemp+22,plusw1
  3564  001382  0EF7               	movlw	-9
  3565  001384  C018  FFE3         	movff	btemp+23,plusw1
  3566  001388                     l1978:
  3567                           
  3568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3569                           ;stkvar	_i @ sp[(-18)+10]
  3570  001388  0EF9               	movlw	-7
  3571  00138A  BEE3               	btfsc	plusw1,7,c
  3572  00138C  EFD2  F009         	goto	u1411
  3573  001390  0EF9               	movlw	-7
  3574  001392  50E3               	movf	plusw1,w,c
  3575  001394  E109               	bnz	u1410
  3576  001396  0EF8               	movlw	-8
  3577  001398  04E3               	decf	plusw1,w,c
  3578  00139A  A0D8               	btfss	status,0,c
  3579  00139C  EFD2  F009         	goto	u1411
  3580  0013A0  EFD4  F009         	goto	u1410
  3581  0013A4                     u1411:
  3582  0013A4  EF19  F00A         	goto	l1988
  3583  0013A8                     u1410:
  3584  0013A8                     
  3585                           ;stkvar	_n @ sp[(-18)+2]
  3586  0013A8  0EF0               	movlw	-16
  3587  0013AA  50E3               	movf	plusw1,w,c
  3588  0013AC  E119               	bnz	u1421
  3589  0013AE  0EF1               	movlw	-15
  3590  0013B0  50E3               	movf	plusw1,w,c
  3591  0013B2  E116               	bnz	u1421
  3592  0013B4  0EF2               	movlw	-14
  3593  0013B6  50E3               	movf	plusw1,w,c
  3594  0013B8  E113               	bnz	u1421
  3595  0013BA  0EF3               	movlw	-13
  3596  0013BC  50E3               	movf	plusw1,w,c
  3597  0013BE  E110               	bnz	u1421
  3598  0013C0  0EF4               	movlw	-12
  3599  0013C2  50E3               	movf	plusw1,w,c
  3600  0013C4  E10D               	bnz	u1421
  3601  0013C6  0EF5               	movlw	-11
  3602  0013C8  50E3               	movf	plusw1,w,c
  3603  0013CA  E10A               	bnz	u1421
  3604  0013CC  0EF6               	movlw	-10
  3605  0013CE  50E3               	movf	plusw1,w,c
  3606  0013D0  E107               	bnz	u1421
  3607  0013D2  0EF7               	movlw	-9
  3608  0013D4  50E3               	movf	plusw1,w,c
  3609  0013D6  A4D8               	btfss	status,2,c
  3610  0013D8  EFF0  F009         	goto	u1421
  3611  0013DC  EFF2  F009         	goto	u1420
  3612  0013E0                     u1421:
  3613  0013E0  EFEA  F008         	goto	l1968
  3614  0013E4                     u1420:
  3615  0013E4                     
  3616                           ;stkvar	_p @ sp[(-18)+16]
  3617  0013E4  0EFF               	movlw	-1
  3618  0013E6  BEE3               	btfsc	plusw1,7,c
  3619  0013E8  EF02  F00A         	goto	u1430
  3620  0013EC  0EFF               	movlw	-1
  3621  0013EE  50E3               	movf	plusw1,w,c
  3622  0013F0  E107               	bnz	u1431
  3623  0013F2  0EFE               	movlw	-2
  3624  0013F4  04E3               	decf	plusw1,w,c
  3625  0013F6  B0D8               	btfsc	status,0,c
  3626  0013F8  EF00  F00A         	goto	u1431
  3627  0013FC  EF02  F00A         	goto	u1430
  3628  001400                     u1431:
  3629  001400  EFEA  F008         	goto	l1968
  3630  001404                     u1430:
  3631  001404                     
  3632                           ;stkvar	_w @ sp[(-18)+14]
  3633  001404  0EFD               	movlw	-3
  3634  001406  BEE3               	btfsc	plusw1,7,c
  3635  001408  EF10  F00A         	goto	u1441
  3636  00140C  0EFD               	movlw	-3
  3637  00140E  50E3               	movf	plusw1,w,c
  3638  001410  E109               	bnz	u1440
  3639  001412  0EFC               	movlw	-4
  3640  001414  04E3               	decf	plusw1,w,c
  3641  001416  A0D8               	btfss	status,0,c
  3642  001418  EF10  F00A         	goto	u1441
  3643  00141C  EF12  F00A         	goto	u1440
  3644  001420                     u1441:
  3645  001420  EF19  F00A         	goto	l1988
  3646  001424                     u1440:
  3647  001424  B233               	btfsc	_flags^0,1,c
  3648  001426  EF17  F00A         	goto	u1451
  3649  00142A  EF19  F00A         	goto	u1450
  3650  00142E                     u1451:
  3651  00142E  EFEA  F008         	goto	l1968
  3652  001432                     u1450:
  3653  001432                     l1988:
  3654                           
  3655                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3656                           ;stkvar	_s @ sp[(-18)+12]
  3657  001432  0EFA               	movlw	-6
  3658  001434  CFE3 F001          	movff	plusw1,btemp
  3659  001438  0EFB               	movlw	-5
  3660  00143A  50E3               	movf	plusw1,w,c
  3661  00143C  1001               	iorwf	btemp^0,w,c
  3662  00143E  A4D8               	btfss	status,2,c
  3663  001440  EF24  F00A         	goto	u1461
  3664  001444  EF26  F00A         	goto	u1460
  3665  001448                     u1461:
  3666  001448  EF2D  F00A         	goto	l1992
  3667  00144C                     u1460:
  3668  00144C  A433               	btfss	_flags^0,2,c
  3669  00144E  EF2B  F00A         	goto	u1471
  3670  001452  EF2D  F00A         	goto	u1470
  3671  001456                     u1471:
  3672  001456  EF69  F00A         	goto	l2002
  3673  00145A                     u1470:
  3674  00145A                     l1992:
  3675                           
  3676                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  3677                           ;stkvar	_i @ sp[(-18)+10]
  3678  00145A  50E1               	movf	fsr1l,w,c
  3679  00145C  0FF8               	addlw	-8
  3680  00145E  6ED9               	movwf	fsr2l,c
  3681  001460  50E2               	movf	fsr1h,w,c
  3682  001462  6EDA               	movwf	fsr2h,c
  3683  001464  0EFF               	movlw	255
  3684  001466  22DA               	addwfc	fsr2h,f,c
  3685  001468  06DE               	decf	postinc2,f,c
  3686  00146A  0E00               	movlw	0
  3687  00146C  5ADD               	subwfb	postdec2,f,c
  3688  00146E                     
  3689                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3690                           ;stkvar	_s @ sp[(-18)+12]
  3691  00146E  0EFA               	movlw	-6
  3692  001470  CFE3 F001          	movff	plusw1,btemp
  3693  001474  0EFB               	movlw	-5
  3694  001476  50E3               	movf	plusw1,w,c
  3695  001478  1001               	iorwf	btemp^0,w,c
  3696  00147A  A4D8               	btfss	status,2,c
  3697  00147C  EF42  F00A         	goto	u1481
  3698  001480  EF44  F00A         	goto	u1480
  3699  001484                     u1481:
  3700  001484  EF50  F00A         	goto	l1998
  3701  001488                     u1480:
  3702  001488  0E2B               	movlw	43
  3703  00148A  6E0B               	movwf	(btemp+10)^0,c
  3704  00148C  0E00               	movlw	0
  3705  00148E  6E0C               	movwf	(btemp+11)^0,c
  3706                           
  3707                           ;stkvar	_dtoa$2388 @ sp[(-18)+0]
  3708  001490  0EEE               	movlw	-18
  3709  001492  C00B  FFE3         	movff	btemp+10,plusw1
  3710  001496  0EEF               	movlw	-17
  3711  001498  C00C  FFE3         	movff	btemp+11,plusw1
  3712  00149C  EF5A  F00A         	goto	l2000
  3713  0014A0                     l1998:
  3714  0014A0  0E2D               	movlw	45
  3715  0014A2  6E0B               	movwf	(btemp+10)^0,c
  3716  0014A4  0E00               	movlw	0
  3717  0014A6  6E0C               	movwf	(btemp+11)^0,c
  3718                           
  3719                           ;stkvar	_dtoa$2388 @ sp[(-18)+0]
  3720  0014A8  0EEE               	movlw	-18
  3721  0014AA  C00B  FFE3         	movff	btemp+10,plusw1
  3722  0014AE  0EEF               	movlw	-17
  3723  0014B0  C00C  FFE3         	movff	btemp+11,plusw1
  3724  0014B4                     l2000:
  3725                           
  3726                           ;stkvar	_dtoa$2388 @ sp[(-18)+0]
  3727                           ;stkvar	_i @ sp[(-18)+10]
  3728  0014B4  0EF8               	movlw	-8
  3729  0014B6  CFE3 F00B          	movff	plusw1,btemp+10
  3730  0014BA  0EF9               	movlw	-7
  3731  0014BC  CFE3 F00C          	movff	plusw1,btemp+11
  3732  0014C0  0E60               	movlw	low _dbuf
  3733  0014C2  240B               	addwf	(btemp+10)^0,w,c
  3734  0014C4  6ED9               	movwf	fsr2l,c
  3735  0014C6  0E00               	movlw	high _dbuf
  3736  0014C8  200C               	addwfc	(btemp+11)^0,w,c
  3737  0014CA  6EDA               	movwf	fsr2h,c
  3738  0014CC  0EEE               	movlw	-18
  3739  0014CE  CFE3 FFDF          	movff	plusw1,indf2
  3740  0014D2                     l2002:
  3741                           
  3742                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3743                           ;stkvar	_w @ sp[(-18)+14]
  3744  0014D2  0EFC               	movlw	-4
  3745  0014D4  CFE3 FFE6          	movff	plusw1,postinc1
  3746  0014D8  CFE3 FFE6          	movff	plusw1,postinc1
  3747                           
  3748                           ;stkvar	_i @ sp[(-20)+10]
  3749  0014DC  0E60               	movlw	low _dbuf
  3750  0014DE  6E0B               	movwf	(btemp+10)^0,c
  3751  0014E0  0E00               	movlw	high _dbuf
  3752  0014E2  6E0C               	movwf	(btemp+11)^0,c
  3753  0014E4  0EF6               	movlw	-10
  3754  0014E6  50E3               	movf	plusw1,w,c
  3755  0014E8  260B               	addwf	(btemp+10)^0,f,c
  3756  0014EA  0EF7               	movlw	-9
  3757  0014EC  50E3               	movf	plusw1,w,c
  3758  0014EE  220C               	addwfc	(btemp+11)^0,f,c
  3759  0014F0  C00B  FFE6         	movff	btemp+10,postinc1
  3760  0014F4  C00C  FFE6         	movff	btemp+11,postinc1
  3761                           
  3762                           ;stkvar	_fp @ sp[(-22)+-2]
  3763  0014F8  0EE8               	movlw	-24
  3764  0014FA  CFE3 FFE6          	movff	plusw1,postinc1
  3765  0014FE  CFE3 FFE6          	movff	plusw1,postinc1
  3766  001502  ECCE  F00E         	call	_pad	;wreg free
  3767  001506                     
  3768                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
  3769  001506  0EE4               	movlw	228
  3770  001508  26E1               	addwf	fsr1l,f,c
  3771  00150A  0EFF               	movlw	255
  3772  00150C  22E2               	addwfc	fsr1h,f,c
  3773  00150E  0012               	return		;funcret
  3774  001510                     __end_of_dtoa:
  3775                           	callstack 0
  3776                           
  3777 ;; *************** function _pad *****************
  3778 ;; Defined at:
  3779 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;  fp              2  [STACK] PTR struct _IO_FILE
  3782 ;;		 -> NULL(0), f(6), 
  3783 ;;  buf             2  [STACK] PTR unsigned char 
  3784 ;;		 -> dbuf(32), 
  3785 ;;  p               2  [STACK] int 
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;  w               2  [STACK] int 
  3788 ;;  i               2  [STACK] int 
  3789 ;; Return value:  Size  Location     Type
  3790 ;;                  2  [STACK] int 
  3791 ;; Registers used:
  3792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
  3793 ;; Tracked objects:
  3794 ;;		On entry : 0/0
  3795 ;;		On exit  : 0/0
  3796 ;;		Unchanged: 0/0
  3797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3802 ;;Total ram usage:        0 bytes
  3803 ;; Hardware stack levels used: 1
  3804 ;; Hardware stack levels required when called: 9
  3805 ;; This function calls:
  3806 ;;		_fputc
  3807 ;;		_fputs
  3808 ;;		_strlen
  3809 ;; This function is called by:
  3810 ;;		_dtoa
  3811 ;; This function uses a reentrant model
  3812 ;;
  3813                           
  3814                           	psect	text20
  3815  001D9C                     __ptext20:
  3816                           	callstack 0
  3817  001D9C                     _pad:
  3818                           	callstack 0
  3819                           
  3820                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3821  001D9C  52E6               	movf	postinc1,f,c
  3822  001D9E  52E6               	movf	postinc1,f,c
  3823  001DA0  52E6               	movf	postinc1,f,c
  3824  001DA2  52E6               	movf	postinc1,f,c
  3825  001DA4                     
  3826                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3827  001DA4  A033               	btfss	_flags^0,0,c
  3828  001DA6  EFD7  F00E         	goto	u1271
  3829  001DAA  EFD9  F00E         	goto	u1270
  3830  001DAE                     u1271:
  3831  001DAE  EFE5  F00E         	goto	l1914
  3832  001DB2                     u1270:
  3833  001DB2                     
  3834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3835                           ;stkvar	_fp @ sp[(-4)+-2]
  3836  001DB2  0EFA               	movlw	-6
  3837  001DB4  CFE3 FFE6          	movff	plusw1,postinc1
  3838  001DB8  CFE3 FFE6          	movff	plusw1,postinc1
  3839                           
  3840                           ;stkvar	_buf @ sp[(-6)+-4]
  3841  001DBC  0EF6               	movlw	-10
  3842  001DBE  CFE3 FFE6          	movff	plusw1,postinc1
  3843  001DC2  CFE3 FFE6          	movff	plusw1,postinc1
  3844  001DC6  ECC9  F013         	call	_fputs	;wreg free
  3845  001DCA                     l1914:
  3846                           
  3847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3848                           ;stkvar	_p @ sp[(-4)+-6]
  3849  001DCA  0EF7               	movlw	-9
  3850  001DCC  BEE3               	btfsc	plusw1,7,c
  3851  001DCE  EFEB  F00E         	goto	u1281
  3852  001DD2  EFED  F00E         	goto	u1280
  3853  001DD6                     u1281:
  3854  001DD6  EFFB  F00E         	goto	l1918
  3855  001DDA                     u1280:
  3856  001DDA                     
  3857                           ;stkvar	_p @ sp[(-4)+-6]
  3858                           ;stkvar	_w @ sp[(-4)+0]
  3859  001DDA  0EF6               	movlw	-10
  3860  001DDC  CFE3 F001          	movff	plusw1,btemp
  3861  001DE0  0EFC               	movlw	-4
  3862  001DE2  C001  FFE3         	movff	btemp,plusw1
  3863  001DE6  0EF7               	movlw	-9
  3864  001DE8  CFE3 F001          	movff	plusw1,btemp
  3865  001DEC  0EFD               	movlw	-3
  3866  001DEE  C001  FFE3         	movff	btemp,plusw1
  3867  001DF2  EFFF  F00E         	goto	l1031
  3868  001DF6                     l1918:
  3869                           
  3870                           ;stkvar	_w @ sp[(-4)+0]
  3871  001DF6  0EFC               	movlw	-4
  3872  001DF8  6AE3               	clrf	plusw1,c
  3873  001DFA  0EFD               	movlw	-3
  3874  001DFC  6AE3               	clrf	plusw1,c
  3875  001DFE                     l1031:
  3876                           
  3877                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3878                           ;stkvar	_i @ sp[(-4)+2]
  3879  001DFE  0EFE               	movlw	-2
  3880  001E00  6AE3               	clrf	plusw1,c
  3881  001E02  0EFF               	movlw	-1
  3882  001E04  6AE3               	clrf	plusw1,c
  3883                           
  3884                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3885  001E06  EF1F  F00F         	goto	l1924
  3886  001E0A                     l1920:
  3887                           
  3888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3889                           ;stkvar	_fp @ sp[(-4)+-2]
  3890  001E0A  0EFA               	movlw	-6
  3891  001E0C  CFE3 FFE6          	movff	plusw1,postinc1
  3892  001E10  CFE3 FFE6          	movff	plusw1,postinc1
  3893  001E14  0E20               	movlw	32
  3894  001E16  6EE6               	movwf	postinc1,c
  3895  001E18  0E00               	movlw	0
  3896  001E1A  6EE6               	movwf	postinc1,c
  3897  001E1C  EC3A  F00E         	call	_fputc	;wreg free
  3898  001E20                     
  3899                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3900                           ;stkvar	_i @ sp[(-4)+2]
  3901  001E20  0EFE               	movlw	-2
  3902  001E22  50E3               	movf	plusw1,w,c
  3903  001E24  0F01               	addlw	1
  3904  001E26  6E01               	movwf	btemp^0,c
  3905  001E28  0EFE               	movlw	-2
  3906  001E2A  C001  FFE3         	movff	btemp,plusw1
  3907  001E2E  6A01               	clrf	btemp^0,c
  3908  001E30  0EFF               	movlw	-1
  3909  001E32  50E3               	movf	plusw1,w,c
  3910  001E34  2001               	addwfc	btemp^0,w,c
  3911  001E36  6E01               	movwf	btemp^0,c
  3912  001E38  0EFF               	movlw	-1
  3913  001E3A  C001  FFE3         	movff	btemp,plusw1
  3914  001E3E                     l1924:
  3915                           
  3916                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3917                           ;stkvar	_w @ sp[(-4)+0]
  3918                           ;stkvar	_i @ sp[(-4)+2]
  3919  001E3E  50E1               	movf	fsr1l,w,c
  3920  001E40  0FFE               	addlw	-2
  3921  001E42  6ED9               	movwf	fsr2l,c
  3922  001E44  50E2               	movf	fsr1h,w,c
  3923  001E46  6EDA               	movwf	fsr2h,c
  3924  001E48  0EFF               	movlw	255
  3925  001E4A  22DA               	addwfc	fsr2h,f,c
  3926  001E4C  0EFC               	movlw	-4
  3927  001E4E  50E3               	movf	plusw1,w,c
  3928  001E50  5CDE               	subwf	postinc2,w,c
  3929  001E52  50DE               	movf	postinc2,w,c
  3930  001E54  0A80               	xorlw	128
  3931  001E56  6E01               	movwf	btemp^0,c
  3932  001E58  0EFD               	movlw	-3
  3933  001E5A  50E3               	movf	plusw1,w,c
  3934  001E5C  0A80               	xorlw	128
  3935  001E5E  5801               	subwfb	btemp^0,w,c
  3936  001E60  A0D8               	btfss	status,0,c
  3937  001E62  EF35  F00F         	goto	u1291
  3938  001E66  EF37  F00F         	goto	u1290
  3939  001E6A                     u1291:
  3940  001E6A  EF05  F00F         	goto	l1920
  3941  001E6E                     u1290:
  3942  001E6E                     
  3943                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3944  001E6E  B033               	btfsc	_flags^0,0,c
  3945  001E70  EF3C  F00F         	goto	u1301
  3946  001E74  EF3E  F00F         	goto	u1300
  3947  001E78                     u1301:
  3948  001E78  EF4A  F00F         	goto	l1928
  3949  001E7C                     u1300:
  3950  001E7C                     
  3951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3952                           ;stkvar	_fp @ sp[(-4)+-2]
  3953  001E7C  0EFA               	movlw	-6
  3954  001E7E  CFE3 FFE6          	movff	plusw1,postinc1
  3955  001E82  CFE3 FFE6          	movff	plusw1,postinc1
  3956                           
  3957                           ;stkvar	_buf @ sp[(-6)+-4]
  3958  001E86  0EF6               	movlw	-10
  3959  001E88  CFE3 FFE6          	movff	plusw1,postinc1
  3960  001E8C  CFE3 FFE6          	movff	plusw1,postinc1
  3961  001E90  ECC9  F013         	call	_fputs	;wreg free
  3962  001E94                     l1928:
  3963                           
  3964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3965                           ;stkvar	_w @ sp[(-4)+0]
  3966                           ;stkvar	_buf @ sp[(-4)+-4]
  3967  001E94  0EF8               	movlw	-8
  3968  001E96  CFE3 FFE6          	movff	plusw1,postinc1
  3969  001E9A  CFE3 FFE6          	movff	plusw1,postinc1
  3970  001E9E  EC12  F014         	call	_strlen	;wreg free
  3971  001EA2  0EFC               	movlw	-4
  3972  001EA4  50E3               	movf	plusw1,w,c
  3973  001EA6  2601               	addwf	btemp^0,f,c
  3974  001EA8  0EFD               	movlw	-3
  3975  001EAA  50E3               	movf	plusw1,w,c
  3976  001EAC  2202               	addwfc	(btemp+1)^0,f,c
  3977  001EAE                     
  3978                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
  3979  001EAE  0EF6               	movlw	246
  3980  001EB0  26E1               	addwf	fsr1l,f,c
  3981  001EB2  0EFF               	movlw	255
  3982  001EB4  22E2               	addwfc	fsr1h,f,c
  3983  001EB6  0012               	return		;funcret
  3984  001EB8                     __end_of_pad:
  3985                           	callstack 0
  3986                           
  3987 ;; *************** function _strlen *****************
  3988 ;; Defined at:
  3989 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;  s               2  [STACK] PTR const unsigned char 
  3992 ;;		 -> dbuf(32), 
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;  a               2  [STACK] PTR const unsigned char 
  3995 ;;		 -> dbuf(32), 
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  2  [STACK] unsigned int 
  3998 ;; Registers used:
  3999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4009 ;;Total ram usage:        0 bytes
  4010 ;; Hardware stack levels used: 1
  4011 ;; Hardware stack levels required when called: 6
  4012 ;; This function calls:
  4013 ;;		Nothing
  4014 ;; This function is called by:
  4015 ;;		_pad
  4016 ;; This function uses a reentrant model
  4017 ;;
  4018                           
  4019                           	psect	text21
  4020  002824                     __ptext21:
  4021                           	callstack 0
  4022  002824                     _strlen:
  4023                           	callstack 0
  4024                           
  4025                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4026  002824  52E6               	movf	postinc1,f,c
  4027  002826  52E6               	movf	postinc1,f,c
  4028  002828                     
  4029                           ;stkvar	_s @ sp[(-2)+-2]
  4030  002828  0EFC               	movlw	-4
  4031  00282A  CFE3 F00B          	movff	plusw1,btemp+10
  4032  00282E  0EFD               	movlw	-3
  4033  002830  CFE3 F00C          	movff	plusw1,btemp+11
  4034                           
  4035                           ;stkvar	_a @ sp[(-2)+0]
  4036  002834  0EFF               	movlw	-1
  4037  002836  C00C  FFE3         	movff	btemp+11,plusw1
  4038  00283A  0EFE               	movlw	-2
  4039  00283C  C00B  FFE3         	movff	btemp+10,plusw1
  4040  002840  EF31  F014         	goto	l1824
  4041  002844                     l1822:
  4042                           
  4043                           ;stkvar	_s @ sp[(-2)+-2]
  4044  002844  0EFC               	movlw	-4
  4045  002846  50E3               	movf	plusw1,w,c
  4046  002848  0F01               	addlw	1
  4047  00284A  6E01               	movwf	btemp^0,c
  4048  00284C  0EFC               	movlw	-4
  4049  00284E  C001  FFE3         	movff	btemp,plusw1
  4050  002852  6A01               	clrf	btemp^0,c
  4051  002854  0EFD               	movlw	-3
  4052  002856  50E3               	movf	plusw1,w,c
  4053  002858  2001               	addwfc	btemp^0,w,c
  4054  00285A  6E01               	movwf	btemp^0,c
  4055  00285C  0EFD               	movlw	-3
  4056  00285E  C001  FFE3         	movff	btemp,plusw1
  4057  002862                     l1824:
  4058                           
  4059                           ;stkvar	_s @ sp[(-2)+-2]
  4060  002862  0EFC               	movlw	-4
  4061  002864  CFE3 FFD9          	movff	plusw1,fsr2l
  4062  002868  0EFD               	movlw	-3
  4063  00286A  CFE3 FFDA          	movff	plusw1,fsr2h
  4064  00286E  50DF               	movf	indf2,w,c
  4065  002870  A4D8               	btfss	status,2,c
  4066  002872  EF3D  F014         	goto	u1031
  4067  002876  EF3F  F014         	goto	u1030
  4068  00287A                     u1031:
  4069  00287A  EF22  F014         	goto	l1822
  4070  00287E                     u1030:
  4071  00287E                     
  4072                           ;stkvar	_a @ sp[(-2)+0]
  4073                           ;stkvar	_s @ sp[(-2)+-2]
  4074  00287E  0EFC               	movlw	-4
  4075  002880  CFE3 F001          	movff	plusw1,btemp
  4076  002884  0EFD               	movlw	-3
  4077  002886  CFE3 F002          	movff	plusw1,btemp+1
  4078  00288A  0EFE               	movlw	-2
  4079  00288C  50E3               	movf	plusw1,w,c
  4080  00288E  5E01               	subwf	btemp^0,f,c
  4081  002890  0EFF               	movlw	-1
  4082  002892  50E3               	movf	plusw1,w,c
  4083  002894  5A02               	subwfb	(btemp+1)^0,f,c
  4084  002896                     
  4085                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  4086  002896  52E5               	movf	postdec1,f,c
  4087  002898  52E5               	movf	postdec1,f,c
  4088  00289A  52E5               	movf	postdec1,f,c
  4089  00289C  52E5               	movf	postdec1,f,c
  4090  00289E  0012               	return		;funcret
  4091  0028A0                     __end_of_strlen:
  4092                           	callstack 0
  4093                           
  4094 ;; *************** function _fputs *****************
  4095 ;; Defined at:
  4096 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;  s               2  [STACK] PTR const unsigned char 
  4099 ;;		 -> dbuf(32), 
  4100 ;;  fp              2  [STACK] PTR struct _IO_FILE
  4101 ;;		 -> NULL(0), f(6), 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  i               2  [STACK] int 
  4104 ;;  c               1  [STACK] unsigned char 
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  2  [STACK] int 
  4107 ;; Registers used:
  4108 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4118 ;;Total ram usage:        0 bytes
  4119 ;; Hardware stack levels used: 1
  4120 ;; Hardware stack levels required when called: 8
  4121 ;; This function calls:
  4122 ;;		_fputc
  4123 ;; This function is called by:
  4124 ;;		_pad
  4125 ;; This function uses a reentrant model
  4126 ;;
  4127                           
  4128                           	psect	text22
  4129  002792                     __ptext22:
  4130                           	callstack 0
  4131  002792                     _fputs:
  4132                           	callstack 0
  4133                           
  4134                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4135  002792  52E6               	movf	postinc1,f,c
  4136  002794  52E6               	movf	postinc1,f,c
  4137  002796  52E6               	movf	postinc1,f,c
  4138  002798                     
  4139                           ;stkvar	_i @ sp[(-3)+0]
  4140  002798  0EFD               	movlw	-3
  4141  00279A  6AE3               	clrf	plusw1,c
  4142  00279C  0EFE               	movlw	-2
  4143  00279E  6AE3               	clrf	plusw1,c
  4144  0027A0  EFED  F013         	goto	l1818
  4145  0027A4                     l1814:
  4146                           
  4147                           ;stkvar	_fp @ sp[(-3)+-4]
  4148  0027A4  0EF9               	movlw	-7
  4149  0027A6  CFE3 FFE6          	movff	plusw1,postinc1
  4150  0027AA  CFE3 FFE6          	movff	plusw1,postinc1
  4151                           
  4152                           ;stkvar	_c @ sp[(-5)+2]
  4153  0027AE  0EFD               	movlw	-3
  4154  0027B0  50E3               	movf	plusw1,w,c
  4155  0027B2  6EE6               	movwf	postinc1,c
  4156  0027B4  0E00               	movlw	0
  4157  0027B6  6EE6               	movwf	postinc1,c
  4158  0027B8  EC3A  F00E         	call	_fputc	;wreg free
  4159  0027BC                     
  4160                           ;stkvar	_i @ sp[(-3)+0]
  4161  0027BC  0EFD               	movlw	-3
  4162  0027BE  50E3               	movf	plusw1,w,c
  4163  0027C0  0F01               	addlw	1
  4164  0027C2  6E01               	movwf	btemp^0,c
  4165  0027C4  0EFD               	movlw	-3
  4166  0027C6  C001  FFE3         	movff	btemp,plusw1
  4167  0027CA  6A01               	clrf	btemp^0,c
  4168  0027CC  0EFE               	movlw	-2
  4169  0027CE  50E3               	movf	plusw1,w,c
  4170  0027D0  2001               	addwfc	btemp^0,w,c
  4171  0027D2  6E01               	movwf	btemp^0,c
  4172  0027D4  0EFE               	movlw	-2
  4173  0027D6  C001  FFE3         	movff	btemp,plusw1
  4174  0027DA                     l1818:
  4175                           
  4176                           ;stkvar	_i @ sp[(-3)+0]
  4177  0027DA  0EFD               	movlw	-3
  4178  0027DC  CFE3 F00B          	movff	plusw1,btemp+10
  4179  0027E0  0EFE               	movlw	-2
  4180  0027E2  CFE3 F00C          	movff	plusw1,btemp+11
  4181                           
  4182                           ;stkvar	_s @ sp[(-3)+-2]
  4183  0027E6  0EFB               	movlw	-5
  4184  0027E8  CFE3 F009          	movff	plusw1,btemp+8
  4185  0027EC  0EFC               	movlw	-4
  4186  0027EE  CFE3 F00A          	movff	plusw1,btemp+9
  4187  0027F2  500B               	movf	(btemp+10)^0,w,c
  4188  0027F4  2409               	addwf	(btemp+8)^0,w,c
  4189  0027F6  6ED9               	movwf	fsr2l,c
  4190  0027F8  500C               	movf	(btemp+11)^0,w,c
  4191  0027FA  200A               	addwfc	(btemp+9)^0,w,c
  4192  0027FC  6EDA               	movwf	fsr2h,c
  4193  0027FE  50DF               	movf	indf2,w,c
  4194  002800  6E0C               	movwf	(btemp+11)^0,c
  4195                           
  4196                           ;stkvar	_c @ sp[(-3)+2]
  4197  002802  0EFF               	movlw	-1
  4198  002804  C00C  FFE3         	movff	btemp+11,plusw1
  4199  002808  0EFF               	movlw	-1
  4200  00280A  50E3               	movf	plusw1,w,c
  4201  00280C  A4D8               	btfss	status,2,c
  4202  00280E  EF0B  F014         	goto	u1021
  4203  002812  EF0D  F014         	goto	u1020
  4204  002816                     u1021:
  4205  002816  EFD2  F013         	goto	l1814
  4206  00281A                     u1020:
  4207  00281A                     
  4208                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  4209  00281A  0EF9               	movlw	249
  4210  00281C  26E1               	addwf	fsr1l,f,c
  4211  00281E  0EFF               	movlw	255
  4212  002820  22E2               	addwfc	fsr1h,f,c
  4213  002822  0012               	return		;funcret
  4214  002824                     __end_of_fputs:
  4215                           	callstack 0
  4216                           
  4217 ;; *************** function _fputc *****************
  4218 ;; Defined at:
  4219 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;  c               2  [STACK] int 
  4222 ;;  fp              2  [STACK] PTR struct _IO_FILE
  4223 ;;		 -> NULL(0), f(6), 
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;		None
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  2  [STACK] int 
  4228 ;; Registers used:
  4229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/F
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4239 ;;Total ram usage:        0 bytes
  4240 ;; Hardware stack levels used: 1
  4241 ;; Hardware stack levels required when called: 7
  4242 ;; This function calls:
  4243 ;;		_putch
  4244 ;; This function is called by:
  4245 ;;		_pad
  4246 ;;		_vfpfcnvrt
  4247 ;;		_fputs
  4248 ;; This function uses a reentrant model
  4249 ;;
  4250                           
  4251                           	psect	text23
  4252  001C74                     __ptext23:
  4253                           	callstack 0
  4254  001C74                     _fputc:
  4255                           	callstack 0
  4256  001C74                     
  4257                           ;stkvar	_fp @ sp[(0)+-4]
  4258  001C74  0EFC               	movlw	-4
  4259  001C76  CFE3 F001          	movff	plusw1,btemp
  4260  001C7A  0EFD               	movlw	-3
  4261  001C7C  50E3               	movf	plusw1,w,c
  4262  001C7E  1001               	iorwf	btemp^0,w,c
  4263  001C80  B4D8               	btfsc	status,2,c
  4264  001C82  EF45  F00E         	goto	u981
  4265  001C86  EF47  F00E         	goto	u980
  4266  001C8A                     u981:
  4267  001C8A  EF54  F00E         	goto	l1800
  4268  001C8E                     u980:
  4269  001C8E                     
  4270                           ;stkvar	_fp @ sp[(0)+-4]
  4271  001C8E  0EFC               	movlw	-4
  4272  001C90  CFE3 F001          	movff	plusw1,btemp
  4273  001C94  0EFD               	movlw	-3
  4274  001C96  50E3               	movf	plusw1,w,c
  4275  001C98  1001               	iorwf	btemp^0,w,c
  4276  001C9A  A4D8               	btfss	status,2,c
  4277  001C9C  EF52  F00E         	goto	u991
  4278  001CA0  EF54  F00E         	goto	u990
  4279  001CA4                     u991:
  4280  001CA4  EF5B  F00E         	goto	l1802
  4281  001CA8                     u990:
  4282  001CA8                     l1800:
  4283                           
  4284                           ;stkvar	_c @ sp[(0)+-2]
  4285  001CA8  0EFE               	movlw	-2
  4286  001CAA  50E3               	movf	plusw1,w,c
  4287  001CAC  6EE6               	movwf	postinc1,c
  4288  001CAE  ECEE  F015         	call	_putch	;wreg free
  4289  001CB2  EFC9  F00E         	goto	l1095
  4290  001CB6                     l1802:
  4291                           
  4292                           ;stkvar	_fp @ sp[(0)+-4]
  4293  001CB6  0EFC               	movlw	-4
  4294  001CB8  CFE3 F00B          	movff	plusw1,btemp+10
  4295  001CBC  0EFD               	movlw	-3
  4296  001CBE  CFE3 F00C          	movff	plusw1,btemp+11
  4297  001CC2  0E04               	movlw	4
  4298  001CC4  240B               	addwf	(btemp+10)^0,w,c
  4299  001CC6  6ED9               	movwf	fsr2l,c
  4300  001CC8  0E00               	movlw	0
  4301  001CCA  200C               	addwfc	(btemp+11)^0,w,c
  4302  001CCC  6EDA               	movwf	fsr2h,c
  4303  001CCE  50DE               	movf	postinc2,w,c
  4304  001CD0  10DE               	iorwf	postinc2,w,c
  4305  001CD2  B4D8               	btfsc	status,2,c
  4306  001CD4  EF6E  F00E         	goto	u1001
  4307  001CD8  EF70  F00E         	goto	u1000
  4308  001CDC                     u1001:
  4309  001CDC  EF97  F00E         	goto	l1806
  4310  001CE0                     u1000:
  4311  001CE0                     
  4312                           ;stkvar	_fp @ sp[(0)+-4]
  4313  001CE0  0EFC               	movlw	-4
  4314  001CE2  CFE3 F00B          	movff	plusw1,btemp+10
  4315  001CE6  0EFD               	movlw	-3
  4316  001CE8  CFE3 F00C          	movff	plusw1,btemp+11
  4317  001CEC  0E04               	movlw	4
  4318  001CEE  240B               	addwf	(btemp+10)^0,w,c
  4319  001CF0  6ED9               	movwf	fsr2l,c
  4320  001CF2  0E00               	movlw	0
  4321  001CF4  200C               	addwfc	(btemp+11)^0,w,c
  4322  001CF6  6EDA               	movwf	fsr2h,c
  4323                           
  4324                           ;stkvar	_fp @ sp[(0)+-4]
  4325  001CF8  0EFC               	movlw	-4
  4326  001CFA  CFE3 F00B          	movff	plusw1,btemp+10
  4327  001CFE  0EFD               	movlw	-3
  4328  001D00  CFE3 F00C          	movff	plusw1,btemp+11
  4329  001D04  0E02               	movlw	2
  4330  001D06  240B               	addwf	(btemp+10)^0,w,c
  4331  001D08  6EE9               	movwf	fsr0l,c
  4332  001D0A  0E00               	movlw	0
  4333  001D0C  200C               	addwfc	(btemp+11)^0,w,c
  4334  001D0E  6EEA               	movwf	fsr0h,c
  4335  001D10  50DE               	movf	postinc2,w,c
  4336  001D12  5CEE               	subwf	postinc0,w,c
  4337  001D14  50EE               	movf	postinc0,w,c
  4338  001D16  0A80               	xorlw	128
  4339  001D18  6E01               	movwf	btemp^0,c
  4340  001D1A  50DE               	movf	postinc2,w,c
  4341  001D1C  0A80               	xorlw	128
  4342  001D1E  5801               	subwfb	btemp^0,w,c
  4343  001D20  B0D8               	btfsc	status,0,c
  4344  001D22  EF95  F00E         	goto	u1011
  4345  001D26  EF97  F00E         	goto	u1010
  4346  001D2A                     u1011:
  4347  001D2A  EFC9  F00E         	goto	l1095
  4348  001D2E                     u1010:
  4349  001D2E                     l1806:
  4350                           
  4351                           ;stkvar	_c @ sp[(0)+-2]
  4352                           ;stkvar	_fp @ sp[(0)+-4]
  4353  001D2E  0EFC               	movlw	-4
  4354  001D30  CFE3 F00B          	movff	plusw1,btemp+10
  4355  001D34  0EFD               	movlw	-3
  4356  001D36  CFE3 F00C          	movff	plusw1,btemp+11
  4357  001D3A  0E02               	movlw	2
  4358  001D3C  240B               	addwf	(btemp+10)^0,w,c
  4359  001D3E  6ED9               	movwf	fsr2l,c
  4360  001D40  0E00               	movlw	0
  4361  001D42  200C               	addwfc	(btemp+11)^0,w,c
  4362  001D44  6EDA               	movwf	fsr2h,c
  4363  001D46  CFDE F00B          	movff	postinc2,btemp+10
  4364  001D4A  CFDD F00C          	movff	postdec2,btemp+11
  4365                           
  4366                           ;stkvar	_fp @ sp[(0)+-4]
  4367  001D4E  0EFC               	movlw	-4
  4368  001D50  CFE3 FFD9          	movff	plusw1,fsr2l
  4369  001D54  0EFD               	movlw	-3
  4370  001D56  CFE3 FFDA          	movff	plusw1,fsr2h
  4371  001D5A  CFDE F009          	movff	postinc2,btemp+8
  4372  001D5E  CFDD F00A          	movff	postdec2,btemp+9
  4373  001D62  500B               	movf	(btemp+10)^0,w,c
  4374  001D64  2409               	addwf	(btemp+8)^0,w,c
  4375  001D66  6ED9               	movwf	fsr2l,c
  4376  001D68  500C               	movf	(btemp+11)^0,w,c
  4377  001D6A  200A               	addwfc	(btemp+9)^0,w,c
  4378  001D6C  6EDA               	movwf	fsr2h,c
  4379  001D6E  0EFE               	movlw	-2
  4380  001D70  CFE3 FFDF          	movff	plusw1,indf2
  4381  001D74                     
  4382                           ;stkvar	_fp @ sp[(0)+-4]
  4383  001D74  0EFC               	movlw	-4
  4384  001D76  CFE3 F00B          	movff	plusw1,btemp+10
  4385  001D7A  0EFD               	movlw	-3
  4386  001D7C  CFE3 F00C          	movff	plusw1,btemp+11
  4387  001D80  0E02               	movlw	2
  4388  001D82  240B               	addwf	(btemp+10)^0,w,c
  4389  001D84  6ED9               	movwf	fsr2l,c
  4390  001D86  0E00               	movlw	0
  4391  001D88  200C               	addwfc	(btemp+11)^0,w,c
  4392  001D8A  6EDA               	movwf	fsr2h,c
  4393  001D8C  2ADE               	incf	postinc2,f,c
  4394  001D8E  0E00               	movlw	0
  4395  001D90  22DD               	addwfc	postdec2,f,c
  4396  001D92                     l1095:
  4397                           
  4398                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  4399  001D92  52E5               	movf	postdec1,f,c
  4400  001D94  52E5               	movf	postdec1,f,c
  4401  001D96  52E5               	movf	postdec1,f,c
  4402  001D98  52E5               	movf	postdec1,f,c
  4403  001D9A  0012               	return		;funcret
  4404  001D9C                     __end_of_fputc:
  4405                           	callstack 0
  4406                           
  4407 ;; *************** function _putch *****************
  4408 ;; Defined at:
  4409 ;;		line 19 in file "uart.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;  data            1  [STACK] unsigned char 
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;		None
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  1  [STACK] void 
  4416 ;; Registers used:
  4417 ;;		fsr1l, fsr1h
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/F
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4427 ;;Total ram usage:        0 bytes
  4428 ;; Hardware stack levels used: 1
  4429 ;; Hardware stack levels required when called: 6
  4430 ;; This function calls:
  4431 ;;		Nothing
  4432 ;; This function is called by:
  4433 ;;		_fputc
  4434 ;; This function uses a reentrant model
  4435 ;;
  4436                           
  4437                           	psect	text24
  4438  002BDC                     __ptext24:
  4439                           	callstack 0
  4440  002BDC                     _putch:
  4441                           	callstack 0
  4442  002BDC                     l138:
  4443  002BDC  A89E               	btfss	3998,4,c	;volatile
  4444  002BDE  EFF3  F015         	goto	u971
  4445  002BE2  EFF5  F015         	goto	u970
  4446  002BE6                     u971:
  4447  002BE6  EFEE  F015         	goto	l138
  4448  002BEA                     u970:
  4449  002BEA                     
  4450                           ;uart.c: 21:     TXREG1 = data;
  4451                           ;stkvar	_data @ sp[(0)+-1]
  4452  002BEA  0EFF               	movlw	-1
  4453  002BEC  CFE3 FFAD          	movff	plusw1,4013	;volatile
  4454  002BF0                     
  4455                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
  4456  002BF0  52E5               	movf	postdec1,f,c
  4457  002BF2  0012               	return		;funcret
  4458  002BF4                     __end_of_putch:
  4459                           	callstack 0
  4460                           
  4461 ;; *************** function _abs *****************
  4462 ;; Defined at:
  4463 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;  a               2  [STACK] int 
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;		None
  4468 ;; Return value:  Size  Location     Type
  4469 ;;                  2  [STACK] int 
  4470 ;; Registers used:
  4471 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4481 ;;Total ram usage:        0 bytes
  4482 ;; Hardware stack levels used: 1
  4483 ;; Hardware stack levels required when called: 6
  4484 ;; This function calls:
  4485 ;;		Nothing
  4486 ;; This function is called by:
  4487 ;;		_dtoa
  4488 ;; This function uses a reentrant model
  4489 ;;
  4490                           
  4491                           	psect	text25
  4492  002A02                     __ptext25:
  4493                           	callstack 0
  4494  002A02                     _abs:
  4495                           	callstack 0
  4496  002A02                     
  4497                           ;stkvar	_a @ sp[(0)+-2]
  4498  002A02  0EFF               	movlw	-1
  4499  002A04  BEE3               	btfsc	plusw1,7,c
  4500  002A06  EF11  F015         	goto	u1310
  4501  002A0A  0EFF               	movlw	-1
  4502  002A0C  50E3               	movf	plusw1,w,c
  4503  002A0E  E107               	bnz	u1311
  4504  002A10  0EFE               	movlw	-2
  4505  002A12  04E3               	decf	plusw1,w,c
  4506  002A14  B0D8               	btfsc	status,0,c
  4507  002A16  EF0F  F015         	goto	u1311
  4508  002A1A  EF11  F015         	goto	u1310
  4509  002A1E                     u1311:
  4510  002A1E  EF1E  F015         	goto	l1936
  4511  002A22                     u1310:
  4512  002A22                     
  4513                           ;stkvar	_a @ sp[(0)+-2]
  4514  002A22  0EFE               	movlw	-2
  4515  002A24  CFE3 F001          	movff	plusw1,btemp
  4516  002A28  1E01               	comf	btemp^0,f,c
  4517  002A2A  0EFF               	movlw	-1
  4518  002A2C  CFE3 F002          	movff	plusw1,btemp+1
  4519  002A30  1E02               	comf	(btemp+1)^0,f,c
  4520  002A32  2A01               	incf	btemp^0,f,c
  4521  002A34  B4D8               	btfsc	status,2,c
  4522  002A36  2A02               	incf	(btemp+1)^0,f,c
  4523  002A38  EF24  F015         	goto	l1083
  4524  002A3C                     l1936:
  4525                           
  4526                           ;stkvar	_a @ sp[(0)+-2]
  4527  002A3C  0EFE               	movlw	-2
  4528  002A3E  CFE3 F001          	movff	plusw1,btemp
  4529  002A42  0EFF               	movlw	-1
  4530  002A44  CFE3 F002          	movff	plusw1,btemp+1
  4531  002A48                     l1083:
  4532                           
  4533                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
  4534  002A48  52E5               	movf	postdec1,f,c
  4535  002A4A  52E5               	movf	postdec1,f,c
  4536  002A4C  0012               	return		;funcret
  4537  002A4E                     __end_of_abs:
  4538                           	callstack 0
  4539                           
  4540 ;; *************** function ___aomod *****************
  4541 ;; Defined at:
  4542 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  dividend        8  [STACK] long long 
  4545 ;;  divisor         8  [STACK] long long 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;  sign            1  [STACK] unsigned char 
  4548 ;;  counter         1  [STACK] unsigned char 
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  8  [STACK] long long 
  4551 ;; Registers used:
  4552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4562 ;;Total ram usage:        0 bytes
  4563 ;; Hardware stack levels used: 1
  4564 ;; Hardware stack levels required when called: 6
  4565 ;; This function calls:
  4566 ;;		Nothing
  4567 ;; This function is called by:
  4568 ;;		_dtoa
  4569 ;; This function uses a reentrant model
  4570 ;;
  4571                           
  4572                           	psect	text26
  4573  0017D6                     __ptext26:
  4574                           	callstack 0
  4575  0017D6                     ___aomod:
  4576                           	callstack 0
  4577                           
  4578                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
  4579  0017D6  52E6               	movf	postinc1,f,c
  4580  0017D8  52E6               	movf	postinc1,f,c
  4581  0017DA                     
  4582                           ;stkvar	_sign @ sp[(-2)+0]
  4583  0017DA  0EFE               	movlw	-2
  4584  0017DC  6AE3               	clrf	plusw1,c
  4585  0017DE                     
  4586                           ;stkvar	_dividend @ sp[(-2)+-8]
  4587  0017DE  0EFD               	movlw	-3
  4588  0017E0  BEE3               	btfsc	plusw1,7,c
  4589  0017E2  EFF7  F00B         	goto	u1160
  4590  0017E6  EFF5  F00B         	goto	u1161
  4591  0017EA                     u1161:
  4592  0017EA  EF1F  F00C         	goto	l1882
  4593  0017EE                     u1160:
  4594  0017EE                     
  4595                           ;stkvar	_dividend @ sp[(-2)+-8]
  4596                           ;stkvar	_dividend @ sp[(-2)+-8]
  4597  0017EE  0EF6               	movlw	-10
  4598  0017F0  6CE3               	negf	plusw1,c
  4599  0017F2  0EF7               	movlw	-9
  4600  0017F4  1EE3               	comf	plusw1,f,c
  4601  0017F6  0EF8               	movlw	-8
  4602  0017F8  1EE3               	comf	plusw1,f,c
  4603  0017FA  0EF9               	movlw	-7
  4604  0017FC  1EE3               	comf	plusw1,f,c
  4605  0017FE  0EFA               	movlw	-6
  4606  001800  1EE3               	comf	plusw1,f,c
  4607  001802  0EFB               	movlw	-5
  4608  001804  1EE3               	comf	plusw1,f,c
  4609  001806  0EFC               	movlw	-4
  4610  001808  1EE3               	comf	plusw1,f,c
  4611  00180A  0EFD               	movlw	-3
  4612  00180C  1EE3               	comf	plusw1,f,c
  4613  00180E  E314               	bnc	u1170
  4614  001810  0EF7               	movlw	-9
  4615  001812  2AE3               	incf	plusw1,f,c
  4616  001814  E311               	bnc	u1170
  4617  001816  0EF8               	movlw	-8
  4618  001818  2AE3               	incf	plusw1,f,c
  4619  00181A  E30E               	bnc	u1170
  4620  00181C  0EF9               	movlw	-7
  4621  00181E  2AE3               	incf	plusw1,f,c
  4622  001820  E30B               	bnc	u1170
  4623  001822  0EFA               	movlw	-6
  4624  001824  2AE3               	incf	plusw1,f,c
  4625  001826  E308               	bnc	u1170
  4626  001828  0EFB               	movlw	-5
  4627  00182A  2AE3               	incf	plusw1,f,c
  4628  00182C  E305               	bnc	u1170
  4629  00182E  0EFC               	movlw	-4
  4630  001830  2AE3               	incf	plusw1,f,c
  4631  001832  E302               	bnc	u1170
  4632  001834  0EFD               	movlw	-3
  4633  001836  2AE3               	incf	plusw1,f,c
  4634  001838                     u1170:
  4635  001838                     
  4636                           ;stkvar	_sign @ sp[(-2)+0]
  4637  001838  0EFE               	movlw	-2
  4638  00183A  6AE3               	clrf	plusw1,c
  4639  00183C  2AE3               	incf	plusw1,f,c
  4640  00183E                     l1882:
  4641                           
  4642                           ;stkvar	_divisor @ sp[(-2)+-16]
  4643  00183E  0EF5               	movlw	-11
  4644  001840  BEE3               	btfsc	plusw1,7,c
  4645  001842  EF27  F00C         	goto	u1180
  4646  001846  EF25  F00C         	goto	u1181
  4647  00184A                     u1181:
  4648  00184A  EF4C  F00C         	goto	l1886
  4649  00184E                     u1180:
  4650  00184E                     
  4651                           ;stkvar	_divisor @ sp[(-2)+-16]
  4652                           ;stkvar	_divisor @ sp[(-2)+-16]
  4653  00184E  0EEE               	movlw	-18
  4654  001850  6CE3               	negf	plusw1,c
  4655  001852  0EEF               	movlw	-17
  4656  001854  1EE3               	comf	plusw1,f,c
  4657  001856  0EF0               	movlw	-16
  4658  001858  1EE3               	comf	plusw1,f,c
  4659  00185A  0EF1               	movlw	-15
  4660  00185C  1EE3               	comf	plusw1,f,c
  4661  00185E  0EF2               	movlw	-14
  4662  001860  1EE3               	comf	plusw1,f,c
  4663  001862  0EF3               	movlw	-13
  4664  001864  1EE3               	comf	plusw1,f,c
  4665  001866  0EF4               	movlw	-12
  4666  001868  1EE3               	comf	plusw1,f,c
  4667  00186A  0EF5               	movlw	-11
  4668  00186C  1EE3               	comf	plusw1,f,c
  4669  00186E  E314               	bnc	u1190
  4670  001870  0EEF               	movlw	-17
  4671  001872  2AE3               	incf	plusw1,f,c
  4672  001874  E311               	bnc	u1190
  4673  001876  0EF0               	movlw	-16
  4674  001878  2AE3               	incf	plusw1,f,c
  4675  00187A  E30E               	bnc	u1190
  4676  00187C  0EF1               	movlw	-15
  4677  00187E  2AE3               	incf	plusw1,f,c
  4678  001880  E30B               	bnc	u1190
  4679  001882  0EF2               	movlw	-14
  4680  001884  2AE3               	incf	plusw1,f,c
  4681  001886  E308               	bnc	u1190
  4682  001888  0EF3               	movlw	-13
  4683  00188A  2AE3               	incf	plusw1,f,c
  4684  00188C  E305               	bnc	u1190
  4685  00188E  0EF4               	movlw	-12
  4686  001890  2AE3               	incf	plusw1,f,c
  4687  001892  E302               	bnc	u1190
  4688  001894  0EF5               	movlw	-11
  4689  001896  2AE3               	incf	plusw1,f,c
  4690  001898                     u1190:
  4691  001898                     l1886:
  4692                           
  4693                           ;stkvar	_divisor @ sp[(-2)+-16]
  4694  001898  0EEE               	movlw	-18
  4695  00189A  50E3               	movf	plusw1,w,c
  4696  00189C  E11B               	bnz	u1200
  4697  00189E  0EEF               	movlw	-17
  4698  0018A0  50E3               	movf	plusw1,w,c
  4699  0018A2  E118               	bnz	u1200
  4700  0018A4  0EF0               	movlw	-16
  4701  0018A6  50E3               	movf	plusw1,w,c
  4702  0018A8  E115               	bnz	u1200
  4703  0018AA  0EF1               	movlw	-15
  4704  0018AC  50E3               	movf	plusw1,w,c
  4705  0018AE  E112               	bnz	u1200
  4706  0018B0  0EF2               	movlw	-14
  4707  0018B2  50E3               	movf	plusw1,w,c
  4708  0018B4  E10F               	bnz	u1200
  4709  0018B6  0EF3               	movlw	-13
  4710  0018B8  50E3               	movf	plusw1,w,c
  4711  0018BA  E10C               	bnz	u1200
  4712  0018BC  0EF4               	movlw	-12
  4713  0018BE  50E3               	movf	plusw1,w,c
  4714  0018C0  E109               	bnz	u1200
  4715  0018C2  0EF5               	movlw	-11
  4716  0018C4  50E3               	movf	plusw1,w,c
  4717  0018C6  B4D8               	btfsc	status,2,c
  4718  0018C8  EF68  F00C         	goto	u1201
  4719  0018CC  EF6A  F00C         	goto	u1200
  4720  0018D0                     u1201:
  4721  0018D0  EFEF  F00C         	goto	l1902
  4722  0018D4                     u1200:
  4723  0018D4                     
  4724                           ;stkvar	_counter @ sp[(-2)+1]
  4725  0018D4  0EFF               	movlw	-1
  4726  0018D6  6AE3               	clrf	plusw1,c
  4727  0018D8  2AE3               	incf	plusw1,f,c
  4728  0018DA  EF82  F00C         	goto	l1892
  4729  0018DE                     l1890:
  4730                           
  4731                           ;stkvar	_divisor @ sp[(-2)+-16]
  4732  0018DE  90D8               	bcf	status,0,c
  4733  0018E0  0EEE               	movlw	-18
  4734  0018E2  36E3               	rlcf	plusw1,f,c
  4735  0018E4  0EEF               	movlw	-17
  4736  0018E6  36E3               	rlcf	plusw1,f,c
  4737  0018E8  0EF0               	movlw	-16
  4738  0018EA  36E3               	rlcf	plusw1,f,c
  4739  0018EC  0EF1               	movlw	-15
  4740  0018EE  36E3               	rlcf	plusw1,f,c
  4741  0018F0  0EF2               	movlw	-14
  4742  0018F2  36E3               	rlcf	plusw1,f,c
  4743  0018F4  0EF3               	movlw	-13
  4744  0018F6  36E3               	rlcf	plusw1,f,c
  4745  0018F8  0EF4               	movlw	-12
  4746  0018FA  36E3               	rlcf	plusw1,f,c
  4747  0018FC  0EF5               	movlw	-11
  4748  0018FE  36E3               	rlcf	plusw1,f,c
  4749                           
  4750                           ;stkvar	_counter @ sp[(-2)+1]
  4751  001900  0EFF               	movlw	-1
  4752  001902  2AE3               	incf	plusw1,f,c
  4753  001904                     l1892:
  4754                           
  4755                           ;stkvar	_divisor @ sp[(-2)+-16]
  4756  001904  0EF5               	movlw	-11
  4757  001906  AEE3               	btfss	plusw1,7,c
  4758  001908  EF88  F00C         	goto	u1211
  4759  00190C  EF8A  F00C         	goto	u1210
  4760  001910                     u1211:
  4761  001910  EF6F  F00C         	goto	l1890
  4762  001914                     u1210:
  4763  001914                     l1894:
  4764                           
  4765                           ;stkvar	_divisor @ sp[(-2)+-16]
  4766                           ;stkvar	_dividend @ sp[(-2)+-8]
  4767  001914  50E1               	movf	fsr1l,w,c
  4768  001916  0FF6               	addlw	-10
  4769  001918  6ED9               	movwf	fsr2l,c
  4770  00191A  50E2               	movf	fsr1h,w,c
  4771  00191C  6EDA               	movwf	fsr2h,c
  4772  00191E  0EFF               	movlw	255
  4773  001920  22DA               	addwfc	fsr2h,f,c
  4774  001922  0EEE               	movlw	-18
  4775  001924  50E3               	movf	plusw1,w,c
  4776  001926  5CDE               	subwf	postinc2,w,c
  4777  001928  0EEF               	movlw	-17
  4778  00192A  50E3               	movf	plusw1,w,c
  4779  00192C  58DE               	subwfb	postinc2,w,c
  4780  00192E  0EF0               	movlw	-16
  4781  001930  50E3               	movf	plusw1,w,c
  4782  001932  58DE               	subwfb	postinc2,w,c
  4783  001934  0EF1               	movlw	-15
  4784  001936  50E3               	movf	plusw1,w,c
  4785  001938  58DE               	subwfb	postinc2,w,c
  4786  00193A  0EF2               	movlw	-14
  4787  00193C  50E3               	movf	plusw1,w,c
  4788  00193E  58DE               	subwfb	postinc2,w,c
  4789  001940  0EF3               	movlw	-13
  4790  001942  50E3               	movf	plusw1,w,c
  4791  001944  58DE               	subwfb	postinc2,w,c
  4792  001946  0EF4               	movlw	-12
  4793  001948  50E3               	movf	plusw1,w,c
  4794  00194A  58DE               	subwfb	postinc2,w,c
  4795  00194C  0EF5               	movlw	-11
  4796  00194E  50E3               	movf	plusw1,w,c
  4797  001950  58DE               	subwfb	postinc2,w,c
  4798  001952  A0D8               	btfss	status,0,c
  4799  001954  EFAE  F00C         	goto	u1221
  4800  001958  EFB0  F00C         	goto	u1220
  4801  00195C                     u1221:
  4802  00195C  EFCF  F00C         	goto	l1898
  4803  001960                     u1220:
  4804  001960                     
  4805                           ;stkvar	_divisor @ sp[(-2)+-16]
  4806                           ;stkvar	_dividend @ sp[(-2)+-8]
  4807  001960  50E1               	movf	fsr1l,w,c
  4808  001962  0FF6               	addlw	-10
  4809  001964  6ED9               	movwf	fsr2l,c
  4810  001966  50E2               	movf	fsr1h,w,c
  4811  001968  6EDA               	movwf	fsr2h,c
  4812  00196A  0EFF               	movlw	255
  4813  00196C  22DA               	addwfc	fsr2h,f,c
  4814  00196E  0EEE               	movlw	-18
  4815  001970  50E3               	movf	plusw1,w,c
  4816  001972  5EDE               	subwf	postinc2,f,c
  4817  001974  0EEF               	movlw	-17
  4818  001976  50E3               	movf	plusw1,w,c
  4819  001978  5ADE               	subwfb	postinc2,f,c
  4820  00197A  0EF0               	movlw	-16
  4821  00197C  50E3               	movf	plusw1,w,c
  4822  00197E  5ADE               	subwfb	postinc2,f,c
  4823  001980  0EF1               	movlw	-15
  4824  001982  50E3               	movf	plusw1,w,c
  4825  001984  5ADE               	subwfb	postinc2,f,c
  4826  001986  0EF2               	movlw	-14
  4827  001988  50E3               	movf	plusw1,w,c
  4828  00198A  5ADE               	subwfb	postinc2,f,c
  4829  00198C  0EF3               	movlw	-13
  4830  00198E  50E3               	movf	plusw1,w,c
  4831  001990  5ADE               	subwfb	postinc2,f,c
  4832  001992  0EF4               	movlw	-12
  4833  001994  50E3               	movf	plusw1,w,c
  4834  001996  5ADE               	subwfb	postinc2,f,c
  4835  001998  0EF5               	movlw	-11
  4836  00199A  50E3               	movf	plusw1,w,c
  4837  00199C  5ADE               	subwfb	postinc2,f,c
  4838  00199E                     l1898:
  4839                           
  4840                           ;stkvar	_divisor @ sp[(-2)+-16]
  4841  00199E  90D8               	bcf	status,0,c
  4842  0019A0  0EF5               	movlw	-11
  4843  0019A2  32E3               	rrcf	plusw1,f,c
  4844  0019A4  0EF4               	movlw	-12
  4845  0019A6  32E3               	rrcf	plusw1,f,c
  4846  0019A8  0EF3               	movlw	-13
  4847  0019AA  32E3               	rrcf	plusw1,f,c
  4848  0019AC  0EF2               	movlw	-14
  4849  0019AE  32E3               	rrcf	plusw1,f,c
  4850  0019B0  0EF1               	movlw	-15
  4851  0019B2  32E3               	rrcf	plusw1,f,c
  4852  0019B4  0EF0               	movlw	-16
  4853  0019B6  32E3               	rrcf	plusw1,f,c
  4854  0019B8  0EEF               	movlw	-17
  4855  0019BA  32E3               	rrcf	plusw1,f,c
  4856  0019BC  0EEE               	movlw	-18
  4857  0019BE  32E3               	rrcf	plusw1,f,c
  4858  0019C0                     
  4859                           ;stkvar	_counter @ sp[(-2)+1]
  4860  0019C0  0EFF               	movlw	-1
  4861  0019C2  50E3               	movf	plusw1,w,c
  4862  0019C4  6E01               	movwf	btemp^0,c
  4863  0019C6  0E01               	movlw	1
  4864  0019C8  5E01               	subwf	btemp^0,f,c
  4865  0019CA  0EFF               	movlw	-1
  4866  0019CC  C001  FFE3         	movff	btemp,plusw1
  4867  0019D0  A4D8               	btfss	status,2,c
  4868  0019D2  EFED  F00C         	goto	u1231
  4869  0019D6  EFEF  F00C         	goto	u1230
  4870  0019DA                     u1231:
  4871  0019DA  EF8A  F00C         	goto	l1894
  4872  0019DE                     u1230:
  4873  0019DE                     l1902:
  4874                           
  4875                           ;stkvar	_sign @ sp[(-2)+0]
  4876  0019DE  0EFE               	movlw	-2
  4877  0019E0  50E3               	movf	plusw1,w,c
  4878  0019E2  B4D8               	btfsc	status,2,c
  4879  0019E4  EFF6  F00C         	goto	u1241
  4880  0019E8  EFF8  F00C         	goto	u1240
  4881  0019EC                     u1241:
  4882  0019EC  EF1D  F00D         	goto	l1906
  4883  0019F0                     u1240:
  4884  0019F0                     
  4885                           ;stkvar	_dividend @ sp[(-2)+-8]
  4886                           ;stkvar	_dividend @ sp[(-2)+-8]
  4887  0019F0  0EF6               	movlw	-10
  4888  0019F2  6CE3               	negf	plusw1,c
  4889  0019F4  0EF7               	movlw	-9
  4890  0019F6  1EE3               	comf	plusw1,f,c
  4891  0019F8  0EF8               	movlw	-8
  4892  0019FA  1EE3               	comf	plusw1,f,c
  4893  0019FC  0EF9               	movlw	-7
  4894  0019FE  1EE3               	comf	plusw1,f,c
  4895  001A00  0EFA               	movlw	-6
  4896  001A02  1EE3               	comf	plusw1,f,c
  4897  001A04  0EFB               	movlw	-5
  4898  001A06  1EE3               	comf	plusw1,f,c
  4899  001A08  0EFC               	movlw	-4
  4900  001A0A  1EE3               	comf	plusw1,f,c
  4901  001A0C  0EFD               	movlw	-3
  4902  001A0E  1EE3               	comf	plusw1,f,c
  4903  001A10  E314               	bnc	u1250
  4904  001A12  0EF7               	movlw	-9
  4905  001A14  2AE3               	incf	plusw1,f,c
  4906  001A16  E311               	bnc	u1250
  4907  001A18  0EF8               	movlw	-8
  4908  001A1A  2AE3               	incf	plusw1,f,c
  4909  001A1C  E30E               	bnc	u1250
  4910  001A1E  0EF9               	movlw	-7
  4911  001A20  2AE3               	incf	plusw1,f,c
  4912  001A22  E30B               	bnc	u1250
  4913  001A24  0EFA               	movlw	-6
  4914  001A26  2AE3               	incf	plusw1,f,c
  4915  001A28  E308               	bnc	u1250
  4916  001A2A  0EFB               	movlw	-5
  4917  001A2C  2AE3               	incf	plusw1,f,c
  4918  001A2E  E305               	bnc	u1250
  4919  001A30  0EFC               	movlw	-4
  4920  001A32  2AE3               	incf	plusw1,f,c
  4921  001A34  E302               	bnc	u1250
  4922  001A36  0EFD               	movlw	-3
  4923  001A38  2AE3               	incf	plusw1,f,c
  4924  001A3A                     u1250:
  4925  001A3A                     l1906:
  4926                           
  4927                           ;stkvar	_dividend @ sp[(-2)+-8]
  4928  001A3A  0EF6               	movlw	246
  4929  001A3C  24E1               	addwf	fsr1l,w,c
  4930  001A3E  6ED9               	movwf	fsr2l,c
  4931  001A40  0EFF               	movlw	255
  4932  001A42  20E2               	addwfc	fsr1h,w,c
  4933  001A44  6EDA               	movwf	fsr2h,c
  4934                           
  4935                           ;stkvar	?___aomod @ sp[(-2)+-8]
  4936  001A46  0E08               	movlw	8
  4937  001A48  6E01               	movwf	btemp^0,c
  4938  001A4A  0EF6               	movlw	-10
  4939  001A4C                     us126999:
  4940  001A4C  CFDE FFE3          	movff	postinc2,plusw1
  4941  001A50  28E8               	incf	wreg,w,c
  4942  001A52  2E01               	decfsz	btemp^0,f,c
  4943  001A54  D7FB               	bra	us126999
  4944  001A56                     
  4945                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
  4946  001A56  52E5               	movf	postdec1,f,c
  4947  001A58  52E5               	movf	postdec1,f,c
  4948  001A5A  0012               	return		;funcret
  4949  001A5C                     __end_of___aomod:
  4950                           	callstack 0
  4951                           
  4952 ;; *************** function ___aodiv *****************
  4953 ;; Defined at:
  4954 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;  dividend        8  [STACK] long long 
  4957 ;;  divisor         8  [STACK] long long 
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;  quotient        8  [STACK] long long 
  4960 ;;  sign            1  [STACK] unsigned char 
  4961 ;;  counter         1  [STACK] unsigned char 
  4962 ;; Return value:  Size  Location     Type
  4963 ;;                  8  [STACK] long long 
  4964 ;; Registers used:
  4965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4975 ;;Total ram usage:        0 bytes
  4976 ;; Hardware stack levels used: 1
  4977 ;; Hardware stack levels required when called: 6
  4978 ;; This function calls:
  4979 ;;		Nothing
  4980 ;; This function is called by:
  4981 ;;		_dtoa
  4982 ;; This function uses a reentrant model
  4983 ;;
  4984                           
  4985                           	psect	text27
  4986  001510                     __ptext27:
  4987                           	callstack 0
  4988  001510                     ___aodiv:
  4989                           	callstack 0
  4990                           
  4991                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
  4992  001510  0E0A               	movlw	10
  4993  001512  26E1               	addwf	fsr1l,f,c
  4994  001514  0E00               	movlw	0
  4995  001516  22E2               	addwfc	fsr1h,f,c
  4996  001518                     
  4997                           ;stkvar	_sign @ sp[(-10)+8]
  4998  001518  0EFE               	movlw	-2
  4999  00151A  6AE3               	clrf	plusw1,c
  5000  00151C                     
  5001                           ;stkvar	_divisor @ sp[(-10)+-16]
  5002  00151C  0EED               	movlw	-19
  5003  00151E  BEE3               	btfsc	plusw1,7,c
  5004  001520  EF96  F00A         	goto	u1040
  5005  001524  EF94  F00A         	goto	u1041
  5006  001528                     u1041:
  5007  001528  EFBE  F00A         	goto	l1838
  5008  00152C                     u1040:
  5009  00152C                     
  5010                           ;stkvar	_divisor @ sp[(-10)+-16]
  5011                           ;stkvar	_divisor @ sp[(-10)+-16]
  5012  00152C  0EE6               	movlw	-26
  5013  00152E  6CE3               	negf	plusw1,c
  5014  001530  0EE7               	movlw	-25
  5015  001532  1EE3               	comf	plusw1,f,c
  5016  001534  0EE8               	movlw	-24
  5017  001536  1EE3               	comf	plusw1,f,c
  5018  001538  0EE9               	movlw	-23
  5019  00153A  1EE3               	comf	plusw1,f,c
  5020  00153C  0EEA               	movlw	-22
  5021  00153E  1EE3               	comf	plusw1,f,c
  5022  001540  0EEB               	movlw	-21
  5023  001542  1EE3               	comf	plusw1,f,c
  5024  001544  0EEC               	movlw	-20
  5025  001546  1EE3               	comf	plusw1,f,c
  5026  001548  0EED               	movlw	-19
  5027  00154A  1EE3               	comf	plusw1,f,c
  5028  00154C  E314               	bnc	u1050
  5029  00154E  0EE7               	movlw	-25
  5030  001550  2AE3               	incf	plusw1,f,c
  5031  001552  E311               	bnc	u1050
  5032  001554  0EE8               	movlw	-24
  5033  001556  2AE3               	incf	plusw1,f,c
  5034  001558  E30E               	bnc	u1050
  5035  00155A  0EE9               	movlw	-23
  5036  00155C  2AE3               	incf	plusw1,f,c
  5037  00155E  E30B               	bnc	u1050
  5038  001560  0EEA               	movlw	-22
  5039  001562  2AE3               	incf	plusw1,f,c
  5040  001564  E308               	bnc	u1050
  5041  001566  0EEB               	movlw	-21
  5042  001568  2AE3               	incf	plusw1,f,c
  5043  00156A  E305               	bnc	u1050
  5044  00156C  0EEC               	movlw	-20
  5045  00156E  2AE3               	incf	plusw1,f,c
  5046  001570  E302               	bnc	u1050
  5047  001572  0EED               	movlw	-19
  5048  001574  2AE3               	incf	plusw1,f,c
  5049  001576                     u1050:
  5050  001576                     
  5051                           ;stkvar	_sign @ sp[(-10)+8]
  5052  001576  0EFE               	movlw	-2
  5053  001578  6AE3               	clrf	plusw1,c
  5054  00157A  2AE3               	incf	plusw1,f,c
  5055  00157C                     l1838:
  5056                           
  5057                           ;stkvar	_dividend @ sp[(-10)+-8]
  5058  00157C  0EF5               	movlw	-11
  5059  00157E  BEE3               	btfsc	plusw1,7,c
  5060  001580  EFC6  F00A         	goto	u1060
  5061  001584  EFC4  F00A         	goto	u1061
  5062  001588                     u1061:
  5063  001588  EFED  F00A         	goto	l1844
  5064  00158C                     u1060:
  5065  00158C                     
  5066                           ;stkvar	_dividend @ sp[(-10)+-8]
  5067                           ;stkvar	_dividend @ sp[(-10)+-8]
  5068  00158C  0EEE               	movlw	-18
  5069  00158E  6CE3               	negf	plusw1,c
  5070  001590  0EEF               	movlw	-17
  5071  001592  1EE3               	comf	plusw1,f,c
  5072  001594  0EF0               	movlw	-16
  5073  001596  1EE3               	comf	plusw1,f,c
  5074  001598  0EF1               	movlw	-15
  5075  00159A  1EE3               	comf	plusw1,f,c
  5076  00159C  0EF2               	movlw	-14
  5077  00159E  1EE3               	comf	plusw1,f,c
  5078  0015A0  0EF3               	movlw	-13
  5079  0015A2  1EE3               	comf	plusw1,f,c
  5080  0015A4  0EF4               	movlw	-12
  5081  0015A6  1EE3               	comf	plusw1,f,c
  5082  0015A8  0EF5               	movlw	-11
  5083  0015AA  1EE3               	comf	plusw1,f,c
  5084  0015AC  E314               	bnc	u1070
  5085  0015AE  0EEF               	movlw	-17
  5086  0015B0  2AE3               	incf	plusw1,f,c
  5087  0015B2  E311               	bnc	u1070
  5088  0015B4  0EF0               	movlw	-16
  5089  0015B6  2AE3               	incf	plusw1,f,c
  5090  0015B8  E30E               	bnc	u1070
  5091  0015BA  0EF1               	movlw	-15
  5092  0015BC  2AE3               	incf	plusw1,f,c
  5093  0015BE  E30B               	bnc	u1070
  5094  0015C0  0EF2               	movlw	-14
  5095  0015C2  2AE3               	incf	plusw1,f,c
  5096  0015C4  E308               	bnc	u1070
  5097  0015C6  0EF3               	movlw	-13
  5098  0015C8  2AE3               	incf	plusw1,f,c
  5099  0015CA  E305               	bnc	u1070
  5100  0015CC  0EF4               	movlw	-12
  5101  0015CE  2AE3               	incf	plusw1,f,c
  5102  0015D0  E302               	bnc	u1070
  5103  0015D2  0EF5               	movlw	-11
  5104  0015D4  2AE3               	incf	plusw1,f,c
  5105  0015D6                     u1070:
  5106  0015D6                     
  5107                           ;stkvar	_sign @ sp[(-10)+8]
  5108  0015D6  0EFE               	movlw	-2
  5109  0015D8  70E3               	btg	plusw1,0,c
  5110  0015DA                     l1844:
  5111                           
  5112                           ;stkvar	_quotient @ sp[(-10)+0]
  5113  0015DA  0E07               	movlw	7
  5114  0015DC  6E01               	movwf	btemp^0,c
  5115  0015DE  0EF6               	movlw	-10
  5116  0015E0                     u1081:
  5117  0015E0  6AE3               	clrf	plusw1,c
  5118  0015E2  2AE8               	incf	wreg,f,c
  5119  0015E4  0601               	decf	btemp^0,f,c
  5120  0015E6  E2FC               	bc	u1081
  5121  0015E8                     
  5122                           ;stkvar	_divisor @ sp[(-10)+-16]
  5123  0015E8  0EE6               	movlw	-26
  5124  0015EA  50E3               	movf	plusw1,w,c
  5125  0015EC  E11B               	bnz	u1090
  5126  0015EE  0EE7               	movlw	-25
  5127  0015F0  50E3               	movf	plusw1,w,c
  5128  0015F2  E118               	bnz	u1090
  5129  0015F4  0EE8               	movlw	-24
  5130  0015F6  50E3               	movf	plusw1,w,c
  5131  0015F8  E115               	bnz	u1090
  5132  0015FA  0EE9               	movlw	-23
  5133  0015FC  50E3               	movf	plusw1,w,c
  5134  0015FE  E112               	bnz	u1090
  5135  001600  0EEA               	movlw	-22
  5136  001602  50E3               	movf	plusw1,w,c
  5137  001604  E10F               	bnz	u1090
  5138  001606  0EEB               	movlw	-21
  5139  001608  50E3               	movf	plusw1,w,c
  5140  00160A  E10C               	bnz	u1090
  5141  00160C  0EEC               	movlw	-20
  5142  00160E  50E3               	movf	plusw1,w,c
  5143  001610  E109               	bnz	u1090
  5144  001612  0EED               	movlw	-19
  5145  001614  50E3               	movf	plusw1,w,c
  5146  001616  B4D8               	btfsc	status,2,c
  5147  001618  EF10  F00B         	goto	u1091
  5148  00161C  EF12  F00B         	goto	u1090
  5149  001620                     u1091:
  5150  001620  EFAA  F00B         	goto	l1866
  5151  001624                     u1090:
  5152  001624                     
  5153                           ;stkvar	_counter @ sp[(-10)+9]
  5154  001624  0EFF               	movlw	-1
  5155  001626  6AE3               	clrf	plusw1,c
  5156  001628  2AE3               	incf	plusw1,f,c
  5157  00162A  EF2A  F00B         	goto	l1852
  5158  00162E                     l1850:
  5159                           
  5160                           ;stkvar	_divisor @ sp[(-10)+-16]
  5161  00162E  90D8               	bcf	status,0,c
  5162  001630  0EE6               	movlw	-26
  5163  001632  36E3               	rlcf	plusw1,f,c
  5164  001634  0EE7               	movlw	-25
  5165  001636  36E3               	rlcf	plusw1,f,c
  5166  001638  0EE8               	movlw	-24
  5167  00163A  36E3               	rlcf	plusw1,f,c
  5168  00163C  0EE9               	movlw	-23
  5169  00163E  36E3               	rlcf	plusw1,f,c
  5170  001640  0EEA               	movlw	-22
  5171  001642  36E3               	rlcf	plusw1,f,c
  5172  001644  0EEB               	movlw	-21
  5173  001646  36E3               	rlcf	plusw1,f,c
  5174  001648  0EEC               	movlw	-20
  5175  00164A  36E3               	rlcf	plusw1,f,c
  5176  00164C  0EED               	movlw	-19
  5177  00164E  36E3               	rlcf	plusw1,f,c
  5178                           
  5179                           ;stkvar	_counter @ sp[(-10)+9]
  5180  001650  0EFF               	movlw	-1
  5181  001652  2AE3               	incf	plusw1,f,c
  5182  001654                     l1852:
  5183                           
  5184                           ;stkvar	_divisor @ sp[(-10)+-16]
  5185  001654  0EED               	movlw	-19
  5186  001656  AEE3               	btfss	plusw1,7,c
  5187  001658  EF30  F00B         	goto	u1101
  5188  00165C  EF32  F00B         	goto	u1100
  5189  001660                     u1101:
  5190  001660  EF17  F00B         	goto	l1850
  5191  001664                     u1100:
  5192  001664                     l1854:
  5193                           
  5194                           ;stkvar	_quotient @ sp[(-10)+0]
  5195  001664  90D8               	bcf	status,0,c
  5196  001666  0EF6               	movlw	-10
  5197  001668  36E3               	rlcf	plusw1,f,c
  5198  00166A  0EF7               	movlw	-9
  5199  00166C  36E3               	rlcf	plusw1,f,c
  5200  00166E  0EF8               	movlw	-8
  5201  001670  36E3               	rlcf	plusw1,f,c
  5202  001672  0EF9               	movlw	-7
  5203  001674  36E3               	rlcf	plusw1,f,c
  5204  001676  0EFA               	movlw	-6
  5205  001678  36E3               	rlcf	plusw1,f,c
  5206  00167A  0EFB               	movlw	-5
  5207  00167C  36E3               	rlcf	plusw1,f,c
  5208  00167E  0EFC               	movlw	-4
  5209  001680  36E3               	rlcf	plusw1,f,c
  5210  001682  0EFD               	movlw	-3
  5211  001684  36E3               	rlcf	plusw1,f,c
  5212  001686                     
  5213                           ;stkvar	_divisor @ sp[(-10)+-16]
  5214                           ;stkvar	_dividend @ sp[(-10)+-8]
  5215  001686  50E1               	movf	fsr1l,w,c
  5216  001688  0FEE               	addlw	-18
  5217  00168A  6ED9               	movwf	fsr2l,c
  5218  00168C  50E2               	movf	fsr1h,w,c
  5219  00168E  6EDA               	movwf	fsr2h,c
  5220  001690  0EFF               	movlw	255
  5221  001692  22DA               	addwfc	fsr2h,f,c
  5222  001694  0EE6               	movlw	-26
  5223  001696  50E3               	movf	plusw1,w,c
  5224  001698  5CDE               	subwf	postinc2,w,c
  5225  00169A  0EE7               	movlw	-25
  5226  00169C  50E3               	movf	plusw1,w,c
  5227  00169E  58DE               	subwfb	postinc2,w,c
  5228  0016A0  0EE8               	movlw	-24
  5229  0016A2  50E3               	movf	plusw1,w,c
  5230  0016A4  58DE               	subwfb	postinc2,w,c
  5231  0016A6  0EE9               	movlw	-23
  5232  0016A8  50E3               	movf	plusw1,w,c
  5233  0016AA  58DE               	subwfb	postinc2,w,c
  5234  0016AC  0EEA               	movlw	-22
  5235  0016AE  50E3               	movf	plusw1,w,c
  5236  0016B0  58DE               	subwfb	postinc2,w,c
  5237  0016B2  0EEB               	movlw	-21
  5238  0016B4  50E3               	movf	plusw1,w,c
  5239  0016B6  58DE               	subwfb	postinc2,w,c
  5240  0016B8  0EEC               	movlw	-20
  5241  0016BA  50E3               	movf	plusw1,w,c
  5242  0016BC  58DE               	subwfb	postinc2,w,c
  5243  0016BE  0EED               	movlw	-19
  5244  0016C0  50E3               	movf	plusw1,w,c
  5245  0016C2  58DE               	subwfb	postinc2,w,c
  5246  0016C4  A0D8               	btfss	status,0,c
  5247  0016C6  EF67  F00B         	goto	u1111
  5248  0016CA  EF69  F00B         	goto	u1110
  5249  0016CE                     u1111:
  5250  0016CE  EF8A  F00B         	goto	l1862
  5251  0016D2                     u1110:
  5252  0016D2                     
  5253                           ;stkvar	_divisor @ sp[(-10)+-16]
  5254                           ;stkvar	_dividend @ sp[(-10)+-8]
  5255  0016D2  50E1               	movf	fsr1l,w,c
  5256  0016D4  0FEE               	addlw	-18
  5257  0016D6  6ED9               	movwf	fsr2l,c
  5258  0016D8  50E2               	movf	fsr1h,w,c
  5259  0016DA  6EDA               	movwf	fsr2h,c
  5260  0016DC  0EFF               	movlw	255
  5261  0016DE  22DA               	addwfc	fsr2h,f,c
  5262  0016E0  0EE6               	movlw	-26
  5263  0016E2  50E3               	movf	plusw1,w,c
  5264  0016E4  5EDE               	subwf	postinc2,f,c
  5265  0016E6  0EE7               	movlw	-25
  5266  0016E8  50E3               	movf	plusw1,w,c
  5267  0016EA  5ADE               	subwfb	postinc2,f,c
  5268  0016EC  0EE8               	movlw	-24
  5269  0016EE  50E3               	movf	plusw1,w,c
  5270  0016F0  5ADE               	subwfb	postinc2,f,c
  5271  0016F2  0EE9               	movlw	-23
  5272  0016F4  50E3               	movf	plusw1,w,c
  5273  0016F6  5ADE               	subwfb	postinc2,f,c
  5274  0016F8  0EEA               	movlw	-22
  5275  0016FA  50E3               	movf	plusw1,w,c
  5276  0016FC  5ADE               	subwfb	postinc2,f,c
  5277  0016FE  0EEB               	movlw	-21
  5278  001700  50E3               	movf	plusw1,w,c
  5279  001702  5ADE               	subwfb	postinc2,f,c
  5280  001704  0EEC               	movlw	-20
  5281  001706  50E3               	movf	plusw1,w,c
  5282  001708  5ADE               	subwfb	postinc2,f,c
  5283  00170A  0EED               	movlw	-19
  5284  00170C  50E3               	movf	plusw1,w,c
  5285  00170E  5ADE               	subwfb	postinc2,f,c
  5286  001710                     
  5287                           ;stkvar	_quotient @ sp[(-10)+0]
  5288  001710  0EF6               	movlw	-10
  5289  001712  80E3               	bsf	plusw1,0,c
  5290  001714                     l1862:
  5291                           
  5292                           ;stkvar	_divisor @ sp[(-10)+-16]
  5293  001714  90D8               	bcf	status,0,c
  5294  001716  0EED               	movlw	-19
  5295  001718  32E3               	rrcf	plusw1,f,c
  5296  00171A  0EEC               	movlw	-20
  5297  00171C  32E3               	rrcf	plusw1,f,c
  5298  00171E  0EEB               	movlw	-21
  5299  001720  32E3               	rrcf	plusw1,f,c
  5300  001722  0EEA               	movlw	-22
  5301  001724  32E3               	rrcf	plusw1,f,c
  5302  001726  0EE9               	movlw	-23
  5303  001728  32E3               	rrcf	plusw1,f,c
  5304  00172A  0EE8               	movlw	-24
  5305  00172C  32E3               	rrcf	plusw1,f,c
  5306  00172E  0EE7               	movlw	-25
  5307  001730  32E3               	rrcf	plusw1,f,c
  5308  001732  0EE6               	movlw	-26
  5309  001734  32E3               	rrcf	plusw1,f,c
  5310  001736                     
  5311                           ;stkvar	_counter @ sp[(-10)+9]
  5312  001736  0EFF               	movlw	-1
  5313  001738  50E3               	movf	plusw1,w,c
  5314  00173A  6E01               	movwf	btemp^0,c
  5315  00173C  0E01               	movlw	1
  5316  00173E  5E01               	subwf	btemp^0,f,c
  5317  001740  0EFF               	movlw	-1
  5318  001742  C001  FFE3         	movff	btemp,plusw1
  5319  001746  A4D8               	btfss	status,2,c
  5320  001748  EFA8  F00B         	goto	u1121
  5321  00174C  EFAA  F00B         	goto	u1120
  5322  001750                     u1121:
  5323  001750  EF32  F00B         	goto	l1854
  5324  001754                     u1120:
  5325  001754                     l1866:
  5326                           
  5327                           ;stkvar	_sign @ sp[(-10)+8]
  5328  001754  0EFE               	movlw	-2
  5329  001756  50E3               	movf	plusw1,w,c
  5330  001758  B4D8               	btfsc	status,2,c
  5331  00175A  EFB1  F00B         	goto	u1131
  5332  00175E  EFB3  F00B         	goto	u1130
  5333  001762                     u1131:
  5334  001762  EFD8  F00B         	goto	l1870
  5335  001766                     u1130:
  5336  001766                     
  5337                           ;stkvar	_quotient @ sp[(-10)+0]
  5338                           ;stkvar	_quotient @ sp[(-10)+0]
  5339  001766  0EF6               	movlw	-10
  5340  001768  6CE3               	negf	plusw1,c
  5341  00176A  0EF7               	movlw	-9
  5342  00176C  1EE3               	comf	plusw1,f,c
  5343  00176E  0EF8               	movlw	-8
  5344  001770  1EE3               	comf	plusw1,f,c
  5345  001772  0EF9               	movlw	-7
  5346  001774  1EE3               	comf	plusw1,f,c
  5347  001776  0EFA               	movlw	-6
  5348  001778  1EE3               	comf	plusw1,f,c
  5349  00177A  0EFB               	movlw	-5
  5350  00177C  1EE3               	comf	plusw1,f,c
  5351  00177E  0EFC               	movlw	-4
  5352  001780  1EE3               	comf	plusw1,f,c
  5353  001782  0EFD               	movlw	-3
  5354  001784  1EE3               	comf	plusw1,f,c
  5355  001786  E314               	bnc	u1140
  5356  001788  0EF7               	movlw	-9
  5357  00178A  2AE3               	incf	plusw1,f,c
  5358  00178C  E311               	bnc	u1140
  5359  00178E  0EF8               	movlw	-8
  5360  001790  2AE3               	incf	plusw1,f,c
  5361  001792  E30E               	bnc	u1140
  5362  001794  0EF9               	movlw	-7
  5363  001796  2AE3               	incf	plusw1,f,c
  5364  001798  E30B               	bnc	u1140
  5365  00179A  0EFA               	movlw	-6
  5366  00179C  2AE3               	incf	plusw1,f,c
  5367  00179E  E308               	bnc	u1140
  5368  0017A0  0EFB               	movlw	-5
  5369  0017A2  2AE3               	incf	plusw1,f,c
  5370  0017A4  E305               	bnc	u1140
  5371  0017A6  0EFC               	movlw	-4
  5372  0017A8  2AE3               	incf	plusw1,f,c
  5373  0017AA  E302               	bnc	u1140
  5374  0017AC  0EFD               	movlw	-3
  5375  0017AE  2AE3               	incf	plusw1,f,c
  5376  0017B0                     u1140:
  5377  0017B0                     l1870:
  5378                           
  5379                           ;stkvar	_quotient @ sp[(-10)+0]
  5380  0017B0  0EF6               	movlw	246
  5381  0017B2  24E1               	addwf	fsr1l,w,c
  5382  0017B4  6ED9               	movwf	fsr2l,c
  5383  0017B6  0EFF               	movlw	255
  5384  0017B8  20E2               	addwfc	fsr1h,w,c
  5385  0017BA  6EDA               	movwf	fsr2h,c
  5386                           
  5387                           ;stkvar	?___aodiv @ sp[(-10)+-8]
  5388  0017BC  0E08               	movlw	8
  5389  0017BE  6E01               	movwf	btemp^0,c
  5390  0017C0  0EEE               	movlw	-18
  5391  0017C2                     us115999:
  5392  0017C2  CFDE FFE3          	movff	postinc2,plusw1
  5393  0017C6  28E8               	incf	wreg,w,c
  5394  0017C8  2E01               	decfsz	btemp^0,f,c
  5395  0017CA  D7FB               	bra	us115999
  5396  0017CC                     
  5397                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
  5398  0017CC  0EF6               	movlw	246
  5399  0017CE  26E1               	addwf	fsr1l,f,c
  5400  0017D0  0EFF               	movlw	255
  5401  0017D2  22E2               	addwfc	fsr1h,f,c
  5402  0017D4  0012               	return		;funcret
  5403  0017D6                     __end_of___aodiv:
  5404                           	callstack 0
  5405                           
  5406 ;; *************** function _adc_read *****************
  5407 ;; Defined at:
  5408 ;;		line 15 in file "adc.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;  channel         1  [STACK] unsigned char 
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;  result          2  [STACK] unsigned short 
  5413 ;; Return value:  Size  Location     Type
  5414 ;;                  2  [STACK] unsigned short 
  5415 ;; Registers used:
  5416 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+11
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/F
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5426 ;;Total ram usage:        0 bytes
  5427 ;; Hardware stack levels used: 1
  5428 ;; Hardware stack levels required when called: 6
  5429 ;; This function calls:
  5430 ;;		Nothing
  5431 ;; This function is called by:
  5432 ;;		_state2
  5433 ;; This function uses a reentrant model
  5434 ;;
  5435                           
  5436                           	psect	text28
  5437  002900                     __ptext28:
  5438                           	callstack 0
  5439  002900                     _adc_read:
  5440                           	callstack 0
  5441                           
  5442                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5443  002900  52E6               	movf	postinc1,f,c
  5444  002902  52E6               	movf	postinc1,f,c
  5445  002904                     
  5446                           ;adc.c: 17:     ADCON0bits.CHS = channel;
  5447                           ;stkvar	_channel @ sp[(-2)+-1]
  5448  002904  0EFD               	movlw	-3
  5449  002906  CFE3 F00C          	movff	plusw1,btemp+11
  5450  00290A  460C               	rlncf	(btemp+11)^0,f,c
  5451  00290C  460C               	rlncf	(btemp+11)^0,f,c
  5452  00290E  50C2               	movf	194,w,c	;volatile
  5453  002910  180C               	xorwf	(btemp+11)^0,w,c
  5454  002912  0B83               	andlw	-125
  5455  002914  180C               	xorwf	(btemp+11)^0,w,c
  5456  002916  6EC2               	movwf	194,c	;volatile
  5457  002918                     
  5458                           ;adc.c: 18:     GODONE = 1;
  5459  002918  82C2               	bsf	4034,1,c	;volatile
  5460  00291A                     l320:
  5461  00291A  B2C2               	btfsc	4034,1,c	;volatile
  5462  00291C  EF92  F014         	goto	u681
  5463  002920  EF94  F014         	goto	u680
  5464  002924                     u681:
  5465  002924  EF8D  F014         	goto	l320
  5466  002928                     u680:
  5467  002928                     
  5468                           ;adc.c: 20:     uint16_t result = (uint16_t)(ADRESH<<8) | ADRESL;
  5469  002928  50C3               	movf	195,w,c	;volatile
  5470  00292A  CFC4 F001          	movff	4036,btemp	;volatile
  5471  00292E  6A02               	clrf	(btemp+1)^0,c
  5472  002930  C001  F002         	movff	btemp,btemp+1
  5473  002934  6A01               	clrf	btemp^0,c
  5474  002936  1201               	iorwf	btemp^0,f,c
  5475  002938  0E00               	movlw	0
  5476  00293A  1202               	iorwf	(btemp+1)^0,f,c
  5477                           
  5478                           ;stkvar	_result @ sp[(-2)+0]
  5479  00293C  0EFE               	movlw	-2
  5480  00293E  C001  FFE3         	movff	btemp,plusw1
  5481  002942  0EFF               	movlw	-1
  5482  002944  C002  FFE3         	movff	btemp+1,plusw1
  5483  002948                     
  5484                           ;adc.c: 21:     return result;
  5485                           ;stkvar	_result @ sp[(-2)+0]
  5486  002948  0EFE               	movlw	-2
  5487  00294A  CFE3 F001          	movff	plusw1,btemp
  5488  00294E  0EFF               	movlw	-1
  5489  002950  CFE3 F002          	movff	plusw1,btemp+1
  5490  002954                     
  5491                           ; _adc_read: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, args
      +                          ize = 1, vargsize = 0
  5492  002954  52E5               	movf	postdec1,f,c
  5493  002956  52E5               	movf	postdec1,f,c
  5494  002958  52E5               	movf	postdec1,f,c
  5495  00295A  0012               	return		;funcret
  5496  00295C                     __end_of_adc_read:
  5497                           	callstack 0
  5498                           
  5499 ;; *************** function _LCD_Clear *****************
  5500 ;; Defined at:
  5501 ;;		line 97 in file "lcd.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;		None
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;		None
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  1  [STACK] void 
  5508 ;; Registers used:
  5509 ;;		wreg, fsr1l, fsr1h, btemp
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/F
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5519 ;;Total ram usage:        0 bytes
  5520 ;; Hardware stack levels used: 1
  5521 ;; Hardware stack levels required when called: 7
  5522 ;; This function calls:
  5523 ;;		_LCD_Send
  5524 ;; This function is called by:
  5525 ;;		_state2
  5526 ;; This function uses a reentrant model
  5527 ;;
  5528                           
  5529                           	psect	text29
  5530  002A4E                     __ptext29:
  5531                           	callstack 0
  5532  002A4E                     _LCD_Clear:
  5533                           	callstack 0
  5534  002A4E                     
  5535                           ;lcd.c: 98:     SSP2CON2bits.SEN = 1;
  5536  002A4E  806B               	bsf	107,0,c	;volatile
  5537  002A50                     l200:
  5538  002A50  B06B               	btfsc	107,0,c	;volatile
  5539  002A52  EF2D  F015         	goto	u661
  5540  002A56  EF2F  F015         	goto	u660
  5541  002A5A                     u661:
  5542  002A5A  EF28  F015         	goto	l200
  5543  002A5E                     u660:
  5544  002A5E                     
  5545                           ;lcd.c: 100:     SSP2IF = 0;
  5546  002A5E  9EA4               	bcf	4004,7,c	;volatile
  5547  002A60                     
  5548                           ;lcd.c: 102:     LCD_Send(0x7C);
  5549  002A60  0E7C               	movlw	124
  5550  002A62  6EE6               	movwf	postinc1,c
  5551  002A64  ECBD  F015         	call	_LCD_Send	;wreg free
  5552                           
  5553                           ;lcd.c: 103:     LCD_Send(0x80);
  5554  002A68  0E80               	movlw	128
  5555  002A6A  6EE6               	movwf	postinc1,c
  5556  002A6C  ECBD  F015         	call	_LCD_Send	;wreg free
  5557                           
  5558                           ;lcd.c: 104:     LCD_Send(0x01);
  5559  002A70  0E01               	movlw	1
  5560  002A72  6EE6               	movwf	postinc1,c
  5561  002A74  ECBD  F015         	call	_LCD_Send	;wreg free
  5562  002A78                     
  5563                           ;lcd.c: 106:     SSP2CON2bits.PEN = 1;
  5564  002A78  846B               	bsf	107,2,c	;volatile
  5565  002A7A                     l203:
  5566  002A7A  B46B               	btfsc	107,2,c	;volatile
  5567  002A7C  EF42  F015         	goto	u671
  5568  002A80  EF44  F015         	goto	u670
  5569  002A84                     u671:
  5570  002A84  EF3D  F015         	goto	l203
  5571  002A88                     u670:
  5572  002A88                     
  5573                           ;lcd.c: 108:     _delay((unsigned long)((500)*(32E6/4000000.0)));
  5574  002A88  0E06               	movlw	6
  5575  002A8A  6E01               	movwf	btemp^0,c
  5576  002A8C  0E30               	movlw	48
  5577  002A8E                     u1597:
  5578  002A8E  2EE8               	decfsz	wreg,f,c
  5579  002A90  D7FE               	bra	u1597
  5580  002A92  2E01               	decfsz	btemp^0,f,c
  5581  002A94  D7FC               	bra	u1597
  5582  002A96  D000               	nop2	
  5583  002A98                     
  5584                           ; _LCD_Clear: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5585  002A98  0012               	return		;funcret
  5586  002A9A                     __end_of_LCD_Clear:
  5587                           	callstack 0
  5588                           
  5589 ;; *************** function _LCD_Send *****************
  5590 ;; Defined at:
  5591 ;;		line 88 in file "lcd.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;  data            1  [STACK] unsigned char 
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;		None
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  1  [STACK] void 
  5598 ;; Registers used:
  5599 ;;		fsr1l, fsr1h
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/F
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5609 ;;Total ram usage:        0 bytes
  5610 ;; Hardware stack levels used: 1
  5611 ;; Hardware stack levels required when called: 6
  5612 ;; This function calls:
  5613 ;;		Nothing
  5614 ;; This function is called by:
  5615 ;;		_LCD_Init
  5616 ;;		_LCD_ShowString
  5617 ;;		_LCD_Clear
  5618 ;; This function uses a reentrant model
  5619 ;;
  5620                           
  5621                           	psect	text30
  5622  002B7A                     __ptext30:
  5623                           	callstack 0
  5624  002B7A                     _LCD_Send:
  5625                           	callstack 0
  5626  002B7A                     
  5627                           ;lcd.c: 90:     SSP2BUF = data;
  5628                           ;stkvar	_data @ sp[(0)+-1]
  5629  002B7A  0EFF               	movlw	-1
  5630  002B7C  CFE3 FF6F          	movff	plusw1,3951	;volatile
  5631  002B80                     l191:
  5632  002B80  B06D               	btfsc	109,0,c	;volatile
  5633  002B82  EFC5  F015         	goto	u571
  5634  002B86  EFC7  F015         	goto	u570
  5635  002B8A                     u571:
  5636  002B8A  EFC0  F015         	goto	l191
  5637  002B8E                     u570:
  5638  002B8E                     l194:
  5639  002B8E  AEA4               	btfss	4004,7,c	;volatile
  5640  002B90  EFCC  F015         	goto	u581
  5641  002B94  EFCE  F015         	goto	u580
  5642  002B98                     u581:
  5643  002B98  EFC7  F015         	goto	l194
  5644  002B9C                     u580:
  5645  002B9C                     
  5646                           ;lcd.c: 93:     SSP2IF = 0;
  5647  002B9C  9EA4               	bcf	4004,7,c	;volatile
  5648  002B9E                     
  5649                           ; _LCD_Send: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, args
      +                          ize = 1, vargsize = 0
  5650  002B9E  52E5               	movf	postdec1,f,c
  5651  002BA0  0012               	return		;funcret
  5652  002BA2                     __end_of_LCD_Send:
  5653                           	callstack 0
  5654                           
  5655 ;; *************** function _bsp_stop_timeout *****************
  5656 ;; Defined at:
  5657 ;;		line 74 in file "bsp.c"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;		None
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;		None
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  1  [STACK] void 
  5664 ;; Registers used:
  5665 ;;		None
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/F
  5668 ;;		On exit  : 3F/F
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5675 ;;Total ram usage:        0 bytes
  5676 ;; Hardware stack levels used: 1
  5677 ;; Hardware stack levels required when called: 6
  5678 ;; This function calls:
  5679 ;;		Nothing
  5680 ;; This function is called by:
  5681 ;;		_state1
  5682 ;; This function uses a reentrant model
  5683 ;;
  5684                           
  5685                           	psect	text31
  5686  002C1C                     __ptext31:
  5687                           	callstack 0
  5688  002C1C                     _bsp_stop_timeout:
  5689                           	callstack 0
  5690  002C1C                     
  5691                           ;bsp.c: 75:     TMR6ON = 0;
  5692  002C1C  010F               	movlb	15	; () banked
  5693  002C1E  954A               	bcf	74,2,b	;volatile
  5694  002C20                     
  5695                           ; BSR set to: 15
  5696                           ; _bsp_stop_timeout: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  5697  002C20  0012               	return		;funcret
  5698  002C22                     __end_of_bsp_stop_timeout:
  5699                           	callstack 0
  5700                           
  5701 ;; *************** function _LOW_ISR *****************
  5702 ;; Defined at:
  5703 ;;		line 96 in file "bsp.c"
  5704 ;; Parameters:    Size  Location     Type
  5705 ;;		None
  5706 ;; Auto vars:     Size  Location     Type
  5707 ;;		None
  5708 ;; Return value:  Size  Location     Type
  5709 ;;                  1    wreg      void 
  5710 ;; Registers used:
  5711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11
  5712 ;; Tracked objects:
  5713 ;;		On entry : 0/0
  5714 ;;		On exit  : 0/0
  5715 ;;		Unchanged: 0/0
  5716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5719 ;;      Temps:         11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5720 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5721 ;;Total ram usage:       11 bytes
  5722 ;; Hardware stack levels used: 1
  5723 ;; Hardware stack levels required when called: 5
  5724 ;; This function calls:
  5725 ;;		_fsm_add_event
  5726 ;; This function is called by:
  5727 ;;		Interrupt level 1
  5728 ;; This function uses a non-reentrant model
  5729 ;;
  5730                           
  5731                           	psect	intcodelo
  5732  000018                     __pintcodelo:
  5733                           	callstack 0
  5734  000018                     _LOW_ISR:
  5735                           	callstack 0
  5736                           
  5737                           ; BSR set to: 15
  5738                           ;incstack = 0
  5739 ;; hardware stack exceeded
  5740  000018  CFD8 F03D          	movff	status,??_LOW_ISR
  5741  00001C  CFE8 F03E          	movff	wreg,??_LOW_ISR+1
  5742  000020  CFE0 F03F          	movff	bsr,??_LOW_ISR+2
  5743  000024  CFE1 F040          	movff	fsr1l,??_LOW_ISR+3
  5744  000028  CFE2 F041          	movff	fsr1h,??_LOW_ISR+4
  5745  00002C  CFD9 F042          	movff	fsr2l,??_LOW_ISR+5
  5746  000030  CFDA F043          	movff	fsr2h,??_LOW_ISR+6
  5747  000034  C009  F044         	movff	btemp+8,??_LOW_ISR+7
  5748  000038  C00A  F045         	movff	btemp+9,??_LOW_ISR+8
  5749  00003C  C00B  F046         	movff	btemp+10,??_LOW_ISR+9
  5750  000040  C00C  F047         	movff	btemp+11,??_LOW_ISR+10
  5751  000044  EE1A  F0A6         	lfsr	1,___intlo_sp
  5752  000048                     
  5753                           ;bsp.c: 98:     if (TMR2IF && TMR2IE ){
  5754  000048  A29E               	btfss	3998,1,c	;volatile
  5755  00004A  EF29  F000         	goto	i1u87_21
  5756  00004E  EF2B  F000         	goto	i1u87_20
  5757  000052                     i1u87_21:
  5758  000052  EF97  F000         	goto	i1l300
  5759  000056                     i1u87_20:
  5760  000056  A29D               	btfss	3997,1,c	;volatile
  5761  000058  EF30  F000         	goto	i1u88_21
  5762  00005C  EF32  F000         	goto	i1u88_20
  5763  000060                     i1u88_21:
  5764  000060  EF97  F000         	goto	i1l300
  5765  000064                     i1u88_20:
  5766  000064                     
  5767                           ;bsp.c: 100:         buttons.btn1_acc<<=1;
  5768  000064  90D8               	bcf	status,0,c
  5769  000066  3621               	rlcf	_buttons^0,f,c
  5770                           
  5771                           ;volatile
  5772                           ;bsp.c: 101:         buttons.btn1_acc |= PORTCbits.RC0;
  5773  000068  B082               	btfsc	130,0,c	;volatile
  5774  00006A  EF39  F000         	goto	i1u89_21
  5775  00006E  EF3C  F000         	goto	i1u89_20
  5776  000072                     i1u89_21:
  5777  000072  0E01               	movlw	1
  5778  000074  EF3D  F000         	goto	i1u89_26
  5779  000078                     i1u89_20:
  5780  000078  0E00               	movlw	0
  5781  00007A                     i1u89_26:
  5782  00007A  1221               	iorwf	_buttons^0,f,c	;volatile
  5783                           
  5784                           ;bsp.c: 103:         buttons.btn2_acc<<=1;
  5785  00007C  90D8               	bcf	status,0,c
  5786  00007E  3623               	rlcf	(_buttons+2)^0,f,c
  5787                           
  5788                           ;volatile
  5789                           ;bsp.c: 104:         buttons.btn2_acc |= PORTAbits.RA4;
  5790  000080  B880               	btfsc	128,4,c	;volatile
  5791  000082  EF45  F000         	goto	i1u90_21
  5792  000086  EF48  F000         	goto	i1u90_20
  5793  00008A                     i1u90_21:
  5794  00008A  0E01               	movlw	1
  5795  00008C  EF49  F000         	goto	i1u90_26
  5796  000090                     i1u90_20:
  5797  000090  0E00               	movlw	0
  5798  000092                     i1u90_26:
  5799  000092  1223               	iorwf	(_buttons+2)^0,f,c	;volatile
  5800                           
  5801                           ;bsp.c: 106:         buttons.btn3_acc<<=1;
  5802  000094  90D8               	bcf	status,0,c
  5803  000096  3625               	rlcf	(_buttons+4)^0,f,c
  5804                           
  5805                           ;volatile
  5806                           ;bsp.c: 107:         buttons.btn3_acc |= PORTAbits.RA3;
  5807  000098  B680               	btfsc	128,3,c	;volatile
  5808  00009A  EF51  F000         	goto	i1u91_21
  5809  00009E  EF54  F000         	goto	i1u91_20
  5810  0000A2                     i1u91_21:
  5811  0000A2  0E01               	movlw	1
  5812  0000A4  EF55  F000         	goto	i1u91_26
  5813  0000A8                     i1u91_20:
  5814  0000A8  0E00               	movlw	0
  5815  0000AA                     i1u91_26:
  5816  0000AA  1225               	iorwf	(_buttons+4)^0,f,c	;volatile
  5817                           
  5818                           ;bsp.c: 109:         buttons.btn4_acc<<=1;
  5819  0000AC  90D8               	bcf	status,0,c
  5820  0000AE  3627               	rlcf	(_buttons+6)^0,f,c
  5821                           
  5822                           ;volatile
  5823                           ;bsp.c: 110:         buttons.btn4_acc |= PORTAbits.RA2;
  5824  0000B0  B480               	btfsc	128,2,c	;volatile
  5825  0000B2  EF5D  F000         	goto	i1u92_21
  5826  0000B6  EF60  F000         	goto	i1u92_20
  5827  0000BA                     i1u92_21:
  5828  0000BA  0E01               	movlw	1
  5829  0000BC  EF61  F000         	goto	i1u92_26
  5830  0000C0                     i1u92_20:
  5831  0000C0  0E00               	movlw	0
  5832  0000C2                     i1u92_26:
  5833  0000C2  1227               	iorwf	(_buttons+6)^0,f,c	;volatile
  5834                           
  5835                           ;bsp.c: 112:         if(buttons.btn1_acc == 0b01111111){
  5836  0000C4  0E7F               	movlw	127
  5837  0000C6  1821               	xorwf	_buttons^0,w,c	;volatile
  5838  0000C8  A4D8               	btfss	status,2,c
  5839  0000CA  EF69  F000         	goto	i1u93_21
  5840  0000CE  EF6B  F000         	goto	i1u93_20
  5841  0000D2                     i1u93_21:
  5842  0000D2  EF6F  F000         	goto	i1l1698
  5843  0000D6                     i1u93_20:
  5844  0000D6                     
  5845                           ;bsp.c: 113:            fsm_add_event(3U);
  5846  0000D6  0E03               	movlw	3
  5847  0000D8  6EE6               	movwf	postinc1,c
  5848  0000DA  ECFA  F015         	call	_fsm_add_event	;wreg free
  5849  0000DE                     i1l1698:
  5850                           
  5851                           ;bsp.c: 115:         if(buttons.btn2_acc == 0b01111111){
  5852  0000DE  0E7F               	movlw	127
  5853  0000E0  1823               	xorwf	(_buttons+2)^0,w,c	;volatile
  5854  0000E2  A4D8               	btfss	status,2,c
  5855  0000E4  EF76  F000         	goto	i1u94_21
  5856  0000E8  EF78  F000         	goto	i1u94_20
  5857  0000EC                     i1u94_21:
  5858  0000EC  EF7C  F000         	goto	i1l1702
  5859  0000F0                     i1u94_20:
  5860  0000F0                     
  5861                           ;bsp.c: 116:            fsm_add_event(4U);
  5862  0000F0  0E04               	movlw	4
  5863  0000F2  6EE6               	movwf	postinc1,c
  5864  0000F4  ECFA  F015         	call	_fsm_add_event	;wreg free
  5865  0000F8                     i1l1702:
  5866                           
  5867                           ;bsp.c: 118:         if(buttons.btn3_acc == 0b01111111){
  5868  0000F8  0E7F               	movlw	127
  5869  0000FA  1825               	xorwf	(_buttons+4)^0,w,c	;volatile
  5870  0000FC  A4D8               	btfss	status,2,c
  5871  0000FE  EF83  F000         	goto	i1u95_21
  5872  000102  EF85  F000         	goto	i1u95_20
  5873  000106                     i1u95_21:
  5874  000106  EF89  F000         	goto	i1l1706
  5875  00010A                     i1u95_20:
  5876  00010A                     
  5877                           ;bsp.c: 119:            fsm_add_event(5U);
  5878  00010A  0E05               	movlw	5
  5879  00010C  6EE6               	movwf	postinc1,c
  5880  00010E  ECFA  F015         	call	_fsm_add_event	;wreg free
  5881  000112                     i1l1706:
  5882                           
  5883                           ;bsp.c: 121:         if(buttons.btn4_acc == 0b01111111){
  5884  000112  0E7F               	movlw	127
  5885  000114  1827               	xorwf	(_buttons+6)^0,w,c	;volatile
  5886  000116  A4D8               	btfss	status,2,c
  5887  000118  EF90  F000         	goto	i1u96_21
  5888  00011C  EF92  F000         	goto	i1u96_20
  5889  000120                     i1u96_21:
  5890  000120  EF96  F000         	goto	i1l1710
  5891  000124                     i1u96_20:
  5892  000124                     
  5893                           ;bsp.c: 122:            fsm_add_event(6U);
  5894  000124  0E06               	movlw	6
  5895  000126  6EE6               	movwf	postinc1,c
  5896  000128  ECFA  F015         	call	_fsm_add_event	;wreg free
  5897  00012C                     i1l1710:
  5898                           
  5899                           ;bsp.c: 125:         TMR2IF = 0;
  5900  00012C  929E               	bcf	3998,1,c	;volatile
  5901  00012E                     i1l300:
  5902  00012E  C047  F00C         	movff	??_LOW_ISR+10,btemp+11
  5903  000132  C046  F00B         	movff	??_LOW_ISR+9,btemp+10
  5904  000136  C045  F00A         	movff	??_LOW_ISR+8,btemp+9
  5905  00013A  C044  F009         	movff	??_LOW_ISR+7,btemp+8
  5906  00013E  C043  FFDA         	movff	??_LOW_ISR+6,fsr2h
  5907  000142  C042  FFD9         	movff	??_LOW_ISR+5,fsr2l
  5908  000146  C041  FFE2         	movff	??_LOW_ISR+4,fsr1h
  5909  00014A  C040  FFE1         	movff	??_LOW_ISR+3,fsr1l
  5910  00014E  C03F  FFE0         	movff	??_LOW_ISR+2,bsr
  5911  000152  C03E  FFE8         	movff	??_LOW_ISR+1,wreg
  5912  000156  C03D  FFD8         	movff	??_LOW_ISR,status
  5913  00015A  0010               	retfie	
  5914  00015C                     __end_of_LOW_ISR:
  5915                           	callstack 0
  5916                           
  5917 ;; *************** function _fsm_add_event *****************
  5918 ;; Defined at:
  5919 ;;		line 6 in file "fsm.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;  in              1  [STACK] unsigned char 
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;		None
  5924 ;; Return value:  Size  Location     Type
  5925 ;;                  1  [STACK] void 
  5926 ;; Registers used:
  5927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5937 ;;Total ram usage:        0 bytes
  5938 ;; Hardware stack levels used: 1
  5939 ;; Hardware stack levels required when called: 4
  5940 ;; This function calls:
  5941 ;;		_write_evt
  5942 ;; This function is called by:
  5943 ;;		_HIGH_ISR
  5944 ;;		_LOW_ISR
  5945 ;; This function uses a reentrant model
  5946 ;;
  5947                           
  5948                           	psect	text33
  5949  002BF4                     __ptext33:
  5950                           	callstack 0
  5951  002BF4                     _fsm_add_event:
  5952                           	callstack 0
  5953  002BF4                     
  5954                           ;fsm.c: 7:     write_evt(&event_queue, in);
  5955                           ;stkvar	_in @ sp[(0)+-1]
  5956  002BF4  0EFF               	movlw	-1
  5957  002BF6  50E3               	movf	plusw1,w,c
  5958  002BF8  6EE6               	movwf	postinc1,c
  5959  002BFA  0E80               	movlw	low _event_queue
  5960  002BFC  6EE6               	movwf	postinc1,c
  5961  002BFE  0E00               	movlw	high _event_queue
  5962  002C00  6EE6               	movwf	postinc1,c
  5963  002C02  ECE7  F012         	call	_write_evt	;wreg free
  5964  002C06                     
  5965                           ; _fsm_add_event: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  5966  002C06  52E5               	movf	postdec1,f,c
  5967  002C08  0012               	return		;funcret
  5968  002C0A                     __end_of_fsm_add_event:
  5969                           	callstack 0
  5970                           
  5971 ;; *************** function _write_evt *****************
  5972 ;; Defined at:
  5973 ;;		line 3 in file "evt_queue.c"
  5974 ;; Parameters:    Size  Location     Type
  5975 ;;  queue           2  [STACK] PTR volatile struct .
  5976 ;;		 -> event_queue(258), 
  5977 ;;  in              1  [STACK] unsigned char 
  5978 ;; Auto vars:     Size  Location     Type
  5979 ;;  tmp             1  [STACK] unsigned char 
  5980 ;; Return value:  Size  Location     Type
  5981 ;;                  1  [STACK] void 
  5982 ;; Registers used:
  5983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11
  5984 ;; Tracked objects:
  5985 ;;		On entry : 0/0
  5986 ;;		On exit  : 0/0
  5987 ;;		Unchanged: 0/0
  5988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5993 ;;Total ram usage:        0 bytes
  5994 ;; Hardware stack levels used: 1
  5995 ;; Hardware stack levels required when called: 3
  5996 ;; This function calls:
  5997 ;;		Nothing
  5998 ;; This function is called by:
  5999 ;;		_fsm_add_event
  6000 ;; This function uses a reentrant model
  6001 ;;
  6002                           
  6003                           	psect	text34
  6004  0025CE                     __ptext34:
  6005                           	callstack 0
  6006  0025CE                     _write_evt:
  6007                           	callstack 0
  6008                           
  6009                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6010  0025CE  52E6               	movf	postinc1,f,c
  6011  0025D0                     
  6012                           ;evt_queue.c: 4:  char tmp = (GIE & 0b1); GIE=0;;
  6013  0025D0  BEF2               	btfsc	4082,7,c	;volatile
  6014  0025D2  EFED  F012         	goto	u70_21
  6015  0025D6  EFF1  F012         	goto	u70_20
  6016  0025DA                     u70_21:
  6017  0025DA  6A0C               	clrf	(btemp+11)^0,c
  6018  0025DC  2A0C               	incf	(btemp+11)^0,f,c
  6019  0025DE  EFF2  F012         	goto	u71_28
  6020  0025E2                     u70_20:
  6021  0025E2  6A0C               	clrf	(btemp+11)^0,c
  6022  0025E4                     u71_28:
  6023  0025E4  0E01               	movlw	1
  6024  0025E6  160C               	andwf	(btemp+11)^0,f,c
  6025                           
  6026                           ;stkvar	_tmp @ sp[(-1)+0]
  6027  0025E8  0EFF               	movlw	-1
  6028  0025EA  C00C  FFE3         	movff	btemp+11,plusw1
  6029  0025EE  9EF2               	bcf	4082,7,c	;volatile
  6030  0025F0                     
  6031                           ;evt_queue.c: 5:     queue->fifo[queue->tail++] = in;
  6032                           ;stkvar	_in @ sp[(-1)+-3]
  6033                           ;stkvar	_queue @ sp[(-1)+-2]
  6034  0025F0  0EFD               	movlw	-3
  6035  0025F2  CFE3 F00B          	movff	plusw1,btemp+10
  6036  0025F6  0EFE               	movlw	-2
  6037  0025F8  CFE3 F00C          	movff	plusw1,btemp+11
  6038  0025FC  0E01               	movlw	1
  6039  0025FE  240B               	addwf	(btemp+10)^0,w,c
  6040  002600  6ED9               	movwf	fsr2l,c
  6041  002602  0E01               	movlw	1
  6042  002604  200C               	addwfc	(btemp+11)^0,w,c
  6043  002606  6EDA               	movwf	fsr2h,c
  6044  002608  50DF               	movf	indf2,w,c
  6045  00260A  6E0C               	movwf	(btemp+11)^0,c
  6046                           
  6047                           ;stkvar	_queue @ sp[(-1)+-2]
  6048  00260C  0EFD               	movlw	-3
  6049  00260E  CFE3 F009          	movff	plusw1,btemp+8
  6050  002612  0EFE               	movlw	-2
  6051  002614  CFE3 F00A          	movff	plusw1,btemp+9
  6052  002618  500C               	movf	(btemp+11)^0,w,c
  6053  00261A  2409               	addwf	(btemp+8)^0,w,c
  6054  00261C  6ED9               	movwf	fsr2l,c
  6055  00261E  0E00               	movlw	0
  6056  002620  200A               	addwfc	(btemp+9)^0,w,c
  6057  002622  6EDA               	movwf	fsr2h,c
  6058  002624  0EFC               	movlw	-4
  6059  002626  CFE3 FFDF          	movff	plusw1,indf2
  6060  00262A                     
  6061                           ;stkvar	_queue @ sp[(-1)+-2]
  6062  00262A  0EFD               	movlw	-3
  6063  00262C  CFE3 F00B          	movff	plusw1,btemp+10
  6064  002630  0EFE               	movlw	-2
  6065  002632  CFE3 F00C          	movff	plusw1,btemp+11
  6066  002636  0E01               	movlw	1
  6067  002638  240B               	addwf	(btemp+10)^0,w,c
  6068  00263A  6ED9               	movwf	fsr2l,c
  6069  00263C  0E01               	movlw	1
  6070  00263E  200C               	addwfc	(btemp+11)^0,w,c
  6071  002640  6EDA               	movwf	fsr2h,c
  6072  002642  2ADF               	incf	indf2,f,c
  6073  002644                     
  6074                           ;evt_queue.c: 6:     GIE = (tmp & 0b1);;
  6075                           ;stkvar	_tmp @ sp[(-1)+0]
  6076  002644  0EFF               	movlw	-1
  6077  002646  CFE3 F00C          	movff	plusw1,btemp+11
  6078  00264A  300C               	rrcf	(btemp+11)^0,w,c
  6079  00264C  B0D8               	btfsc	status,0,c
  6080  00264E  EF2B  F013         	goto	u72_21
  6081  002652  EF2E  F013         	goto	u72_20
  6082  002656                     u72_21:
  6083  002656  8EF2               	bsf	4082,7,c	;volatile
  6084  002658  EF2F  F013         	goto	u73_25
  6085  00265C                     u72_20:
  6086  00265C  9EF2               	bcf	4082,7,c	;volatile
  6087  00265E                     u73_25:
  6088  00265E                     
  6089                           ; _write_evt: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, arg
      +                          size = 3, vargsize = 0
  6090  00265E  52E5               	movf	postdec1,f,c
  6091  002660  52E5               	movf	postdec1,f,c
  6092  002662  52E5               	movf	postdec1,f,c
  6093  002664  52E5               	movf	postdec1,f,c
  6094  002666  0012               	return		;funcret
  6095  002668                     __end_of_write_evt:
  6096                           	callstack 0
  6097                           
  6098 ;; *************** function _HIGH_ISR *****************
  6099 ;; Defined at:
  6100 ;;		line 78 in file "bsp.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;		None
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;		None
  6105 ;; Return value:  Size  Location     Type
  6106 ;;                  1    wreg      void 
  6107 ;; Registers used:
  6108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11
  6109 ;; Tracked objects:
  6110 ;;		On entry : 0/0
  6111 ;;		On exit  : 0/0
  6112 ;;		Unchanged: 0/0
  6113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6116 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6117 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6118 ;;Total ram usage:        8 bytes
  6119 ;; Hardware stack levels used: 1
  6120 ;; Hardware stack levels required when called: 2
  6121 ;; This function calls:
  6122 ;;		_fsm_add_event
  6123 ;; This function is called by:
  6124 ;;		Interrupt level 2
  6125 ;; This function uses a non-reentrant model
  6126 ;;
  6127                           
  6128                           	psect	intcode
  6129  000008                     __pintcode:
  6130                           	callstack 0
  6131  000008                     _HIGH_ISR:
  6132                           	callstack 0
  6133                           
  6134                           ;incstack = 0
  6135 ;; hardware stack exceeded
  6136  000008  EFC7  F011         	goto	int_func
  6137  00000C                     
  6138                           	psect	intcode_body
  6139  00238E                     __pintcode_body:
  6140                           	callstack 0
  6141  00238E                     int_func:
  6142                           	callstack 0
  6143  00238E  CFE1 F035          	movff	fsr1l,??_HIGH_ISR
  6144  002392  CFE2 F036          	movff	fsr1h,??_HIGH_ISR+1
  6145  002396  CFD9 F037          	movff	fsr2l,??_HIGH_ISR+2
  6146  00239A  CFDA F038          	movff	fsr2h,??_HIGH_ISR+3
  6147  00239E  C009  F039         	movff	btemp+8,??_HIGH_ISR+4
  6148  0023A2  C00A  F03A         	movff	btemp+9,??_HIGH_ISR+5
  6149  0023A6  C00B  F03B         	movff	btemp+10,??_HIGH_ISR+6
  6150  0023AA  C00C  F03C         	movff	btemp+11,??_HIGH_ISR+7
  6151  0023AE  EE16  F014         	lfsr	1,___inthi_sp
  6152  0023B2                     
  6153                           ;bsp.c: 80:     if (TMR1IF && TMR1IE ){
  6154  0023B2  A09E               	btfss	3998,0,c	;volatile
  6155  0023B4  EFDE  F011         	goto	i2u82_41
  6156  0023B8  EFE0  F011         	goto	i2u82_40
  6157  0023BC                     i2u82_41:
  6158  0023BC  EFF0  F011         	goto	i2l1676
  6159  0023C0                     i2u82_40:
  6160  0023C0  A09D               	btfss	3997,0,c	;volatile
  6161  0023C2  EFE5  F011         	goto	i2u83_41
  6162  0023C6  EFE7  F011         	goto	i2u83_40
  6163  0023CA                     i2u83_41:
  6164  0023CA  EFF0  F011         	goto	i2l1676
  6165  0023CE                     i2u83_40:
  6166  0023CE                     
  6167                           ;bsp.c: 81:         fsm_add_event(8U);
  6168  0023CE  0E08               	movlw	8
  6169  0023D0  6EE6               	movwf	postinc1,c
  6170  0023D2  ECFA  F015         	call	_fsm_add_event	;wreg free
  6171  0023D6                     
  6172                           ;bsp.c: 82:         TMR1 = 55535;
  6173  0023D6  0ED8               	movlw	216
  6174  0023D8  6ECF               	movwf	207,c	;volatile
  6175  0023DA  0EEF               	movlw	239
  6176  0023DC  6ECE               	movwf	206,c	;volatile
  6177  0023DE                     
  6178                           ;bsp.c: 83:         TMR1IF = 0;
  6179  0023DE  909E               	bcf	3998,0,c	;volatile
  6180  0023E0                     i2l1676:
  6181                           
  6182                           ;bsp.c: 86:     if (TMR6IF && TMR6IE ){
  6183  0023E0  A47E               	btfss	3966,2,c	;volatile
  6184  0023E2  EFF5  F011         	goto	i2u84_41
  6185  0023E6  EFF7  F011         	goto	i2u84_40
  6186  0023EA                     i2u84_41:
  6187  0023EA  EF1D  F012         	goto	i2l290
  6188  0023EE                     i2u84_40:
  6189  0023EE  A47D               	btfss	3965,2,c	;volatile
  6190  0023F0  EFFC  F011         	goto	i2u85_41
  6191  0023F4  EFFE  F011         	goto	i2u85_40
  6192  0023F8                     i2u85_41:
  6193  0023F8  EF1D  F012         	goto	i2l290
  6194  0023FC                     i2u85_40:
  6195  0023FC                     
  6196                           ;bsp.c: 87:         if(--bsp_timeout <= 0){
  6197  0023FC  0EFF               	movlw	255
  6198  0023FE  2629               	addwf	_bsp_timeout^0,f,c	;volatile
  6199  002400  0EFF               	movlw	255
  6200  002402  222A               	addwfc	(_bsp_timeout+1)^0,f,c	;volatile
  6201  002404  0EFF               	movlw	255
  6202  002406  222B               	addwfc	(_bsp_timeout+2)^0,f,c	;volatile
  6203  002408  0EFF               	movlw	255
  6204  00240A  222C               	addwfc	(_bsp_timeout+3)^0,f,c	;volatile
  6205  00240C  BE2C               	btfsc	(_bsp_timeout+3)^0,7,c	;volatile
  6206  00240E  EF15  F012         	goto	i2u86_40
  6207  002412  502C               	movf	(_bsp_timeout+3)^0,w,c	;volatile
  6208  002414  102B               	iorwf	(_bsp_timeout+2)^0,w,c	;volatile
  6209  002416  102A               	iorwf	(_bsp_timeout+1)^0,w,c	;volatile
  6210  002418  E106               	bnz	i2u86_41
  6211  00241A  0429               	decf	_bsp_timeout^0,w,c	;volatile
  6212  00241C  B0D8               	btfsc	status,0,c
  6213  00241E  EF13  F012         	goto	i2u86_41
  6214  002422  EF15  F012         	goto	i2u86_40
  6215  002426                     i2u86_41:
  6216  002426  EF1B  F012         	goto	i2l1686
  6217  00242A                     i2u86_40:
  6218  00242A                     
  6219                           ;bsp.c: 88:             fsm_add_event(7U);
  6220  00242A  0E07               	movlw	7
  6221  00242C  6EE6               	movwf	postinc1,c
  6222  00242E  ECFA  F015         	call	_fsm_add_event	;wreg free
  6223  002432                     
  6224                           ;bsp.c: 89:             TMR6ON = 0;
  6225  002432  010F               	movlb	15	; () banked
  6226  002434  954A               	bcf	74,2,b	;volatile
  6227  002436                     i2l1686:
  6228                           
  6229                           ;bsp.c: 91:         LATBbits.LB5 ^= 1;
  6230  002436  7A8A               	btg	138,5,c	;volatile
  6231  002438                     
  6232                           ;bsp.c: 92:         TMR6IF = 0;
  6233  002438  947E               	bcf	3966,2,c	;volatile
  6234  00243A                     i2l290:
  6235  00243A  C03C  F00C         	movff	??_HIGH_ISR+7,btemp+11
  6236  00243E  C03B  F00B         	movff	??_HIGH_ISR+6,btemp+10
  6237  002442  C03A  F00A         	movff	??_HIGH_ISR+5,btemp+9
  6238  002446  C039  F009         	movff	??_HIGH_ISR+4,btemp+8
  6239  00244A  C038  FFDA         	movff	??_HIGH_ISR+3,fsr2h
  6240  00244E  C037  FFD9         	movff	??_HIGH_ISR+2,fsr2l
  6241  002452  C036  FFE2         	movff	??_HIGH_ISR+1,fsr1h
  6242  002456  C035  FFE1         	movff	??_HIGH_ISR,fsr1l
  6243  00245A  0011               	retfie		f
  6244  00245C                     __end_of_HIGH_ISR:
  6245                           	callstack 0
  6246                           
  6247                           	psect	rparam
  6248  0000                     
  6249                           	psect	temp
  6250  000001                     btemp:
  6251                           	callstack 0
  6252  000001                     	ds	32
  6253  0000                     wtemp0	set	btemp
  6254  0000                     wtemp1	set	btemp+2
  6255  0000                     wtemp2	set	btemp+4
  6256  0000                     wtemp3	set	btemp+6
  6257  0000                     wtemp4	set	btemp+8
  6258  0000                     wtemp5	set	btemp+10
  6259  0000                     wtemp8	set	btemp+1
  6260  0000                     ttemp0	set	btemp
  6261  0000                     ttemp1	set	btemp+3
  6262  0000                     ttemp2	set	btemp+6
  6263  0000                     ttemp3	set	btemp+9
  6264  0000                     ttemp5	set	btemp+1
  6265  0000                     ttemp6	set	btemp+4
  6266  0000                     ttemp7	set	btemp+8
  6267  0000                     ltemp0	set	btemp
  6268  0000                     ltemp1	set	btemp+4
  6269  0000                     ltemp2	set	btemp+8
  6270  0000                     lltemp0	set	btemp
  6271  0000                     lltemp1	set	btemp+8
  6272  0000                     lltemp2	set	btemp+16
  6273  0000                     lltemp3	set	btemp+24
  6274                           
  6275                           	psect	idloc
  6276                           
  6277                           ;Config register IDLOC0 @ 0x200000
  6278                           ;	unspecified, using default values
  6279  200000                     	org	2097152
  6280  200000  FF                 	db	255
  6281                           
  6282                           ;Config register IDLOC1 @ 0x200001
  6283                           ;	unspecified, using default values
  6284  200001                     	org	2097153
  6285  200001  FF                 	db	255
  6286                           
  6287                           ;Config register IDLOC2 @ 0x200002
  6288                           ;	unspecified, using default values
  6289  200002                     	org	2097154
  6290  200002  FF                 	db	255
  6291                           
  6292                           ;Config register IDLOC3 @ 0x200003
  6293                           ;	unspecified, using default values
  6294  200003                     	org	2097155
  6295  200003  FF                 	db	255
  6296                           
  6297                           ;Config register IDLOC4 @ 0x200004
  6298                           ;	unspecified, using default values
  6299  200004                     	org	2097156
  6300  200004  FF                 	db	255
  6301                           
  6302                           ;Config register IDLOC5 @ 0x200005
  6303                           ;	unspecified, using default values
  6304  200005                     	org	2097157
  6305  200005  FF                 	db	255
  6306                           
  6307                           ;Config register IDLOC6 @ 0x200006
  6308                           ;	unspecified, using default values
  6309  200006                     	org	2097158
  6310  200006  FF                 	db	255
  6311                           
  6312                           ;Config register IDLOC7 @ 0x200007
  6313                           ;	unspecified, using default values
  6314  200007                     	org	2097159
  6315  200007  FF                 	db	255
  6316                           
  6317                           	psect	config
  6318                           
  6319                           ; Padding undefined space
  6320  300000                     	org	3145728
  6321  300000  FF                 	db	255
  6322                           
  6323                           ;Config register CONFIG1H @ 0x300001
  6324                           ;	Oscillator Selection bits
  6325                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
  6326                           ;	4X PLL Enable
  6327                           ;	PLLCFG = ON, Oscillator multiplied by 4
  6328                           ;	Primary clock enable bit
  6329                           ;	PRICLKEN = 0x1, unprogrammed default
  6330                           ;	Fail-Safe Clock Monitor Enable bit
  6331                           ;	FCMEN = 0x0, unprogrammed default
  6332                           ;	Internal/External Oscillator Switchover bit
  6333                           ;	IESO = 0x0, unprogrammed default
  6334  300001                     	org	3145729
  6335  300001  33                 	db	51
  6336                           
  6337                           ;Config register CONFIG2L @ 0x300002
  6338                           ;	unspecified, using default values
  6339                           ;	Power-up Timer Enable bit
  6340                           ;	PWRTEN = 0x1, unprogrammed default
  6341                           ;	Brown-out Reset Enable bits
  6342                           ;	BOREN = 0x3, unprogrammed default
  6343                           ;	Brown Out Reset Voltage bits
  6344                           ;	BORV = 0x3, unprogrammed default
  6345  300002                     	org	3145730
  6346  300002  1F                 	db	31
  6347                           
  6348                           ;Config register CONFIG2H @ 0x300003
  6349                           ;	Watchdog Timer Enable bits
  6350                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  6351                           ;	Watchdog Timer Postscale Select bits
  6352                           ;	WDTPS = 0xF, unprogrammed default
  6353  300003                     	org	3145731
  6354  300003  3C                 	db	60
  6355                           
  6356                           ; Padding undefined space
  6357  300004                     	org	3145732
  6358  300004  FF                 	db	255
  6359                           
  6360                           ;Config register CONFIG3H @ 0x300005
  6361                           ;	unspecified, using default values
  6362                           ;	CCP2 MUX bit
  6363                           ;	CCP2MX = 0x1, unprogrammed default
  6364                           ;	PORTB A/D Enable bit
  6365                           ;	PBADEN = 0x1, unprogrammed default
  6366                           ;	P3A/CCP3 Mux bit
  6367                           ;	CCP3MX = 0x1, unprogrammed default
  6368                           ;	HFINTOSC Fast Start-up
  6369                           ;	HFOFST = 0x1, unprogrammed default
  6370                           ;	Timer3 Clock input mux bit
  6371                           ;	T3CMX = 0x1, unprogrammed default
  6372                           ;	ECCP2 B output mux bit
  6373                           ;	P2BMX = 0x1, unprogrammed default
  6374                           ;	MCLR Pin Enable bit
  6375                           ;	MCLRE = 0x1, unprogrammed default
  6376  300005                     	org	3145733
  6377  300005  BF                 	db	191
  6378                           
  6379                           ;Config register CONFIG4L @ 0x300006
  6380                           ;	unspecified, using default values
  6381                           ;	Stack Full/Underflow Reset Enable bit
  6382                           ;	STVREN = 0x1, unprogrammed default
  6383                           ;	Single-Supply ICSP Enable bit
  6384                           ;	LVP = 0x1, unprogrammed default
  6385                           ;	Extended Instruction Set Enable bit
  6386                           ;	XINST = 0x0, unprogrammed default
  6387                           ;	Background Debug
  6388                           ;	DEBUG = 0x1, unprogrammed default
  6389  300006                     	org	3145734
  6390  300006  85                 	db	133
  6391                           
  6392                           ; Padding undefined space
  6393  300007                     	org	3145735
  6394  300007  FF                 	db	255
  6395                           
  6396                           ;Config register CONFIG5L @ 0x300008
  6397                           ;	unspecified, using default values
  6398                           ;	Code Protection Block 0
  6399                           ;	CP0 = 0x1, unprogrammed default
  6400                           ;	Code Protection Block 1
  6401                           ;	CP1 = 0x1, unprogrammed default
  6402                           ;	Code Protection Block 2
  6403                           ;	CP2 = 0x1, unprogrammed default
  6404                           ;	Code Protection Block 3
  6405                           ;	CP3 = 0x1, unprogrammed default
  6406  300008                     	org	3145736
  6407  300008  0F                 	db	15
  6408                           
  6409                           ;Config register CONFIG5H @ 0x300009
  6410                           ;	unspecified, using default values
  6411                           ;	Boot Block Code Protection bit
  6412                           ;	CPB = 0x1, unprogrammed default
  6413                           ;	Data EEPROM Code Protection bit
  6414                           ;	CPD = 0x1, unprogrammed default
  6415  300009                     	org	3145737
  6416  300009  C0                 	db	192
  6417                           
  6418                           ;Config register CONFIG6L @ 0x30000A
  6419                           ;	unspecified, using default values
  6420                           ;	Write Protection Block 0
  6421                           ;	WRT0 = 0x1, unprogrammed default
  6422                           ;	Write Protection Block 1
  6423                           ;	WRT1 = 0x1, unprogrammed default
  6424                           ;	Write Protection Block 2
  6425                           ;	WRT2 = 0x1, unprogrammed default
  6426                           ;	Write Protection Block 3
  6427                           ;	WRT3 = 0x1, unprogrammed default
  6428  30000A                     	org	3145738
  6429  30000A  0F                 	db	15
  6430                           
  6431                           ;Config register CONFIG6H @ 0x30000B
  6432                           ;	unspecified, using default values
  6433                           ;	Configuration Register Write Protection bit
  6434                           ;	WRTC = 0x1, unprogrammed default
  6435                           ;	Boot Block Write Protection bit
  6436                           ;	WRTB = 0x1, unprogrammed default
  6437                           ;	Data EEPROM Write Protection bit
  6438                           ;	WRTD = 0x1, unprogrammed default
  6439  30000B                     	org	3145739
  6440  30000B  E0                 	db	224
  6441                           
  6442                           ;Config register CONFIG7L @ 0x30000C
  6443                           ;	unspecified, using default values
  6444                           ;	Table Read Protection Block 0
  6445                           ;	EBTR0 = 0x1, unprogrammed default
  6446                           ;	Table Read Protection Block 1
  6447                           ;	EBTR1 = 0x1, unprogrammed default
  6448                           ;	Table Read Protection Block 2
  6449                           ;	EBTR2 = 0x1, unprogrammed default
  6450                           ;	Table Read Protection Block 3
  6451                           ;	EBTR3 = 0x1, unprogrammed default
  6452  30000C                     	org	3145740
  6453  30000C  0F                 	db	15
  6454                           
  6455                           ;Config register CONFIG7H @ 0x30000D
  6456                           ;	unspecified, using default values
  6457                           ;	Boot Block Table Read Protection bit
  6458                           ;	EBTRB = 0x1, unprogrammed default
  6459  30000D                     	org	3145741
  6460  30000D  40                 	db	64
  6461                           tosu	equ	0xFFF
  6462                           tosh	equ	0xFFE
  6463                           tosl	equ	0xFFD
  6464                           stkptr	equ	0xFFC
  6465                           pclatu	equ	0xFFB
  6466                           pclath	equ	0xFFA
  6467                           pcl	equ	0xFF9
  6468                           tblptru	equ	0xFF8
  6469                           tblptrh	equ	0xFF7
  6470                           tblptrl	equ	0xFF6
  6471                           tablat	equ	0xFF5
  6472                           prodh	equ	0xFF4
  6473                           prodl	equ	0xFF3
  6474                           indf0	equ	0xFEF
  6475                           postinc0	equ	0xFEE
  6476                           postdec0	equ	0xFED
  6477                           preinc0	equ	0xFEC
  6478                           plusw0	equ	0xFEB
  6479                           fsr0h	equ	0xFEA
  6480                           fsr0l	equ	0xFE9
  6481                           wreg	equ	0xFE8
  6482                           indf1	equ	0xFE7
  6483                           postinc1	equ	0xFE6
  6484                           postdec1	equ	0xFE5
  6485                           preinc1	equ	0xFE4
  6486                           plusw1	equ	0xFE3
  6487                           fsr1h	equ	0xFE2
  6488                           fsr1l	equ	0xFE1
  6489                           bsr	equ	0xFE0
  6490                           indf2	equ	0xFDF
  6491                           postinc2	equ	0xFDE
  6492                           postdec2	equ	0xFDD
  6493                           preinc2	equ	0xFDC
  6494                           plusw2	equ	0xFDB
  6495                           fsr2h	equ	0xFDA
  6496                           fsr2l	equ	0xFD9
  6497                           status	equ	0xFD8

Data Sizes:
    Strings     116
    Constant    0
    Data        0
    BSS         310
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     19      39
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    init_state$0	PTR struct fsm_t size(2) Largest target is 2
		 -> fsm(STACK[2]), 

    new_state$0	PTR struct fsm_t size(2) Largest target is 2
		 -> fsm(STACK[2]), 

    S51$0$0	PTR struct fsm_t size(2) Largest target is 2
		 -> fsm(STACK[2]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[14]), STR_4(CODE[14]), STR_2(CODE[17]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), f(STACK[6]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> str(UNKNOWN), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), f(STACK[6]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), f(STACK[6]), 

    fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_7(CODE[18]), STR_6(CODE[14]), STR_4(CODE[14]), STR_2(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_7(CODE[18]), STR_6(CODE[14]), STR_4(CODE[14]), STR_2(CODE[17]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), f(STACK[6]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), f(STACK[6]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), f(STACK[6]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_7(CODE[18]), 

    s	PTR unsigned char  size(2) Largest target is 17
		 -> str(UNKNOWN), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    S2315_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> str(UNKNOWN), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> str(UNKNOWN), 

    textData	PTR unsigned char  size(2) Largest target is 18
		 -> str(UNKNOWN), STR_5(CODE[18]), STR_3(CODE[18]), STR_1(CODE[17]), 

    fsm.state	PTR FTN(PTR struct fsm_t,unsigned char ,)void  size(2) Largest target is 1
		 -> state2(), state1(), init(), 

    new_state	PTR FTN(PTR struct fsm_t,unsigned char ,)void  size(2) Largest target is 1
		 -> state2(), state1(), 

    fsm	PTR struct fsm_t size(2) Largest target is 2
		 -> fsm(STACK[2]), 

    fsm.state	PTR FTN(PTR struct fsm_t,unsigned char ,)void  size(2) Largest target is 1
		 -> state2(), state1(), init(), 

    fsm	PTR struct fsm_t size(2) Largest target is 2
		 -> fsm(STACK[2]), 

    fsm.state	PTR FTN(PTR struct fsm_t,unsigned char ,)void  size(2) Largest target is 1
		 -> state2(), state1(), init(), 

    init_state	PTR FTN(PTR struct fsm_t,unsigned char ,)void  size(2) Largest target is 1
		 -> init(), 

    fsm	PTR struct fsm_t size(2) Largest target is 2
		 -> fsm(STACK[2]), 

    out	PTR unsigned char  size(2) Largest target is 1
		 -> event(STACK[1]), 

    out	PTR unsigned char  size(2) Largest target is 1
		 -> event(STACK[1]), 

    queue	PTR volatile struct . size(2) Largest target is 258
		 -> event_queue(BIGRAM[258]), 

    queue	PTR volatile struct . size(2) Largest target is 258
		 -> event_queue(BIGRAM[258]), 

    fsm	PTR struct fsm_t size(2) Largest target is 2
		 -> fsm(STACK[2]), 

    fsm	PTR struct fsm_t size(2) Largest target is 2
		 -> fsm(STACK[2]), 

    fsm	PTR struct fsm_t size(2) Largest target is 2
		 -> fsm(STACK[2]), 

    S51fsm_t$state	PTR FTN(PTR struct fsm_t,unsigned char ,)void  size(2) Largest target is 1
		 -> state2(), state1(), init(), 

    fsm.state	PTR FTN(PTR struct fsm_t,unsigned char ,)void  size(2) Largest target is 1
		 -> state2(), state1(), init(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LOW_ISR in COMRAM

    None.

Critical Paths under _HIGH_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LOW_ISR in BANK0

    None.

Critical Paths under _HIGH_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LOW_ISR in BANK1

    None.

Critical Paths under _HIGH_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LOW_ISR in BANK2

    None.

Critical Paths under _HIGH_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LOW_ISR in BANK3

    None.

Critical Paths under _HIGH_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LOW_ISR in BANK4

    None.

Critical Paths under _HIGH_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LOW_ISR in BANK5

    None.

Critical Paths under _HIGH_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LOW_ISR in BANK6

    None.

Critical Paths under _HIGH_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LOW_ISR in BANK7

    None.

Critical Paths under _HIGH_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LOW_ISR in BANK8

    None.

Critical Paths under _HIGH_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LOW_ISR in BANK9

    None.

Critical Paths under _HIGH_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LOW_ISR in BANK10

    None.

Critical Paths under _HIGH_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LOW_ISR in BANK11

    None.

Critical Paths under _HIGH_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LOW_ISR in BANK12

    None.

Critical Paths under _HIGH_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LOW_ISR in BANK13

    None.

Critical Paths under _HIGH_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LOW_ISR in BANK14

    None.

Critical Paths under _HIGH_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _LOW_ISR in BANK15

    None.

Critical Paths under _HIGH_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   54115
                           _LCD_Init
                           _adc_init
                           _bsp_init
                       _fsm_dispatch
                      _fsm_get_event
                           _fsm_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fsm_init                                             4     0      4   26975
                       _fsm_dispatch
 ---------------------------------------------------------------------------------
 (1) _fsm_get_event                                        2     0      2     120
                            _get_evt
 ---------------------------------------------------------------------------------
 (2) _get_evt                                              5     1      4     105
 ---------------------------------------------------------------------------------
 (1) _bsp_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0      15
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (?) _init (recursive)                                     3     0      3   11866
                     _LCD_ShowString
                    _bsp_set_timeout
                     _fsm_transition
                             _printf
 ---------------------------------------------------------------------------------
 (?) _LCD_ShowString                                       4     1      3     120
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (?) _bsp_set_timeout                                      4     0      4      15
 ---------------------------------------------------------------------------------
 (?) _printf                                               6     4      2    5556
                           _vfprintf
 ---------------------------------------------------------------------------------
 (?) _fsm_transition (recursive)                           4     0      4     220
                       _fsm_dispatch
 ---------------------------------------------------------------------------------
 (?) _fsm_dispatch (recursive)                             3     0      3   26909
                               _init *
                             _state1 *
                             _state2 *
 ---------------------------------------------------------------------------------
 (?) _state2 (recursive)                                  20    17      3    9022
                          _LCD_Clear
                     _LCD_ShowString
                           _adc_read
                    _bsp_set_timeout
                     _fsm_transition
                             _printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (?) _sprintf                                             16    10      6    2950
                           _vfprintf
 ---------------------------------------------------------------------------------
 (?) _vfprintf                                             8     2      6    2751
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (?) _vfpfcnvrt                                           40    34      6    2625
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (?) _dtoa                                                28    18     10    2046
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (?) _pad                                                 10     4      6     929
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (?) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (?) _fputs                                                7     3      4     345
                              _fputc
 ---------------------------------------------------------------------------------
 (?) _fputc                                                4     0      4     248
                              _putch
 ---------------------------------------------------------------------------------
 (?) _putch                                                1     0      1      22
 ---------------------------------------------------------------------------------
 (?) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (?) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (?) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (?) _adc_read                                             3     2      1      30
 ---------------------------------------------------------------------------------
 (?) _LCD_Clear                                            0     0      0      15
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (?) _LCD_Send                                             1     0      1      15
 ---------------------------------------------------------------------------------
 (?) _state1 (recursive)                                   3     0      3    5955
                     _LCD_ShowString
                    _bsp_set_timeout
                   _bsp_stop_timeout
                     _fsm_transition
                             _printf
 ---------------------------------------------------------------------------------
 (?) _bsp_stop_timeout                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (?) _LOW_ISR                                             11    11      0      90
                                              8 COMRAM    11    11      0
                      _fsm_add_event
 ---------------------------------------------------------------------------------
 (?) _fsm_add_event                                        1     0      1      90
                          _write_evt
 ---------------------------------------------------------------------------------
 (?) _write_evt                                            4     1      3      75
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (?) _HIGH_ISR                                             8     8      0      90
                                              0 COMRAM     8     8      0
                      _fsm_add_event
 ---------------------------------------------------------------------------------
 (?) _fsm_add_event                                        1     0      1      90
                          _write_evt
 ---------------------------------------------------------------------------------
 (?) _write_evt                                            4     1      3      75
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth unknown (due to recursion)
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Send
   _adc_init
   _bsp_init
   _fsm_dispatch
     _init *
       _LCD_ShowString
         _LCD_Send
       _bsp_set_timeout
       _fsm_transition
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                 _strlen
             _fputc
     _state1 *
       _LCD_ShowString
       _bsp_set_timeout
       _bsp_stop_timeout
       _fsm_transition
       _printf
     _state2 *
       _LCD_Clear
         _LCD_Send
       _LCD_ShowString
       _adc_read
       _bsp_set_timeout
       _fsm_transition
       _printf
       _sprintf
         _vfprintf
   _fsm_get_event
     _get_evt
   _fsm_init
     _fsm_dispatch
   _uart_init

 _LOW_ISR (ROOT)
   _fsm_add_event
     _write_evt

 _HIGH_ISR (ROOT)
   _fsm_add_event
     _write_evt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     102      37        6.6%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      20       5       20.0%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     13      27       1       61.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      47      12        0.0%
DATA                 0      0     149       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Apr 16 09:38:28 2021

                       l71 2488                         l65 26F6                         l91 265E  
                       l75 251E                         l86 1FC2                         l96 21BC  
                       bsr 000FE0                        l111 2BD6                        l200 2A50  
                      l120 29F8                        l202 2A5E                        l114 2ACE  
                      l203 2A7A                        l108 2C06                        l141 2BF0  
                      l117 2B0E                        l206 2A98                        l135 2C1A  
                      l320 291A                        l138 2BDC                        l170 2006  
                      l323 2954                        l171 20B2                        l181 2312  
                      l317 2BBE                        l174 20CE                        l270 28FE  
                      l191 2B80                        l440 17CC                        l184 2374  
                      l168 1FF8                        l185 2376                        l177 22B4  
                      l282 2C20                        l194 2B8E                        l179 22C2  
                      l196 2B9C                        l276 2B70                        l188 2384  
                      l197 2B9E                        l453 1A56                        _GIE 007F97  
                      _PR2 000FBB                        u600 22C2                        u601 22BE  
                      u610 22E6                        _PR6 000F4B                        u611 22E2  
                      u620 230A                        u621 2306                        u630 2354  
                      u640 2374                        u800 20C0                        u641 2370  
                      u801 20BC                        u570 2B8E                        u650 2384  
                      u571 2B8A                        u651 2380                        u580 2B9C  
                      u660 2A5E                        u740 2120                        u581 2B98  
                      u661 2A5A                        u637 234A                        u741 211C  
                      u670 2A88                        u750 2132                        u671 2A84  
                      u751 212A                        u680 2928                        u681 2924  
                      u770 21B6                        u771 21B0                        u790 2006  
                      u791 2002                        u768 2134                        u785 21B8  
                      u970 2BEA                        u971 2BE6                        u980 1C8E  
                      u981 1C8A                        u990 1CA8                        u991 1CA4  
                      _abs 2A02                        _pad 1D9C                        tosl 000FFD  
                      wreg 000FE8                 _TXSTA1bits 000FAC                       l1004 229C  
                     l1110 29A2                       l1103 281A                       l1031 1DFE  
                     l2000 14B4                       l1034 1E6E                       l2002 14D2  
                     l2010 1A9E                       l1116 2896                       l1036 1EAE  
                     l1044 1170                       l2020 1B0C                       l2012 1AA6  
                     l2100 26C2                       l1062 1506                       l2030 1BE8  
                     l2022 1B6E                       l2014 1AAA                       l2006 1A64  
                     l2110 2474                       l2032 1BFE                       l2016 1AD2  
                     l2008 1A8C                       l1400 22F2                       l2120 24D4  
                     l2112 248C                       l2026 1BAE                       l2018 1AFA  
                     l2042 1C28                       l2050 2702                       l1410 231E  
                     l1402 230A                       l2114 24A0                       l2106 245C  
                     l2130 1EC0                       l1083 2A48                       l2044 1C54  
                     l2028 1BD6                       l2036 1C0A                       l1076 2788  
                     l2052 271A                       l1420 2B6E                       l1412 235A  
                     l1404 231A                       l2116 24BA                       l2108 2460  
                     l2124 24DA                       l2140 1F0A                       l2132 1EC4  
                     l1069 1C6A                       l2038 1C1C                       l2054 2722  
                     l2070 29C4                       l2062 2960                       l1414 235E  
                     l2118 24BC                       l2134 1ED8                       l2150 1F76  
                     l1095 1D92                       l1440 2A78                       l2056 2756  
                     l2080 2222                       l2072 29E6                       l2064 2978  
                     l1416 2B4C                       l2144 1F22                       l2136 1EE8  
                     l2160 2ABC                       l1600 2C18                       l1434 2C1C  
                     l1442 2A88                       l1450 2948                       l2058 2780  
                     l2082 2236                       l2074 21CE                       l1418 2B6A  
                     l2090 266C                       l2146 1F56                       l2138 1EF0  
                     l1610 2BB4                       l1602 2BA2                       l2170 2550  
                     l2162 252C                       l1540 25EE                       l1436 2A4E  
                     l1444 2904                       l2084 226C                       l2076 21F6  
                     l2156 2AD8                       l2068 29B2                       l2092 267C  
                     l1620 1FE8                       l1612 2BBC                       l1604 2BA6  
                     l2180 255C                       l2172 2554                       l2164 2544  
                     l1542 25F0                       l1438 2A60                       l1446 2918  
                     l2078 220E                       l1390 22B2                       l2094 2694  
                     l2270 24F0                       l1622 1FF6                       l1614 1FCC  
                     l1606 2BAA                       l1550 20D6                       l2158 2A9A  
                     l2182 2560                       l2174 2556                       l2166 2548  
                     l1544 262A                       l1376 2B7A                       l1448 2928  
                     l1800 1CA8                       l1392 22B2                       l2272 26D8  
                     l2096 26A8                       l2088 2668                       l1624 2008  
                     l1616 1FDA                       l1608 2BAC                       l1560 2140  
                     l2184 2580                       l2176 2558                       l2168 254C  
                     l1546 2644                       l1538 25D0                       l1802 1CB6  
                     l1394 22C4                       l1626 20B0                       l1618 1FE6  
                     l1570 28A0                       l1562 2184                       l1554 20DE  
                     l1634 2BC0                       l2186 25A8                       l2178 255A  
                     l1900 19C0                       l1804 1CE0                       l1812 2798  
                     l1820 2828                       l1396 22D4                       l2268 1F8C  
                     l1628 20C0                       l1580 28EC                       l1572 28C6  
                     l1564 219E                       l1556 2120                       l1548 20D2  
                     l1638 2BF4                       l1830 1518                       l1902 19DE  
                     l1806 1D2E                       l1814 27A4                       l1822 2844  
                     l1910 1DA4                       l1398 22E6                       l1582 28EE  
                     l1574 28D6                       l1566 21B8                       l1558 213E  
                     l1590 2C0A                       l1840 158C                       l1832 151C  
                     l1904 19F0                       l1808 1D74                       l1816 27BC  
                     l1824 2862                       l1920 1E0A                       l1912 1DB2  
                     l1584 28F8                       l1576 28D8                       l1592 2C0E  
                     l1850 162E                       l1842 15D6                       l1834 152C  
                     l1906 1A3A                       l1818 27DA                       l1826 287E  
                     l1922 1E20                       l1914 1DCA                       l1586 28FA  
                     l1578 28DA                       l1594 2C12                       l1860 1710  
                     l1852 1654                       l1844 15DA                       l1836 1576  
                     l1932 2A02                       l1924 1E3E                       l1916 1DDA  
                     l1940 107E                       l1588 28FC                       l1596 2C14  
                     l1870 17B0                       l1862 1714                       l1854 1664  
                     l1846 15E8                       l1838 157C                       l1934 2A22  
                     l1926 1E7C                       l1918 1DF6                       l1950 1130  
                     l1942 109A                       l1598 2C16                       l1864 1736  
                     l1856 1686                       l1848 1624                       l1880 1838  
                     l1936 2A3C                       l1792 2BDC                       l1928 1E94  
                     l1960 1196                       l1952 1132                       l1944 10BE  
                     l1858 16D2                       l1866 1754                       l1890 18DE  
                     l1882 183E                       l1874 17DA                       l1794 2BEA  
                     l1970 11E8                       l1962 11A4                       l1954 114C  
                     l1946 10D8                       l1868 1766                       l1892 1904  
                     l1884 184E                       l1876 17DE                       l1796 1C74  
                     l1980 13A8                       l1972 12A6                       l1964 11B8  
                     l1956 1164                       l1948 1122                       l1894 1914  
                     l1886 1898                       l1878 17EE                       l1798 1C8E  
                     l1990 144C                       l1982 13E4                       l1974 12BA  
                     l1966 11CC                       l1958 117C                       l1896 1960  
                     l1888 18D4                       l1992 145A                       l1984 1404  
                     l1976 12CE                       l1968 11D4                       l1898 199E  
                     l1994 146E                       l1986 1424                       l1978 1388  
                     l1996 1488                       l1988 1432                       l1998 14A0  
                     STR_1 1048                       STR_2 1037                       STR_3 1001  
                     STR_4 1059                       STR_5 1013                       STR_6 1067  
                     STR_7 1025                       _GIEH 007F97                       _GIEL 007F96  
                     u1000 1CE0                       u1001 1CDC                       u1010 1D2E  
                     u1011 1D2A                       u1100 1664                       u1020 281A  
                     u1101 1660                       u1021 2816                       u1110 16D2  
                     u1030 287E                       u1111 16CE                       u1031 287A  
                     u1120 1754                       u1040 152C                       u1200 18D4  
                     u1121 1750                       u1041 1528                       u1201 18D0  
                     u1130 1766                       u1050 1576                       u1210 1914  
                     u1131 1762                       u1211 1910                       u1140 17B0  
                     u1060 158C                       u1220 1960                       u1300 1E7C  
                     u1061 1588                       u1221 195C                       u1301 1E78  
                     u1070 15D6                       u1230 19DE                       u1310 2A22  
                     u1231 19DA                       u1311 2A1E                       u1240 19F0  
                     u1160 17EE                       u1400 11A4                       u1081 15E0  
                     u1241 19EC                       u1161 17EA                       u1401 11A0  
                     u1090 1624                       u1250 1A3A                       u1170 1838  
                     u1410 13A8                       u1330 10AC                       u1091 1620  
                     u1411 13A4                       u1331 10A6                       u1180 184E  
                     u1420 13E4                       u1340 10AE                       u1500 1AD2  
                     u1181 184A                       u1421 13E0                       u1501 1ACE  
                     u1190 1898                       u1270 1DB2                       u1430 1404  
                     u1350 10D8                       u1510 1AFA                       u1271 1DAE  
                     u1431 1400                       u1351 10D4                       u1511 1AF6  
                     u1280 1DDA                       u1440 1424                       u1360 1122  
                     u1520 1BD6                       u1281 1DD6                       u1441 1420  
                     u1521 1BD2                       u1290 1E6E                       u1450 1432  
                     u1370 1130                       u1530 2780                       u1291 1E6A  
                     u1451 142E                       u1371 112C                       u1531 277C  
                     u1460 144C                       u1380 114C                       u1461 1448  
                     u1381 1148                       u1470 145A                       u1390 1196  
                     u1550 25A8                       u1471 1456                       u1391 1192  
                     u1551 25A4                       u1480 1488                       u1481 1484  
                     u1490 1A8C                       u1491 1A88                       u1548 2AFA  
                     u1549 2B0E                       u1567 2536                       _IPEN 007E87  
                     u1577 1FEE                       u1587 20C6                       u1597 2A8E  
                     _TMR1 000FCE                       _TMR6 000F4C            __end_of_LOW_ISR 015C  
   __size_of_fsm_add_event 0016                       _dbuf 0060                       _main 2526  
                     _dtoa 1076                       _init 2668         __size_of_LCD_Clear 004C  
                     _prec 0031                       _nout 002D                       fsr0h 000FEA  
                     fsr1h 000FE2                       indf0 000FEF                       fsr2h 000FDA  
                     fsr0l 000FE9                       indf1 000FE7                       indf2 000FDF  
                     fsr1l 000FE1                       fsr2l 000FD9                       btemp 0001  
                     start 015C               ___param_bank 000000           __end_of_HIGH_ISR 245C  
           _LCD_ShowString 22B0           __end_of_LCD_Init 20D0           __end_of_LCD_Send 2BA2  
          __end_of___aodiv 17D6            __end_of___aomod 1A5C                      i1l300 012E  
                    i2l290 243A                      _TX1IF 007CF4                      u70_20 25E2  
                    u70_21 25DA                      u72_20 265C                      u71_28 25E4  
                    u72_21 2656                      u73_25 265E     __size_of_fsm_get_event 001C  
          __end_of_get_evt 21C6            _bsp_set_timeout 2B4C                      _flags 0033  
                    _fputc 1C74                      _fputs 2792                      _width 002F  
                    _putch 2BDC                      pclath 000FFA                      tablat 000FF5  
                    ltemp0 0001                      ltemp1 0005                      ltemp2 0009  
                    plusw1 000FE3                      ttemp0 0001                      ttemp1 0004  
                    ttemp2 0007                      ttemp3 000A                      ttemp5 0002  
                    ttemp6 0005                      ttemp7 0009                      status 000FD8  
                    wtemp0 0001                      wtemp1 0003                      wtemp2 0005  
                    wtemp3 0007                      wtemp4 0009                      wtemp5 000B  
                    wtemp8 0002            __end_of_sprintf 22B0            __initialization 2B16  
   __end_of_LCD_ShowString 238E               __end_of_main 25CE               __end_of_dtoa 1510  
             __end_of_init 26FE              _fsm_add_event 2BF4          __end_of_LCD_Clear 2A9A  
            __activetblptr 000002                  ??_LOW_ISR 003D                     _ADRESH 000FC4  
                   _ADRESL 000FC3                     _ANSELA 000F38                     _ANSELE 000F3C  
                   _GODONE 007E11           __end_of_adc_init 2BC0           __end_of_adc_read 295C  
                   i1l1700 00F0                     i1l1710 012C                     i1l1702 00F8  
                   i1l1704 010A                     i1l1706 0112                     i1l1708 0124  
                   i1l1690 0048                     i1l1692 0056                     i1l1694 0064  
                   i1l1696 00D6                     i1l1698 00DE                     i2l1670 23CE  
                   i2l1680 23FC                     i2l1672 23D6                     i2l1682 242A  
                   i2l1674 23DE                     i2l1666 23B2                     i2l1684 2432  
                   i2l1668 23C0                     i2l1676 23E0                     i2l1686 2436  
                   i2l1678 23EE                     i2l1688 2438                     _SPBRG1 000FAF  
                   _TMR1IE 007CE8                     _TMR1IF 007CF0                     _TMR2IE 007CE9  
                   _TMR2IF 007CF1                     _TMR6IE 007BEA                     _TMR1ON 007E68  
                   _TMR6IF 007BF2                     _TMR2ON 007DD2                     _TMR6ON 007A52  
                   _SSP2IF 007D27                     _TXREG1 000FAD              _fsm_get_event 2BC0  
         __end_of_bsp_init 2900           __end_of_fsm_init 2AD8                     clear_0 2B1E  
                   clear_1 2B30                     clear_2 2B3C                     isa$std 000001  
                   _printf 295C                     _state1 245C                     _state2 1EB8  
                   _strlen 2824    __end_of_bsp_set_timeout 2B7A                     lltemp0 0001  
                   lltemp1 0009                     lltemp2 0011                     lltemp3 0019  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8           __end_of_vfprintf 2792                  ?_HIGH_ISR 0035  
               __accesstop 0060    __end_of__initialization 2B42              ___rparam_used 000001  
__size_of_bsp_stop_timeout 0006             __pcstackCOMRAM 0035                 ___inthi_sp 0614  
               ___intlo_sp 0AA6              __end_of_fputc 1D9C              __end_of_fputs 2824  
            __end_of_putch 2BF4                 ??_HIGH_ISR 0035                 __pbssBANK0 0060  
  __size_of_fsm_transition 0050         __size_of_uart_init 0012       __end_of_fsm_dispatch 2B16  
       __size_of_vfpfcnvrt 0218                    i1u90_20 0090                    i1u90_21 008A  
                  i1u90_26 0092                    i1u91_20 00A8                    i1u91_21 00A2  
                  i1u91_26 00AA                    i1u92_20 00C0                    i1u92_21 00BA  
                  i1u92_26 00C2                    i1u93_20 00D6                    i1u93_21 00D2  
                  i1u94_20 00F0                    i1u94_21 00EC                    i1u95_20 010A  
                  i1u87_20 0056                    i1u95_21 0106                    i1u87_21 0052  
                  i1u96_20 0124                    i1u88_20 0064                    i1u96_21 0120  
                  i1u88_21 0060                    i1u89_20 0078                    i1u89_21 0072  
                  i1u89_26 007A                    i2u82_40 23C0                    i2u82_41 23BC  
                  i2u83_40 23CE                    i2u83_41 23CA                    i2u84_40 23EE  
                  i2u84_41 23EA                    i2u85_40 23FC                    i2u85_41 23F8  
                  i2u86_40 242A                    _LOW_ISR 0018                    i2u86_41 2426  
                  _SSP2ADD 000F6E                    _SSP2BUF 000F6F         __size_of_write_evt 009A  
                  __Hparam 0000                    __Lparam 0000                    ___aodiv 1510  
                  ___aomod 17D6               __psmallconst 1000                    __pcinit 2B16  
                  __ramtop 1000                    __ptext0 2526                    __ptext1 2C0A  
                  __ptext2 2A9A                    __ptext3 2BC0                    __ptext4 20D0  
                  __ptext5 28A0                    __ptext6 2BA2                    __ptext7 1FCC  
                  __ptext8 1EB8                    __ptext9 245C            __size_of_printf 0056  
          __size_of_state1 00CA            __size_of_state2 0114                    _get_evt 20D0  
                  us115999 17C2            __size_of_strlen 007C                    us132999 1090  
                  us126999 1A4C                  _T1CONbits 000FCD                  _T2CONbits 000FBA  
             __size_of_abs 004C               __size_of_pad 011C                    _buttons 0021  
                _T6CONbits 000F4A                  _LCD_Clear 2A4E                    fp__init 000C  
                  _sprintf 21C6             __pintcode_body 238E       end_of_initialization 2B42  
            __Lmediumconst 0000                    int_func 238E           _bsp_stop_timeout 2C1C  
        __end_of_uart_init 2C1C          __end_of_vfpfcnvrt 1C74                    postdec0 000FED  
                  postdec1 000FE5                    postdec2 000FDD                    postinc0 000FEE  
                  postinc1 000FE6                    postinc2 000FDE                  _PORTAbits 000F80  
                _PORTCbits 000F82          __end_of_write_evt 2668                  _TRISAbits 000F92  
                _TRISBbits 000F93                  _TRISCbits 000F94                  _TRISDbits 000F95  
        __size_of_HIGH_ISR 2454          __size_of_LCD_Init 0104          __size_of_LCD_Send 0028  
           _fsm_transition 29B2      __size_of_fsm_dispatch 003E             __end_of_printf 29B2  
           __end_of_state1 2526             __end_of_state2 1FCC             __end_of_strlen 28A0  
      start_initialization 2B16                __end_of_abs 2A4E                __end_of_pad 1EB8  
   __end_of_fsm_transition 2A02               _fsm_dispatch 2AD8                __pbssBIGRAM 0080  
        __size_of_adc_init 001E          __size_of_adc_read 005C                __pbssCOMRAM 0021  
                 ?_LOW_ISR 0035          __size_of_bsp_init 0060          __size_of_fsm_init 003E  
                __pintcode 0008      __end_of_fsm_add_event 2C0A                __pintcodelo 0018  
        __size_of_vfprintf 0094                __smallconst 1000   __end_of_bsp_stop_timeout 2C22  
           __size_of_fputc 0128             __size_of_fputs 0092   __size_of_bsp_set_timeout 002E  
           __size_of_putch 0018                   _HIGH_ISR 0008                   _LCD_Init 1FCC  
                 _LCD_Send 2B7A                   _LATAbits 000F89                   _LATBbits 000F8A  
                 _LATCbits 000F8B                   _LATDbits 000F8C      __end_of_fsm_get_event 2BDC  
                 _IPR1bits 000F9F                  _uart_init 2C0A                  _vfpfcnvrt 1A5C  
               _ADCON0bits 000FC2                 _ADCON2bits 000FC0                  fp__state1 000C  
                fp__state2 000C                _bsp_timeout 0029           __size_of_LOW_ISR 0144  
                _write_evt 25CE                   __Hrparam 0000                   __Lrparam 0000  
         __size_of___aodiv 02C6           __size_of___aomod 0286                _event_queue 0080  
                 _adc_init 2BA2                   _adc_read 2900                 _ANSELDbits 000F3B  
         __size_of_get_evt 00F6                   __ptext10 2668                   __ptext11 22B0  
                 __ptext20 1D9C                   __ptext12 2B4C                   __ptext21 2824  
                 __ptext13 295C                   __ptext30 2B7A                   __ptext22 2792  
                 __ptext14 29B2                   __ptext31 2C1C                   __ptext23 1C74  
                 __ptext15 2AD8                   __ptext24 2BDC                   __ptext16 21C6  
                 __ptext33 2BF4                   __ptext25 2A02                   __ptext17 26FE  
                 __ptext34 25CE                   __ptext26 17D6                   __ptext18 1A5C  
                 __ptext27 1510                   __ptext19 1076                   __ptext28 2900  
                 __ptext29 2A4E               _SSP2CON1bits 000F6C               _SSP2CON2bits 000F6B  
                 _bsp_init 28A0           __size_of_sprintf 00EA                   _fsm_init 2A9A  
            __size_of_main 00A8              __size_of_dtoa 049A              __size_of_init 0096  
                 isa$xinst 000000                   _vfprintf 26FE    __size_of_LCD_ShowString 00DE  
             _SSP2STATbits 000F6D                   intlevel1 0000                   intlevel2 0000  
               _RCSTA1bits 000FAB  
