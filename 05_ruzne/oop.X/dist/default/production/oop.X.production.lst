

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Apr 16 09:28:04 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56  0000                     
    57                           ; Version 2.20
    58                           ; Generated 05/05/2020 GMT
    59                           ; 
    60                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F46K22 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     _TXREG1	set	4013
    92  0000                     _TXSTA1bits	set	4012
    93  0000                     _RCSTA1bits	set	4011
    94  0000                     _SPBRG1	set	4015
    95  0000                     _TRISCbits	set	3988
    96  0000                     _TX1IF	set	31988
    97                           
    98                           	psect	smallconst
    99  001000                     __psmallconst:
   100                           	callstack 0
   101  001000  00                 	db	0
   102  001001                     STR_4:
   103  001001  49                 	db	73	;'I'
   104  001002  4E                 	db	78	;'N'
   105  001003  46                 	db	70	;'F'
   106  001004  00                 	db	0
   107  001005                     STR_8:
   108  001005  4E                 	db	78	;'N'
   109  001006  41                 	db	65	;'A'
   110  001007  4E                 	db	78	;'N'
   111  001008  00                 	db	0
   112  001009                     STR_5:
   113  001009  69                 	db	105	;'i'
   114  00100A  6E                 	db	110	;'n'
   115  00100B  66                 	db	102	;'f'
   116  00100C  00                 	db	0
   117  00100D                     STR_9:
   118  00100D  6E                 	db	110	;'n'
   119  00100E  61                 	db	97	;'a'
   120  00100F  6E                 	db	110	;'n'
   121  001010  00                 	db	0
   122  001011                     STR_1:
   123  001011  25                 	db	37
   124  001012  64                 	db	100	;'d'
   125  001013  0A                 	db	10
   126  001014  00                 	db	0
   127  001015                     STR_3:
   128  001015  25                 	db	37
   129  001016  66                 	db	102	;'f'
   130  001017  0A                 	db	10
   131  001018  00                 	db	0
   132  001019                     STR_12:
   133  001019  6C                 	db	108	;'l'
   134  00101A  66                 	db	102	;'f'
   135  00101B  00                 	db	0
   136  00101C  00                 	db	0	; dummy byte at the end
   137  0000                     
   138                           ; #config settings
   139                           
   140                           	psect	cinit
   141  0047F8                     __pcinit:
   142                           	callstack 0
   143  0047F8                     start_initialization:
   144                           	callstack 0
   145  0047F8                     __initialization:
   146                           	callstack 0
   147                           
   148                           ; Clear objects allocated to BANK1 (80 bytes)
   149  0047F8  EE01  F000         	lfsr	0,__pbssBANK1
   150  0047FC  0E50               	movlw	80
   151  0047FE                     clear_0:
   152  0047FE  6AEE               	clrf	postinc0,c
   153  004800  06E8               	decf	wreg,f,c
   154  004802  E1FD               	bnz	clear_0
   155                           
   156                           ; Clear objects allocated to BANK0 (16 bytes)
   157  004804  EE00  F0E7         	lfsr	0,__pbssBANK0
   158  004808  0E10               	movlw	16
   159  00480A                     clear_1:
   160  00480A  6AEE               	clrf	postinc0,c
   161  00480C  06E8               	decf	wreg,f,c
   162  00480E  E1FD               	bnz	clear_1
   163  004810                     end_of_initialization:
   164                           	callstack 0
   165  004810                     __end_of__initialization:
   166                           	callstack 0
   167  004810  0E00               	movlw	low (__Lmediumconst shr (0+16))
   168  004812  6EF8               	movwf	tblptru,c
   169  004814  0100               	movlb	0
   170  004816  EF2F  F018         	goto	_main	;jump to C main() function
   171                           
   172                           	psect	bssBANK0
   173  0000E7                     __pbssBANK0:
   174                           	callstack 0
   175  0000E7                     floorf@F527:
   176                           	callstack 0
   177  0000E7                     	ds	4
   178  0000EB                     ___fpclassifyf@F465:
   179                           	callstack 0
   180  0000EB                     	ds	4
   181  0000EF                     _nout:
   182                           	callstack 0
   183  0000EF                     	ds	2
   184  0000F1                     _width:
   185                           	callstack 0
   186  0000F1                     	ds	2
   187  0000F3                     _prec:
   188                           	callstack 0
   189  0000F3                     	ds	2
   190  0000F5                     _flags:
   191                           	callstack 0
   192  0000F5                     	ds	2
   193                           
   194                           	psect	bssBANK1
   195  000100                     __pbssBANK1:
   196                           	callstack 0
   197  000100                     _dbuf:
   198                           	callstack 0
   199  000100                     	ds	80
   200                           
   201                           	psect	cstackBANK0
   202  000060                     __pcstackBANK0:
   203                           	callstack 0
   204  000060                     _efgtoa$1067:
   205                           	callstack 0
   206                           
   207                           ; 2 bytes @ 0x0
   208  000060                     	ds	2
   209  000062                     _efgtoa$1068:
   210                           	callstack 0
   211                           
   212                           ; 2 bytes @ 0x2
   213  000062                     	ds	2
   214  000064                     _efgtoa$1072:
   215                           	callstack 0
   216                           
   217                           ; 2 bytes @ 0x4
   218  000064                     	ds	2
   219  000066                     _efgtoa$1076:
   220                           	callstack 0
   221                           
   222                           ; 2 bytes @ 0x6
   223  000066                     	ds	2
   224  000068                     _efgtoa$1077:
   225                           	callstack 0
   226                           
   227                           ; 2 bytes @ 0x8
   228  000068                     	ds	2
   229  00006A                     _efgtoa$1078:
   230                           	callstack 0
   231                           
   232                           ; 2 bytes @ 0xA
   233  00006A                     	ds	2
   234  00006C                     efgtoa@t:
   235                           	callstack 0
   236                           
   237                           ; 2 bytes @ 0xC
   238  00006C                     	ds	2
   239  00006E                     efgtoa@pp:
   240                           	callstack 0
   241                           
   242                           ; 2 bytes @ 0xE
   243  00006E                     	ds	2
   244  000070                     efgtoa@ne:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x10
   248  000070                     	ds	2
   249  000072                     efgtoa@m:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0x12
   253  000072                     	ds	2
   254  000074                     efgtoa@ou:
   255                           	callstack 0
   256                           
   257                           ; 4 bytes @ 0x14
   258  000074                     	ds	4
   259  000078                     efgtoa@d:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x18
   263  000078                     	ds	2
   264  00007A                     efgtoa@sign:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x1A
   268  00007A                     	ds	2
   269  00007C                     efgtoa@p:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0x1C
   273  00007C                     	ds	2
   274  00007E                     efgtoa@w:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x1E
   278  00007E                     	ds	2
   279  000080                     efgtoa@nmode:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0x20
   283  000080                     	ds	1
   284  000081                     efgtoa@mode:
   285                           	callstack 0
   286                           
   287                           ; 1 bytes @ 0x21
   288  000081                     	ds	1
   289  000082                     efgtoa@h:
   290                           	callstack 0
   291                           
   292                           ; 4 bytes @ 0x22
   293  000082                     	ds	4
   294  000086                     efgtoa@l:
   295                           	callstack 0
   296                           
   297                           ; 4 bytes @ 0x26
   298  000086                     	ds	4
   299  00008A                     efgtoa@i:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0x2A
   303  00008A                     	ds	2
   304  00008C                     efgtoa@g:
   305                           	callstack 0
   306                           
   307                           ; 4 bytes @ 0x2C
   308  00008C                     	ds	4
   309  000090                     efgtoa@e:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x30
   313  000090                     	ds	2
   314  000092                     efgtoa@n:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x32
   318  000092                     	ds	2
   319  000094                     efgtoa@u:
   320                           	callstack 0
   321                           
   322                           ; 4 bytes @ 0x34
   323  000094                     	ds	4
   324  000098                     ?_vfprintf:
   325                           	callstack 0
   326  000098                     vfprintf@fp:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x38
   330  000098                     	ds	2
   331  00009A                     vfprintf@fmt:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x3A
   335  00009A                     	ds	2
   336  00009C                     vfprintf@ap:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x3C
   340  00009C                     	ds	2
   341  00009E                     ?_printf:
   342                           	callstack 0
   343  00009E                     printf@fmt:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0x3E
   347  00009E                     	ds	6
   348  0000A4                     printf@ap:
   349                           	callstack 0
   350                           
   351                           ; 2 bytes @ 0x44
   352  0000A4                     	ds	2
   353  0000A6                     ??_main:
   354                           
   355                           ; 1 bytes @ 0x46
   356  0000A6                     	ds	2
   357  0000A8                     _main$1389:
   358                           	callstack 0
   359                           
   360                           ; 4 bytes @ 0x48
   361  0000A8                     	ds	4
   362  0000AC                     main@dist:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x4C
   366  0000AC                     	ds	2
   367  0000AE                     main@c1:
   368                           	callstack 0
   369                           
   370                           ; 13 bytes @ 0x4E
   371  0000AE                     	ds	13
   372  0000BB                     main@p2:
   373                           	callstack 0
   374                           
   375                           ; 10 bytes @ 0x5B
   376  0000BB                     	ds	10
   377  0000C5                     main@pid1:
   378                           	callstack 0
   379                           
   380                           ; 24 bytes @ 0x65
   381  0000C5                     	ds	24
   382  0000DD                     main@p1:
   383                           	callstack 0
   384                           
   385                           ; 10 bytes @ 0x7D
   386  0000DD                     	ds	10
   387                           
   388                           	psect	cstackCOMRAM
   389  000001                     __pcstackCOMRAM:
   390                           	callstack 0
   391  000001                     ?_strlen:
   392                           	callstack 0
   393  000001                     ?___fpclassifyf:
   394                           	callstack 0
   395  000001                     ?_isupper:
   396                           	callstack 0
   397  000001                     ?_strncmp:
   398                           	callstack 0
   399  000001                     ?___wmul:
   400                           	callstack 0
   401  000001                     ?___awdiv:
   402                           	callstack 0
   403  000001                     ?___awmod:
   404                           	callstack 0
   405  000001                     ?___fldiv:
   406                           	callstack 0
   407  000001                     ?___flmul:
   408                           	callstack 0
   409  000001                     ?___flneg:
   410                           	callstack 0
   411  000001                     ?___fltol:
   412                           	callstack 0
   413  000001                     ?___aodiv:
   414                           	callstack 0
   415  000001                     ?___aomod:
   416                           	callstack 0
   417  000001                     putch@data:
   418                           	callstack 0
   419  000001                     set@self:
   420                           	callstack 0
   421  000001                     move@self:
   422                           	callstack 0
   423  000001                     point_init@self:
   424                           	callstack 0
   425  000001                     pid_init@self:
   426                           	callstack 0
   427  000001                     ___wmul@multiplier:
   428                           	callstack 0
   429  000001                     ___awdiv@dividend:
   430                           	callstack 0
   431  000001                     ___awmod@dividend:
   432                           	callstack 0
   433  000001                     isupper@c:
   434                           	callstack 0
   435  000001                     strcpy@dest:
   436                           	callstack 0
   437  000001                     strlen@s:
   438                           	callstack 0
   439  000001                     strncmp@_l:
   440                           	callstack 0
   441  000001                     ___fleq@ff1:
   442                           	callstack 0
   443  000001                     ___flneg@f1:
   444                           	callstack 0
   445  000001                     ___fltol@f1:
   446                           	callstack 0
   447  000001                     ___fldiv@b:
   448                           	callstack 0
   449  000001                     ___flmul@b:
   450                           	callstack 0
   451  000001                     ___fpclassifyf@x:
   452                           	callstack 0
   453  000001                     ___aodiv@dividend:
   454                           	callstack 0
   455  000001                     ___aomod@dividend:
   456                           	callstack 0
   457                           
   458                           ; 8 bytes @ 0x0
   459  000001                     	ds	1
   460  000002                     fputc@c:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x1
   464  000002                     	ds	1
   465  000003                     ??_isupper:
   466  000003                     set@x:
   467                           	callstack 0
   468  000003                     move@dx:
   469                           	callstack 0
   470  000003                     point_init@x:
   471                           	callstack 0
   472  000003                     ___wmul@multiplicand:
   473                           	callstack 0
   474  000003                     ___awdiv@divisor:
   475                           	callstack 0
   476  000003                     ___awmod@divisor:
   477                           	callstack 0
   478  000003                     strcpy@src:
   479                           	callstack 0
   480  000003                     strlen@a:
   481                           	callstack 0
   482  000003                     strncmp@_r:
   483                           	callstack 0
   484  000003                     pid_init@kp:
   485                           	callstack 0
   486                           
   487                           ; 4 bytes @ 0x2
   488  000003                     	ds	1
   489  000004                     fputc@fp:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x3
   493  000004                     	ds	1
   494  000005                     ??___fpclassifyf:
   495  000005                     ??_strcpy:
   496  000005                     ??___fltol:
   497  000005                     ___awdiv@counter:
   498                           	callstack 0
   499  000005                     ___awmod@counter:
   500                           	callstack 0
   501  000005                     set@y:
   502                           	callstack 0
   503  000005                     move@dy:
   504                           	callstack 0
   505  000005                     point_init@y:
   506                           	callstack 0
   507  000005                     ___wmul@product:
   508                           	callstack 0
   509  000005                     strncmp@n:
   510                           	callstack 0
   511  000005                     ___fleq@ff2:
   512                           	callstack 0
   513  000005                     ___fldiv@a:
   514                           	callstack 0
   515  000005                     ___flmul@a:
   516                           	callstack 0
   517                           
   518                           ; 4 bytes @ 0x4
   519  000005                     	ds	1
   520  000006                     ??_fputc:
   521  000006                     ___awdiv@sign:
   522                           	callstack 0
   523  000006                     ___awmod@sign:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0x5
   527  000006                     	ds	1
   528  000007                     ??_strncmp:
   529  000007                     ?_tolower:
   530                           	callstack 0
   531  000007                     RGB_point_init@self:
   532                           	callstack 0
   533  000007                     ___awdiv@quotient:
   534                           	callstack 0
   535  000007                     strcpy@s:
   536                           	callstack 0
   537  000007                     tolower@c:
   538                           	callstack 0
   539  000007                     pid_init@ki:
   540                           	callstack 0
   541                           
   542                           ; 4 bytes @ 0x6
   543  000007                     	ds	1
   544  000008                     strncmp@l:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x7
   548  000008                     	ds	1
   549  000009                     ??___fldiv:
   550  000009                     ??___flmul:
   551  000009                     ??_tolower:
   552  000009                     ??___fleq:
   553  000009                     ?_int_sqrt:
   554                           	callstack 0
   555  000009                     ___fltol@sign1:
   556                           	callstack 0
   557  000009                     int_sqrt@s:
   558                           	callstack 0
   559  000009                     RGB_point_init@x:
   560                           	callstack 0
   561  000009                     ___fpclassifyf@e:
   562                           	callstack 0
   563  000009                     strcpy@d:
   564                           	callstack 0
   565  000009                     ___aodiv@divisor:
   566                           	callstack 0
   567  000009                     ___aomod@divisor:
   568                           	callstack 0
   569                           
   570                           ; 8 bytes @ 0x8
   571  000009                     	ds	1
   572  00000A                     ___fltol@exp1:
   573                           	callstack 0
   574  00000A                     strncmp@r:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x9
   578  00000A                     	ds	1
   579  00000B                     ??_int_sqrt:
   580  00000B                     RGB_point_init@y:
   581                           	callstack 0
   582  00000B                     fputs@s:
   583                           	callstack 0
   584  00000B                     pid_init@max:
   585                           	callstack 0
   586  00000B                     ___fpclassifyf@u:
   587                           	callstack 0
   588                           
   589                           ; 4 bytes @ 0xA
   590  00000B                     	ds	2
   591  00000D                     RGB_point_init@R:
   592                           	callstack 0
   593  00000D                     ___flmul@sign:
   594                           	callstack 0
   595  00000D                     int_sqrt@x1:
   596                           	callstack 0
   597  00000D                     fputs@fp:
   598                           	callstack 0
   599  00000D                     _tolower$1189:
   600                           	callstack 0
   601  00000D                     ___fldiv@rem:
   602                           	callstack 0
   603                           
   604                           ; 4 bytes @ 0xC
   605  00000D                     	ds	1
   606  00000E                     RGB_point_init@G:
   607                           	callstack 0
   608  00000E                     ___flmul@grs:
   609                           	callstack 0
   610                           
   611                           ; 4 bytes @ 0xD
   612  00000E                     	ds	1
   613  00000F                     RGB_point_init@B:
   614                           	callstack 0
   615  00000F                     fputs@c:
   616                           	callstack 0
   617  00000F                     int_sqrt@x0:
   618                           	callstack 0
   619  00000F                     pid_init@min:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0xE
   623  00000F                     	ds	1
   624  000010                     fputs@i:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0xF
   628  000010                     	ds	1
   629  000011                     ?_distance:
   630                           	callstack 0
   631  000011                     ___aodiv@counter:
   632                           	callstack 0
   633  000011                     ___aomod@counter:
   634                           	callstack 0
   635  000011                     ___fldiv@sign:
   636                           	callstack 0
   637  000011                     distance@self:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x10
   641  000011                     	ds	1
   642  000012                     ?_pad:
   643                           	callstack 0
   644  000012                     ___aodiv@sign:
   645                           	callstack 0
   646  000012                     ___aomod@sign:
   647                           	callstack 0
   648  000012                     ___flmul@aexp:
   649                           	callstack 0
   650  000012                     ___fldiv@new_exp:
   651                           	callstack 0
   652  000012                     pad@fp:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x11
   656  000012                     	ds	1
   657  000013                     ?_abs:
   658                           	callstack 0
   659  000013                     ___flmul@bexp:
   660                           	callstack 0
   661  000013                     distance@other:
   662                           	callstack 0
   663  000013                     abs@a:
   664                           	callstack 0
   665  000013                     pid_init@h:
   666                           	callstack 0
   667  000013                     ___aodiv@quotient:
   668                           	callstack 0
   669                           
   670                           ; 8 bytes @ 0x12
   671  000013                     	ds	1
   672  000014                     pad@buf:
   673                           	callstack 0
   674  000014                     ___fldiv@grs:
   675                           	callstack 0
   676  000014                     ___flmul@prod:
   677                           	callstack 0
   678                           
   679                           ; 4 bytes @ 0x13
   680  000014                     	ds	1
   681  000015                     ??_abs:
   682  000015                     ??_distance:
   683                           
   684                           ; 1 bytes @ 0x14
   685  000015                     	ds	1
   686  000016                     pad@p:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x15
   690  000016                     	ds	1
   691  000017                     pid_reset@self:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x16
   695  000017                     	ds	1
   696  000018                     ??_pad:
   697  000018                     ___fldiv@bexp:
   698                           	callstack 0
   699  000018                     ___flmul@temp:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x17
   703  000018                     	ds	1
   704  000019                     ___fldiv@aexp:
   705                           	callstack 0
   706  000019                     distance@pwd:
   707                           	callstack 0
   708  000019                     pad@i:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x18
   712  000019                     	ds	1
   713  00001A                     ?___fladd:
   714                           	callstack 0
   715  00001A                     ?_floorf:
   716                           	callstack 0
   717  00001A                     ___flge@ff1:
   718                           	callstack 0
   719  00001A                     ___fladd@b:
   720                           	callstack 0
   721  00001A                     floorf@x:
   722                           	callstack 0
   723                           
   724                           ; 4 bytes @ 0x19
   725  00001A                     	ds	1
   726  00001B                     distance@dx:
   727                           	callstack 0
   728  00001B                     pad@w:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x1A
   732  00001B                     	ds	2
   733  00001D                     ?_dtoa:
   734                           	callstack 0
   735  00001D                     distance@dy:
   736                           	callstack 0
   737  00001D                     dtoa@fp:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x1C
   741  00001D                     	ds	1
   742  00001E                     ??_floorf:
   743  00001E                     ___flge@ff2:
   744                           	callstack 0
   745  00001E                     ___fladd@a:
   746                           	callstack 0
   747                           
   748                           ; 4 bytes @ 0x1D
   749  00001E                     	ds	1
   750  00001F                     dtoa@d:
   751                           	callstack 0
   752                           
   753                           ; 8 bytes @ 0x1E
   754  00001F                     	ds	3
   755  000022                     ??___fladd:
   756  000022                     ??___flge:
   757                           
   758                           ; 1 bytes @ 0x21
   759  000022                     	ds	2
   760  000024                     floorf@m:
   761                           	callstack 0
   762                           
   763                           ; 4 bytes @ 0x23
   764  000024                     	ds	2
   765  000026                     ___fladd@signs:
   766                           	callstack 0
   767                           
   768                           ; 1 bytes @ 0x25
   769  000026                     	ds	1
   770  000027                     ??_dtoa:
   771  000027                     ___fladd@aexp:
   772                           	callstack 0
   773                           
   774                           ; 1 bytes @ 0x26
   775  000027                     	ds	1
   776  000028                     ___fladd@bexp:
   777                           	callstack 0
   778  000028                     floorf@e:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x27
   782  000028                     	ds	1
   783  000029                     ___fladd@grs:
   784                           	callstack 0
   785                           
   786                           ; 1 bytes @ 0x28
   787  000029                     	ds	1
   788  00002A                     ?___flsub:
   789                           	callstack 0
   790  00002A                     ___flsub@b:
   791                           	callstack 0
   792  00002A                     floorf@u:
   793                           	callstack 0
   794                           
   795                           ; 4 bytes @ 0x29
   796  00002A                     	ds	4
   797  00002E                     ___flsub@a:
   798                           	callstack 0
   799                           
   800                           ; 4 bytes @ 0x2D
   801  00002E                     	ds	1
   802  00002F                     _dtoa$1043:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x2E
   806  00002F                     	ds	2
   807  000031                     dtoa@p:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x30
   811  000031                     	ds	1
   812  000032                     ?_efgtoa:
   813                           	callstack 0
   814  000032                     ?_pid_step:
   815                           	callstack 0
   816  000032                     pid_step@self:
   817                           	callstack 0
   818  000032                     efgtoa@fp:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x31
   822  000032                     	ds	1
   823  000033                     dtoa@w:
   824                           	callstack 0
   825                           
   826                           ; 2 bytes @ 0x32
   827  000033                     	ds	1
   828  000034                     pid_step@setpoint:
   829                           	callstack 0
   830  000034                     efgtoa@f:
   831                           	callstack 0
   832                           
   833                           ; 4 bytes @ 0x33
   834  000034                     	ds	1
   835  000035                     dtoa@s:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0x34
   839  000035                     	ds	2
   840  000037                     dtoa@n:
   841                           	callstack 0
   842                           
   843                           ; 8 bytes @ 0x36
   844  000037                     	ds	1
   845  000038                     efgtoa@c:
   846                           	callstack 0
   847  000038                     pid_step@feedback:
   848                           	callstack 0
   849                           
   850                           ; 4 bytes @ 0x37
   851  000038                     	ds	1
   852  000039                     ??_efgtoa:
   853                           
   854                           ; 1 bytes @ 0x38
   855  000039                     	ds	3
   856  00003C                     pid_step@kgain:
   857                           	callstack 0
   858                           
   859                           ; 4 bytes @ 0x3B
   860  00003C                     	ds	3
   861  00003F                     dtoa@i:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x3E
   865  00003F                     	ds	1
   866  000040                     _pid_step$1390:
   867                           	callstack 0
   868                           
   869                           ; 4 bytes @ 0x3F
   870  000040                     	ds	1
   871  000041                     ?_vfpfcnvrt:
   872                           	callstack 0
   873  000041                     vfpfcnvrt@fp:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0x40
   877  000041                     	ds	2
   878  000043                     vfpfcnvrt@fmt:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x42
   882  000043                     	ds	1
   883  000044                     pid_step@err:
   884                           	callstack 0
   885                           
   886                           ; 4 bytes @ 0x43
   887  000044                     	ds	1
   888  000045                     vfpfcnvrt@ap:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0x44
   892  000045                     	ds	2
   893  000047                     ??_vfpfcnvrt:
   894                           
   895                           ; 1 bytes @ 0x46
   896  000047                     	ds	1
   897  000048                     pid_step@action:
   898                           	callstack 0
   899                           
   900                           ; 4 bytes @ 0x47
   901  000048                     	ds	3
   902  00004B                     vfpfcnvrt@ll:
   903                           	callstack 0
   904                           
   905                           ; 8 bytes @ 0x4A
   906  00004B                     	ds	8
   907  000053                     _vfpfcnvrt$1096:
   908                           	callstack 0
   909                           
   910                           ; 2 bytes @ 0x52
   911  000053                     	ds	2
   912  000055                     vfpfcnvrt@f:
   913                           	callstack 0
   914                           
   915                           ; 4 bytes @ 0x54
   916  000055                     	ds	4
   917  000059                     vfpfcnvrt@ct:
   918                           	callstack 0
   919                           
   920                           ; 3 bytes @ 0x58
   921  000059                     	ds	3
   922  00005C                     vfpfcnvrt@c:
   923                           	callstack 0
   924                           
   925                           ; 1 bytes @ 0x5B
   926  00005C                     	ds	1
   927  00005D                     vfprintf@cfmt:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x5C
   931  00005D                     	ds	2
   932  00005F                     
   933                           ; 1 bytes @ 0x5E
   934 ;;
   935 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   936 ;;
   937 ;; *************** function _main *****************
   938 ;; Defined at:
   939 ;;		line 16 in file "main.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;		None
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  pid1           24  101[BANK0 ] struct .
   944 ;;  c1             13   78[BANK0 ] struct _s_RGB_Point
   945 ;;  p1             10  125[BANK0 ] struct _sPoint
   946 ;;  p2             10   91[BANK0 ] struct _sPoint
   947 ;;  dist            2   76[BANK0 ] int 
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      void 
   950 ;; Registers used:
   951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   958 ;;      Locals:         0      63       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   959 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   960 ;;      Totals:         0      65       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   961 ;;Total ram usage:       65 bytes
   962 ;; Hardware stack levels required when called: 8
   963 ;; This function calls:
   964 ;;		_RGB_point_init
   965 ;;		___flge
   966 ;;		_distance
   967 ;;		_move
   968 ;;		_pid_init
   969 ;;		_pid_reset
   970 ;;		_pid_step
   971 ;;		_point_init
   972 ;;		_printf
   973 ;;		_set
   974 ;; This function is called by:
   975 ;;		Startup code after reset
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           	psect	text0
   980  00305E                     __ptext0:
   981                           	callstack 0
   982  00305E                     _main:
   983                           	callstack 23
   984  00305E                     
   985                           ;main.c: 17:     TRISCbits.TRISC6 = 1;
   986  00305E  8C94               	bsf	148,6,c	;volatile
   987                           
   988                           ;main.c: 18:     TRISCbits.TRISC7 = 1;
   989  003060  8E94               	bsf	148,7,c	;volatile
   990  003062                     
   991                           ;main.c: 21:     SPBRG1 = 51;
   992  003062  0E33               	movlw	51
   993  003064  6EAF               	movwf	175,c	;volatile
   994  003066                     
   995                           ;main.c: 22:     RCSTA1bits.SPEN = 1;
   996  003066  8EAB               	bsf	171,7,c	;volatile
   997  003068                     
   998                           ;main.c: 23:     TXSTA1bits.SYNC = 0;
   999  003068  98AC               	bcf	172,4,c	;volatile
  1000  00306A                     
  1001                           ;main.c: 24:     TXSTA1bits.TXEN = 1;
  1002  00306A  8AAC               	bsf	172,5,c	;volatile
  1003  00306C                     
  1004                           ;main.c: 25:     RCSTA1bits.CREN = 1;
  1005  00306C  88AB               	bsf	171,4,c	;volatile
  1006  00306E                     
  1007                           ;main.c: 27:     stPID pid1;;main.c: 29:     pid_init(&pid1, 0.5, 0.1, 24, -24, 1);
  1008  00306E  0EC5               	movlw	low main@pid1
  1009  003070  6E01               	movwf	pid_init@self^0,c
  1010  003072  0E00               	movlw	high main@pid1
  1011  003074  6E02               	movwf	(pid_init@self+1)^0,c
  1012  003076  0E00               	movlw	0
  1013  003078  6E03               	movwf	pid_init@kp^0,c
  1014  00307A  0E00               	movlw	0
  1015  00307C  6E04               	movwf	(pid_init@kp+1)^0,c
  1016  00307E  0E00               	movlw	0
  1017  003080  6E05               	movwf	(pid_init@kp+2)^0,c
  1018  003082  0E3F               	movlw	63
  1019  003084  6E06               	movwf	(pid_init@kp+3)^0,c
  1020  003086  0ECD               	movlw	205
  1021  003088  6E07               	movwf	pid_init@ki^0,c
  1022  00308A  0ECC               	movlw	204
  1023  00308C  6E08               	movwf	(pid_init@ki+1)^0,c
  1024  00308E  0ECC               	movlw	204
  1025  003090  6E09               	movwf	(pid_init@ki+2)^0,c
  1026  003092  0E3D               	movlw	61
  1027  003094  6E0A               	movwf	(pid_init@ki+3)^0,c
  1028  003096  0E00               	movlw	0
  1029  003098  6E0B               	movwf	pid_init@max^0,c
  1030  00309A  0E00               	movlw	0
  1031  00309C  6E0C               	movwf	(pid_init@max+1)^0,c
  1032  00309E  0EC0               	movlw	192
  1033  0030A0  6E0D               	movwf	(pid_init@max+2)^0,c
  1034  0030A2  0E41               	movlw	65
  1035  0030A4  6E0E               	movwf	(pid_init@max+3)^0,c
  1036  0030A6  0E00               	movlw	0
  1037  0030A8  6E0F               	movwf	pid_init@min^0,c
  1038  0030AA  0E00               	movlw	0
  1039  0030AC  6E10               	movwf	(pid_init@min+1)^0,c
  1040  0030AE  0EC0               	movlw	192
  1041  0030B0  6E11               	movwf	(pid_init@min+2)^0,c
  1042  0030B2  0EC1               	movlw	193
  1043  0030B4  6E12               	movwf	(pid_init@min+3)^0,c
  1044  0030B6  0E00               	movlw	0
  1045  0030B8  6E13               	movwf	pid_init@h^0,c
  1046  0030BA  0E00               	movlw	0
  1047  0030BC  6E14               	movwf	(pid_init@h+1)^0,c
  1048  0030BE  0E80               	movlw	128
  1049  0030C0  6E15               	movwf	(pid_init@h+2)^0,c
  1050  0030C2  0E3F               	movlw	63
  1051  0030C4  6E16               	movwf	(pid_init@h+3)^0,c
  1052  0030C6  ECDF  F020         	call	_pid_init	;wreg free
  1053  0030CA                     
  1054                           ;main.c: 31:     stPoint p1; point_init(&p1, 10, 10);;
  1055  0030CA  0EDD               	movlw	low main@p1
  1056  0030CC  6E01               	movwf	point_init@self^0,c
  1057  0030CE  0E00               	movlw	high main@p1
  1058  0030D0  6E02               	movwf	(point_init@self+1)^0,c
  1059  0030D2  0E00               	movlw	0
  1060  0030D4  6E04               	movwf	(point_init@x+1)^0,c
  1061  0030D6  0E0A               	movlw	10
  1062  0030D8  6E03               	movwf	point_init@x^0,c
  1063  0030DA  0E00               	movlw	0
  1064  0030DC  6E06               	movwf	(point_init@y+1)^0,c
  1065  0030DE  0E0A               	movlw	10
  1066  0030E0  6E05               	movwf	point_init@y^0,c
  1067  0030E2  EC40  F022         	call	_point_init	;wreg free
  1068  0030E6                     
  1069                           ;main.c: 32:     stPoint p2; point_init(&p2, 25, 25);;
  1070  0030E6  0EBB               	movlw	low main@p2
  1071  0030E8  6E01               	movwf	point_init@self^0,c
  1072  0030EA  0E00               	movlw	high main@p2
  1073  0030EC  6E02               	movwf	(point_init@self+1)^0,c
  1074  0030EE  0E00               	movlw	0
  1075  0030F0  6E04               	movwf	(point_init@x+1)^0,c
  1076  0030F2  0E19               	movlw	25
  1077  0030F4  6E03               	movwf	point_init@x^0,c
  1078  0030F6  0E00               	movlw	0
  1079  0030F8  6E06               	movwf	(point_init@y+1)^0,c
  1080  0030FA  0E19               	movlw	25
  1081  0030FC  6E05               	movwf	point_init@y^0,c
  1082  0030FE  EC40  F022         	call	_point_init	;wreg free
  1083  003102                     
  1084                           ;main.c: 33:     st_RGB_Point c1; RGB_point_init(&c1, 25, 25,100,50,50);;
  1085  003102  0EAE               	movlw	low main@c1
  1086  003104  6E07               	movwf	RGB_point_init@self^0,c
  1087  003106  0E00               	movlw	high main@c1
  1088  003108  6E08               	movwf	(RGB_point_init@self+1)^0,c
  1089  00310A  0E00               	movlw	0
  1090  00310C  6E0A               	movwf	(RGB_point_init@x+1)^0,c
  1091  00310E  0E19               	movlw	25
  1092  003110  6E09               	movwf	RGB_point_init@x^0,c
  1093  003112  0E00               	movlw	0
  1094  003114  6E0C               	movwf	(RGB_point_init@y+1)^0,c
  1095  003116  0E19               	movlw	25
  1096  003118  6E0B               	movwf	RGB_point_init@y^0,c
  1097  00311A  0E64               	movlw	100
  1098  00311C  6E0D               	movwf	RGB_point_init@R^0,c
  1099  00311E  0E32               	movlw	50
  1100  003120  6E0E               	movwf	RGB_point_init@G^0,c
  1101  003122  0E32               	movlw	50
  1102  003124  6E0F               	movwf	RGB_point_init@B^0,c
  1103  003126  ECD0  F022         	call	_RGB_point_init	;wreg free
  1104  00312A                     l3960:
  1105                           
  1106                           ;main.c: 37:     {;main.c: 39:         p1.set(&p1 ,5 ,5);
  1107  00312A  0EDD               	movlw	low main@p1
  1108  00312C  6E01               	movwf	set@self^0,c
  1109  00312E  0E00               	movlw	high main@p1
  1110  003130  6E02               	movwf	(set@self+1)^0,c
  1111  003132  0E00               	movlw	0
  1112  003134  6E04               	movwf	(set@x+1)^0,c
  1113  003136  0E05               	movlw	5
  1114  003138  6E03               	movwf	set@x^0,c
  1115  00313A  0E00               	movlw	0
  1116  00313C  6E06               	movwf	(set@y+1)^0,c
  1117  00313E  0E05               	movlw	5
  1118  003140  6E05               	movwf	set@y^0,c
  1119  003142  EE20  F0E1         	lfsr	2,main@p1+4
  1120  003146  D802               	call	u5028
  1121  003148  EFB0  F018         	goto	u5029
  1122  00314C                     u5028:
  1123  00314C  0005               	push	
  1124  00314E  6EFA               	movwf	pclath,c
  1125  003150  50DE               	movf	postinc2,w,c
  1126  003152  6EFD               	movwf	tosl,c
  1127  003154  50DE               	movf	postinc2,w,c
  1128  003156  6EFE               	movwf	tosh,c
  1129  003158  50F8               	movf	tblptru,w,c
  1130  00315A  6EFF               	movwf	tosu,c
  1131  00315C  50FA               	movf	pclath,w,c
  1132  00315E  0012               	return		;indir
  1133  003160                     u5029:
  1134  003160                     
  1135                           ;main.c: 40:         p2.set(&p2 , 10, 10);
  1136  003160  0EBB               	movlw	low main@p2
  1137  003162  6E01               	movwf	set@self^0,c
  1138  003164  0E00               	movlw	high main@p2
  1139  003166  6E02               	movwf	(set@self+1)^0,c
  1140  003168  0E00               	movlw	0
  1141  00316A  6E04               	movwf	(set@x+1)^0,c
  1142  00316C  0E0A               	movlw	10
  1143  00316E  6E03               	movwf	set@x^0,c
  1144  003170  0E00               	movlw	0
  1145  003172  6E06               	movwf	(set@y+1)^0,c
  1146  003174  0E0A               	movlw	10
  1147  003176  6E05               	movwf	set@y^0,c
  1148  003178  EE20  F0BF         	lfsr	2,main@p2+4
  1149  00317C  D802               	call	u5038
  1150  00317E  EFCB  F018         	goto	u5039
  1151  003182                     u5038:
  1152  003182  0005               	push	
  1153  003184  6EFA               	movwf	pclath,c
  1154  003186  50DE               	movf	postinc2,w,c
  1155  003188  6EFD               	movwf	tosl,c
  1156  00318A  50DE               	movf	postinc2,w,c
  1157  00318C  6EFE               	movwf	tosh,c
  1158  00318E  50F8               	movf	tblptru,w,c
  1159  003190  6EFF               	movwf	tosu,c
  1160  003192  50FA               	movf	pclath,w,c
  1161  003194  0012               	return		;indir
  1162  003196                     u5039:
  1163  003196                     
  1164                           ;main.c: 42:         dist = p1.distance(&p1, &p2);
  1165  003196  0EDD               	movlw	low main@p1
  1166  003198  6E11               	movwf	distance@self^0,c
  1167  00319A  0E00               	movlw	high main@p1
  1168  00319C  6E12               	movwf	(distance@self+1)^0,c
  1169  00319E  0EBB               	movlw	low main@p2
  1170  0031A0  6E13               	movwf	distance@other^0,c
  1171  0031A2  0E00               	movlw	high main@p2
  1172  0031A4  6E14               	movwf	(distance@other+1)^0,c
  1173  0031A6  EE20  F0E5         	lfsr	2,main@p1+8
  1174  0031AA  D802               	call	u5048
  1175  0031AC  EFE2  F018         	goto	u5049
  1176  0031B0                     u5048:
  1177  0031B0  0005               	push	
  1178  0031B2  6EFA               	movwf	pclath,c
  1179  0031B4  50DE               	movf	postinc2,w,c
  1180  0031B6  6EFD               	movwf	tosl,c
  1181  0031B8  50DE               	movf	postinc2,w,c
  1182  0031BA  6EFE               	movwf	tosh,c
  1183  0031BC  50F8               	movf	tblptru,w,c
  1184  0031BE  6EFF               	movwf	tosu,c
  1185  0031C0  50FA               	movf	pclath,w,c
  1186  0031C2  0012               	return		;indir
  1187  0031C4                     u5049:
  1188  0031C4  C011  F0AC         	movff	?_distance,main@dist
  1189  0031C8  C012  F0AD         	movff	?_distance+1,main@dist+1
  1190  0031CC                     
  1191                           ;main.c: 44:         p1.move(&p1, 5, 5);
  1192  0031CC  0EDD               	movlw	low main@p1
  1193  0031CE  6E01               	movwf	move@self^0,c
  1194  0031D0  0E00               	movlw	high main@p1
  1195  0031D2  6E02               	movwf	(move@self+1)^0,c
  1196  0031D4  0E00               	movlw	0
  1197  0031D6  6E04               	movwf	(move@dx+1)^0,c
  1198  0031D8  0E05               	movlw	5
  1199  0031DA  6E03               	movwf	move@dx^0,c
  1200  0031DC  0E00               	movlw	0
  1201  0031DE  6E06               	movwf	(move@dy+1)^0,c
  1202  0031E0  0E05               	movlw	5
  1203  0031E2  6E05               	movwf	move@dy^0,c
  1204  0031E4  EE20  F0E3         	lfsr	2,main@p1+6
  1205  0031E8  D802               	call	u5058
  1206  0031EA  EF01  F019         	goto	u5059
  1207  0031EE                     u5058:
  1208  0031EE  0005               	push	
  1209  0031F0  6EFA               	movwf	pclath,c
  1210  0031F2  50DE               	movf	postinc2,w,c
  1211  0031F4  6EFD               	movwf	tosl,c
  1212  0031F6  50DE               	movf	postinc2,w,c
  1213  0031F8  6EFE               	movwf	tosh,c
  1214  0031FA  50F8               	movf	tblptru,w,c
  1215  0031FC  6EFF               	movwf	tosu,c
  1216  0031FE  50FA               	movf	pclath,w,c
  1217  003200  0012               	return		;indir
  1218  003202                     u5059:
  1219  003202                     
  1220                           ;main.c: 46:         printf("%d\n", dist);
  1221  003202  0E11               	movlw	low STR_1
  1222  003204  0100               	movlb	0	; () banked
  1223  003206  6F9E               	movwf	printf@fmt& (0+255),b
  1224  003208  0E10               	movlw	high STR_1
  1225  00320A  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  1226  00320C  C0AC  F0A0         	movff	main@dist,?_printf+2
  1227  003210  C0AD  F0A1         	movff	main@dist+1,?_printf+3
  1228  003214  ECAF  F023         	call	_printf	;wreg free
  1229  003218                     
  1230                           ;main.c: 47:         printf("%d\n", c1.super.x);
  1231  003218  0E11               	movlw	low STR_1
  1232  00321A  0100               	movlb	0	; () banked
  1233  00321C  6F9E               	movwf	printf@fmt& (0+255),b
  1234  00321E  0E10               	movlw	high STR_1
  1235  003220  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  1236  003222  C0AE  F0A0         	movff	main@c1,?_printf+2
  1237  003226  C0AF  F0A1         	movff	main@c1+1,?_printf+3
  1238  00322A  ECAF  F023         	call	_printf	;wreg free
  1239  00322E                     
  1240                           ;main.c: 48:         printf("%f\n", pid_step(&pid1, 10, 0));
  1241  00322E  0E15               	movlw	low STR_3
  1242  003230  0100               	movlb	0	; () banked
  1243  003232  6F9E               	movwf	printf@fmt& (0+255),b
  1244  003234  0E10               	movlw	high STR_3
  1245  003236  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  1246  003238  0EC5               	movlw	low main@pid1
  1247  00323A  6E32               	movwf	pid_step@self^0,c
  1248  00323C  0E00               	movlw	high main@pid1
  1249  00323E  6E33               	movwf	(pid_step@self+1)^0,c
  1250  003240  0E00               	movlw	0
  1251  003242  6E34               	movwf	pid_step@setpoint^0,c
  1252  003244  0E00               	movlw	0
  1253  003246  6E35               	movwf	(pid_step@setpoint+1)^0,c
  1254  003248  0E20               	movlw	32
  1255  00324A  6E36               	movwf	(pid_step@setpoint+2)^0,c
  1256  00324C  0E41               	movlw	65
  1257  00324E  6E37               	movwf	(pid_step@setpoint+3)^0,c
  1258  003250  0E00               	movlw	0
  1259  003252  6E38               	movwf	pid_step@feedback^0,c
  1260  003254  0E00               	movlw	0
  1261  003256  6E39               	movwf	(pid_step@feedback+1)^0,c
  1262  003258  0E00               	movlw	0
  1263  00325A  6E3A               	movwf	(pid_step@feedback+2)^0,c
  1264  00325C  0E00               	movlw	0
  1265  00325E  6E3B               	movwf	(pid_step@feedback+3)^0,c
  1266  003260  EC89  F019         	call	_pid_step	;wreg free
  1267  003264  C032  F0A0         	movff	?_pid_step,?_printf+2
  1268  003268  C033  F0A1         	movff	?_pid_step+1,?_printf+3
  1269  00326C  C034  F0A2         	movff	?_pid_step+2,?_printf+4
  1270  003270  C035  F0A3         	movff	?_pid_step+3,?_printf+5
  1271  003274  ECAF  F023         	call	_printf	;wreg free
  1272  003278                     
  1273                           ;main.c: 49:         if (pid_step(&pid1, 10, 0) >= 24)
  1274  003278  0E00               	movlw	0
  1275  00327A  6E38               	movwf	pid_step@feedback^0,c
  1276  00327C  0E00               	movlw	0
  1277  00327E  6E39               	movwf	(pid_step@feedback+1)^0,c
  1278  003280  0E00               	movlw	0
  1279  003282  6E3A               	movwf	(pid_step@feedback+2)^0,c
  1280  003284  0E00               	movlw	0
  1281  003286  6E3B               	movwf	(pid_step@feedback+3)^0,c
  1282  003288  0E00               	movlw	0
  1283  00328A  6E34               	movwf	pid_step@setpoint^0,c
  1284  00328C  0E00               	movlw	0
  1285  00328E  6E35               	movwf	(pid_step@setpoint+1)^0,c
  1286  003290  0E20               	movlw	32
  1287  003292  6E36               	movwf	(pid_step@setpoint+2)^0,c
  1288  003294  0E41               	movlw	65
  1289  003296  6E37               	movwf	(pid_step@setpoint+3)^0,c
  1290  003298  0EC5               	movlw	low main@pid1
  1291  00329A  6E32               	movwf	pid_step@self^0,c
  1292  00329C  0E00               	movlw	high main@pid1
  1293  00329E  6E33               	movwf	(pid_step@self+1)^0,c
  1294  0032A0  EC89  F019         	call	_pid_step	;wreg free
  1295  0032A4  C032  F0A8         	movff	?_pid_step,_main$1389
  1296  0032A8  C033  F0A9         	movff	?_pid_step+1,_main$1389+1
  1297  0032AC  C034  F0AA         	movff	?_pid_step+2,_main$1389+2
  1298  0032B0  C035  F0AB         	movff	?_pid_step+3,_main$1389+3
  1299  0032B4                     
  1300                           ;main.c: 49:         if (pid_step(&pid1, 10, 0) >= 24)
  1301  0032B4  C0A8  F01A         	movff	_main$1389,___flge@ff1
  1302  0032B8  C0A9  F01B         	movff	_main$1389+1,___flge@ff1+1
  1303  0032BC  C0AA  F01C         	movff	_main$1389+2,___flge@ff1+2
  1304  0032C0  C0AB  F01D         	movff	_main$1389+3,___flge@ff1+3
  1305  0032C4  0E00               	movlw	0
  1306  0032C6  6E1E               	movwf	___flge@ff2^0,c
  1307  0032C8  0E00               	movlw	0
  1308  0032CA  6E1F               	movwf	(___flge@ff2+1)^0,c
  1309  0032CC  0EC0               	movlw	192
  1310  0032CE  6E20               	movwf	(___flge@ff2+2)^0,c
  1311  0032D0  0E41               	movlw	65
  1312  0032D2  6E21               	movwf	(___flge@ff2+3)^0,c
  1313  0032D4  ECA8  F01D         	call	___flge	;wreg free
  1314  0032D8  A0D8               	btfss	status,0,c
  1315  0032DA  EF71  F019         	goto	u5061
  1316  0032DE  EF73  F019         	goto	u5060
  1317  0032E2                     u5061:
  1318  0032E2  EF79  F019         	goto	l3980
  1319  0032E6                     u5060:
  1320  0032E6                     
  1321                           ;main.c: 50:             pid_reset(&pid1);
  1322  0032E6  0EC5               	movlw	low main@pid1
  1323  0032E8  6E17               	movwf	pid_reset@self^0,c
  1324  0032EA  0E00               	movlw	high main@pid1
  1325  0032EC  6E18               	movwf	(pid_reset@self+1)^0,c
  1326  0032EE  EC7D  F021         	call	_pid_reset	;wreg free
  1327  0032F2                     l3980:
  1328                           
  1329                           ;main.c: 51:         _delay((unsigned long)((1000)*(32e6/4000.0)));
  1330  0032F2  0E29               	movlw	41
  1331  0032F4  0100               	movlb	0	; () banked
  1332  0032F6  6FA7               	movwf	(??_main+1)& (0+255),b
  1333  0032F8  0E96               	movlw	150
  1334  0032FA  6FA6               	movwf	??_main& (0+255),b
  1335  0032FC  0E7F               	movlw	127
  1336  0032FE                     u5077:
  1337  0032FE  2EE8               	decfsz	wreg,f,c
  1338  003300  D7FE               	bra	u5077
  1339  003302  2FA6               	decfsz	??_main& (0+255),f,b
  1340  003304  D7FC               	bra	u5077
  1341  003306  2FA7               	decfsz	(??_main+1)& (0+255),f,b
  1342  003308  D7FA               	bra	u5077
  1343  00330A  EF95  F018         	goto	l3960
  1344  00330E  EF00  F000         	goto	start
  1345  003312                     __end_of_main:
  1346                           	callstack 0
  1347                           
  1348 ;; *************** function _set *****************
  1349 ;; Defined at:
  1350 ;;		line 4 in file "point.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;  self            2    0[COMRAM] const PTR struct _sPoint
  1353 ;;		 -> main@p2(10), main@p1(10), 
  1354 ;;  x               2    2[COMRAM] int 
  1355 ;;  y               2    4[COMRAM] int 
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;		None
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      void 
  1360 ;; Registers used:
  1361 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1367 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1370 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1371 ;;Total ram usage:        6 bytes
  1372 ;; Hardware stack levels used: 1
  1373 ;; This function calls:
  1374 ;;		Nothing
  1375 ;; This function is called by:
  1376 ;;		_point_init
  1377 ;;		_main
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           	psect	text1
  1382  004786                     __ptext1:
  1383                           	callstack 0
  1384  004786                     _set:
  1385                           	callstack 30
  1386  004786                     
  1387                           ;point.c: 4: static void set( stPoint *const self,;point.c: 5:                     int x
      +                          ,;point.c: 6:                     int y){;point.c: 7:     self->x = x;
  1388  004786  C001  FFD9         	movff	set@self,fsr2l
  1389  00478A  C002  FFDA         	movff	set@self+1,fsr2h
  1390  00478E  C003  FFDE         	movff	set@x,postinc2
  1391  004792  C004  FFDD         	movff	set@x+1,postdec2
  1392  004796                     
  1393                           ;point.c: 8:     self->y = y;
  1394  004796  EE20 F002          	lfsr	2,2
  1395  00479A  5001               	movf	set@self^0,w,c
  1396  00479C  26D9               	addwf	fsr2l,f,c
  1397  00479E  5002               	movf	(set@self+1)^0,w,c
  1398  0047A0  22DA               	addwfc	fsr2h,f,c
  1399  0047A2  C005  FFDE         	movff	set@y,postinc2
  1400  0047A6  C006  FFDD         	movff	set@y+1,postdec2
  1401  0047AA  0012               	return		;funcret
  1402  0047AC                     __end_of_set:
  1403                           	callstack 0
  1404                           
  1405 ;; *************** function _printf *****************
  1406 ;; Defined at:
  1407 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  1410 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;  ap              2   68[BANK0 ] PTR void [1]
  1413 ;;		 -> ?_printf(2), 
  1414 ;;  ret             2    0        int 
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  2   62[BANK0 ] int 
  1417 ;; Registers used:
  1418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1424 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1425 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1427 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1428 ;;Total ram usage:        8 bytes
  1429 ;; Hardware stack levels used: 1
  1430 ;; Hardware stack levels required when called: 7
  1431 ;; This function calls:
  1432 ;;		_vfprintf
  1433 ;; This function is called by:
  1434 ;;		_main
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438                           	psect	text2
  1439  00475E                     __ptext2:
  1440                           	callstack 0
  1441  00475E                     _printf:
  1442                           	callstack 23
  1443  00475E  0EA0               	movlw	low (?_printf+2)
  1444  004760  0100               	movlb	0	; () banked
  1445  004762  6FA4               	movwf	printf@ap& (0+255),b
  1446  004764  0E00               	movlw	high (?_printf+2)
  1447  004766  6FA5               	movwf	(printf@ap+1)& (0+255),b
  1448  004768                     
  1449                           ; BSR set to: 0
  1450  004768  0E00               	movlw	0
  1451  00476A  6F98               	movwf	vfprintf@fp& (0+255),b
  1452  00476C  0E00               	movlw	0
  1453  00476E  6F99               	movwf	(vfprintf@fp+1)& (0+255),b
  1454  004770  C09E  F09A         	movff	printf@fmt,vfprintf@fmt
  1455  004774  C09F  F09B         	movff	printf@fmt+1,vfprintf@fmt+1
  1456  004778  0EA4               	movlw	low printf@ap
  1457  00477A  6F9C               	movwf	vfprintf@ap& (0+255),b
  1458  00477C  0E00               	movlw	high printf@ap
  1459  00477E  6F9D               	movwf	(vfprintf@ap+1)& (0+255),b
  1460  004780  EC0F  F022         	call	_vfprintf	;wreg free
  1461  004784  0012               	return		;funcret
  1462  004786                     __end_of_printf:
  1463                           	callstack 0
  1464                           
  1465 ;; *************** function _vfprintf *****************
  1466 ;; Defined at:
  1467 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  1470 ;;		 -> NULL(0), 
  1471 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1472 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  1473 ;;  ap              2   60[BANK0 ] PTR PTR void 
  1474 ;;		 -> printf@ap(2), 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  cfmt            2   92[COMRAM] PTR unsigned char 
  1477 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  1478 ;; Return value:  Size  Location     Type
  1479 ;;                  2   56[BANK0 ] int 
  1480 ;; Registers used:
  1481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1487 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1488 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;Total ram usage:        8 bytes
  1492 ;; Hardware stack levels used: 1
  1493 ;; Hardware stack levels required when called: 6
  1494 ;; This function calls:
  1495 ;;		_vfpfcnvrt
  1496 ;; This function is called by:
  1497 ;;		_printf
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           	psect	text3
  1502  00441E                     __ptext3:
  1503                           	callstack 0
  1504  00441E                     _vfprintf:
  1505                           	callstack 23
  1506  00441E                     
  1507                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1508  00441E  C09A  F05D         	movff	vfprintf@fmt,vfprintf@cfmt
  1509  004422  C09B  F05E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1510  004426                     
  1511                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1512  004426  0E00               	movlw	0
  1513  004428  0100               	movlb	0	; () banked
  1514  00442A  6FF0               	movwf	(_nout+1)& (0+255),b
  1515  00442C  0E00               	movlw	0
  1516  00442E  6FEF               	movwf	_nout& (0+255),b
  1517                           
  1518                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1519  004430  EF2D  F022         	goto	l3876
  1520  004434                     l3874:
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1524  004434  C098  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
  1525  004438  C099  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1526  00443C  0E5D               	movlw	low vfprintf@cfmt
  1527  00443E  6E43               	movwf	vfpfcnvrt@fmt^0,c
  1528  004440  0E00               	movlw	high vfprintf@cfmt
  1529  004442  6E44               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1530  004444  C09C  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
  1531  004448  C09D  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1532  00444C  ECC2  F010         	call	_vfpfcnvrt	;wreg free
  1533  004450  5041               	movf	?_vfpfcnvrt^0,w,c
  1534  004452  0100               	movlb	0	; () banked
  1535  004454  27EF               	addwf	_nout& (0+255),f,b
  1536  004456  5042               	movf	(?_vfpfcnvrt+1)^0,w,c
  1537  004458  23F0               	addwfc	(_nout+1)& (0+255),f,b
  1538  00445A                     l3876:
  1539                           
  1540                           ; BSR set to: 0
  1541                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1542  00445A  C05D  FFF6         	movff	vfprintf@cfmt,tblptrl
  1543  00445E  C05E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1544  004462                     	if	0	;tblptru may be non-zero
  1545  004462                     	endif
  1546  004462                     	if	0	;tblptru may be non-zero
  1547  004462                     	endif
  1548  004462  0008               	tblrd		*
  1549  004464  50F5               	movf	tablat,w,c
  1550  004466  0900               	iorlw	0
  1551  004468  A4D8               	btfss	status,2,c
  1552  00446A  EF39  F022         	goto	u4991
  1553  00446E  EF3B  F022         	goto	u4990
  1554  004472                     u4991:
  1555  004472  EF1A  F022         	goto	l3874
  1556  004476                     u4990:
  1557  004476                     
  1558                           ; BSR set to: 0
  1559                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1560  004476  C0EF  F098         	movff	_nout,?_vfprintf
  1561  00447A  C0F0  F099         	movff	_nout+1,?_vfprintf+1
  1562  00447E                     
  1563                           ; BSR set to: 0
  1564  00447E  0012               	return		;funcret
  1565  004480                     __end_of_vfprintf:
  1566                           	callstack 0
  1567                           
  1568 ;; *************** function _vfpfcnvrt *****************
  1569 ;; Defined at:
  1570 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  1573 ;;		 -> NULL(0), 
  1574 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  1575 ;;		 -> vfprintf@cfmt(2), 
  1576 ;;  ap              2   68[COMRAM] PTR PTR void 
  1577 ;;		 -> printf@ap(2), 
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;  ll              8   74[COMRAM] long long 
  1580 ;;  llu             8    0        unsigned long long 
  1581 ;;  f               4   84[COMRAM] unsigned long long 
  1582 ;;  ct              3   88[COMRAM] unsigned char [3]
  1583 ;;  vp              3    0        PTR void 
  1584 ;;  cp              3    0        PTR unsigned char 
  1585 ;;  i               2    0        int 
  1586 ;;  done            2    0        int 
  1587 ;;  c               1   91[COMRAM] unsigned char 
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  2   64[COMRAM] int 
  1590 ;; Registers used:
  1591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1597 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1598 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1599 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1600 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1601 ;;Total ram usage:       28 bytes
  1602 ;; Hardware stack levels used: 1
  1603 ;; Hardware stack levels required when called: 5
  1604 ;; This function calls:
  1605 ;;		_dtoa
  1606 ;;		_efgtoa
  1607 ;;		_fputc
  1608 ;;		_isupper
  1609 ;;		_strncmp
  1610 ;;		_tolower
  1611 ;; This function is called by:
  1612 ;;		_vfprintf
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           	psect	text4
  1617  002184                     __ptext4:
  1618                           	callstack 0
  1619  002184                     _vfpfcnvrt:
  1620                           	callstack 23
  1621  002184                     
  1622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1623  002184  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1624  002188  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1625  00218C  CFDE FFF6          	movff	postinc2,tblptrl
  1626  002190  CFDD FFF7          	movff	postdec2,tblptrh
  1627  002194                     	if	0	;tblptru may be non-zero
  1628  002194                     	endif
  1629  002194                     	if	0	;tblptru may be non-zero
  1630  002194                     	endif
  1631  002194  0008               	tblrd		*
  1632  002196  50F5               	movf	tablat,w,c
  1633  002198  0A25               	xorlw	37
  1634  00219A  A4D8               	btfss	status,2,c
  1635  00219C  EFD2  F010         	goto	u4861
  1636  0021A0  EFD4  F010         	goto	u4860
  1637  0021A4                     u4861:
  1638  0021A4  EFBF  F012         	goto	l3828
  1639  0021A8                     u4860:
  1640  0021A8                     
  1641                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1642  0021A8  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1643  0021AC  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1644  0021B0  2ADE               	incf	postinc2,f,c
  1645  0021B2  0E00               	movlw	0
  1646  0021B4  22DD               	addwfc	postdec2,f,c
  1647  0021B6                     
  1648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1649  0021B6  0E00               	movlw	0
  1650  0021B8  0100               	movlb	0	; () banked
  1651  0021BA  6FF2               	movwf	(_width+1)& (0+255),b
  1652  0021BC  0E00               	movlw	0
  1653  0021BE  6FF1               	movwf	_width& (0+255),b
  1654  0021C0  C0F1  F0F5         	movff	_width,_flags
  1655  0021C4  C0F2  F0F6         	movff	_width+1,_flags+1
  1656  0021C8                     
  1657                           ; BSR set to: 0
  1658                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1659  0021C8  69F3               	setf	_prec& (0+255),b
  1660  0021CA  69F4               	setf	(_prec+1)& (0+255),b
  1661  0021CC                     
  1662                           ; BSR set to: 0
  1663                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1664  0021CC  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1665  0021D0  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1666  0021D4  CFDE FFF6          	movff	postinc2,tblptrl
  1667  0021D8  CFDD FFF7          	movff	postdec2,tblptrh
  1668  0021DC                     	if	0	;tblptru may be non-zero
  1669  0021DC                     	endif
  1670  0021DC                     	if	0	;tblptru may be non-zero
  1671  0021DC                     	endif
  1672  0021DC  0008               	tblrd		*
  1673  0021DE  50F5               	movf	tablat,w,c
  1674  0021E0  6E07               	movwf	tolower@c^0,c
  1675  0021E2  6A08               	clrf	(tolower@c+1)^0,c
  1676  0021E4  EC71  F022         	call	_tolower	;wreg free
  1677  0021E8  5007               	movf	?_tolower^0,w,c
  1678  0021EA  6E59               	movwf	vfpfcnvrt@ct^0,c
  1679  0021EC                     
  1680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1681  0021EC  5059               	movf	vfpfcnvrt@ct^0,w,c
  1682  0021EE  B4D8               	btfsc	status,2,c
  1683  0021F0  EFFC  F010         	goto	u4871
  1684  0021F4  EFFE  F010         	goto	u4870
  1685  0021F8                     u4871:
  1686  0021F8  EF36  F011         	goto	l3774
  1687  0021FC                     u4870:
  1688  0021FC                     
  1689                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1690  0021FC  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1691  002200  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1692  002204  CFDE F047          	movff	postinc2,??_vfpfcnvrt
  1693  002208  CFDD F048          	movff	postdec2,??_vfpfcnvrt+1
  1694  00220C  0E01               	movlw	1
  1695  00220E  2647               	addwf	??_vfpfcnvrt^0,f,c
  1696  002210  0E00               	movlw	0
  1697  002212  2248               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1698  002214  C047  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1699  002218  C048  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1700  00221C                     	if	0	;tblptru may be non-zero
  1701  00221C                     	endif
  1702  00221C                     	if	0	;tblptru may be non-zero
  1703  00221C                     	endif
  1704  00221C  0008               	tblrd		*
  1705  00221E  50F5               	movf	tablat,w,c
  1706  002220  6E07               	movwf	tolower@c^0,c
  1707  002222  6A08               	clrf	(tolower@c+1)^0,c
  1708  002224  EC71  F022         	call	_tolower	;wreg free
  1709  002228  5007               	movf	?_tolower^0,w,c
  1710  00222A  6E5A               	movwf	(vfpfcnvrt@ct+1)^0,c
  1711  00222C                     
  1712                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1713  00222C  505A               	movf	(vfpfcnvrt@ct+1)^0,w,c
  1714  00222E  B4D8               	btfsc	status,2,c
  1715  002230  EF1C  F011         	goto	u4881
  1716  002234  EF1E  F011         	goto	u4880
  1717  002238                     u4881:
  1718  002238  EF36  F011         	goto	l3774
  1719  00223C                     u4880:
  1720  00223C                     
  1721                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  1722  00223C  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1723  002240  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1724  002244  CFDE F047          	movff	postinc2,??_vfpfcnvrt
  1725  002248  CFDD F048          	movff	postdec2,??_vfpfcnvrt+1
  1726  00224C  0E02               	movlw	2
  1727  00224E  2647               	addwf	??_vfpfcnvrt^0,f,c
  1728  002250  0E00               	movlw	0
  1729  002252  2248               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1730  002254  C047  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1731  002258  C048  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1732  00225C                     	if	0	;tblptru may be non-zero
  1733  00225C                     	endif
  1734  00225C                     	if	0	;tblptru may be non-zero
  1735  00225C                     	endif
  1736  00225C  0008               	tblrd		*
  1737  00225E  50F5               	movf	tablat,w,c
  1738  002260  6E07               	movwf	tolower@c^0,c
  1739  002262  6A08               	clrf	(tolower@c+1)^0,c
  1740  002264  EC71  F022         	call	_tolower	;wreg free
  1741  002268  5007               	movf	?_tolower^0,w,c
  1742  00226A  6E5B               	movwf	(vfpfcnvrt@ct+2)^0,c
  1743  00226C                     l3774:
  1744                           
  1745                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1746  00226C  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1747  002270  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1748  002274  CFDE FFF6          	movff	postinc2,tblptrl
  1749  002278  CFDD FFF7          	movff	postdec2,tblptrh
  1750  00227C                     	if	0	;tblptru may be non-zero
  1751  00227C                     	endif
  1752  00227C                     	if	0	;tblptru may be non-zero
  1753  00227C                     	endif
  1754  00227C  0008               	tblrd		*
  1755  00227E  50F5               	movf	tablat,w,c
  1756  002280  0A64               	xorlw	100
  1757  002282  B4D8               	btfsc	status,2,c
  1758  002284  EF46  F011         	goto	u4891
  1759  002288  EF48  F011         	goto	u4890
  1760  00228C                     u4891:
  1761  00228C  EF5A  F011         	goto	l3778
  1762  002290                     u4890:
  1763  002290  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1764  002294  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1765  002298  CFDE FFF6          	movff	postinc2,tblptrl
  1766  00229C  CFDD FFF7          	movff	postdec2,tblptrh
  1767  0022A0                     	if	0	;tblptru may be non-zero
  1768  0022A0                     	endif
  1769  0022A0                     	if	0	;tblptru may be non-zero
  1770  0022A0                     	endif
  1771  0022A0  0008               	tblrd		*
  1772  0022A2  50F5               	movf	tablat,w,c
  1773  0022A4  0A69               	xorlw	105
  1774  0022A6  A4D8               	btfss	status,2,c
  1775  0022A8  EF58  F011         	goto	u4901
  1776  0022AC  EF5A  F011         	goto	u4900
  1777  0022B0                     u4901:
  1778  0022B0  EF9A  F011         	goto	l3784
  1779  0022B4                     u4900:
  1780  0022B4                     l3778:
  1781                           
  1782                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1783  0022B4  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1784  0022B8  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1785  0022BC  2ADE               	incf	postinc2,f,c
  1786  0022BE  0E00               	movlw	0
  1787  0022C0  22DD               	addwfc	postdec2,f,c
  1788                           
  1789                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1790  0022C2  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1791  0022C6  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1792  0022CA  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1793  0022CE  0E02               	movlw	2
  1794  0022D0  26DE               	addwf	postinc2,f,c
  1795  0022D2  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1796  0022D6  0E00               	movlw	0
  1797  0022D8  22DD               	addwfc	postdec2,f,c
  1798  0022DA  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1799  0022DE  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1800  0022E2  CFDE F04B          	movff	postinc2,vfpfcnvrt@ll
  1801  0022E6  CFDD F04C          	movff	postdec2,vfpfcnvrt@ll+1
  1802  0022EA  0E00               	movlw	0
  1803  0022EC  BE4C               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1804  0022EE  0EFF               	movlw	-1
  1805  0022F0  6E4D               	movwf	(vfpfcnvrt@ll+2)^0,c
  1806  0022F2  6E4E               	movwf	(vfpfcnvrt@ll+3)^0,c
  1807  0022F4  6E4F               	movwf	(vfpfcnvrt@ll+4)^0,c
  1808  0022F6  6E50               	movwf	(vfpfcnvrt@ll+5)^0,c
  1809  0022F8  6E51               	movwf	(vfpfcnvrt@ll+6)^0,c
  1810  0022FA  6E52               	movwf	(vfpfcnvrt@ll+7)^0,c
  1811  0022FC                     
  1812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1813  0022FC  C041  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  1814  002300  C042  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1815  002304  C04B  F01F         	movff	vfpfcnvrt@ll,dtoa@d
  1816  002308  C04C  F020         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1817  00230C  C04D  F021         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1818  002310  C04E  F022         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1819  002314  C04F  F023         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1820  002318  C050  F024         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1821  00231C  C051  F025         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1822  002320  C052  F026         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1823  002324  ECBD  F016         	call	_dtoa	;wreg free
  1824  002328  C01D  F041         	movff	?_dtoa,?_vfpfcnvrt
  1825  00232C  C01E  F042         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1826  002330  EFDA  F012         	goto	l930
  1827  002334                     l3784:
  1828                           
  1829                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  1830  002334  0E66               	movlw	102
  1831  002336  1859               	xorwf	vfpfcnvrt@ct^0,w,c
  1832  002338  A4D8               	btfss	status,2,c
  1833  00233A  EFA1  F011         	goto	u4911
  1834  00233E  EFA3  F011         	goto	u4910
  1835  002342                     u4911:
  1836  002342  EFE3  F011         	goto	l3796
  1837  002346                     u4910:
  1838  002346                     
  1839                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  1840  002346  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1841  00234A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1842  00234E  CFDE FFF6          	movff	postinc2,tblptrl
  1843  002352  CFDD FFF7          	movff	postdec2,tblptrh
  1844  002356                     	if	0	;tblptru may be non-zero
  1845  002356                     	endif
  1846  002356                     	if	0	;tblptru may be non-zero
  1847  002356                     	endif
  1848  002356  0008               	tblrd		*
  1849  002358  CFF5 F05C          	movff	tablat,vfpfcnvrt@c
  1850  00235C                     
  1851                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  1852  00235C  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1853  002360  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1854  002364  2ADE               	incf	postinc2,f,c
  1855  002366  0E00               	movlw	0
  1856  002368  22DD               	addwfc	postdec2,f,c
  1857  00236A                     
  1858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1859  00236A  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1860  00236E  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1861  002372  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1862  002376  0E04               	movlw	4
  1863  002378  26DE               	addwf	postinc2,f,c
  1864  00237A  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1865  00237E  0E00               	movlw	0
  1866  002380  22DD               	addwfc	postdec2,f,c
  1867  002382  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1868  002386  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1869  00238A  CFDE F055          	movff	postinc2,vfpfcnvrt@f
  1870  00238E  CFDE F056          	movff	postinc2,vfpfcnvrt@f+1
  1871  002392  CFDE F057          	movff	postinc2,vfpfcnvrt@f+2
  1872  002396  CFDE F058          	movff	postinc2,vfpfcnvrt@f+3
  1873  00239A                     
  1874                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  1875  00239A  C041  F032         	movff	vfpfcnvrt@fp,efgtoa@fp
  1876  00239E  C042  F033         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1877  0023A2  C055  F034         	movff	vfpfcnvrt@f,efgtoa@f
  1878  0023A6  C056  F035         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1879  0023AA  C057  F036         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1880  0023AE  C058  F037         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1881  0023B2  C05C  F038         	movff	vfpfcnvrt@c,efgtoa@c
  1882  0023B6  EC0F  F008         	call	_efgtoa	;wreg free
  1883  0023BA  C032  F041         	movff	?_efgtoa,?_vfpfcnvrt
  1884  0023BE  C033  F042         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1885  0023C2  EFDA  F012         	goto	l930
  1886  0023C6                     l3796:
  1887                           
  1888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1889  0023C6  0E59               	movlw	low vfpfcnvrt@ct
  1890  0023C8  6E01               	movwf	strncmp@_l^0,c
  1891  0023CA  0E00               	movlw	high vfpfcnvrt@ct
  1892  0023CC  6E02               	movwf	(strncmp@_l+1)^0,c
  1893  0023CE  0E19               	movlw	low STR_12
  1894  0023D0  6E03               	movwf	strncmp@_r^0,c
  1895  0023D2  0E10               	movlw	high STR_12
  1896  0023D4  6E04               	movwf	(strncmp@_r+1)^0,c
  1897  0023D6  0E00               	movlw	0
  1898  0023D8  6E06               	movwf	(strncmp@n+1)^0,c
  1899  0023DA  0E02               	movlw	2
  1900  0023DC  6E05               	movwf	strncmp@n^0,c
  1901  0023DE  ECA9  F01E         	call	_strncmp	;wreg free
  1902  0023E2  5001               	movf	?_strncmp^0,w,c
  1903  0023E4  1002               	iorwf	(?_strncmp+1)^0,w,c
  1904  0023E6  A4D8               	btfss	status,2,c
  1905  0023E8  EFF8  F011         	goto	u4921
  1906  0023EC  EFFA  F011         	goto	u4920
  1907  0023F0                     u4921:
  1908  0023F0  EF89  F012         	goto	l3812
  1909  0023F4                     u4920:
  1910  0023F4                     
  1911                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1912  0023F4  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1913  0023F8  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1914  0023FC  CFDE F047          	movff	postinc2,??_vfpfcnvrt
  1915  002400  CFDD F048          	movff	postdec2,??_vfpfcnvrt+1
  1916  002404  0E01               	movlw	1
  1917  002406  2647               	addwf	??_vfpfcnvrt^0,f,c
  1918  002408  0E00               	movlw	0
  1919  00240A  2248               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1920  00240C  C047  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1921  002410  C048  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1922  002414                     	if	0	;tblptru may be non-zero
  1923  002414                     	endif
  1924  002414                     	if	0	;tblptru may be non-zero
  1925  002414                     	endif
  1926  002414  0008               	tblrd		*
  1927  002416  CFF5 F05C          	movff	tablat,vfpfcnvrt@c
  1928  00241A  0EBF               	movlw	191
  1929  00241C  6E47               	movwf	??_vfpfcnvrt^0,c
  1930  00241E  0EFF               	movlw	255
  1931  002420  6E48               	movwf	(??_vfpfcnvrt+1)^0,c
  1932  002422  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1933  002426  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1934  00242A  CFDE FFF6          	movff	postinc2,tblptrl
  1935  00242E  CFDD FFF7          	movff	postdec2,tblptrh
  1936  002432                     	if	0	;tblptru may be non-zero
  1937  002432                     	endif
  1938  002432                     	if	0	;tblptru may be non-zero
  1939  002432                     	endif
  1940  002432  0008               	tblrd		*
  1941  002434  50F5               	movf	tablat,w,c
  1942  002436  6E49               	movwf	(??_vfpfcnvrt+2)^0,c
  1943  002438  6A4A               	clrf	(??_vfpfcnvrt+3)^0,c
  1944  00243A  5047               	movf	??_vfpfcnvrt^0,w,c
  1945  00243C  2649               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1946  00243E  5048               	movf	(??_vfpfcnvrt+1)^0,w,c
  1947  002440  224A               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1948  002442  504A               	movf	(??_vfpfcnvrt+3)^0,w,c
  1949  002444  E10A               	bnz	u4930
  1950  002446  0E1A               	movlw	26
  1951  002448  5C49               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1952  00244A  A0D8               	btfss	status,0,c
  1953  00244C  EF2A  F012         	goto	u4931
  1954  002450  EF2D  F012         	goto	u4930
  1955  002454                     u4931:
  1956  002454  0E01               	movlw	1
  1957  002456  EF2E  F012         	goto	u4940
  1958  00245A                     u4930:
  1959  00245A  0E00               	movlw	0
  1960  00245C                     u4940:
  1961  00245C  6E53               	movwf	_vfpfcnvrt$1096^0,c
  1962  00245E  6A54               	clrf	(_vfpfcnvrt$1096+1)^0,c
  1963  002460  5053               	movf	_vfpfcnvrt$1096^0,w,c
  1964  002462  1054               	iorwf	(_vfpfcnvrt$1096+1)^0,w,c
  1965  002464  B4D8               	btfsc	status,2,c
  1966  002466  EF37  F012         	goto	u4951
  1967  00246A  EF39  F012         	goto	u4950
  1968  00246E                     u4951:
  1969  00246E  EF53  F012         	goto	l3806
  1970  002472                     u4950:
  1971  002472                     
  1972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1973  002472  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1974  002476  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1975  00247A  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1976  00247E  0E04               	movlw	4
  1977  002480  26DE               	addwf	postinc2,f,c
  1978  002482  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1979  002486  0E00               	movlw	0
  1980  002488  22DD               	addwfc	postdec2,f,c
  1981  00248A  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1982  00248E  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1983  002492  CFDE F055          	movff	postinc2,vfpfcnvrt@f
  1984  002496  CFDE F056          	movff	postinc2,vfpfcnvrt@f+1
  1985  00249A  CFDE F057          	movff	postinc2,vfpfcnvrt@f+2
  1986  00249E  CFDE F058          	movff	postinc2,vfpfcnvrt@f+3
  1987                           
  1988                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  1989  0024A2  EF6B  F012         	goto	l938
  1990  0024A6                     l3806:
  1991                           
  1992                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1993  0024A6  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1994  0024AA  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1995  0024AE  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1996  0024B2  0E04               	movlw	4
  1997  0024B4  26DE               	addwf	postinc2,f,c
  1998  0024B6  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1999  0024BA  0E00               	movlw	0
  2000  0024BC  22DD               	addwfc	postdec2,f,c
  2001  0024BE  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2002  0024C2  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2003  0024C6  CFDE F055          	movff	postinc2,vfpfcnvrt@f
  2004  0024CA  CFDE F056          	movff	postinc2,vfpfcnvrt@f+1
  2005  0024CE  CFDE F057          	movff	postinc2,vfpfcnvrt@f+2
  2006  0024D2  CFDE F058          	movff	postinc2,vfpfcnvrt@f+3
  2007  0024D6                     l938:
  2008                           
  2009                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2010  0024D6  0E02               	movlw	2
  2011  0024D8  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2012  0024DC  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2013  0024E0  26DE               	addwf	postinc2,f,c
  2014  0024E2  0E00               	movlw	0
  2015  0024E4  22DD               	addwfc	postdec2,f,c
  2016  0024E6                     
  2017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  2018  0024E6  C041  F032         	movff	vfpfcnvrt@fp,efgtoa@fp
  2019  0024EA  C042  F033         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2020  0024EE  C055  F034         	movff	vfpfcnvrt@f,efgtoa@f
  2021  0024F2  C056  F035         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2022  0024F6  C057  F036         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2023  0024FA  C058  F037         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2024  0024FE  C05C  F038         	movff	vfpfcnvrt@c,efgtoa@c
  2025  002502  EC0F  F008         	call	_efgtoa	;wreg free
  2026  002506  C032  F041         	movff	?_efgtoa,?_vfpfcnvrt
  2027  00250A  C033  F042         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2028  00250E  EFDA  F012         	goto	l930
  2029  002512                     l3812:
  2030                           
  2031                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2032  002512  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2033  002516  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2034  00251A  CFDE FFF6          	movff	postinc2,tblptrl
  2035  00251E  CFDD FFF7          	movff	postdec2,tblptrh
  2036  002522                     	if	0	;tblptru may be non-zero
  2037  002522                     	endif
  2038  002522                     	if	0	;tblptru may be non-zero
  2039  002522                     	endif
  2040  002522  0008               	tblrd		*
  2041  002524  50F5               	movf	tablat,w,c
  2042  002526  0A25               	xorlw	37
  2043  002528  A4D8               	btfss	status,2,c
  2044  00252A  EF99  F012         	goto	u4961
  2045  00252E  EF9B  F012         	goto	u4960
  2046  002532                     u4961:
  2047  002532  EFB2  F012         	goto	l3822
  2048  002536                     u4960:
  2049  002536                     
  2050                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2051  002536  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2052  00253A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2053  00253E  2ADE               	incf	postinc2,f,c
  2054  002540  0E00               	movlw	0
  2055  002542  22DD               	addwfc	postdec2,f,c
  2056  002544                     
  2057                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2058  002544  0E00               	movlw	0
  2059  002546  6E03               	movwf	(fputc@c+1)^0,c
  2060  002548  0E25               	movlw	37
  2061  00254A  6E02               	movwf	fputc@c^0,c
  2062  00254C  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2063  002550  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2064  002554  EC32  F021         	call	_fputc	;wreg free
  2065  002558                     l3818:
  2066                           
  2067                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2068  002558  0E00               	movlw	0
  2069  00255A  6E42               	movwf	(?_vfpfcnvrt+1)^0,c
  2070  00255C  0E01               	movlw	1
  2071  00255E  6E41               	movwf	?_vfpfcnvrt^0,c
  2072  002560  EFDA  F012         	goto	l930
  2073  002564                     l3822:
  2074                           
  2075                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2076  002564  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2077  002568  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2078  00256C  2ADE               	incf	postinc2,f,c
  2079  00256E  0E00               	movlw	0
  2080  002570  22DD               	addwfc	postdec2,f,c
  2081  002572                     
  2082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2083  002572  0E00               	movlw	0
  2084  002574  6E42               	movwf	(?_vfpfcnvrt+1)^0,c
  2085  002576  0E00               	movlw	0
  2086  002578  6E41               	movwf	?_vfpfcnvrt^0,c
  2087  00257A  EFDA  F012         	goto	l930
  2088  00257E                     l3828:
  2089                           
  2090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2091  00257E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2092  002582  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2093  002586  CFDE FFF6          	movff	postinc2,tblptrl
  2094  00258A  CFDD FFF7          	movff	postdec2,tblptrh
  2095  00258E                     	if	0	;tblptru may be non-zero
  2096  00258E                     	endif
  2097  00258E                     	if	0	;tblptru may be non-zero
  2098  00258E                     	endif
  2099  00258E  0008               	tblrd		*
  2100  002590  50F5               	movf	tablat,w,c
  2101  002592  6E02               	movwf	fputc@c^0,c
  2102  002594  6A03               	clrf	(fputc@c+1)^0,c
  2103  002596  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2104  00259A  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2105  00259E  EC32  F021         	call	_fputc	;wreg free
  2106  0025A2                     
  2107                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2108  0025A2  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2109  0025A6  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2110  0025AA  2ADE               	incf	postinc2,f,c
  2111  0025AC  0E00               	movlw	0
  2112  0025AE  22DD               	addwfc	postdec2,f,c
  2113  0025B0  EFAC  F012         	goto	l3818
  2114  0025B4                     l930:
  2115  0025B4  0012               	return		;funcret
  2116  0025B6                     __end_of_vfpfcnvrt:
  2117                           	callstack 0
  2118                           
  2119 ;; *************** function _strncmp *****************
  2120 ;; Defined at:
  2121 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2124 ;;		 -> vfpfcnvrt@ct(3), 
  2125 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2126 ;;		 -> STR_14(3), 
  2127 ;;  n               2    4[COMRAM] unsigned int 
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2130 ;;		 -> STR_14(3), 
  2131 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2132 ;;		 -> vfpfcnvrt@ct(3), 
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  2    0[COMRAM] int 
  2135 ;; Registers used:
  2136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2142 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2145 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2146 ;;Total ram usage:       11 bytes
  2147 ;; Hardware stack levels used: 1
  2148 ;; This function calls:
  2149 ;;		Nothing
  2150 ;; This function is called by:
  2151 ;;		_vfpfcnvrt
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text5
  2156  003D52                     __ptext5:
  2157                           	callstack 0
  2158  003D52                     _strncmp:
  2159                           	callstack 27
  2160  003D52  C001  F008         	movff	strncmp@_l,strncmp@l
  2161  003D56  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2162  003D5A  C003  F00A         	movff	strncmp@_r,strncmp@r
  2163  003D5E  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2164  003D62  0605               	decf	strncmp@n^0,f,c
  2165  003D64  A0D8               	btfss	status,0,c
  2166  003D66  0606               	decf	(strncmp@n+1)^0,f,c
  2167  003D68  2805               	incf	strncmp@n^0,w,c
  2168  003D6A  E106               	bnz	u4811
  2169  003D6C  2806               	incf	(strncmp@n+1)^0,w,c
  2170  003D6E  A4D8               	btfss	status,2,c
  2171  003D70  EFBC  F01E         	goto	u4811
  2172  003D74  EFBE  F01E         	goto	u4810
  2173  003D78                     u4811:
  2174  003D78  EFCB  F01E         	goto	l3744
  2175  003D7C                     u4810:
  2176  003D7C  0E00               	movlw	0
  2177  003D7E  6E02               	movwf	(?_strncmp+1)^0,c
  2178  003D80  0E00               	movlw	0
  2179  003D82  6E01               	movwf	?_strncmp^0,c
  2180  003D84  EF13  F01F         	goto	l1018
  2181  003D88                     l3742:
  2182  003D88  4A08               	infsnz	strncmp@l^0,f,c
  2183  003D8A  2A09               	incf	(strncmp@l+1)^0,f,c
  2184  003D8C  4A0A               	infsnz	strncmp@r^0,f,c
  2185  003D8E  2A0B               	incf	(strncmp@r+1)^0,f,c
  2186  003D90  0605               	decf	strncmp@n^0,f,c
  2187  003D92  A0D8               	btfss	status,0,c
  2188  003D94  0606               	decf	(strncmp@n+1)^0,f,c
  2189  003D96                     l3744:
  2190  003D96  C008  FFD9         	movff	strncmp@l,fsr2l
  2191  003D9A  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2192  003D9E  50DF               	movf	indf2,w,c
  2193  003DA0  B4D8               	btfsc	status,2,c
  2194  003DA2  EFD5  F01E         	goto	u4821
  2195  003DA6  EFD7  F01E         	goto	u4820
  2196  003DAA                     u4821:
  2197  003DAA  EF02  F01F         	goto	l3752
  2198  003DAE                     u4820:
  2199  003DAE  C00A  FFF6         	movff	strncmp@r,tblptrl
  2200  003DB2  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2201  003DB6                     	if	0	;tblptru may be non-zero
  2202  003DB6                     	endif
  2203  003DB6                     	if	0	;tblptru may be non-zero
  2204  003DB6                     	endif
  2205  003DB6  0008               	tblrd		*
  2206  003DB8  50F5               	movf	tablat,w,c
  2207  003DBA  0900               	iorlw	0
  2208  003DBC  B4D8               	btfsc	status,2,c
  2209  003DBE  EFE3  F01E         	goto	u4831
  2210  003DC2  EFE5  F01E         	goto	u4830
  2211  003DC6                     u4831:
  2212  003DC6  EF02  F01F         	goto	l3752
  2213  003DCA                     u4830:
  2214  003DCA  5005               	movf	strncmp@n^0,w,c
  2215  003DCC  1006               	iorwf	(strncmp@n+1)^0,w,c
  2216  003DCE  B4D8               	btfsc	status,2,c
  2217  003DD0  EFEC  F01E         	goto	u4841
  2218  003DD4  EFEE  F01E         	goto	u4840
  2219  003DD8                     u4841:
  2220  003DD8  EF02  F01F         	goto	l3752
  2221  003DDC                     u4840:
  2222  003DDC  C008  FFD9         	movff	strncmp@l,fsr2l
  2223  003DE0  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2224  003DE4  50DF               	movf	indf2,w,c
  2225  003DE6  6E07               	movwf	??_strncmp^0,c
  2226  003DE8  C00A  FFF6         	movff	strncmp@r,tblptrl
  2227  003DEC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2228  003DF0                     	if	0	;tblptru may be non-zero
  2229  003DF0                     	endif
  2230  003DF0                     	if	0	;tblptru may be non-zero
  2231  003DF0                     	endif
  2232  003DF0  0008               	tblrd		*
  2233  003DF2  50F5               	movf	tablat,w,c
  2234  003DF4  1807               	xorwf	??_strncmp^0,w,c
  2235  003DF6  B4D8               	btfsc	status,2,c
  2236  003DF8  EF00  F01F         	goto	u4851
  2237  003DFC  EF02  F01F         	goto	u4850
  2238  003E00                     u4851:
  2239  003E00  EFC4  F01E         	goto	l3742
  2240  003E04                     u4850:
  2241  003E04                     l3752:
  2242  003E04  C008  FFD9         	movff	strncmp@l,fsr2l
  2243  003E08  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2244  003E0C  50DF               	movf	indf2,w,c
  2245  003E0E  6E07               	movwf	??_strncmp^0,c
  2246  003E10  C00A  FFF6         	movff	strncmp@r,tblptrl
  2247  003E14  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2248  003E18                     	if	0	;tblptru may be non-zero
  2249  003E18                     	endif
  2250  003E18                     	if	0	;tblptru may be non-zero
  2251  003E18                     	endif
  2252  003E18  0008               	tblrd		*
  2253  003E1A  50F5               	movf	tablat,w,c
  2254  003E1C  5C07               	subwf	??_strncmp^0,w,c
  2255  003E1E  6E01               	movwf	?_strncmp^0,c
  2256  003E20  6A02               	clrf	(?_strncmp+1)^0,c
  2257  003E22  A0D8               	btfss	status,0,c
  2258  003E24  0602               	decf	(?_strncmp+1)^0,f,c
  2259  003E26                     l1018:
  2260  003E26  0012               	return		;funcret
  2261  003E28                     __end_of_strncmp:
  2262                           	callstack 0
  2263                           
  2264 ;; *************** function _efgtoa *****************
  2265 ;; Defined at:
  2266 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  fp              2   49[COMRAM] PTR struct _IO_FILE
  2269 ;;		 -> NULL(0), 
  2270 ;;  f               4   51[COMRAM] PTR struct _IO_FILE
  2271 ;;  c               1   55[COMRAM] unsigned char 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  u               4   52[BANK0 ] unsigned char 
  2274 ;;  g               4   44[BANK0 ] unsigned char 
  2275 ;;  l               4   38[BANK0 ] unsigned char 
  2276 ;;  h               4   34[BANK0 ] unsigned char 
  2277 ;;  ou              4   20[BANK0 ] unsigned char 
  2278 ;;  n               2   50[BANK0 ] int 
  2279 ;;  e               2   48[BANK0 ] int 
  2280 ;;  i               2   42[BANK0 ] int 
  2281 ;;  w               2   30[BANK0 ] int 
  2282 ;;  p               2   28[BANK0 ] int 
  2283 ;;  sign            2   26[BANK0 ] int 
  2284 ;;  d               2   24[BANK0 ] int 
  2285 ;;  m               2   18[BANK0 ] int 
  2286 ;;  ne              2   16[BANK0 ] int 
  2287 ;;  pp              2   14[BANK0 ] int 
  2288 ;;  t               2   12[BANK0 ] int 
  2289 ;;  mode            1   33[BANK0 ] unsigned char 
  2290 ;;  nmode           1   32[BANK0 ] unsigned char 
  2291 ;; Return value:  Size  Location     Type
  2292 ;;                  2   49[COMRAM] int 
  2293 ;; Registers used:
  2294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2295 ;; Tracked objects:
  2296 ;;		On entry : 0/0
  2297 ;;		On exit  : 0/0
  2298 ;;		Unchanged: 0/0
  2299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2300 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2301 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2302 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2303 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2304 ;;Total ram usage:       68 bytes
  2305 ;; Hardware stack levels used: 1
  2306 ;; Hardware stack levels required when called: 4
  2307 ;; This function calls:
  2308 ;;		___awdiv
  2309 ;;		___awmod
  2310 ;;		___fladd
  2311 ;;		___fldiv
  2312 ;;		___fleq
  2313 ;;		___flge
  2314 ;;		___flmul
  2315 ;;		___flneg
  2316 ;;		___flsub
  2317 ;;		___fltol
  2318 ;;		___fpclassifyf
  2319 ;;		_floorf
  2320 ;;		_isupper
  2321 ;;		_pad
  2322 ;;		_strcpy
  2323 ;;		_tolower
  2324 ;; This function is called by:
  2325 ;;		_vfpfcnvrt
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           	psect	text6
  2330  00101E                     __ptext6:
  2331                           	callstack 0
  2332  00101E                     _efgtoa:
  2333                           	callstack 23
  2334  00101E                     
  2335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2336  00101E  0E00               	movlw	0
  2337  001020  0100               	movlb	0	; () banked
  2338  001022  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2339  001024  0E00               	movlw	0
  2340  001026  6F7A               	movwf	efgtoa@sign& (0+255),b
  2341  001028                     
  2342                           ; BSR set to: 0
  2343                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2344  001028  C034  F08C         	movff	efgtoa@f,efgtoa@g
  2345  00102C  C035  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2346  001030  C036  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2347  001034  C037  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2348  001038                     
  2349                           ; BSR set to: 0
  2350                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2351  001038  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2352  00103A  EF23  F008         	goto	u4270
  2353  00103E  EF21  F008         	goto	u4271
  2354  001042                     u4271:
  2355  001042  EF39  F008         	goto	l3438
  2356  001046                     u4270:
  2357  001046                     
  2358                           ; BSR set to: 0
  2359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2360  001046  0E00               	movlw	0
  2361  001048  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2362  00104A  0E01               	movlw	1
  2363  00104C  6F7A               	movwf	efgtoa@sign& (0+255),b
  2364  00104E                     
  2365                           ; BSR set to: 0
  2366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2367  00104E  C08C  F001         	movff	efgtoa@g,___flneg@f1
  2368  001052  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2369  001056  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2370  00105A  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2371  00105E  EC78  F023         	call	___flneg	;wreg free
  2372  001062  C001  F08C         	movff	?___flneg,efgtoa@g
  2373  001066  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  2374  00106A  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  2375  00106E  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  2376  001072                     l3438:
  2377                           
  2378                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2379  001072  0E00               	movlw	0
  2380  001074  0100               	movlb	0	; () banked
  2381  001076  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2382  001078  0E00               	movlw	0
  2383  00107A  6F92               	movwf	efgtoa@n& (0+255),b
  2384  00107C                     
  2385                           ; BSR set to: 0
  2386                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2387  00107C  C0F1  F07E         	movff	_width,efgtoa@w
  2388  001080  C0F2  F07F         	movff	_width+1,efgtoa@w+1
  2389  001084                     
  2390                           ; BSR set to: 0
  2391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2392  001084  517A               	movf	efgtoa@sign& (0+255),w,b
  2393  001086  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2394  001088  A4D8               	btfss	status,2,c
  2395  00108A  EF49  F008         	goto	u4281
  2396  00108E  EF4B  F008         	goto	u4280
  2397  001092                     u4281:
  2398  001092  EF52  F008         	goto	l3446
  2399  001096                     u4280:
  2400  001096                     
  2401                           ; BSR set to: 0
  2402  001096  A5F5               	btfss	_flags& (0+255),2,b
  2403  001098  EF50  F008         	goto	u4291
  2404  00109C  EF52  F008         	goto	u4290
  2405  0010A0                     u4291:
  2406  0010A0  EF6C  F008         	goto	l3458
  2407  0010A4                     u4290:
  2408  0010A4                     l3446:
  2409                           
  2410                           ; BSR set to: 0
  2411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2412  0010A4  517A               	movf	efgtoa@sign& (0+255),w,b
  2413  0010A6  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2414  0010A8  A4D8               	btfss	status,2,c
  2415  0010AA  EF59  F008         	goto	u4301
  2416  0010AE  EF5B  F008         	goto	u4300
  2417  0010B2                     u4301:
  2418  0010B2  EF61  F008         	goto	l3450
  2419  0010B6                     u4300:
  2420  0010B6                     
  2421                           ; BSR set to: 0
  2422  0010B6  0E00               	movlw	0
  2423  0010B8  6F61               	movwf	(_efgtoa$1067+1)& (0+255),b
  2424  0010BA  0E2B               	movlw	43
  2425  0010BC  6F60               	movwf	_efgtoa$1067& (0+255),b
  2426  0010BE  EF65  F008         	goto	l3452
  2427  0010C2                     l3450:
  2428                           
  2429                           ; BSR set to: 0
  2430  0010C2  0E00               	movlw	0
  2431  0010C4  6F61               	movwf	(_efgtoa$1067+1)& (0+255),b
  2432  0010C6  0E2D               	movlw	45
  2433  0010C8  6F60               	movwf	_efgtoa$1067& (0+255),b
  2434  0010CA                     l3452:
  2435                           
  2436                           ; BSR set to: 0
  2437  0010CA  C060  F100         	movff	_efgtoa$1067,_dbuf
  2438  0010CE                     
  2439                           ; BSR set to: 0
  2440                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2441  0010CE  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2442  0010D0  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2443  0010D2                     
  2444                           ; BSR set to: 0
  2445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  2446  0010D2  077E               	decf	efgtoa@w& (0+255),f,b
  2447  0010D4  A0D8               	btfss	status,0,c
  2448  0010D6  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  2449  0010D8                     l3458:
  2450                           
  2451                           ; BSR set to: 0
  2452                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2453  0010D8  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2454  0010DC  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2455  0010E0  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2456  0010E4  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2457  0010E8  EC2A  F01E         	call	___fpclassifyf	;wreg free
  2458  0010EC  0401               	decf	?___fpclassifyf^0,w,c
  2459  0010EE  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2460  0010F0  A4D8               	btfss	status,2,c
  2461  0010F2  EF7D  F008         	goto	u4311
  2462  0010F6  EF7F  F008         	goto	u4310
  2463  0010FA                     u4311:
  2464  0010FA  EFD6  F008         	goto	l3476
  2465  0010FE                     u4310:
  2466  0010FE  0EBF               	movlw	191
  2467  001100  6E39               	movwf	??_efgtoa^0,c
  2468  001102  0EFF               	movlw	255
  2469  001104  6E3A               	movwf	(??_efgtoa+1)^0,c
  2470  001106  5038               	movf	efgtoa@c^0,w,c
  2471  001108  6E3B               	movwf	(??_efgtoa+2)^0,c
  2472  00110A  6A3C               	clrf	(??_efgtoa+3)^0,c
  2473  00110C  5039               	movf	??_efgtoa^0,w,c
  2474  00110E  263B               	addwf	(??_efgtoa+2)^0,f,c
  2475  001110  503A               	movf	(??_efgtoa+1)^0,w,c
  2476  001112  223C               	addwfc	(??_efgtoa+3)^0,f,c
  2477  001114  503C               	movf	(??_efgtoa+3)^0,w,c
  2478  001116  E10A               	bnz	u4320
  2479  001118  0E1A               	movlw	26
  2480  00111A  5C3B               	subwf	(??_efgtoa+2)^0,w,c
  2481  00111C  A0D8               	btfss	status,0,c
  2482  00111E  EF93  F008         	goto	u4321
  2483  001122  EF96  F008         	goto	u4320
  2484  001126                     u4321:
  2485  001126  0E01               	movlw	1
  2486  001128  EF97  F008         	goto	u4330
  2487  00112C                     u4320:
  2488  00112C  0E00               	movlw	0
  2489  00112E                     u4330:
  2490  00112E  0100               	movlb	0	; () banked
  2491  001130  6F62               	movwf	_efgtoa$1068& (0+255),b
  2492  001132  6B63               	clrf	(_efgtoa$1068+1)& (0+255),b
  2493  001134                     
  2494                           ; BSR set to: 0
  2495  001134  5162               	movf	_efgtoa$1068& (0+255),w,b
  2496  001136  1163               	iorwf	(_efgtoa$1068+1)& (0+255),w,b
  2497  001138  B4D8               	btfsc	status,2,c
  2498  00113A  EFA1  F008         	goto	u4341
  2499  00113E  EFA3  F008         	goto	u4340
  2500  001142                     u4341:
  2501  001142  EFB1  F008         	goto	l3468
  2502  001146                     u4340:
  2503  001146                     
  2504                           ; BSR set to: 0
  2505                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2506  001146  0E00               	movlw	low _dbuf
  2507  001148  2592               	addwf	efgtoa@n& (0+255),w,b
  2508  00114A  6E01               	movwf	strcpy@dest^0,c
  2509  00114C  0E01               	movlw	high _dbuf
  2510  00114E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2511  001150  6E02               	movwf	(strcpy@dest+1)^0,c
  2512  001152  0E01               	movlw	low STR_4
  2513  001154  6E03               	movwf	strcpy@src^0,c
  2514  001156  0E10               	movlw	high STR_4
  2515  001158  6E04               	movwf	(strcpy@src+1)^0,c
  2516  00115A  ECA1  F022         	call	_strcpy	;wreg free
  2517                           
  2518                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2519  00115E  EFBD  F008         	goto	l3470
  2520  001162                     l3468:
  2521                           
  2522                           ; BSR set to: 0
  2523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2524  001162  0E00               	movlw	low _dbuf
  2525  001164  2592               	addwf	efgtoa@n& (0+255),w,b
  2526  001166  6E01               	movwf	strcpy@dest^0,c
  2527  001168  0E01               	movlw	high _dbuf
  2528  00116A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2529  00116C  6E02               	movwf	(strcpy@dest+1)^0,c
  2530  00116E  0E09               	movlw	low STR_5
  2531  001170  6E03               	movwf	strcpy@src^0,c
  2532  001172  0E10               	movlw	high STR_5
  2533  001174  6E04               	movwf	(strcpy@src+1)^0,c
  2534  001176  ECA1  F022         	call	_strcpy	;wreg free
  2535  00117A                     l3470:
  2536                           
  2537                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2538  00117A  0100               	movlb	0	; () banked
  2539  00117C  0EFD               	movlw	253
  2540  00117E  277E               	addwf	efgtoa@w& (0+255),f,b
  2541  001180  0EFF               	movlw	255
  2542  001182  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2543  001184                     
  2544                           ; BSR set to: 0
  2545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2546  001184  C032  F012         	movff	efgtoa@fp,pad@fp
  2547  001188  C033  F013         	movff	efgtoa@fp+1,pad@fp+1
  2548  00118C  0E00               	movlw	low _dbuf
  2549  00118E  6E14               	movwf	pad@buf^0,c
  2550  001190  0E01               	movlw	high _dbuf
  2551  001192  6E15               	movwf	(pad@buf+1)^0,c
  2552  001194  C07E  F016         	movff	efgtoa@w,pad@p
  2553  001198  C07F  F017         	movff	efgtoa@w+1,pad@p+1
  2554  00119C  EC14  F01F         	call	_pad	;wreg free
  2555  0011A0  C012  F032         	movff	?_pad,?_efgtoa
  2556  0011A4  C013  F033         	movff	?_pad+1,?_efgtoa+1
  2557  0011A8  EF61  F00E         	goto	l846
  2558  0011AC                     l3476:
  2559                           
  2560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2561  0011AC  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2562  0011B0  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2563  0011B4  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2564  0011B8  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2565  0011BC  EC2A  F01E         	call	___fpclassifyf	;wreg free
  2566  0011C0  5001               	movf	?___fpclassifyf^0,w,c
  2567  0011C2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2568  0011C4  A4D8               	btfss	status,2,c
  2569  0011C6  EFE7  F008         	goto	u4351
  2570  0011CA  EFE9  F008         	goto	u4350
  2571  0011CE                     u4351:
  2572  0011CE  EF40  F009         	goto	l3494
  2573  0011D2                     u4350:
  2574  0011D2  0EBF               	movlw	191
  2575  0011D4  6E39               	movwf	??_efgtoa^0,c
  2576  0011D6  0EFF               	movlw	255
  2577  0011D8  6E3A               	movwf	(??_efgtoa+1)^0,c
  2578  0011DA  5038               	movf	efgtoa@c^0,w,c
  2579  0011DC  6E3B               	movwf	(??_efgtoa+2)^0,c
  2580  0011DE  6A3C               	clrf	(??_efgtoa+3)^0,c
  2581  0011E0  5039               	movf	??_efgtoa^0,w,c
  2582  0011E2  263B               	addwf	(??_efgtoa+2)^0,f,c
  2583  0011E4  503A               	movf	(??_efgtoa+1)^0,w,c
  2584  0011E6  223C               	addwfc	(??_efgtoa+3)^0,f,c
  2585  0011E8  503C               	movf	(??_efgtoa+3)^0,w,c
  2586  0011EA  E10A               	bnz	u4360
  2587  0011EC  0E1A               	movlw	26
  2588  0011EE  5C3B               	subwf	(??_efgtoa+2)^0,w,c
  2589  0011F0  A0D8               	btfss	status,0,c
  2590  0011F2  EFFD  F008         	goto	u4361
  2591  0011F6  EF00  F009         	goto	u4360
  2592  0011FA                     u4361:
  2593  0011FA  0E01               	movlw	1
  2594  0011FC  EF01  F009         	goto	u4370
  2595  001200                     u4360:
  2596  001200  0E00               	movlw	0
  2597  001202                     u4370:
  2598  001202  0100               	movlb	0	; () banked
  2599  001204  6F64               	movwf	_efgtoa$1072& (0+255),b
  2600  001206  6B65               	clrf	(_efgtoa$1072+1)& (0+255),b
  2601  001208                     
  2602                           ; BSR set to: 0
  2603  001208  5164               	movf	_efgtoa$1072& (0+255),w,b
  2604  00120A  1165               	iorwf	(_efgtoa$1072+1)& (0+255),w,b
  2605  00120C  B4D8               	btfsc	status,2,c
  2606  00120E  EF0B  F009         	goto	u4381
  2607  001212  EF0D  F009         	goto	u4380
  2608  001216                     u4381:
  2609  001216  EF1B  F009         	goto	l3486
  2610  00121A                     u4380:
  2611  00121A                     
  2612                           ; BSR set to: 0
  2613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2614  00121A  0E00               	movlw	low _dbuf
  2615  00121C  2592               	addwf	efgtoa@n& (0+255),w,b
  2616  00121E  6E01               	movwf	strcpy@dest^0,c
  2617  001220  0E01               	movlw	high _dbuf
  2618  001222  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2619  001224  6E02               	movwf	(strcpy@dest+1)^0,c
  2620  001226  0E05               	movlw	low STR_8
  2621  001228  6E03               	movwf	strcpy@src^0,c
  2622  00122A  0E10               	movlw	high STR_8
  2623  00122C  6E04               	movwf	(strcpy@src+1)^0,c
  2624  00122E  ECA1  F022         	call	_strcpy	;wreg free
  2625                           
  2626                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2627  001232  EF27  F009         	goto	l3488
  2628  001236                     l3486:
  2629                           
  2630                           ; BSR set to: 0
  2631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2632  001236  0E00               	movlw	low _dbuf
  2633  001238  2592               	addwf	efgtoa@n& (0+255),w,b
  2634  00123A  6E01               	movwf	strcpy@dest^0,c
  2635  00123C  0E01               	movlw	high _dbuf
  2636  00123E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2637  001240  6E02               	movwf	(strcpy@dest+1)^0,c
  2638  001242  0E0D               	movlw	low STR_9
  2639  001244  6E03               	movwf	strcpy@src^0,c
  2640  001246  0E10               	movlw	high STR_9
  2641  001248  6E04               	movwf	(strcpy@src+1)^0,c
  2642  00124A  ECA1  F022         	call	_strcpy	;wreg free
  2643  00124E                     l3488:
  2644                           
  2645                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2646  00124E  0100               	movlb	0	; () banked
  2647  001250  0EFD               	movlw	253
  2648  001252  277E               	addwf	efgtoa@w& (0+255),f,b
  2649  001254  0EFF               	movlw	255
  2650  001256  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2651  001258                     
  2652                           ; BSR set to: 0
  2653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2654  001258  C032  F012         	movff	efgtoa@fp,pad@fp
  2655  00125C  C033  F013         	movff	efgtoa@fp+1,pad@fp+1
  2656  001260  0E00               	movlw	low _dbuf
  2657  001262  6E14               	movwf	pad@buf^0,c
  2658  001264  0E01               	movlw	high _dbuf
  2659  001266  6E15               	movwf	(pad@buf+1)^0,c
  2660  001268  C07E  F016         	movff	efgtoa@w,pad@p
  2661  00126C  C07F  F017         	movff	efgtoa@w+1,pad@p+1
  2662  001270  EC14  F01F         	call	_pad	;wreg free
  2663  001274  C012  F032         	movff	?_pad,?_efgtoa
  2664  001278  C013  F033         	movff	?_pad+1,?_efgtoa+1
  2665  00127C  EF61  F00E         	goto	l846
  2666  001280                     l3494:
  2667                           
  2668                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2669  001280  0E00               	movlw	0
  2670  001282  0100               	movlb	0	; () banked
  2671  001284  6F94               	movwf	efgtoa@u& (0+255),b
  2672  001286  0E00               	movlw	0
  2673  001288  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2674  00128A  0E80               	movlw	128
  2675  00128C  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2676  00128E  0E3F               	movlw	63
  2677  001290  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2678                           
  2679                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2680  001292  0E00               	movlw	0
  2681  001294  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2682  001296  0E00               	movlw	0
  2683  001298  6F90               	movwf	efgtoa@e& (0+255),b
  2684  00129A                     
  2685                           ; BSR set to: 0
  2686                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2687  00129A  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  2688  00129E  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2689  0012A2  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2690  0012A6  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2691  0012AA  0E00               	movlw	0
  2692  0012AC  6E05               	movwf	___fleq@ff2^0,c
  2693  0012AE  0E00               	movlw	0
  2694  0012B0  6E06               	movwf	(___fleq@ff2+1)^0,c
  2695  0012B2  0E00               	movlw	0
  2696  0012B4  6E07               	movwf	(___fleq@ff2+2)^0,c
  2697  0012B6  0E00               	movlw	0
  2698  0012B8  6E08               	movwf	(___fleq@ff2+3)^0,c
  2699  0012BA  EC8A  F020         	call	___fleq	;wreg free
  2700  0012BE  B0D8               	btfsc	status,0,c
  2701  0012C0  EF64  F009         	goto	u4391
  2702  0012C4  EF66  F009         	goto	u4390
  2703  0012C8                     u4391:
  2704  0012C8  EFE9  F009         	goto	l3512
  2705  0012CC                     u4390:
  2706  0012CC  EF85  F009         	goto	l3504
  2707  0012D0                     l3500:
  2708                           
  2709                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2710  0012D0  C094  F001         	movff	efgtoa@u,___flmul@b
  2711  0012D4  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  2712  0012D8  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  2713  0012DC  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  2714  0012E0  0E00               	movlw	0
  2715  0012E2  6E05               	movwf	___flmul@a^0,c
  2716  0012E4  0E00               	movlw	0
  2717  0012E6  6E06               	movwf	(___flmul@a+1)^0,c
  2718  0012E8  0E20               	movlw	32
  2719  0012EA  6E07               	movwf	(___flmul@a+2)^0,c
  2720  0012EC  0E41               	movlw	65
  2721  0012EE  6E08               	movwf	(___flmul@a+3)^0,c
  2722  0012F0  ECDB  F012         	call	___flmul	;wreg free
  2723  0012F4  C001  F094         	movff	?___flmul,efgtoa@u
  2724  0012F8  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  2725  0012FC  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  2726  001300  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  2727  001304                     
  2728                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2729  001304  0100               	movlb	0	; () banked
  2730  001306  4B90               	infsnz	efgtoa@e& (0+255),f,b
  2731  001308  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  2732  00130A                     l3504:
  2733                           
  2734                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2735  00130A  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  2736  00130E  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2737  001312  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2738  001316  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2739  00131A  0E00               	movlw	0
  2740  00131C  6E05               	movwf	___flmul@a^0,c
  2741  00131E  0E00               	movlw	0
  2742  001320  6E06               	movwf	(___flmul@a+1)^0,c
  2743  001322  0E20               	movlw	32
  2744  001324  6E07               	movwf	(___flmul@a+2)^0,c
  2745  001326  0E41               	movlw	65
  2746  001328  6E08               	movwf	(___flmul@a+3)^0,c
  2747  00132A  C094  F001         	movff	efgtoa@u,___flmul@b
  2748  00132E  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  2749  001332  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  2750  001336  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  2751  00133A  ECDB  F012         	call	___flmul	;wreg free
  2752  00133E  C001  F01E         	movff	?___flmul,___flge@ff2
  2753  001342  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  2754  001346  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  2755  00134A  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  2756  00134E  ECA8  F01D         	call	___flge	;wreg free
  2757  001352  B0D8               	btfsc	status,0,c
  2758  001354  EFAE  F009         	goto	u4401
  2759  001358  EFB0  F009         	goto	u4400
  2760  00135C                     u4401:
  2761  00135C  EF68  F009         	goto	l3500
  2762  001360                     u4400:
  2763  001360  EFD0  F009         	goto	l3510
  2764  001364                     l3506:
  2765                           
  2766                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2767  001364  C094  F001         	movff	efgtoa@u,___fldiv@b
  2768  001368  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2769  00136C  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2770  001370  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2771  001374  0E00               	movlw	0
  2772  001376  6E05               	movwf	___fldiv@a^0,c
  2773  001378  0E00               	movlw	0
  2774  00137A  6E06               	movwf	(___fldiv@a+1)^0,c
  2775  00137C  0E20               	movlw	32
  2776  00137E  6E07               	movwf	(___fldiv@a+2)^0,c
  2777  001380  0E41               	movlw	65
  2778  001382  6E08               	movwf	(___fldiv@a+3)^0,c
  2779  001384  ECF0  F014         	call	___fldiv	;wreg free
  2780  001388  C001  F094         	movff	?___fldiv,efgtoa@u
  2781  00138C  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  2782  001390  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  2783  001394  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  2784  001398                     
  2785                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  2786  001398  0100               	movlb	0	; () banked
  2787  00139A  0790               	decf	efgtoa@e& (0+255),f,b
  2788  00139C  A0D8               	btfss	status,0,c
  2789  00139E  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  2790  0013A0                     l3510:
  2791                           
  2792                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  2793  0013A0  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  2794  0013A4  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2795  0013A8  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2796  0013AC  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2797  0013B0  C094  F01E         	movff	efgtoa@u,___flge@ff2
  2798  0013B4  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  2799  0013B8  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  2800  0013BC  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  2801  0013C0  ECA8  F01D         	call	___flge	;wreg free
  2802  0013C4  A0D8               	btfss	status,0,c
  2803  0013C6  EFE7  F009         	goto	u4411
  2804  0013CA  EFE9  F009         	goto	u4410
  2805  0013CE                     u4411:
  2806  0013CE  EFB2  F009         	goto	l3506
  2807  0013D2                     u4410:
  2808  0013D2                     l3512:
  2809                           
  2810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  2811  0013D2  C038  F007         	movff	efgtoa@c,tolower@c
  2812  0013D6  6A08               	clrf	(tolower@c+1)^0,c
  2813  0013D8  EC71  F022         	call	_tolower	;wreg free
  2814  0013DC  5007               	movf	?_tolower^0,w,c
  2815  0013DE  0100               	movlb	0	; () banked
  2816  0013E0  6F81               	movwf	efgtoa@mode& (0+255),b
  2817  0013E2                     
  2818                           ; BSR set to: 0
  2819                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  2820  0013E2  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  2821  0013E6                     
  2822                           ; BSR set to: 0
  2823                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  2824  0013E6  0E67               	movlw	103
  2825  0013E8  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2826  0013EA  A4D8               	btfss	status,2,c
  2827  0013EC  EFFA  F009         	goto	u4421
  2828  0013F0  EFFC  F009         	goto	u4420
  2829  0013F4                     u4421:
  2830  0013F4  EF22  F00A         	goto	l3526
  2831  0013F8                     u4420:
  2832  0013F8                     
  2833                           ; BSR set to: 0
  2834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  2835  0013F8  51F3               	movf	_prec& (0+255),w,b
  2836  0013FA  11F4               	iorwf	(_prec+1)& (0+255),w,b
  2837  0013FC  A4D8               	btfss	status,2,c
  2838  0013FE  EF03  F00A         	goto	u4431
  2839  001402  EF05  F00A         	goto	u4430
  2840  001406                     u4431:
  2841  001406  EF09  F00A         	goto	l3522
  2842  00140A                     u4430:
  2843  00140A                     
  2844                           ; BSR set to: 0
  2845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  2846  00140A  0E00               	movlw	0
  2847  00140C  6FF4               	movwf	(_prec+1)& (0+255),b
  2848  00140E  0E01               	movlw	1
  2849  001410  6FF3               	movwf	_prec& (0+255),b
  2850  001412                     l3522:
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  2854  001412  BFF4               	btfsc	(_prec+1)& (0+255),7,b
  2855  001414  EF16  F00A         	goto	u4440
  2856  001418  51F4               	movf	(_prec+1)& (0+255),w,b
  2857  00141A  E106               	bnz	u4441
  2858  00141C  05F3               	decf	_prec& (0+255),w,b
  2859  00141E  B0D8               	btfsc	status,0,c
  2860  001420  EF14  F00A         	goto	u4441
  2861  001424  EF16  F00A         	goto	u4440
  2862  001428                     u4441:
  2863  001428  EF1C  F00A         	goto	l864
  2864  00142C                     u4440:
  2865  00142C                     l3524:
  2866                           
  2867                           ; BSR set to: 0
  2868  00142C  0E00               	movlw	0
  2869  00142E  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  2870  001430  0E06               	movlw	6
  2871  001432  6F7C               	movwf	efgtoa@p& (0+255),b
  2872  001434  EF2B  F00A         	goto	l3532
  2873  001438                     l864:
  2874                           
  2875                           ; BSR set to: 0
  2876  001438  C0F3  F07C         	movff	_prec,efgtoa@p
  2877  00143C  C0F4  F07D         	movff	_prec+1,efgtoa@p+1
  2878  001440  EF2B  F00A         	goto	l3532
  2879  001444                     l3526:
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  2883  001444  BFF4               	btfsc	(_prec+1)& (0+255),7,b
  2884  001446  EF27  F00A         	goto	u4451
  2885  00144A  EF29  F00A         	goto	u4450
  2886  00144E                     u4451:
  2887  00144E  EF16  F00A         	goto	l3524
  2888  001452                     u4450:
  2889  001452  EF1C  F00A         	goto	l864
  2890  001456                     l3532:
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  2894  001456  0E67               	movlw	103
  2895  001458  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2896  00145A  A4D8               	btfss	status,2,c
  2897  00145C  EF32  F00A         	goto	u4461
  2898  001460  EF34  F00A         	goto	u4460
  2899  001464                     u4461:
  2900  001464  EF63  F00A         	goto	l3542
  2901  001468                     u4460:
  2902  001468                     
  2903                           ; BSR set to: 0
  2904                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  2905  001468  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  2906  00146A  EF42  F00A         	goto	u4470
  2907  00146E  0EFC               	movlw	252
  2908  001470  5D90               	subwf	efgtoa@e& (0+255),w,b
  2909  001472  0EFF               	movlw	255
  2910  001474  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2911  001476  A0D8               	btfss	status,0,c
  2912  001478  EF40  F00A         	goto	u4471
  2913  00147C  EF42  F00A         	goto	u4470
  2914  001480                     u4471:
  2915  001480  EF61  F00A         	goto	l3540
  2916  001484                     u4470:
  2917  001484                     
  2918                           ; BSR set to: 0
  2919  001484  0EFF               	movlw	255
  2920  001486  6E39               	movwf	??_efgtoa^0,c
  2921  001488  0EFF               	movlw	255
  2922  00148A  6E3A               	movwf	(??_efgtoa+1)^0,c
  2923  00148C  C07C  F03B         	movff	efgtoa@p,??_efgtoa+2
  2924  001490  C07D  F03C         	movff	efgtoa@p+1,??_efgtoa+3
  2925  001494  5039               	movf	??_efgtoa^0,w,c
  2926  001496  263B               	addwf	(??_efgtoa+2)^0,f,c
  2927  001498  503A               	movf	(??_efgtoa+1)^0,w,c
  2928  00149A  223C               	addwfc	(??_efgtoa+3)^0,f,c
  2929  00149C  5190               	movf	efgtoa@e& (0+255),w,b
  2930  00149E  5C3B               	subwf	(??_efgtoa+2)^0,w,c
  2931  0014A0  503C               	movf	(??_efgtoa+3)^0,w,c
  2932  0014A2  0A80               	xorlw	128
  2933  0014A4  6E3D               	movwf	(??_efgtoa+4)^0,c
  2934  0014A6  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2935  0014A8  0A80               	xorlw	128
  2936  0014AA  583D               	subwfb	(??_efgtoa+4)^0,w,c
  2937  0014AC  A0D8               	btfss	status,0,c
  2938  0014AE  EF5B  F00A         	goto	u4481
  2939  0014B2  EF5D  F00A         	goto	u4480
  2940  0014B6                     u4481:
  2941  0014B6  EF61  F00A         	goto	l3540
  2942  0014BA                     u4480:
  2943  0014BA                     
  2944                           ; BSR set to: 0
  2945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  2946  0014BA  0E66               	movlw	102
  2947  0014BC  6F80               	movwf	efgtoa@nmode& (0+255),b
  2948                           
  2949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  2950  0014BE  EF63  F00A         	goto	l3542
  2951  0014C2                     l3540:
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  2955  0014C2  0E65               	movlw	101
  2956  0014C4  6F80               	movwf	efgtoa@nmode& (0+255),b
  2957  0014C6                     l3542:
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  2961  0014C6  C07C  F072         	movff	efgtoa@p,efgtoa@m
  2962  0014CA  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  2963  0014CE                     
  2964                           ; BSR set to: 0
  2965                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  2966  0014CE  0E67               	movlw	103
  2967  0014D0  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2968  0014D2  A4D8               	btfss	status,2,c
  2969  0014D4  EF6E  F00A         	goto	u4491
  2970  0014D8  EF70  F00A         	goto	u4490
  2971  0014DC                     u4491:
  2972  0014DC  EF80  F00A         	goto	l3550
  2973  0014E0                     u4490:
  2974  0014E0                     
  2975                           ; BSR set to: 0
  2976  0014E0  0E66               	movlw	102
  2977  0014E2  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  2978  0014E4  A4D8               	btfss	status,2,c
  2979  0014E6  EF77  F00A         	goto	u4501
  2980  0014EA  EF79  F00A         	goto	u4500
  2981  0014EE                     u4501:
  2982  0014EE  EF82  F00A         	goto	l3552
  2983  0014F2                     u4500:
  2984  0014F2                     
  2985                           ; BSR set to: 0
  2986  0014F2  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2987  0014F4  EF80  F00A         	goto	u4510
  2988  0014F8  EF7E  F00A         	goto	u4511
  2989  0014FC                     u4511:
  2990  0014FC  EF82  F00A         	goto	l3552
  2991  001500                     u4510:
  2992  001500                     l3550:
  2993                           
  2994                           ; BSR set to: 0
  2995                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  2996  001500  4B72               	infsnz	efgtoa@m& (0+255),f,b
  2997  001502  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  2998  001504                     l3552:
  2999                           
  3000                           ; BSR set to: 0
  3001                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3002  001504  0E66               	movlw	102
  3003  001506  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3004  001508  A4D8               	btfss	status,2,c
  3005  00150A  EF89  F00A         	goto	u4521
  3006  00150E  EF8B  F00A         	goto	u4520
  3007  001512                     u4521:
  3008  001512  EFAB  F00A         	goto	l3562
  3009  001516                     u4520:
  3010  001516                     
  3011                           ; BSR set to: 0
  3012                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3013  001516  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3014  001518  EF92  F00A         	goto	u4530
  3015  00151C  EF90  F00A         	goto	u4531
  3016  001520                     u4531:
  3017  001520  EF9E  F00A         	goto	l3558
  3018  001524                     u4530:
  3019  001524                     
  3020                           ; BSR set to: 0
  3021                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3022  001524  0E00               	movlw	0
  3023  001526  6F94               	movwf	efgtoa@u& (0+255),b
  3024  001528  0E00               	movlw	0
  3025  00152A  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3026  00152C  0E80               	movlw	128
  3027  00152E  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3028  001530  0E3F               	movlw	63
  3029  001532  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3030                           
  3031                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3032  001534  0E00               	movlw	0
  3033  001536  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3034  001538  0E00               	movlw	0
  3035  00153A  6F90               	movwf	efgtoa@e& (0+255),b
  3036  00153C                     l3558:
  3037                           
  3038                           ; BSR set to: 0
  3039                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3040  00153C  0E67               	movlw	103
  3041  00153E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3042  001540  B4D8               	btfsc	status,2,c
  3043  001542  EFA5  F00A         	goto	u4541
  3044  001546  EFA7  F00A         	goto	u4540
  3045  00154A                     u4541:
  3046  00154A  EFAB  F00A         	goto	l3562
  3047  00154E                     u4540:
  3048  00154E                     
  3049                           ; BSR set to: 0
  3050                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3051  00154E  5190               	movf	efgtoa@e& (0+255),w,b
  3052  001550  2772               	addwf	efgtoa@m& (0+255),f,b
  3053  001552  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3054  001554  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3055  001556                     l3562:
  3056                           
  3057                           ; BSR set to: 0
  3058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3059  001556  0E00               	movlw	0
  3060  001558  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3061  00155A  0E00               	movlw	0
  3062  00155C  6F8A               	movwf	efgtoa@i& (0+255),b
  3063  00155E                     
  3064                           ; BSR set to: 0
  3065                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3066  00155E  C08C  F082         	movff	efgtoa@g,efgtoa@h
  3067  001562  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3068  001566  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3069  00156A  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3070  00156E                     
  3071                           ; BSR set to: 0
  3072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3073  00156E  C094  F074         	movff	efgtoa@u,efgtoa@ou
  3074  001572  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  3075  001576  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  3076  00157A  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  3077                           
  3078                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3079  00157E  EF3C  F00B         	goto	l3576
  3080  001582                     l3568:
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3084  001582  C082  F001         	movff	efgtoa@h,___fldiv@b
  3085  001586  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3086  00158A  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3087  00158E  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3088  001592  C094  F005         	movff	efgtoa@u,___fldiv@a
  3089  001596  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3090  00159A  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3091  00159E  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3092  0015A2  ECF0  F014         	call	___fldiv	;wreg free
  3093  0015A6  C001  F01A         	movff	?___fldiv,floorf@x
  3094  0015AA  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3095  0015AE  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3096  0015B2  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3097  0015B6  ECA6  F01A         	call	_floorf	;wreg free
  3098  0015BA  C01A  F086         	movff	?_floorf,efgtoa@l
  3099  0015BE  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  3100  0015C2  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  3101  0015C6  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  3102                           
  3103                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3104  0015CA  C086  F001         	movff	efgtoa@l,___fltol@f1
  3105  0015CE  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3106  0015D2  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3107  0015D6  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3108  0015DA  EC25  F01D         	call	___fltol	;wreg free
  3109  0015DE  C001  F078         	movff	?___fltol,efgtoa@d
  3110  0015E2  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3111  0015E6                     
  3112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3113  0015E6  C082  F02A         	movff	efgtoa@h,___flsub@b
  3114  0015EA  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3115  0015EE  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3116  0015F2  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3117  0015F6  C094  F005         	movff	efgtoa@u,___flmul@a
  3118  0015FA  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  3119  0015FE  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  3120  001602  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  3121  001606  C086  F001         	movff	efgtoa@l,___flmul@b
  3122  00160A  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  3123  00160E  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  3124  001612  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  3125  001616  ECDB  F012         	call	___flmul	;wreg free
  3126  00161A  C001  F02E         	movff	?___flmul,___flsub@a
  3127  00161E  C002  F02F         	movff	?___flmul+1,___flsub@a+1
  3128  001622  C003  F030         	movff	?___flmul+2,___flsub@a+2
  3129  001626  C004  F031         	movff	?___flmul+3,___flsub@a+3
  3130  00162A  ECF7  F022         	call	___flsub	;wreg free
  3131  00162E  C02A  F082         	movff	?___flsub,efgtoa@h
  3132  001632  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3133  001636  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3134  00163A  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3135  00163E                     
  3136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3137  00163E  C094  F001         	movff	efgtoa@u,___fldiv@b
  3138  001642  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3139  001646  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3140  00164A  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3141  00164E  0E00               	movlw	0
  3142  001650  6E05               	movwf	___fldiv@a^0,c
  3143  001652  0E00               	movlw	0
  3144  001654  6E06               	movwf	(___fldiv@a+1)^0,c
  3145  001656  0E20               	movlw	32
  3146  001658  6E07               	movwf	(___fldiv@a+2)^0,c
  3147  00165A  0E41               	movlw	65
  3148  00165C  6E08               	movwf	(___fldiv@a+3)^0,c
  3149  00165E  ECF0  F014         	call	___fldiv	;wreg free
  3150  001662  C001  F094         	movff	?___fldiv,efgtoa@u
  3151  001666  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3152  00166A  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3153  00166E  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3154  001672                     
  3155                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3156  001672  0100               	movlb	0	; () banked
  3157  001674  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3158  001676  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3159  001678                     l3576:
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3163  001678  5172               	movf	efgtoa@m& (0+255),w,b
  3164  00167A  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3165  00167C  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3166  00167E  0A80               	xorlw	128
  3167  001680  6E39               	movwf	??_efgtoa^0,c
  3168  001682  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  3169  001684  0A80               	xorlw	128
  3170  001686  5839               	subwfb	??_efgtoa^0,w,c
  3171  001688  A0D8               	btfss	status,0,c
  3172  00168A  EF49  F00B         	goto	u4551
  3173  00168E  EF4B  F00B         	goto	u4550
  3174  001692                     u4551:
  3175  001692  EFC1  F00A         	goto	l3568
  3176  001696                     u4550:
  3177  001696                     
  3178                           ; BSR set to: 0
  3179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3180  001696  C094  F001         	movff	efgtoa@u,___flmul@b
  3181  00169A  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  3182  00169E  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  3183  0016A2  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  3184  0016A6  0E00               	movlw	0
  3185  0016A8  6E05               	movwf	___flmul@a^0,c
  3186  0016AA  0E00               	movlw	0
  3187  0016AC  6E06               	movwf	(___flmul@a+1)^0,c
  3188  0016AE  0EA0               	movlw	160
  3189  0016B0  6E07               	movwf	(___flmul@a+2)^0,c
  3190  0016B2  0E40               	movlw	64
  3191  0016B4  6E08               	movwf	(___flmul@a+3)^0,c
  3192  0016B6  ECDB  F012         	call	___flmul	;wreg free
  3193  0016BA  C001  F086         	movff	?___flmul,efgtoa@l
  3194  0016BE  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  3195  0016C2  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  3196  0016C6  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  3197  0016CA                     
  3198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3199  0016CA  C082  F01A         	movff	efgtoa@h,___flge@ff1
  3200  0016CE  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3201  0016D2  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3202  0016D6  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3203  0016DA  C086  F01E         	movff	efgtoa@l,___flge@ff2
  3204  0016DE  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3205  0016E2  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3206  0016E6  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3207  0016EA  ECA8  F01D         	call	___flge	;wreg free
  3208  0016EE  B0D8               	btfsc	status,0,c
  3209  0016F0  EF7C  F00B         	goto	u4561
  3210  0016F4  EF7E  F00B         	goto	u4560
  3211  0016F8                     u4561:
  3212  0016F8  EF89  F00B         	goto	l3584
  3213  0016FC                     u4560:
  3214  0016FC                     
  3215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3216  0016FC  0E00               	movlw	0
  3217  0016FE  0100               	movlb	0	; () banked
  3218  001700  6F86               	movwf	efgtoa@l& (0+255),b
  3219  001702  0E00               	movlw	0
  3220  001704  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3221  001706  0E00               	movlw	0
  3222  001708  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3223  00170A  0E00               	movlw	0
  3224  00170C  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3225                           
  3226                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  3227  00170E  EFB2  F00B         	goto	l3590
  3228  001712                     l3584:
  3229                           
  3230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3231  001712  C082  F001         	movff	efgtoa@h,___fleq@ff1
  3232  001716  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3233  00171A  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3234  00171E  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3235  001722  C086  F005         	movff	efgtoa@l,___fleq@ff2
  3236  001726  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3237  00172A  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3238  00172E  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3239  001732  EC8A  F020         	call	___fleq	;wreg free
  3240  001736  A0D8               	btfss	status,0,c
  3241  001738  EFA0  F00B         	goto	u4571
  3242  00173C  EFA2  F00B         	goto	u4570
  3243  001740                     u4571:
  3244  001740  EFB2  F00B         	goto	l3590
  3245  001744                     u4570:
  3246  001744  0100               	movlb	0	; () banked
  3247  001746  B178               	btfsc	efgtoa@d& (0+255),0,b
  3248  001748  EFA8  F00B         	goto	u4581
  3249  00174C  EFAA  F00B         	goto	u4580
  3250  001750                     u4581:
  3251  001750  EFB2  F00B         	goto	l3590
  3252  001754                     u4580:
  3253  001754                     
  3254                           ; BSR set to: 0
  3255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3256  001754  0E00               	movlw	0
  3257  001756  6F86               	movwf	efgtoa@l& (0+255),b
  3258  001758  0E00               	movlw	0
  3259  00175A  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3260  00175C  0E00               	movlw	0
  3261  00175E  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3262  001760  0E00               	movlw	0
  3263  001762  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3264  001764                     l3590:
  3265                           
  3266                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3267  001764  C08C  F01A         	movff	efgtoa@g,___fladd@b
  3268  001768  C08D  F01B         	movff	efgtoa@g+1,___fladd@b+1
  3269  00176C  C08E  F01C         	movff	efgtoa@g+2,___fladd@b+2
  3270  001770  C08F  F01D         	movff	efgtoa@g+3,___fladd@b+3
  3271  001774  C086  F01E         	movff	efgtoa@l,___fladd@a
  3272  001778  C087  F01F         	movff	efgtoa@l+1,___fladd@a+1
  3273  00177C  C088  F020         	movff	efgtoa@l+2,___fladd@a+2
  3274  001780  C089  F021         	movff	efgtoa@l+3,___fladd@a+3
  3275  001784  EC62  F00E         	call	___fladd	;wreg free
  3276  001788  C01A  F082         	movff	?___fladd,efgtoa@h
  3277  00178C  C01B  F083         	movff	?___fladd+1,efgtoa@h+1
  3278  001790  C01C  F084         	movff	?___fladd+2,efgtoa@h+2
  3279  001794  C01D  F085         	movff	?___fladd+3,efgtoa@h+3
  3280  001798                     
  3281                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3282  001798  C082  F01A         	movff	efgtoa@h,___flge@ff1
  3283  00179C  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3284  0017A0  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3285  0017A4  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3286  0017A8  0E00               	movlw	0
  3287  0017AA  6E05               	movwf	___flmul@a^0,c
  3288  0017AC  0E00               	movlw	0
  3289  0017AE  6E06               	movwf	(___flmul@a+1)^0,c
  3290  0017B0  0E20               	movlw	32
  3291  0017B2  6E07               	movwf	(___flmul@a+2)^0,c
  3292  0017B4  0E41               	movlw	65
  3293  0017B6  6E08               	movwf	(___flmul@a+3)^0,c
  3294  0017B8  C074  F001         	movff	efgtoa@ou,___flmul@b
  3295  0017BC  C075  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3296  0017C0  C076  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3297  0017C4  C077  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3298  0017C8  ECDB  F012         	call	___flmul	;wreg free
  3299  0017CC  C001  F01E         	movff	?___flmul,___flge@ff2
  3300  0017D0  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3301  0017D4  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3302  0017D8  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3303  0017DC  ECA8  F01D         	call	___flge	;wreg free
  3304  0017E0  A0D8               	btfss	status,0,c
  3305  0017E2  EFF5  F00B         	goto	u4591
  3306  0017E6  EFF7  F00B         	goto	u4590
  3307  0017EA                     u4591:
  3308  0017EA  EF20  F00C         	goto	l3602
  3309  0017EE                     u4590:
  3310  0017EE                     
  3311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  3312  0017EE  0100               	movlb	0	; () banked
  3313  0017F0  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3314  0017F2  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3315  0017F4                     
  3316                           ; BSR set to: 0
  3317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3318  0017F4  C074  F001         	movff	efgtoa@ou,___flmul@b
  3319  0017F8  C075  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3320  0017FC  C076  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3321  001800  C077  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3322  001804  0E00               	movlw	0
  3323  001806  6E05               	movwf	___flmul@a^0,c
  3324  001808  0E00               	movlw	0
  3325  00180A  6E06               	movwf	(___flmul@a+1)^0,c
  3326  00180C  0E20               	movlw	32
  3327  00180E  6E07               	movwf	(___flmul@a+2)^0,c
  3328  001810  0E41               	movlw	65
  3329  001812  6E08               	movwf	(___flmul@a+3)^0,c
  3330  001814  ECDB  F012         	call	___flmul	;wreg free
  3331  001818  C001  F074         	movff	?___flmul,efgtoa@ou
  3332  00181C  C002  F075         	movff	?___flmul+1,efgtoa@ou+1
  3333  001820  C003  F076         	movff	?___flmul+2,efgtoa@ou+2
  3334  001824  C004  F077         	movff	?___flmul+3,efgtoa@ou+3
  3335  001828                     
  3336                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3337  001828  0E66               	movlw	102
  3338  00182A  0100               	movlb	0	; () banked
  3339  00182C  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3340  00182E  A4D8               	btfss	status,2,c
  3341  001830  EF1C  F00C         	goto	u4601
  3342  001834  EF1E  F00C         	goto	u4600
  3343  001838                     u4601:
  3344  001838  EF20  F00C         	goto	l3602
  3345  00183C                     u4600:
  3346  00183C                     
  3347                           ; BSR set to: 0
  3348                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  3349  00183C  4B72               	infsnz	efgtoa@m& (0+255),f,b
  3350  00183E  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  3351  001840                     l3602:
  3352                           
  3353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3354  001840  C074  F094         	movff	efgtoa@ou,efgtoa@u
  3355  001844  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3356  001848  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3357  00184C  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3358  001850                     
  3359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3360  001850  0E65               	movlw	101
  3361  001852  0100               	movlb	0	; () banked
  3362  001854  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3363  001856  B4D8               	btfsc	status,2,c
  3364  001858  EF30  F00C         	goto	u4611
  3365  00185C  EF32  F00C         	goto	u4610
  3366  001860                     u4611:
  3367  001860  EF38  F00C         	goto	l3608
  3368  001864                     u4610:
  3369  001864                     
  3370                           ; BSR set to: 0
  3371  001864  C090  F070         	movff	efgtoa@e,efgtoa@ne
  3372  001868  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  3373  00186C  EF3C  F00C         	goto	l892
  3374  001870                     l3608:
  3375                           
  3376                           ; BSR set to: 0
  3377  001870  0E00               	movlw	0
  3378  001872  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  3379  001874  0E00               	movlw	0
  3380  001876  6F70               	movwf	efgtoa@ne& (0+255),b
  3381  001878                     l892:
  3382                           
  3383                           ; BSR set to: 0
  3384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3385  001878  0E00               	movlw	0
  3386  00187A  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  3387  00187C  0E00               	movlw	0
  3388  00187E  6F6E               	movwf	efgtoa@pp& (0+255),b
  3389                           
  3390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3391  001880  0E00               	movlw	0
  3392  001882  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  3393  001884  0E00               	movlw	0
  3394  001886  6F6C               	movwf	efgtoa@t& (0+255),b
  3395                           
  3396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3397  001888  0E00               	movlw	0
  3398  00188A  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3399  00188C  0E00               	movlw	0
  3400  00188E  6F8A               	movwf	efgtoa@i& (0+255),b
  3401                           
  3402                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3403  001890  EF37  F00D         	goto	l3658
  3404  001894                     l3610:
  3405                           
  3406                           ; BSR set to: 0
  3407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3408  001894  C082  F001         	movff	efgtoa@h,___fldiv@b
  3409  001898  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3410  00189C  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3411  0018A0  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3412  0018A4  C094  F005         	movff	efgtoa@u,___fldiv@a
  3413  0018A8  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3414  0018AC  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3415  0018B0  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3416  0018B4  ECF0  F014         	call	___fldiv	;wreg free
  3417  0018B8  C001  F01A         	movff	?___fldiv,floorf@x
  3418  0018BC  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3419  0018C0  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3420  0018C4  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3421  0018C8  ECA6  F01A         	call	_floorf	;wreg free
  3422  0018CC  C01A  F086         	movff	?_floorf,efgtoa@l
  3423  0018D0  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  3424  0018D4  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  3425  0018D8  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  3426                           
  3427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3428  0018DC  C086  F001         	movff	efgtoa@l,___fltol@f1
  3429  0018E0  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3430  0018E4  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3431  0018E8  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3432  0018EC  EC25  F01D         	call	___fltol	;wreg free
  3433  0018F0  C001  F078         	movff	?___fltol,efgtoa@d
  3434  0018F4  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3435  0018F8                     
  3436                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3437  0018F8  0100               	movlb	0	; () banked
  3438  0018FA  B9F5               	btfsc	_flags& (0+255),4,b
  3439  0018FC  EF82  F00C         	goto	u4621
  3440  001900  EF84  F00C         	goto	u4620
  3441  001904                     u4621:
  3442  001904  EFA1  F00C         	goto	l3622
  3443  001908                     u4620:
  3444  001908                     
  3445                           ; BSR set to: 0
  3446  001908  5178               	movf	efgtoa@d& (0+255),w,b
  3447  00190A  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3448  00190C  A4D8               	btfss	status,2,c
  3449  00190E  EF8B  F00C         	goto	u4631
  3450  001912  EF8D  F00C         	goto	u4630
  3451  001916                     u4631:
  3452  001916  EFA1  F00C         	goto	l3622
  3453  00191A                     u4630:
  3454  00191A                     
  3455                           ; BSR set to: 0
  3456  00191A  0E67               	movlw	103
  3457  00191C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3458  00191E  A4D8               	btfss	status,2,c
  3459  001920  EF94  F00C         	goto	u4641
  3460  001924  EF96  F00C         	goto	u4640
  3461  001928                     u4641:
  3462  001928  EFA1  F00C         	goto	l3622
  3463  00192C                     u4640:
  3464  00192C                     
  3465                           ; BSR set to: 0
  3466  00192C  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3467  00192E  EF9D  F00C         	goto	u4650
  3468  001932  EF9B  F00C         	goto	u4651
  3469  001936                     u4651:
  3470  001936  EFA1  F00C         	goto	l3622
  3471  00193A                     u4650:
  3472  00193A                     
  3473                           ; BSR set to: 0
  3474                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3475  00193A  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  3476  00193C  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  3477                           
  3478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3479  00193E  EFEB  F00C         	goto	l3650
  3480  001942                     l3622:
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3484  001942  516E               	movf	efgtoa@pp& (0+255),w,b
  3485  001944  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3486  001946  A4D8               	btfss	status,2,c
  3487  001948  EFA8  F00C         	goto	u4661
  3488  00194C  EFAA  F00C         	goto	u4660
  3489  001950                     u4661:
  3490  001950  EFD4  F00C         	goto	l3642
  3491  001954                     u4660:
  3492  001954                     
  3493                           ; BSR set to: 0
  3494  001954  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3495  001956  EFB1  F00C         	goto	u4670
  3496  00195A  EFAF  F00C         	goto	u4671
  3497  00195E                     u4671:
  3498  00195E  EFD4  F00C         	goto	l3642
  3499  001962                     u4670:
  3500  001962                     
  3501                           ; BSR set to: 0
  3502                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3503  001962  0E00               	movlw	low _dbuf
  3504  001964  2592               	addwf	efgtoa@n& (0+255),w,b
  3505  001966  6ED9               	movwf	fsr2l,c
  3506  001968  0E01               	movlw	high _dbuf
  3507  00196A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3508  00196C  6EDA               	movwf	fsr2h,c
  3509  00196E  0E2E               	movlw	46
  3510  001970  6EDF               	movwf	indf2,c
  3511  001972                     
  3512                           ; BSR set to: 0
  3513  001972  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3514  001974  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3515  001976                     
  3516                           ; BSR set to: 0
  3517                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3518  001976  077E               	decf	efgtoa@w& (0+255),f,b
  3519  001978  A0D8               	btfss	status,0,c
  3520  00197A  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3521  00197C                     
  3522                           ; BSR set to: 0
  3523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3524  00197C  0E00               	movlw	0
  3525  00197E  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  3526  001980  0E01               	movlw	1
  3527  001982  6F6E               	movwf	efgtoa@pp& (0+255),b
  3528  001984  EFD4  F00C         	goto	l3642
  3529  001988                     l3634:
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3533  001988  0E00               	movlw	low _dbuf
  3534  00198A  2592               	addwf	efgtoa@n& (0+255),w,b
  3535  00198C  6ED9               	movwf	fsr2l,c
  3536  00198E  0E01               	movlw	high _dbuf
  3537  001990  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3538  001992  6EDA               	movwf	fsr2h,c
  3539  001994  0E30               	movlw	48
  3540  001996  6EDF               	movwf	indf2,c
  3541  001998                     
  3542                           ; BSR set to: 0
  3543  001998  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3544  00199A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3545  00199C                     
  3546                           ; BSR set to: 0
  3547                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3548  00199C  077E               	decf	efgtoa@w& (0+255),f,b
  3549  00199E  A0D8               	btfss	status,0,c
  3550  0019A0  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3551  0019A2                     
  3552                           ; BSR set to: 0
  3553                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3554  0019A2  076C               	decf	efgtoa@t& (0+255),f,b
  3555  0019A4  A0D8               	btfss	status,0,c
  3556  0019A6  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  3557  0019A8                     l3642:
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3561  0019A8  516C               	movf	efgtoa@t& (0+255),w,b
  3562  0019AA  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3563  0019AC  A4D8               	btfss	status,2,c
  3564  0019AE  EFDB  F00C         	goto	u4681
  3565  0019B2  EFDD  F00C         	goto	u4680
  3566  0019B6                     u4681:
  3567  0019B6  EFC4  F00C         	goto	l3634
  3568  0019BA                     u4680:
  3569  0019BA                     
  3570                           ; BSR set to: 0
  3571                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3572  0019BA  0E00               	movlw	low _dbuf
  3573  0019BC  2592               	addwf	efgtoa@n& (0+255),w,b
  3574  0019BE  6ED9               	movwf	fsr2l,c
  3575  0019C0  0E01               	movlw	high _dbuf
  3576  0019C2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3577  0019C4  6EDA               	movwf	fsr2h,c
  3578  0019C6  5178               	movf	efgtoa@d& (0+255),w,b
  3579  0019C8  0F30               	addlw	48
  3580  0019CA  6EDF               	movwf	indf2,c
  3581  0019CC                     
  3582                           ; BSR set to: 0
  3583  0019CC  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3584  0019CE  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3585  0019D0                     
  3586                           ; BSR set to: 0
  3587                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3588  0019D0  077E               	decf	efgtoa@w& (0+255),f,b
  3589  0019D2  A0D8               	btfss	status,0,c
  3590  0019D4  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3591  0019D6                     l3650:
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3595  0019D6  C082  F02A         	movff	efgtoa@h,___flsub@b
  3596  0019DA  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3597  0019DE  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3598  0019E2  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3599  0019E6  C094  F005         	movff	efgtoa@u,___flmul@a
  3600  0019EA  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  3601  0019EE  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  3602  0019F2  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  3603  0019F6  C086  F001         	movff	efgtoa@l,___flmul@b
  3604  0019FA  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  3605  0019FE  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  3606  001A02  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  3607  001A06  ECDB  F012         	call	___flmul	;wreg free
  3608  001A0A  C001  F02E         	movff	?___flmul,___flsub@a
  3609  001A0E  C002  F02F         	movff	?___flmul+1,___flsub@a+1
  3610  001A12  C003  F030         	movff	?___flmul+2,___flsub@a+2
  3611  001A16  C004  F031         	movff	?___flmul+3,___flsub@a+3
  3612  001A1A  ECF7  F022         	call	___flsub	;wreg free
  3613  001A1E  C02A  F082         	movff	?___flsub,efgtoa@h
  3614  001A22  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3615  001A26  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3616  001A2A  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3617  001A2E                     
  3618                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3619  001A2E  C094  F001         	movff	efgtoa@u,___fldiv@b
  3620  001A32  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3621  001A36  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3622  001A3A  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3623  001A3E  0E00               	movlw	0
  3624  001A40  6E05               	movwf	___fldiv@a^0,c
  3625  001A42  0E00               	movlw	0
  3626  001A44  6E06               	movwf	(___fldiv@a+1)^0,c
  3627  001A46  0E20               	movlw	32
  3628  001A48  6E07               	movwf	(___fldiv@a+2)^0,c
  3629  001A4A  0E41               	movlw	65
  3630  001A4C  6E08               	movwf	(___fldiv@a+3)^0,c
  3631  001A4E  ECF0  F014         	call	___fldiv	;wreg free
  3632  001A52  C001  F094         	movff	?___fldiv,efgtoa@u
  3633  001A56  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3634  001A5A  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3635  001A5E  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3636  001A62                     
  3637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3638  001A62  0100               	movlb	0	; () banked
  3639  001A64  0770               	decf	efgtoa@ne& (0+255),f,b
  3640  001A66  A0D8               	btfss	status,0,c
  3641  001A68  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  3642  001A6A                     
  3643                           ; BSR set to: 0
  3644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3645  001A6A  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3646  001A6C  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3647  001A6E                     l3658:
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3651  001A6E  5172               	movf	efgtoa@m& (0+255),w,b
  3652  001A70  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3653  001A72  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3654  001A74  0A80               	xorlw	128
  3655  001A76  6E39               	movwf	??_efgtoa^0,c
  3656  001A78  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  3657  001A7A  0A80               	xorlw	128
  3658  001A7C  5839               	subwfb	??_efgtoa^0,w,c
  3659  001A7E  B0D8               	btfsc	status,0,c
  3660  001A80  EF44  F00D         	goto	u4691
  3661  001A84  EF46  F00D         	goto	u4690
  3662  001A88                     u4691:
  3663  001A88  EF54  F00D         	goto	l3662
  3664  001A8C                     u4690:
  3665  001A8C                     
  3666                           ; BSR set to: 0
  3667  001A8C  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3668  001A8E  EF52  F00D         	goto	u4701
  3669  001A92  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3670  001A94  E109               	bnz	u4700
  3671  001A96  0E4B               	movlw	75
  3672  001A98  5D92               	subwf	efgtoa@n& (0+255),w,b
  3673  001A9A  A0D8               	btfss	status,0,c
  3674  001A9C  EF52  F00D         	goto	u4701
  3675  001AA0  EF54  F00D         	goto	u4700
  3676  001AA4                     u4701:
  3677  001AA4  EF4A  F00C         	goto	l3610
  3678  001AA8                     u4700:
  3679  001AA8                     l3662:
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3683  001AA8  516E               	movf	efgtoa@pp& (0+255),w,b
  3684  001AAA  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3685  001AAC  A4D8               	btfss	status,2,c
  3686  001AAE  EF5B  F00D         	goto	u4711
  3687  001AB2  EF5D  F00D         	goto	u4710
  3688  001AB6                     u4711:
  3689  001AB6  EF6E  F00D         	goto	l3670
  3690  001ABA                     u4710:
  3691  001ABA                     
  3692                           ; BSR set to: 0
  3693  001ABA  A9F5               	btfss	_flags& (0+255),4,b
  3694  001ABC  EF62  F00D         	goto	u4721
  3695  001AC0  EF64  F00D         	goto	u4720
  3696  001AC4                     u4721:
  3697  001AC4  EF6E  F00D         	goto	l3670
  3698  001AC8                     u4720:
  3699  001AC8                     
  3700                           ; BSR set to: 0
  3701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3702  001AC8  0E00               	movlw	low _dbuf
  3703  001ACA  2592               	addwf	efgtoa@n& (0+255),w,b
  3704  001ACC  6ED9               	movwf	fsr2l,c
  3705  001ACE  0E01               	movlw	high _dbuf
  3706  001AD0  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3707  001AD2  6EDA               	movwf	fsr2h,c
  3708  001AD4  0E2E               	movlw	46
  3709  001AD6  6EDF               	movwf	indf2,c
  3710  001AD8                     
  3711                           ; BSR set to: 0
  3712  001AD8  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3713  001ADA  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3714  001ADC                     l3670:
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3718  001ADC  0E00               	movlw	low _dbuf
  3719  001ADE  2592               	addwf	efgtoa@n& (0+255),w,b
  3720  001AE0  6ED9               	movwf	fsr2l,c
  3721  001AE2  0E01               	movlw	high _dbuf
  3722  001AE4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3723  001AE6  6EDA               	movwf	fsr2h,c
  3724  001AE8  0E00               	movlw	0
  3725  001AEA  6EDF               	movwf	indf2,c
  3726  001AEC                     
  3727                           ; BSR set to: 0
  3728                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3729  001AEC  0E65               	movlw	101
  3730  001AEE  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3731  001AF0  A4D8               	btfss	status,2,c
  3732  001AF2  EF7D  F00D         	goto	u4731
  3733  001AF6  EF7F  F00D         	goto	u4730
  3734  001AFA                     u4731:
  3735  001AFA  EF4F  F00E         	goto	l3732
  3736  001AFE                     u4730:
  3737  001AFE                     
  3738                           ; BSR set to: 0
  3739                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3740  001AFE  0E00               	movlw	0
  3741  001B00  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3742  001B02  0E4F               	movlw	79
  3743  001B04  6F8A               	movwf	efgtoa@i& (0+255),b
  3744  001B06                     
  3745                           ; BSR set to: 0
  3746                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3747  001B06  0E00               	movlw	low _dbuf
  3748  001B08  258A               	addwf	efgtoa@i& (0+255),w,b
  3749  001B0A  6ED9               	movwf	fsr2l,c
  3750  001B0C  0E01               	movlw	high _dbuf
  3751  001B0E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3752  001B10  6EDA               	movwf	fsr2h,c
  3753  001B12  0E00               	movlw	0
  3754  001B14  6EDF               	movwf	indf2,c
  3755  001B16                     
  3756                           ; BSR set to: 0
  3757                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3758  001B16  0E00               	movlw	0
  3759  001B18  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3760  001B1A  0E00               	movlw	0
  3761  001B1C  6F7A               	movwf	efgtoa@sign& (0+255),b
  3762  001B1E                     
  3763                           ; BSR set to: 0
  3764                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3765  001B1E  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3766  001B20  EF96  F00D         	goto	u4740
  3767  001B24  EF94  F00D         	goto	u4741
  3768  001B28                     u4741:
  3769  001B28  EF9E  F00D         	goto	l3686
  3770  001B2C                     u4740:
  3771  001B2C                     
  3772                           ; BSR set to: 0
  3773                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3774  001B2C  0E00               	movlw	0
  3775  001B2E  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3776  001B30  0E01               	movlw	1
  3777  001B32  6F7A               	movwf	efgtoa@sign& (0+255),b
  3778  001B34                     
  3779                           ; BSR set to: 0
  3780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3781  001B34  6D90               	negf	efgtoa@e& (0+255),b
  3782  001B36  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  3783  001B38  B0D8               	btfsc	status,0,c
  3784  001B3A  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3785  001B3C                     l3686:
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  3789  001B3C  0E00               	movlw	0
  3790  001B3E  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3791  001B40  0E02               	movlw	2
  3792  001B42  6F7C               	movwf	efgtoa@p& (0+255),b
  3793                           
  3794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3795  001B44  EFCF  F00D         	goto	l3698
  3796  001B48                     l3688:
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  3800  001B48  078A               	decf	efgtoa@i& (0+255),f,b
  3801  001B4A  A0D8               	btfss	status,0,c
  3802  001B4C  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3803  001B4E                     
  3804                           ; BSR set to: 0
  3805                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  3806  001B4E  0E00               	movlw	low _dbuf
  3807  001B50  258A               	addwf	efgtoa@i& (0+255),w,b
  3808  001B52  6ED9               	movwf	fsr2l,c
  3809  001B54  0E01               	movlw	high _dbuf
  3810  001B56  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3811  001B58  6EDA               	movwf	fsr2h,c
  3812  001B5A  C090  F001         	movff	efgtoa@e,___awmod@dividend
  3813  001B5E  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3814  001B62  0E00               	movlw	0
  3815  001B64  6E04               	movwf	(___awmod@divisor+1)^0,c
  3816  001B66  0E0A               	movlw	10
  3817  001B68  6E03               	movwf	___awmod@divisor^0,c
  3818  001B6A  EC32  F020         	call	___awmod	;wreg free
  3819  001B6E  5001               	movf	?___awmod^0,w,c
  3820  001B70  0F30               	addlw	48
  3821  001B72  6EDF               	movwf	indf2,c
  3822  001B74                     
  3823                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  3824  001B74  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  3825  001B78  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3826  001B7C  0E00               	movlw	0
  3827  001B7E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3828  001B80  0E0A               	movlw	10
  3829  001B82  6E03               	movwf	___awdiv@divisor^0,c
  3830  001B84  EC77  F01F         	call	___awdiv	;wreg free
  3831  001B88  C001  F090         	movff	?___awdiv,efgtoa@e
  3832  001B8C  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  3833  001B90                     
  3834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  3835  001B90  0100               	movlb	0	; () banked
  3836  001B92  077C               	decf	efgtoa@p& (0+255),f,b
  3837  001B94  A0D8               	btfss	status,0,c
  3838  001B96  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  3839  001B98                     
  3840                           ; BSR set to: 0
  3841                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  3842  001B98  077E               	decf	efgtoa@w& (0+255),f,b
  3843  001B9A  A0D8               	btfss	status,0,c
  3844  001B9C  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3845  001B9E                     l3698:
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3849  001B9E  5190               	movf	efgtoa@e& (0+255),w,b
  3850  001BA0  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3851  001BA2  A4D8               	btfss	status,2,c
  3852  001BA4  EFD6  F00D         	goto	u4751
  3853  001BA8  EFD8  F00D         	goto	u4750
  3854  001BAC                     u4751:
  3855  001BAC  EFA4  F00D         	goto	l3688
  3856  001BB0                     u4750:
  3857  001BB0                     
  3858                           ; BSR set to: 0
  3859  001BB0  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3860  001BB2  EFE5  F00D         	goto	u4760
  3861  001BB6  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  3862  001BB8  E106               	bnz	u4761
  3863  001BBA  057C               	decf	efgtoa@p& (0+255),w,b
  3864  001BBC  B0D8               	btfsc	status,0,c
  3865  001BBE  EFE3  F00D         	goto	u4761
  3866  001BC2  EFE5  F00D         	goto	u4760
  3867  001BC6                     u4761:
  3868  001BC6  EFA4  F00D         	goto	l3688
  3869  001BCA                     u4760:
  3870  001BCA                     
  3871                           ; BSR set to: 0
  3872                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  3873  001BCA  078A               	decf	efgtoa@i& (0+255),f,b
  3874  001BCC  A0D8               	btfss	status,0,c
  3875  001BCE  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3876  001BD0                     
  3877                           ; BSR set to: 0
  3878                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  3879  001BD0  517A               	movf	efgtoa@sign& (0+255),w,b
  3880  001BD2  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3881  001BD4  A4D8               	btfss	status,2,c
  3882  001BD6  EFEF  F00D         	goto	u4771
  3883  001BDA  EFF1  F00D         	goto	u4770
  3884  001BDE                     u4771:
  3885  001BDE  EFF7  F00D         	goto	l3708
  3886  001BE2                     u4770:
  3887  001BE2                     
  3888                           ; BSR set to: 0
  3889  001BE2  0E00               	movlw	0
  3890  001BE4  6F67               	movwf	(_efgtoa$1076+1)& (0+255),b
  3891  001BE6  0E2B               	movlw	43
  3892  001BE8  6F66               	movwf	_efgtoa$1076& (0+255),b
  3893  001BEA  EFFB  F00D         	goto	l3710
  3894  001BEE                     l3708:
  3895                           
  3896                           ; BSR set to: 0
  3897  001BEE  0E00               	movlw	0
  3898  001BF0  6F67               	movwf	(_efgtoa$1076+1)& (0+255),b
  3899  001BF2  0E2D               	movlw	45
  3900  001BF4  6F66               	movwf	_efgtoa$1076& (0+255),b
  3901  001BF6                     l3710:
  3902                           
  3903                           ; BSR set to: 0
  3904  001BF6  0E00               	movlw	low _dbuf
  3905  001BF8  258A               	addwf	efgtoa@i& (0+255),w,b
  3906  001BFA  6ED9               	movwf	fsr2l,c
  3907  001BFC  0E01               	movlw	high _dbuf
  3908  001BFE  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3909  001C00  6EDA               	movwf	fsr2h,c
  3910  001C02  C066  FFDF         	movff	_efgtoa$1076,indf2
  3911  001C06                     
  3912                           ; BSR set to: 0
  3913                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  3914  001C06  077E               	decf	efgtoa@w& (0+255),f,b
  3915  001C08  A0D8               	btfss	status,0,c
  3916  001C0A  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3917  001C0C                     
  3918                           ; BSR set to: 0
  3919                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3920  001C0C  078A               	decf	efgtoa@i& (0+255),f,b
  3921  001C0E  A0D8               	btfss	status,0,c
  3922  001C10  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3923  001C12                     
  3924                           ; BSR set to: 0
  3925  001C12  0EBF               	movlw	191
  3926  001C14  6E39               	movwf	??_efgtoa^0,c
  3927  001C16  0EFF               	movlw	255
  3928  001C18  6E3A               	movwf	(??_efgtoa+1)^0,c
  3929  001C1A  5038               	movf	efgtoa@c^0,w,c
  3930  001C1C  6E3B               	movwf	(??_efgtoa+2)^0,c
  3931  001C1E  6A3C               	clrf	(??_efgtoa+3)^0,c
  3932  001C20  5039               	movf	??_efgtoa^0,w,c
  3933  001C22  263B               	addwf	(??_efgtoa+2)^0,f,c
  3934  001C24  503A               	movf	(??_efgtoa+1)^0,w,c
  3935  001C26  223C               	addwfc	(??_efgtoa+3)^0,f,c
  3936  001C28  503C               	movf	(??_efgtoa+3)^0,w,c
  3937  001C2A  E10A               	bnz	u4780
  3938  001C2C  0E1A               	movlw	26
  3939  001C2E  5C3B               	subwf	(??_efgtoa+2)^0,w,c
  3940  001C30  A0D8               	btfss	status,0,c
  3941  001C32  EF1D  F00E         	goto	u4781
  3942  001C36  EF20  F00E         	goto	u4780
  3943  001C3A                     u4781:
  3944  001C3A  0E01               	movlw	1
  3945  001C3C  EF21  F00E         	goto	u4790
  3946  001C40                     u4780:
  3947  001C40  0E00               	movlw	0
  3948  001C42                     u4790:
  3949  001C42  6F6A               	movwf	_efgtoa$1078& (0+255),b
  3950  001C44  6B6B               	clrf	(_efgtoa$1078+1)& (0+255),b
  3951  001C46                     
  3952                           ; BSR set to: 0
  3953  001C46  516A               	movf	_efgtoa$1078& (0+255),w,b
  3954  001C48  116B               	iorwf	(_efgtoa$1078+1)& (0+255),w,b
  3955  001C4A  A4D8               	btfss	status,2,c
  3956  001C4C  EF2A  F00E         	goto	u4801
  3957  001C50  EF2C  F00E         	goto	u4800
  3958  001C54                     u4801:
  3959  001C54  EF32  F00E         	goto	l3724
  3960  001C58                     u4800:
  3961  001C58                     
  3962                           ; BSR set to: 0
  3963  001C58  0E00               	movlw	0
  3964  001C5A  6F69               	movwf	(_efgtoa$1077+1)& (0+255),b
  3965  001C5C  0E65               	movlw	101
  3966  001C5E  6F68               	movwf	_efgtoa$1077& (0+255),b
  3967  001C60  EF36  F00E         	goto	l3726
  3968  001C64                     l3724:
  3969                           
  3970                           ; BSR set to: 0
  3971  001C64  0E00               	movlw	0
  3972  001C66  6F69               	movwf	(_efgtoa$1077+1)& (0+255),b
  3973  001C68  0E45               	movlw	69
  3974  001C6A  6F68               	movwf	_efgtoa$1077& (0+255),b
  3975  001C6C                     l3726:
  3976                           
  3977                           ; BSR set to: 0
  3978  001C6C  0E00               	movlw	low _dbuf
  3979  001C6E  258A               	addwf	efgtoa@i& (0+255),w,b
  3980  001C70  6ED9               	movwf	fsr2l,c
  3981  001C72  0E01               	movlw	high _dbuf
  3982  001C74  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3983  001C76  6EDA               	movwf	fsr2h,c
  3984  001C78  C068  FFDF         	movff	_efgtoa$1077,indf2
  3985  001C7C                     
  3986                           ; BSR set to: 0
  3987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  3988  001C7C  077E               	decf	efgtoa@w& (0+255),f,b
  3989  001C7E  A0D8               	btfss	status,0,c
  3990  001C80  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3991  001C82                     
  3992                           ; BSR set to: 0
  3993                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  3994  001C82  0E00               	movlw	low _dbuf
  3995  001C84  2592               	addwf	efgtoa@n& (0+255),w,b
  3996  001C86  6E01               	movwf	strcpy@dest^0,c
  3997  001C88  0E01               	movlw	high _dbuf
  3998  001C8A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3999  001C8C  6E02               	movwf	(strcpy@dest+1)^0,c
  4000  001C8E  0E00               	movlw	low _dbuf
  4001  001C90  258A               	addwf	efgtoa@i& (0+255),w,b
  4002  001C92  6E03               	movwf	strcpy@src^0,c
  4003  001C94  0E01               	movlw	high _dbuf
  4004  001C96  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4005  001C98  6E04               	movwf	(strcpy@src+1)^0,c
  4006  001C9A  ECA1  F022         	call	_strcpy	;wreg free
  4007  001C9E                     l3732:
  4008                           
  4009                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  4010  001C9E  C032  F012         	movff	efgtoa@fp,pad@fp
  4011  001CA2  C033  F013         	movff	efgtoa@fp+1,pad@fp+1
  4012  001CA6  0E00               	movlw	low _dbuf
  4013  001CA8  6E14               	movwf	pad@buf^0,c
  4014  001CAA  0E01               	movlw	high _dbuf
  4015  001CAC  6E15               	movwf	(pad@buf+1)^0,c
  4016  001CAE  C07E  F016         	movff	efgtoa@w,pad@p
  4017  001CB2  C07F  F017         	movff	efgtoa@w+1,pad@p+1
  4018  001CB6  EC14  F01F         	call	_pad	;wreg free
  4019  001CBA  C012  F032         	movff	?_pad,?_efgtoa
  4020  001CBE  C013  F033         	movff	?_pad+1,?_efgtoa+1
  4021  001CC2                     l846:
  4022  001CC2  0012               	return		;funcret
  4023  001CC4                     __end_of_efgtoa:
  4024                           	callstack 0
  4025                           
  4026 ;; *************** function _tolower *****************
  4027 ;; Defined at:
  4028 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;  c               2    6[COMRAM] int 
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;		None
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  2    6[COMRAM] int 
  4035 ;; Registers used:
  4036 ;;		wreg, status,2, status,0
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4042 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4043 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4044 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4045 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4046 ;;Total ram usage:        8 bytes
  4047 ;; Hardware stack levels used: 1
  4048 ;; Hardware stack levels required when called: 1
  4049 ;; This function calls:
  4050 ;;		_isupper
  4051 ;; This function is called by:
  4052 ;;		_efgtoa
  4053 ;;		_vfpfcnvrt
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           	psect	text7
  4058  0044E2                     __ptext7:
  4059                           	callstack 0
  4060  0044E2                     _tolower:
  4061                           	callstack 26
  4062  0044E2  0EBF               	movlw	191
  4063  0044E4  6E09               	movwf	??_tolower^0,c
  4064  0044E6  0EFF               	movlw	255
  4065  0044E8  6E0A               	movwf	(??_tolower+1)^0,c
  4066  0044EA  C007  F00B         	movff	tolower@c,??_tolower+2
  4067  0044EE  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4068  0044F2  5009               	movf	??_tolower^0,w,c
  4069  0044F4  260B               	addwf	(??_tolower+2)^0,f,c
  4070  0044F6  500A               	movf	(??_tolower+1)^0,w,c
  4071  0044F8  220C               	addwfc	(??_tolower+3)^0,f,c
  4072  0044FA  500C               	movf	(??_tolower+3)^0,w,c
  4073  0044FC  E10A               	bnz	u3990
  4074  0044FE  0E1A               	movlw	26
  4075  004500  5C0B               	subwf	(??_tolower+2)^0,w,c
  4076  004502  A0D8               	btfss	status,0,c
  4077  004504  EF86  F022         	goto	u3991
  4078  004508  EF89  F022         	goto	u3990
  4079  00450C                     u3991:
  4080  00450C  0E01               	movlw	1
  4081  00450E  EF8A  F022         	goto	u4000
  4082  004512                     u3990:
  4083  004512  0E00               	movlw	0
  4084  004514                     u4000:
  4085  004514  6E0D               	movwf	_tolower$1189^0,c
  4086  004516  6A0E               	clrf	(_tolower$1189+1)^0,c
  4087  004518  500D               	movf	_tolower$1189^0,w,c
  4088  00451A  100E               	iorwf	(_tolower$1189+1)^0,w,c
  4089  00451C  B4D8               	btfsc	status,2,c
  4090  00451E  EF93  F022         	goto	u4011
  4091  004522  EF95  F022         	goto	u4010
  4092  004526                     u4011:
  4093  004526  EF9C  F022         	goto	l1028
  4094  00452A                     u4010:
  4095  00452A  0E20               	movlw	32
  4096  00452C  1007               	iorwf	tolower@c^0,w,c
  4097  00452E  6E07               	movwf	?_tolower^0,c
  4098  004530  5008               	movf	(tolower@c+1)^0,w,c
  4099  004532  6E08               	movwf	(?_tolower+1)^0,c
  4100  004534  EFA0  F022         	goto	l1033
  4101  004538                     l1028:
  4102  004538  C007  F007         	movff	tolower@c,?_tolower
  4103  00453C  C008  F008         	movff	tolower@c+1,?_tolower+1
  4104  004540                     l1033:
  4105  004540  0012               	return		;funcret
  4106  004542                     __end_of_tolower:
  4107                           	callstack 0
  4108                           
  4109 ;; *************** function _isupper *****************
  4110 ;; Defined at:
  4111 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  4112 ;; Parameters:    Size  Location     Type
  4113 ;;  c               2    0[COMRAM] int 
  4114 ;; Auto vars:     Size  Location     Type
  4115 ;;		None
  4116 ;; Return value:  Size  Location     Type
  4117 ;;                  2    0[COMRAM] int 
  4118 ;; Registers used:
  4119 ;;		wreg, status,2, status,0
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4125 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4127 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4128 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4129 ;;Total ram usage:        6 bytes
  4130 ;; Hardware stack levels used: 1
  4131 ;; This function calls:
  4132 ;;		Nothing
  4133 ;; This function is called by:
  4134 ;;		_efgtoa
  4135 ;;		_vfpfcnvrt
  4136 ;;		_tolower
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           	psect	text8
  4141  0046B8                     __ptext8:
  4142                           	callstack 0
  4143  0046B8                     _isupper:
  4144                           	callstack 26
  4145  0046B8  0EBF               	movlw	191
  4146  0046BA  6E03               	movwf	??_isupper^0,c
  4147  0046BC  0EFF               	movlw	255
  4148  0046BE  6E04               	movwf	(??_isupper+1)^0,c
  4149  0046C0  C001  F005         	movff	isupper@c,??_isupper+2
  4150  0046C4  C002  F006         	movff	isupper@c+1,??_isupper+3
  4151  0046C8  5003               	movf	??_isupper^0,w,c
  4152  0046CA  2605               	addwf	(??_isupper+2)^0,f,c
  4153  0046CC  5004               	movf	(??_isupper+1)^0,w,c
  4154  0046CE  2206               	addwfc	(??_isupper+3)^0,f,c
  4155  0046D0  5006               	movf	(??_isupper+3)^0,w,c
  4156  0046D2  E10A               	bnz	u3000
  4157  0046D4  0E1A               	movlw	26
  4158  0046D6  5C05               	subwf	(??_isupper+2)^0,w,c
  4159  0046D8  A0D8               	btfss	status,0,c
  4160  0046DA  EF71  F023         	goto	u3001
  4161  0046DE  EF74  F023         	goto	u3000
  4162  0046E2                     u3001:
  4163  0046E2  0E01               	movlw	1
  4164  0046E4  EF75  F023         	goto	u3010
  4165  0046E8                     u3000:
  4166  0046E8  0E00               	movlw	0
  4167  0046EA                     u3010:
  4168  0046EA  6E01               	movwf	?_isupper^0,c
  4169  0046EC  6A02               	clrf	(?_isupper+1)^0,c
  4170  0046EE  0012               	return		;funcret
  4171  0046F0                     __end_of_isupper:
  4172                           	callstack 0
  4173                           
  4174 ;; *************** function _strcpy *****************
  4175 ;; Defined at:
  4176 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4179 ;;		 -> dbuf(80), 
  4180 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4181 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  4182 ;;		 -> dbuf(80), 
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;  d               2    8[COMRAM] PTR unsigned char 
  4185 ;;		 -> dbuf(80), 
  4186 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4187 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  4188 ;;		 -> dbuf(80), 
  4189 ;; Return value:  Size  Location     Type
  4190 ;;                  2    0[COMRAM] PTR unsigned char 
  4191 ;; Registers used:
  4192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4198 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4199 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4200 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4201 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4202 ;;Total ram usage:       10 bytes
  4203 ;; Hardware stack levels used: 1
  4204 ;; This function calls:
  4205 ;;		Nothing
  4206 ;; This function is called by:
  4207 ;;		_efgtoa
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           	psect	text9
  4212  004542                     __ptext9:
  4213                           	callstack 0
  4214  004542                     _strcpy:
  4215                           	callstack 26
  4216  004542  C003  F007         	movff	strcpy@src,strcpy@s
  4217  004546  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4218  00454A  C001  F009         	movff	strcpy@dest,strcpy@d
  4219  00454E  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4220  004552                     l3326:
  4221  004552  5007               	movf	strcpy@s^0,w,c
  4222  004554  6E05               	movwf	??_strcpy^0,c
  4223  004556  5008               	movf	(strcpy@s+1)^0,w,c
  4224  004558  6E06               	movwf	(??_strcpy+1)^0,c
  4225  00455A  4A07               	infsnz	strcpy@s^0,f,c
  4226  00455C  2A08               	incf	(strcpy@s+1)^0,f,c
  4227  00455E  C005  FFF6         	movff	??_strcpy,tblptrl
  4228  004562  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4229  004566  0E00               	movlw	low (__smallconst shr (0+16))
  4230  004568  6EF8               	movwf	tblptru,c
  4231  00456A  C009  FFD9         	movff	strcpy@d,fsr2l
  4232  00456E  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4233  004572  4A09               	infsnz	strcpy@d^0,f,c
  4234  004574  2A0A               	incf	(strcpy@d+1)^0,f,c
  4235  004576  0E0F               	movlw	(high __ramtop+-1)
  4236  004578  64F7               	cpfsgt	tblptrh,c
  4237  00457A  D003               	bra	u3977
  4238  00457C  0008               	tblrd		*
  4239  00457E  50F5               	movf	tablat,w,c
  4240  004580  D005               	bra	u3970
  4241  004582                     u3977:
  4242  004582  CFF6 FFE1          	movff	tblptrl,fsr1l
  4243  004586  CFF7 FFE2          	movff	tblptrh,fsr1h
  4244  00458A  50E7               	movf	indf1,w,c
  4245  00458C                     u3970:
  4246  00458C  6EDF               	movwf	indf2,c
  4247  00458E  50DF               	movf	indf2,w,c
  4248  004590  A4D8               	btfss	status,2,c
  4249  004592  EFCD  F022         	goto	u3981
  4250  004596  EFCF  F022         	goto	u3980
  4251  00459A                     u3981:
  4252  00459A  EFA9  F022         	goto	l3326
  4253  00459E                     u3980:
  4254  00459E  0012               	return		;funcret
  4255  0045A0                     __end_of_strcpy:
  4256                           	callstack 0
  4257                           
  4258 ;; *************** function _floorf *****************
  4259 ;; Defined at:
  4260 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;  x               4   25[COMRAM] float 
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;  u               4   41[COMRAM] struct .
  4265 ;;  m               4   35[COMRAM] unsigned long 
  4266 ;;  e               2   39[COMRAM] int 
  4267 ;; Return value:  Size  Location     Type
  4268 ;;                  4   25[COMRAM] float 
  4269 ;; Registers used:
  4270 ;;		wreg, status,2, status,0
  4271 ;; Tracked objects:
  4272 ;;		On entry : 0/0
  4273 ;;		On exit  : 0/0
  4274 ;;		Unchanged: 0/0
  4275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4276 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4277 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4278 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4279 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4280 ;;Total ram usage:       20 bytes
  4281 ;; Hardware stack levels used: 1
  4282 ;; This function calls:
  4283 ;;		Nothing
  4284 ;; This function is called by:
  4285 ;;		_efgtoa
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           
  4289                           	psect	text10
  4290  00354C                     __ptext10:
  4291                           	callstack 0
  4292  00354C                     _floorf:
  4293                           	callstack 26
  4294  00354C  C0E7  F02A         	movff	floorf@F527,floorf@u
  4295  003550  C0E8  F02B         	movff	floorf@F527+1,floorf@u+1
  4296  003554  C0E9  F02C         	movff	floorf@F527+2,floorf@u+2
  4297  003558  C0EA  F02D         	movff	floorf@F527+3,floorf@u+3
  4298  00355C  C01A  F02A         	movff	floorf@x,floorf@u
  4299  003560  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  4300  003564  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  4301  003568  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  4302  00356C  0E81               	movlw	129
  4303  00356E  6E1E               	movwf	??_floorf^0,c
  4304  003570  0EFF               	movlw	255
  4305  003572  6E1F               	movwf	(??_floorf+1)^0,c
  4306  003574  C02A  F020         	movff	floorf@u,??_floorf+2
  4307  003578  C02B  F021         	movff	floorf@u+1,??_floorf+3
  4308  00357C  C02C  F022         	movff	floorf@u+2,??_floorf+4
  4309  003580  C02D  F023         	movff	floorf@u+3,??_floorf+5
  4310  003584  0E18               	movlw	24
  4311  003586  EFCA  F01A         	goto	u4020
  4312  00358A                     u4025:
  4313  00358A  90D8               	bcf	status,0,c
  4314  00358C  3223               	rrcf	(??_floorf+5)^0,f,c
  4315  00358E  3222               	rrcf	(??_floorf+4)^0,f,c
  4316  003590  3221               	rrcf	(??_floorf+3)^0,f,c
  4317  003592  3220               	rrcf	(??_floorf+2)^0,f,c
  4318  003594                     u4020:
  4319  003594  2EE8               	decfsz	wreg,f,c
  4320  003596  EFC5  F01A         	goto	u4025
  4321  00359A  5020               	movf	(??_floorf+2)^0,w,c
  4322  00359C  241E               	addwf	??_floorf^0,w,c
  4323  00359E  6E28               	movwf	floorf@e^0,c
  4324  0035A0  0E00               	movlw	0
  4325  0035A2  201F               	addwfc	(??_floorf+1)^0,w,c
  4326  0035A4  6E29               	movwf	(floorf@e+1)^0,c
  4327  0035A6  BE29               	btfsc	(floorf@e+1)^0,7,c
  4328  0035A8  EFDF  F01A         	goto	u4031
  4329  0035AC  5029               	movf	(floorf@e+1)^0,w,c
  4330  0035AE  E109               	bnz	u4030
  4331  0035B0  0E17               	movlw	23
  4332  0035B2  5C28               	subwf	floorf@e^0,w,c
  4333  0035B4  A0D8               	btfss	status,0,c
  4334  0035B6  EFDF  F01A         	goto	u4031
  4335  0035BA  EFE1  F01A         	goto	u4030
  4336  0035BE                     u4031:
  4337  0035BE  EFEB  F01A         	goto	l3344
  4338  0035C2                     u4030:
  4339  0035C2                     l3342:
  4340  0035C2  C01A  F01A         	movff	floorf@x,?_floorf
  4341  0035C6  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  4342  0035CA  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  4343  0035CE  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  4344  0035D2  EFAE  F01B         	goto	l969
  4345  0035D6                     l3344:
  4346  0035D6  BE29               	btfsc	(floorf@e+1)^0,7,c
  4347  0035D8  EFF0  F01A         	goto	u4041
  4348  0035DC  EFF2  F01A         	goto	u4040
  4349  0035E0                     u4041:
  4350  0035E0  EF62  F01B         	goto	l3354
  4351  0035E4                     u4040:
  4352  0035E4  C028  F01E         	movff	floorf@e,??_floorf
  4353  0035E8  0EFF               	movlw	255
  4354  0035EA  6E1F               	movwf	(??_floorf+1)^0,c
  4355  0035EC  0EFF               	movlw	255
  4356  0035EE  6E20               	movwf	(??_floorf+2)^0,c
  4357  0035F0  0E7F               	movlw	127
  4358  0035F2  6E21               	movwf	(??_floorf+3)^0,c
  4359  0035F4  0E00               	movlw	0
  4360  0035F6  6E22               	movwf	(??_floorf+4)^0,c
  4361  0035F8                     u4055:
  4362  0035F8  661E               	tstfsz	??_floorf^0,c
  4363  0035FA  EF01  F01B         	goto	u4056
  4364  0035FE  EF09  F01B         	goto	u4057
  4365  003602                     u4056:
  4366  003602  3422               	rlcf	(??_floorf+4)^0,w,c
  4367  003604  3222               	rrcf	(??_floorf+4)^0,f,c
  4368  003606  3221               	rrcf	(??_floorf+3)^0,f,c
  4369  003608  3220               	rrcf	(??_floorf+2)^0,f,c
  4370  00360A  321F               	rrcf	(??_floorf+1)^0,f,c
  4371  00360C  2E1E               	decfsz	??_floorf^0,f,c
  4372  00360E  EFFC  F01A         	goto	u4055
  4373  003612                     u4057:
  4374  003612  C01F  F024         	movff	??_floorf+1,floorf@m
  4375  003616  C020  F025         	movff	??_floorf+2,floorf@m+1
  4376  00361A  C021  F026         	movff	??_floorf+3,floorf@m+2
  4377  00361E  C022  F027         	movff	??_floorf+4,floorf@m+3
  4378  003622  5024               	movf	floorf@m^0,w,c
  4379  003624  142A               	andwf	floorf@u^0,w,c
  4380  003626  6E1E               	movwf	??_floorf^0,c
  4381  003628  5025               	movf	(floorf@m+1)^0,w,c
  4382  00362A  142B               	andwf	(floorf@u+1)^0,w,c
  4383  00362C  6E1F               	movwf	(??_floorf+1)^0,c
  4384  00362E  5026               	movf	(floorf@m+2)^0,w,c
  4385  003630  142C               	andwf	(floorf@u+2)^0,w,c
  4386  003632  6E20               	movwf	(??_floorf+2)^0,c
  4387  003634  5027               	movf	(floorf@m+3)^0,w,c
  4388  003636  142D               	andwf	(floorf@u+3)^0,w,c
  4389  003638  6E21               	movwf	(??_floorf+3)^0,c
  4390  00363A  501E               	movf	??_floorf^0,w,c
  4391  00363C  101F               	iorwf	(??_floorf+1)^0,w,c
  4392  00363E  1020               	iorwf	(??_floorf+2)^0,w,c
  4393  003640  1021               	iorwf	(??_floorf+3)^0,w,c
  4394  003642  A4D8               	btfss	status,2,c
  4395  003644  EF26  F01B         	goto	u4061
  4396  003648  EF28  F01B         	goto	u4060
  4397  00364C                     u4061:
  4398  00364C  EF2A  F01B         	goto	l3350
  4399  003650                     u4060:
  4400  003650  EFE1  F01A         	goto	l3342
  4401  003654                     l3350:
  4402  003654  C02A  F01E         	movff	floorf@u,??_floorf
  4403  003658  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4404  00365C  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4405  003660  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4406  003664  0E20               	movlw	32
  4407  003666  EF3A  F01B         	goto	u4070
  4408  00366A                     u4075:
  4409  00366A  90D8               	bcf	status,0,c
  4410  00366C  3221               	rrcf	(??_floorf+3)^0,f,c
  4411  00366E  3220               	rrcf	(??_floorf+2)^0,f,c
  4412  003670  321F               	rrcf	(??_floorf+1)^0,f,c
  4413  003672  321E               	rrcf	??_floorf^0,f,c
  4414  003674                     u4070:
  4415  003674  2EE8               	decfsz	wreg,f,c
  4416  003676  EF35  F01B         	goto	u4075
  4417  00367A  501E               	movf	??_floorf^0,w,c
  4418  00367C  101F               	iorwf	(??_floorf+1)^0,w,c
  4419  00367E  1020               	iorwf	(??_floorf+2)^0,w,c
  4420  003680  1021               	iorwf	(??_floorf+3)^0,w,c
  4421  003682  B4D8               	btfsc	status,2,c
  4422  003684  EF46  F01B         	goto	u4081
  4423  003688  EF48  F01B         	goto	u4080
  4424  00368C                     u4081:
  4425  00368C  EF50  F01B         	goto	l972
  4426  003690                     u4080:
  4427  003690  5024               	movf	floorf@m^0,w,c
  4428  003692  262A               	addwf	floorf@u^0,f,c
  4429  003694  5025               	movf	(floorf@m+1)^0,w,c
  4430  003696  222B               	addwfc	(floorf@u+1)^0,f,c
  4431  003698  5026               	movf	(floorf@m+2)^0,w,c
  4432  00369A  222C               	addwfc	(floorf@u+2)^0,f,c
  4433  00369C  5027               	movf	(floorf@m+3)^0,w,c
  4434  00369E  222D               	addwfc	(floorf@u+3)^0,f,c
  4435  0036A0                     l972:
  4436  0036A0  1C24               	comf	floorf@m^0,w,c
  4437  0036A2  6E1E               	movwf	??_floorf^0,c
  4438  0036A4  1C25               	comf	(floorf@m+1)^0,w,c
  4439  0036A6  6E1F               	movwf	(??_floorf+1)^0,c
  4440  0036A8  1C26               	comf	(floorf@m+2)^0,w,c
  4441  0036AA  6E20               	movwf	(??_floorf+2)^0,c
  4442  0036AC  1C27               	comf	(floorf@m+3)^0,w,c
  4443  0036AE  6E21               	movwf	(??_floorf+3)^0,c
  4444  0036B0  501E               	movf	??_floorf^0,w,c
  4445  0036B2  162A               	andwf	floorf@u^0,f,c
  4446  0036B4  501F               	movf	(??_floorf+1)^0,w,c
  4447  0036B6  162B               	andwf	(floorf@u+1)^0,f,c
  4448  0036B8  5020               	movf	(??_floorf+2)^0,w,c
  4449  0036BA  162C               	andwf	(floorf@u+2)^0,f,c
  4450  0036BC  5021               	movf	(??_floorf+3)^0,w,c
  4451  0036BE  162D               	andwf	(floorf@u+3)^0,f,c
  4452  0036C0  EFA6  F01B         	goto	l3362
  4453  0036C4                     l3354:
  4454  0036C4  C02A  F01E         	movff	floorf@u,??_floorf
  4455  0036C8  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4456  0036CC  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4457  0036D0  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4458  0036D4  0E20               	movlw	32
  4459  0036D6  EF72  F01B         	goto	u4090
  4460  0036DA                     u4095:
  4461  0036DA  90D8               	bcf	status,0,c
  4462  0036DC  3221               	rrcf	(??_floorf+3)^0,f,c
  4463  0036DE  3220               	rrcf	(??_floorf+2)^0,f,c
  4464  0036E0  321F               	rrcf	(??_floorf+1)^0,f,c
  4465  0036E2  321E               	rrcf	??_floorf^0,f,c
  4466  0036E4                     u4090:
  4467  0036E4  2EE8               	decfsz	wreg,f,c
  4468  0036E6  EF6D  F01B         	goto	u4095
  4469  0036EA  501E               	movf	??_floorf^0,w,c
  4470  0036EC  101F               	iorwf	(??_floorf+1)^0,w,c
  4471  0036EE  1020               	iorwf	(??_floorf+2)^0,w,c
  4472  0036F0  1021               	iorwf	(??_floorf+3)^0,w,c
  4473  0036F2  A4D8               	btfss	status,2,c
  4474  0036F4  EF7E  F01B         	goto	u4101
  4475  0036F8  EF80  F01B         	goto	u4100
  4476  0036FC                     u4101:
  4477  0036FC  EF8A  F01B         	goto	l3358
  4478  003700                     u4100:
  4479  003700  0E00               	movlw	0
  4480  003702  6E2A               	movwf	floorf@u^0,c
  4481  003704  0E00               	movlw	0
  4482  003706  6E2B               	movwf	(floorf@u+1)^0,c
  4483  003708  0E00               	movlw	0
  4484  00370A  6E2C               	movwf	(floorf@u+2)^0,c
  4485  00370C  0E00               	movlw	0
  4486  00370E  6E2D               	movwf	(floorf@u+3)^0,c
  4487  003710  EFA6  F01B         	goto	l3362
  4488  003714                     l3358:
  4489  003714  90D8               	bcf	status,0,c
  4490  003716  342A               	rlcf	floorf@u^0,w,c
  4491  003718  6E1E               	movwf	??_floorf^0,c
  4492  00371A  342B               	rlcf	(floorf@u+1)^0,w,c
  4493  00371C  6E1F               	movwf	(??_floorf+1)^0,c
  4494  00371E  342C               	rlcf	(floorf@u+2)^0,w,c
  4495  003720  6E20               	movwf	(??_floorf+2)^0,c
  4496  003722  342D               	rlcf	(floorf@u+3)^0,w,c
  4497  003724  6E21               	movwf	(??_floorf+3)^0,c
  4498  003726  501E               	movf	??_floorf^0,w,c
  4499  003728  101F               	iorwf	(??_floorf+1)^0,w,c
  4500  00372A  1020               	iorwf	(??_floorf+2)^0,w,c
  4501  00372C  1021               	iorwf	(??_floorf+3)^0,w,c
  4502  00372E  B4D8               	btfsc	status,2,c
  4503  003730  EF9C  F01B         	goto	u4111
  4504  003734  EF9E  F01B         	goto	u4110
  4505  003738                     u4111:
  4506  003738  EFA6  F01B         	goto	l3362
  4507  00373C                     u4110:
  4508  00373C  0E00               	movlw	0
  4509  00373E  6E2A               	movwf	floorf@u^0,c
  4510  003740  0E00               	movlw	0
  4511  003742  6E2B               	movwf	(floorf@u+1)^0,c
  4512  003744  0E80               	movlw	128
  4513  003746  6E2C               	movwf	(floorf@u+2)^0,c
  4514  003748  0EBF               	movlw	191
  4515  00374A  6E2D               	movwf	(floorf@u+3)^0,c
  4516  00374C                     l3362:
  4517  00374C  C02A  F01A         	movff	floorf@u,?_floorf
  4518  003750  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  4519  003754  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  4520  003758  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  4521  00375C                     l969:
  4522  00375C  0012               	return		;funcret
  4523  00375E                     __end_of_floorf:
  4524                           	callstack 0
  4525                           
  4526 ;; *************** function ___fpclassifyf *****************
  4527 ;; Defined at:
  4528 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;  x               4    0[COMRAM] float 
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;  u               4   10[COMRAM] struct .
  4533 ;;  e               2    8[COMRAM] int 
  4534 ;; Return value:  Size  Location     Type
  4535 ;;                  2    0[COMRAM] int 
  4536 ;; Registers used:
  4537 ;;		wreg, status,2, status,0
  4538 ;; Tracked objects:
  4539 ;;		On entry : 0/0
  4540 ;;		On exit  : 0/0
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4543 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4544 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4545 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4546 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4547 ;;Total ram usage:       14 bytes
  4548 ;; Hardware stack levels used: 1
  4549 ;; This function calls:
  4550 ;;		Nothing
  4551 ;; This function is called by:
  4552 ;;		_efgtoa
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556                           	psect	text11
  4557  003C54                     __ptext11:
  4558                           	callstack 0
  4559  003C54                     ___fpclassifyf:
  4560                           	callstack 26
  4561  003C54  C0EB  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4562  003C58  C0EC  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4563  003C5C  C0ED  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4564  003C60  C0EE  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4565  003C64  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4566  003C68  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4567  003C6C  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4568  003C70  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4569  003C74  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4570  003C78  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4571  003C7C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4572  003C80  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4573  003C84  0E18               	movlw	24
  4574  003C86  EF4A  F01E         	goto	u3900
  4575  003C8A                     u3905:
  4576  003C8A  90D8               	bcf	status,0,c
  4577  003C8C  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4578  003C8E  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4579  003C90  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4580  003C92  3205               	rrcf	??___fpclassifyf^0,f,c
  4581  003C94                     u3900:
  4582  003C94  2EE8               	decfsz	wreg,f,c
  4583  003C96  EF45  F01E         	goto	u3905
  4584  003C9A  5005               	movf	??___fpclassifyf^0,w,c
  4585  003C9C  6E09               	movwf	___fpclassifyf@e^0,c
  4586  003C9E  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4587  003CA0  5009               	movf	___fpclassifyf@e^0,w,c
  4588  003CA2  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4589  003CA4  A4D8               	btfss	status,2,c
  4590  003CA6  EF57  F01E         	goto	u3911
  4591  003CAA  EF59  F01E         	goto	u3910
  4592  003CAE                     u3911:
  4593  003CAE  EF79  F01E         	goto	l3314
  4594  003CB2                     u3910:
  4595  003CB2  90D8               	bcf	status,0,c
  4596  003CB4  340B               	rlcf	___fpclassifyf@u^0,w,c
  4597  003CB6  6E05               	movwf	??___fpclassifyf^0,c
  4598  003CB8  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4599  003CBA  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4600  003CBC  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4601  003CBE  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4602  003CC0  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4603  003CC2  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4604  003CC4  5005               	movf	??___fpclassifyf^0,w,c
  4605  003CC6  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4606  003CC8  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4607  003CCA  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4608  003CCC  A4D8               	btfss	status,2,c
  4609  003CCE  EF6B  F01E         	goto	u3921
  4610  003CD2  EF6D  F01E         	goto	u3920
  4611  003CD6                     u3921:
  4612  003CD6  EF73  F01E         	goto	l3310
  4613  003CDA                     u3920:
  4614  003CDA  0E00               	movlw	0
  4615  003CDC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4616  003CDE  0E02               	movlw	2
  4617  003CE0  6E01               	movwf	?___fpclassifyf^0,c
  4618  003CE2  EFA8  F01E         	goto	l955
  4619  003CE6                     l3310:
  4620  003CE6  0E00               	movlw	0
  4621  003CE8  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4622  003CEA  0E03               	movlw	3
  4623  003CEC  6E01               	movwf	?___fpclassifyf^0,c
  4624  003CEE  EFA8  F01E         	goto	l955
  4625  003CF2                     l3314:
  4626  003CF2  2809               	incf	___fpclassifyf@e^0,w,c
  4627  003CF4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4628  003CF6  A4D8               	btfss	status,2,c
  4629  003CF8  EF80  F01E         	goto	u3931
  4630  003CFC  EF82  F01E         	goto	u3930
  4631  003D00                     u3931:
  4632  003D00  EFA4  F01E         	goto	l3320
  4633  003D04                     u3930:
  4634  003D04  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4635  003D08  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4636  003D0C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4637  003D10  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4638  003D14  0E09               	movlw	9
  4639  003D16                     u3945:
  4640  003D16  90D8               	bcf	status,0,c
  4641  003D18  3605               	rlcf	??___fpclassifyf^0,f,c
  4642  003D1A  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4643  003D1C  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4644  003D1E  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4645  003D20  2EE8               	decfsz	wreg,f,c
  4646  003D22  EF8B  F01E         	goto	u3945
  4647  003D26  5005               	movf	??___fpclassifyf^0,w,c
  4648  003D28  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4649  003D2A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4650  003D2C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4651  003D2E  B4D8               	btfsc	status,2,c
  4652  003D30  EF9C  F01E         	goto	u3951
  4653  003D34  EF9F  F01E         	goto	u3950
  4654  003D38                     u3951:
  4655  003D38  0E01               	movlw	1
  4656  003D3A  EFA0  F01E         	goto	u3960
  4657  003D3E                     u3950:
  4658  003D3E  0E00               	movlw	0
  4659  003D40                     u3960:
  4660  003D40  6E01               	movwf	?___fpclassifyf^0,c
  4661  003D42  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4662  003D44  EFA8  F01E         	goto	l955
  4663  003D48                     l3320:
  4664  003D48  0E00               	movlw	0
  4665  003D4A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4666  003D4C  0E04               	movlw	4
  4667  003D4E  6E01               	movwf	?___fpclassifyf^0,c
  4668  003D50                     l955:
  4669  003D50  0012               	return		;funcret
  4670  003D52                     __end_of___fpclassifyf:
  4671                           	callstack 0
  4672                           
  4673 ;; *************** function ___fltol *****************
  4674 ;; Defined at:
  4675 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;  f1              4    0[COMRAM] int 
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;  exp1            1    9[COMRAM] unsigned char 
  4680 ;;  sign1           1    8[COMRAM] unsigned char 
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  4    0[COMRAM] long 
  4683 ;; Registers used:
  4684 ;;		wreg, status,2, status,0
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4690 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4691 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4692 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4693 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4694 ;;Total ram usage:       10 bytes
  4695 ;; Hardware stack levels used: 1
  4696 ;; This function calls:
  4697 ;;		Nothing
  4698 ;; This function is called by:
  4699 ;;		_efgtoa
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           	psect	text12
  4704  003A4A                     __ptext12:
  4705                           	callstack 0
  4706  003A4A                     ___fltol:
  4707                           	callstack 26
  4708  003A4A  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4709  003A4C  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4710  003A4E  6E0A               	movwf	___fltol@exp1^0,c
  4711  003A50  500A               	movf	___fltol@exp1^0,w,c
  4712  003A52  A4D8               	btfss	status,2,c
  4713  003A54  EF2E  F01D         	goto	u3781
  4714  003A58  EF30  F01D         	goto	u3780
  4715  003A5C                     u3781:
  4716  003A5C  EF3A  F01D         	goto	l3238
  4717  003A60                     u3780:
  4718  003A60                     l3234:
  4719  003A60  0E00               	movlw	0
  4720  003A62  6E01               	movwf	?___fltol^0,c
  4721  003A64  0E00               	movlw	0
  4722  003A66  6E02               	movwf	(?___fltol+1)^0,c
  4723  003A68  0E00               	movlw	0
  4724  003A6A  6E03               	movwf	(?___fltol+2)^0,c
  4725  003A6C  0E00               	movlw	0
  4726  003A6E  6E04               	movwf	(?___fltol+3)^0,c
  4727  003A70  EFA7  F01D         	goto	l377
  4728  003A74                     l3238:
  4729  003A74  C001  F005         	movff	___fltol@f1,??___fltol
  4730  003A78  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4731  003A7C  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4732  003A80  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4733  003A84  0E20               	movlw	32
  4734  003A86  EF4A  F01D         	goto	u3790
  4735  003A8A                     u3795:
  4736  003A8A  90D8               	bcf	status,0,c
  4737  003A8C  3208               	rrcf	(??___fltol+3)^0,f,c
  4738  003A8E  3207               	rrcf	(??___fltol+2)^0,f,c
  4739  003A90  3206               	rrcf	(??___fltol+1)^0,f,c
  4740  003A92  3205               	rrcf	??___fltol^0,f,c
  4741  003A94                     u3790:
  4742  003A94  2EE8               	decfsz	wreg,f,c
  4743  003A96  EF45  F01D         	goto	u3795
  4744  003A9A  5005               	movf	??___fltol^0,w,c
  4745  003A9C  6E09               	movwf	___fltol@sign1^0,c
  4746  003A9E  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4747  003AA0  0EFF               	movlw	255
  4748  003AA2  1601               	andwf	___fltol@f1^0,f,c
  4749  003AA4  0EFF               	movlw	255
  4750  003AA6  1602               	andwf	(___fltol@f1+1)^0,f,c
  4751  003AA8  0EFF               	movlw	255
  4752  003AAA  1603               	andwf	(___fltol@f1+2)^0,f,c
  4753  003AAC  0E00               	movlw	0
  4754  003AAE  1604               	andwf	(___fltol@f1+3)^0,f,c
  4755  003AB0  0E96               	movlw	150
  4756  003AB2  5E0A               	subwf	___fltol@exp1^0,f,c
  4757  003AB4  BE0A               	btfsc	___fltol@exp1^0,7,c
  4758  003AB6  EF61  F01D         	goto	u3800
  4759  003ABA  EF5F  F01D         	goto	u3801
  4760  003ABE                     u3801:
  4761  003ABE  EF77  F01D         	goto	l3258
  4762  003AC2                     u3800:
  4763  003AC2  500A               	movf	___fltol@exp1^0,w,c
  4764  003AC4  0A80               	xorlw	128
  4765  003AC6  0F97               	addlw	151
  4766  003AC8  B0D8               	btfsc	status,0,c
  4767  003ACA  EF69  F01D         	goto	u3811
  4768  003ACE  EF6B  F01D         	goto	u3810
  4769  003AD2                     u3811:
  4770  003AD2  EF6D  F01D         	goto	l3254
  4771  003AD6                     u3810:
  4772  003AD6  EF30  F01D         	goto	l3234
  4773  003ADA                     l3254:
  4774  003ADA  90D8               	bcf	status,0,c
  4775  003ADC  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4776  003ADE  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4777  003AE0  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4778  003AE2  3201               	rrcf	___fltol@f1^0,f,c
  4779  003AE4  3E0A               	incfsz	___fltol@exp1^0,f,c
  4780  003AE6  EF6D  F01D         	goto	l3254
  4781  003AEA  EF8F  F01D         	goto	l3268
  4782  003AEE                     l3258:
  4783  003AEE  0E1F               	movlw	31
  4784  003AF0  640A               	cpfsgt	___fltol@exp1^0,c
  4785  003AF2  EF7D  F01D         	goto	u3821
  4786  003AF6  EF7F  F01D         	goto	u3820
  4787  003AFA                     u3821:
  4788  003AFA  EF87  F01D         	goto	l3266
  4789  003AFE                     u3820:
  4790  003AFE  EF30  F01D         	goto	l3234
  4791  003B02                     l3264:
  4792  003B02  90D8               	bcf	status,0,c
  4793  003B04  3601               	rlcf	___fltol@f1^0,f,c
  4794  003B06  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4795  003B08  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4796  003B0A  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4797  003B0C  060A               	decf	___fltol@exp1^0,f,c
  4798  003B0E                     l3266:
  4799  003B0E  500A               	movf	___fltol@exp1^0,w,c
  4800  003B10  A4D8               	btfss	status,2,c
  4801  003B12  EF8D  F01D         	goto	u3831
  4802  003B16  EF8F  F01D         	goto	u3830
  4803  003B1A                     u3831:
  4804  003B1A  EF81  F01D         	goto	l3264
  4805  003B1E                     u3830:
  4806  003B1E                     l3268:
  4807  003B1E  5009               	movf	___fltol@sign1^0,w,c
  4808  003B20  B4D8               	btfsc	status,2,c
  4809  003B22  EF95  F01D         	goto	u3841
  4810  003B26  EF97  F01D         	goto	u3840
  4811  003B2A                     u3841:
  4812  003B2A  EF9F  F01D         	goto	l3272
  4813  003B2E                     u3840:
  4814  003B2E  1E04               	comf	(___fltol@f1+3)^0,f,c
  4815  003B30  1E03               	comf	(___fltol@f1+2)^0,f,c
  4816  003B32  1E02               	comf	(___fltol@f1+1)^0,f,c
  4817  003B34  6C01               	negf	___fltol@f1^0,c
  4818  003B36  0E00               	movlw	0
  4819  003B38  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4820  003B3A  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4821  003B3C  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4822  003B3E                     l3272:
  4823  003B3E  C001  F001         	movff	___fltol@f1,?___fltol
  4824  003B42  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4825  003B46  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4826  003B4A  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4827  003B4E                     l377:
  4828  003B4E  0012               	return		;funcret
  4829  003B50                     __end_of___fltol:
  4830                           	callstack 0
  4831                           
  4832 ;; *************** function ___flneg *****************
  4833 ;; Defined at:
  4834 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  4835 ;; Parameters:    Size  Location     Type
  4836 ;;  f1              4    0[COMRAM] long 
  4837 ;; Auto vars:     Size  Location     Type
  4838 ;;		None
  4839 ;; Return value:  Size  Location     Type
  4840 ;;                  4    0[COMRAM] long 
  4841 ;; Registers used:
  4842 ;;		wreg, status,2, status,0
  4843 ;; Tracked objects:
  4844 ;;		On entry : 0/0
  4845 ;;		On exit  : 0/0
  4846 ;;		Unchanged: 0/0
  4847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4848 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4851 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4852 ;;Total ram usage:        4 bytes
  4853 ;; Hardware stack levels used: 1
  4854 ;; This function calls:
  4855 ;;		Nothing
  4856 ;; This function is called by:
  4857 ;;		_efgtoa
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           	psect	text13
  4862  0046F0                     __ptext13:
  4863                           	callstack 0
  4864  0046F0                     ___flneg:
  4865                           	callstack 26
  4866  0046F0  5001               	movf	___flneg@f1^0,w,c
  4867  0046F2  1002               	iorwf	(___flneg@f1+1)^0,w,c
  4868  0046F4  1003               	iorwf	(___flneg@f1+2)^0,w,c
  4869  0046F6  1004               	iorwf	(___flneg@f1+3)^0,w,c
  4870  0046F8  B4D8               	btfsc	status,2,c
  4871  0046FA  EF81  F023         	goto	u3771
  4872  0046FE  EF83  F023         	goto	u3770
  4873  004702                     u3771:
  4874  004702  EF8B  F023         	goto	l3228
  4875  004706                     u3770:
  4876  004706  0E00               	movlw	0
  4877  004708  1A01               	xorwf	___flneg@f1^0,f,c
  4878  00470A  0E00               	movlw	0
  4879  00470C  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  4880  00470E  0E00               	movlw	0
  4881  004710  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  4882  004712  0E80               	movlw	128
  4883  004714  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  4884  004716                     l3228:
  4885  004716  C001  F001         	movff	___flneg@f1,?___flneg
  4886  00471A  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  4887  00471E  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  4888  004722  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  4889  004726  0012               	return		;funcret
  4890  004728                     __end_of___flneg:
  4891                           	callstack 0
  4892                           
  4893 ;; *************** function ___fleq *****************
  4894 ;; Defined at:
  4895 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  4896 ;; Parameters:    Size  Location     Type
  4897 ;;  ff1             4    0[COMRAM] long 
  4898 ;;  ff2             4    4[COMRAM] long 
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;		None
  4901 ;; Return value:  Size  Location     Type
  4902 ;;		None               void
  4903 ;; Registers used:
  4904 ;;		wreg, status,2, status,0
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4910 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4912 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4913 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4914 ;;Total ram usage:       12 bytes
  4915 ;; Hardware stack levels used: 1
  4916 ;; This function calls:
  4917 ;;		Nothing
  4918 ;; This function is called by:
  4919 ;;		_efgtoa
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text14
  4924  004114                     __ptext14:
  4925                           	callstack 0
  4926  004114                     ___fleq:
  4927                           	callstack 26
  4928  004114  0E00               	movlw	0
  4929  004116  1401               	andwf	___fleq@ff1^0,w,c
  4930  004118  6E09               	movwf	??___fleq^0,c
  4931  00411A  0E00               	movlw	0
  4932  00411C  1402               	andwf	(___fleq@ff1+1)^0,w,c
  4933  00411E  6E0A               	movwf	(??___fleq+1)^0,c
  4934  004120  0E80               	movlw	128
  4935  004122  1403               	andwf	(___fleq@ff1+2)^0,w,c
  4936  004124  6E0B               	movwf	(??___fleq+2)^0,c
  4937  004126  0E7F               	movlw	127
  4938  004128  1404               	andwf	(___fleq@ff1+3)^0,w,c
  4939  00412A  6E0C               	movwf	(??___fleq+3)^0,c
  4940  00412C  5009               	movf	??___fleq^0,w,c
  4941  00412E  100A               	iorwf	(??___fleq+1)^0,w,c
  4942  004130  100B               	iorwf	(??___fleq+2)^0,w,c
  4943  004132  100C               	iorwf	(??___fleq+3)^0,w,c
  4944  004134  A4D8               	btfss	status,2,c
  4945  004136  EF9F  F020         	goto	u3691
  4946  00413A  EFA1  F020         	goto	u3690
  4947  00413E                     u3691:
  4948  00413E  EFA9  F020         	goto	l3190
  4949  004142                     u3690:
  4950  004142  0E00               	movlw	0
  4951  004144  6E01               	movwf	___fleq@ff1^0,c
  4952  004146  0E00               	movlw	0
  4953  004148  6E02               	movwf	(___fleq@ff1+1)^0,c
  4954  00414A  0E00               	movlw	0
  4955  00414C  6E03               	movwf	(___fleq@ff1+2)^0,c
  4956  00414E  0E00               	movlw	0
  4957  004150  6E04               	movwf	(___fleq@ff1+3)^0,c
  4958  004152                     l3190:
  4959  004152  0E00               	movlw	0
  4960  004154  1405               	andwf	___fleq@ff2^0,w,c
  4961  004156  6E09               	movwf	??___fleq^0,c
  4962  004158  0E00               	movlw	0
  4963  00415A  1406               	andwf	(___fleq@ff2+1)^0,w,c
  4964  00415C  6E0A               	movwf	(??___fleq+1)^0,c
  4965  00415E  0E80               	movlw	128
  4966  004160  1407               	andwf	(___fleq@ff2+2)^0,w,c
  4967  004162  6E0B               	movwf	(??___fleq+2)^0,c
  4968  004164  0E7F               	movlw	127
  4969  004166  1408               	andwf	(___fleq@ff2+3)^0,w,c
  4970  004168  6E0C               	movwf	(??___fleq+3)^0,c
  4971  00416A  5009               	movf	??___fleq^0,w,c
  4972  00416C  100A               	iorwf	(??___fleq+1)^0,w,c
  4973  00416E  100B               	iorwf	(??___fleq+2)^0,w,c
  4974  004170  100C               	iorwf	(??___fleq+3)^0,w,c
  4975  004172  A4D8               	btfss	status,2,c
  4976  004174  EFBE  F020         	goto	u3701
  4977  004178  EFC0  F020         	goto	u3700
  4978  00417C                     u3701:
  4979  00417C  EFC8  F020         	goto	l3194
  4980  004180                     u3700:
  4981  004180  0E00               	movlw	0
  4982  004182  6E05               	movwf	___fleq@ff2^0,c
  4983  004184  0E00               	movlw	0
  4984  004186  6E06               	movwf	(___fleq@ff2+1)^0,c
  4985  004188  0E00               	movlw	0
  4986  00418A  6E07               	movwf	(___fleq@ff2+2)^0,c
  4987  00418C  0E00               	movlw	0
  4988  00418E  6E08               	movwf	(___fleq@ff2+3)^0,c
  4989  004190                     l3194:
  4990  004190  5005               	movf	___fleq@ff2^0,w,c
  4991  004192  1801               	xorwf	___fleq@ff1^0,w,c
  4992  004194  E10F               	bnz	u3710
  4993  004196  5006               	movf	(___fleq@ff2+1)^0,w,c
  4994  004198  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  4995  00419A  E10C               	bnz	u3710
  4996  00419C  5007               	movf	(___fleq@ff2+2)^0,w,c
  4997  00419E  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  4998  0041A0  E109               	bnz	u3710
  4999  0041A2  5008               	movf	(___fleq@ff2+3)^0,w,c
  5000  0041A4  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5001  0041A6  B4D8               	btfsc	status,2,c
  5002  0041A8  EFD8  F020         	goto	u3711
  5003  0041AC  EFDA  F020         	goto	u3710
  5004  0041B0                     u3711:
  5005  0041B0  EFDD  F020         	goto	l3198
  5006  0041B4                     u3710:
  5007  0041B4  90D8               	bcf	status,0,c
  5008  0041B6  EFDE  F020         	goto	l339
  5009  0041BA                     l3198:
  5010  0041BA  80D8               	bsf	status,0,c
  5011  0041BC                     l339:
  5012  0041BC  0012               	return		;funcret
  5013  0041BE                     __end_of___fleq:
  5014                           	callstack 0
  5015                           
  5016 ;; *************** function ___fldiv *****************
  5017 ;; Defined at:
  5018 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;  b               4    0[COMRAM] long 
  5021 ;;  a               4    4[COMRAM] long 
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;  grs             4   19[COMRAM] unsigned long 
  5024 ;;  rem             4   12[COMRAM] unsigned long 
  5025 ;;  new_exp         2   17[COMRAM] short 
  5026 ;;  aexp            1   24[COMRAM] unsigned char 
  5027 ;;  bexp            1   23[COMRAM] unsigned char 
  5028 ;;  sign            1   16[COMRAM] unsigned char 
  5029 ;; Return value:  Size  Location     Type
  5030 ;;                  4    0[COMRAM] unsigned char 
  5031 ;; Registers used:
  5032 ;;		wreg, status,2, status,0
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5038 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5039 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5040 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5041 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5042 ;;Total ram usage:       25 bytes
  5043 ;; Hardware stack levels used: 1
  5044 ;; This function calls:
  5045 ;;		Nothing
  5046 ;; This function is called by:
  5047 ;;		_efgtoa
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051                           	psect	text15
  5052  0029E0                     __ptext15:
  5053                           	callstack 0
  5054  0029E0                     ___fldiv:
  5055                           	callstack 26
  5056  0029E0  5004               	movf	(___fldiv@b+3)^0,w,c
  5057  0029E2  0B80               	andlw	128
  5058  0029E4  6E11               	movwf	___fldiv@sign^0,c
  5059  0029E6  5004               	movf	(___fldiv@b+3)^0,w,c
  5060  0029E8  2404               	addwf	(___fldiv@b+3)^0,w,c
  5061  0029EA  6E18               	movwf	___fldiv@bexp^0,c
  5062  0029EC  AE03               	btfss	(___fldiv@b+2)^0,7,c
  5063  0029EE  EFFB  F014         	goto	u3151
  5064  0029F2  EFFD  F014         	goto	u3150
  5065  0029F6                     u3151:
  5066  0029F6  EFFE  F014         	goto	l2838
  5067  0029FA                     u3150:
  5068  0029FA  8018               	bsf	___fldiv@bexp^0,0,c
  5069  0029FC                     l2838:
  5070  0029FC  5018               	movf	___fldiv@bexp^0,w,c
  5071  0029FE  B4D8               	btfsc	status,2,c
  5072  002A00  EF04  F015         	goto	u3161
  5073  002A04  EF06  F015         	goto	u3160
  5074  002A08                     u3161:
  5075  002A08  EF1B  F015         	goto	l2848
  5076  002A0C                     u3160:
  5077  002A0C  2818               	incf	___fldiv@bexp^0,w,c
  5078  002A0E  A4D8               	btfss	status,2,c
  5079  002A10  EF0C  F015         	goto	u3171
  5080  002A14  EF0E  F015         	goto	u3170
  5081  002A18                     u3171:
  5082  002A18  EF16  F015         	goto	l2844
  5083  002A1C                     u3170:
  5084  002A1C  0E00               	movlw	0
  5085  002A1E  6E01               	movwf	___fldiv@b^0,c
  5086  002A20  0E00               	movlw	0
  5087  002A22  6E02               	movwf	(___fldiv@b+1)^0,c
  5088  002A24  0E00               	movlw	0
  5089  002A26  6E03               	movwf	(___fldiv@b+2)^0,c
  5090  002A28  0E00               	movlw	0
  5091  002A2A  6E04               	movwf	(___fldiv@b+3)^0,c
  5092  002A2C                     l2844:
  5093  002A2C  8E03               	bsf	(___fldiv@b+2)^0,7,c
  5094  002A2E  0E00               	movlw	0
  5095  002A30  6E04               	movwf	(___fldiv@b+3)^0,c
  5096  002A32  EF23  F015         	goto	l2850
  5097  002A36                     l2848:
  5098  002A36  0E00               	movlw	0
  5099  002A38  6E01               	movwf	___fldiv@b^0,c
  5100  002A3A  0E00               	movlw	0
  5101  002A3C  6E02               	movwf	(___fldiv@b+1)^0,c
  5102  002A3E  0E00               	movlw	0
  5103  002A40  6E03               	movwf	(___fldiv@b+2)^0,c
  5104  002A42  0E00               	movlw	0
  5105  002A44  6E04               	movwf	(___fldiv@b+3)^0,c
  5106  002A46                     l2850:
  5107  002A46  5008               	movf	(___fldiv@a+3)^0,w,c
  5108  002A48  0B80               	andlw	128
  5109  002A4A  1A11               	xorwf	___fldiv@sign^0,f,c
  5110  002A4C  5008               	movf	(___fldiv@a+3)^0,w,c
  5111  002A4E  2408               	addwf	(___fldiv@a+3)^0,w,c
  5112  002A50  6E19               	movwf	___fldiv@aexp^0,c
  5113  002A52  AE07               	btfss	(___fldiv@a+2)^0,7,c
  5114  002A54  EF2E  F015         	goto	u3181
  5115  002A58  EF30  F015         	goto	u3180
  5116  002A5C                     u3181:
  5117  002A5C  EF31  F015         	goto	l2858
  5118  002A60                     u3180:
  5119  002A60  8019               	bsf	___fldiv@aexp^0,0,c
  5120  002A62                     l2858:
  5121  002A62  5019               	movf	___fldiv@aexp^0,w,c
  5122  002A64  B4D8               	btfsc	status,2,c
  5123  002A66  EF37  F015         	goto	u3191
  5124  002A6A  EF39  F015         	goto	u3190
  5125  002A6E                     u3191:
  5126  002A6E  EF4E  F015         	goto	l2868
  5127  002A72                     u3190:
  5128  002A72  2819               	incf	___fldiv@aexp^0,w,c
  5129  002A74  A4D8               	btfss	status,2,c
  5130  002A76  EF3F  F015         	goto	u3201
  5131  002A7A  EF41  F015         	goto	u3200
  5132  002A7E                     u3201:
  5133  002A7E  EF49  F015         	goto	l2864
  5134  002A82                     u3200:
  5135  002A82  0E00               	movlw	0
  5136  002A84  6E05               	movwf	___fldiv@a^0,c
  5137  002A86  0E00               	movlw	0
  5138  002A88  6E06               	movwf	(___fldiv@a+1)^0,c
  5139  002A8A  0E00               	movlw	0
  5140  002A8C  6E07               	movwf	(___fldiv@a+2)^0,c
  5141  002A8E  0E00               	movlw	0
  5142  002A90  6E08               	movwf	(___fldiv@a+3)^0,c
  5143  002A92                     l2864:
  5144  002A92  8E07               	bsf	(___fldiv@a+2)^0,7,c
  5145  002A94  0E00               	movlw	0
  5146  002A96  6E08               	movwf	(___fldiv@a+3)^0,c
  5147  002A98  EF56  F015         	goto	l2870
  5148  002A9C                     l2868:
  5149  002A9C  0E00               	movlw	0
  5150  002A9E  6E05               	movwf	___fldiv@a^0,c
  5151  002AA0  0E00               	movlw	0
  5152  002AA2  6E06               	movwf	(___fldiv@a+1)^0,c
  5153  002AA4  0E00               	movlw	0
  5154  002AA6  6E07               	movwf	(___fldiv@a+2)^0,c
  5155  002AA8  0E00               	movlw	0
  5156  002AAA  6E08               	movwf	(___fldiv@a+3)^0,c
  5157  002AAC                     l2870:
  5158  002AAC  5005               	movf	___fldiv@a^0,w,c
  5159  002AAE  1006               	iorwf	(___fldiv@a+1)^0,w,c
  5160  002AB0  1007               	iorwf	(___fldiv@a+2)^0,w,c
  5161  002AB2  1008               	iorwf	(___fldiv@a+3)^0,w,c
  5162  002AB4  A4D8               	btfss	status,2,c
  5163  002AB6  EF5F  F015         	goto	u3211
  5164  002ABA  EF61  F015         	goto	u3210
  5165  002ABE                     u3211:
  5166  002ABE  EF79  F015         	goto	l2882
  5167  002AC2                     u3210:
  5168  002AC2  0E00               	movlw	0
  5169  002AC4  6E01               	movwf	___fldiv@b^0,c
  5170  002AC6  0E00               	movlw	0
  5171  002AC8  6E02               	movwf	(___fldiv@b+1)^0,c
  5172  002ACA  0E00               	movlw	0
  5173  002ACC  6E03               	movwf	(___fldiv@b+2)^0,c
  5174  002ACE  0E00               	movlw	0
  5175  002AD0  6E04               	movwf	(___fldiv@b+3)^0,c
  5176  002AD2  0E80               	movlw	128
  5177  002AD4  1203               	iorwf	(___fldiv@b+2)^0,f,c
  5178  002AD6  0E7F               	movlw	127
  5179  002AD8  1204               	iorwf	(___fldiv@b+3)^0,f,c
  5180  002ADA                     l2876:
  5181  002ADA  5011               	movf	___fldiv@sign^0,w,c
  5182  002ADC  1204               	iorwf	(___fldiv@b+3)^0,f,c
  5183  002ADE  C001  F001         	movff	___fldiv@b,?___fldiv
  5184  002AE2  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  5185  002AE6  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  5186  002AEA  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  5187  002AEE  EFBC  F016         	goto	l662
  5188  002AF2                     l2882:
  5189  002AF2  5018               	movf	___fldiv@bexp^0,w,c
  5190  002AF4  A4D8               	btfss	status,2,c
  5191  002AF6  EF7F  F015         	goto	u3221
  5192  002AFA  EF81  F015         	goto	u3220
  5193  002AFE                     u3221:
  5194  002AFE  EF8B  F015         	goto	l2890
  5195  002B02                     u3220:
  5196  002B02  0E00               	movlw	0
  5197  002B04  6E01               	movwf	?___fldiv^0,c
  5198  002B06  0E00               	movlw	0
  5199  002B08  6E02               	movwf	(?___fldiv+1)^0,c
  5200  002B0A  0E00               	movlw	0
  5201  002B0C  6E03               	movwf	(?___fldiv+2)^0,c
  5202  002B0E  0E00               	movlw	0
  5203  002B10  6E04               	movwf	(?___fldiv+3)^0,c
  5204  002B12  EFBC  F016         	goto	l662
  5205  002B16                     l2890:
  5206  002B16  5019               	movf	___fldiv@aexp^0,w,c
  5207  002B18  C018  F009         	movff	___fldiv@bexp,??___fldiv
  5208  002B1C  6A0A               	clrf	(??___fldiv+1)^0,c
  5209  002B1E  5E09               	subwf	??___fldiv^0,f,c
  5210  002B20  0E00               	movlw	0
  5211  002B22  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  5212  002B24  0E7F               	movlw	127
  5213  002B26  2409               	addwf	??___fldiv^0,w,c
  5214  002B28  6E12               	movwf	___fldiv@new_exp^0,c
  5215  002B2A  0E00               	movlw	0
  5216  002B2C  200A               	addwfc	(??___fldiv+1)^0,w,c
  5217  002B2E  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  5218  002B30  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  5219  002B34  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  5220  002B38  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  5221  002B3C  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  5222  002B40  0E00               	movlw	0
  5223  002B42  6E01               	movwf	___fldiv@b^0,c
  5224  002B44  0E00               	movlw	0
  5225  002B46  6E02               	movwf	(___fldiv@b+1)^0,c
  5226  002B48  0E00               	movlw	0
  5227  002B4A  6E03               	movwf	(___fldiv@b+2)^0,c
  5228  002B4C  0E00               	movlw	0
  5229  002B4E  6E04               	movwf	(___fldiv@b+3)^0,c
  5230  002B50  0E00               	movlw	0
  5231  002B52  6E14               	movwf	___fldiv@grs^0,c
  5232  002B54  0E00               	movlw	0
  5233  002B56  6E15               	movwf	(___fldiv@grs+1)^0,c
  5234  002B58  0E00               	movlw	0
  5235  002B5A  6E16               	movwf	(___fldiv@grs+2)^0,c
  5236  002B5C  0E00               	movlw	0
  5237  002B5E  6E17               	movwf	(___fldiv@grs+3)^0,c
  5238  002B60  0E00               	movlw	0
  5239  002B62  6E19               	movwf	___fldiv@aexp^0,c
  5240  002B64  EFEC  F015         	goto	l664
  5241  002B68                     l2900:
  5242  002B68  5019               	movf	___fldiv@aexp^0,w,c
  5243  002B6A  B4D8               	btfsc	status,2,c
  5244  002B6C  EFBA  F015         	goto	u3231
  5245  002B70  EFBC  F015         	goto	u3230
  5246  002B74                     u3231:
  5247  002B74  EFD3  F015         	goto	l2908
  5248  002B78                     u3230:
  5249  002B78  90D8               	bcf	status,0,c
  5250  002B7A  360D               	rlcf	___fldiv@rem^0,f,c
  5251  002B7C  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  5252  002B7E  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  5253  002B80  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  5254  002B82  90D8               	bcf	status,0,c
  5255  002B84  3601               	rlcf	___fldiv@b^0,f,c
  5256  002B86  3602               	rlcf	(___fldiv@b+1)^0,f,c
  5257  002B88  3603               	rlcf	(___fldiv@b+2)^0,f,c
  5258  002B8A  3604               	rlcf	(___fldiv@b+3)^0,f,c
  5259  002B8C  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  5260  002B8E  EFCB  F015         	goto	u3241
  5261  002B92  EFCD  F015         	goto	u3240
  5262  002B96                     u3241:
  5263  002B96  EFCE  F015         	goto	l667
  5264  002B9A                     u3240:
  5265  002B9A  8001               	bsf	___fldiv@b^0,0,c
  5266  002B9C                     l667:
  5267  002B9C  90D8               	bcf	status,0,c
  5268  002B9E  3614               	rlcf	___fldiv@grs^0,f,c
  5269  002BA0  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  5270  002BA2  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  5271  002BA4  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  5272  002BA6                     l2908:
  5273  002BA6  5005               	movf	___fldiv@a^0,w,c
  5274  002BA8  5C0D               	subwf	___fldiv@rem^0,w,c
  5275  002BAA  5006               	movf	(___fldiv@a+1)^0,w,c
  5276  002BAC  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  5277  002BAE  5007               	movf	(___fldiv@a+2)^0,w,c
  5278  002BB0  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  5279  002BB2  5008               	movf	(___fldiv@a+3)^0,w,c
  5280  002BB4  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  5281  002BB6  A0D8               	btfss	status,0,c
  5282  002BB8  EFE0  F015         	goto	u3251
  5283  002BBC  EFE2  F015         	goto	u3250
  5284  002BC0                     u3251:
  5285  002BC0  EFEB  F015         	goto	l2914
  5286  002BC4                     u3250:
  5287  002BC4  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  5288  002BC6  5005               	movf	___fldiv@a^0,w,c
  5289  002BC8  5E0D               	subwf	___fldiv@rem^0,f,c
  5290  002BCA  5006               	movf	(___fldiv@a+1)^0,w,c
  5291  002BCC  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  5292  002BCE  5007               	movf	(___fldiv@a+2)^0,w,c
  5293  002BD0  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  5294  002BD2  5008               	movf	(___fldiv@a+3)^0,w,c
  5295  002BD4  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  5296  002BD6                     l2914:
  5297  002BD6  2A19               	incf	___fldiv@aexp^0,f,c
  5298  002BD8                     l664:
  5299  002BD8  0E19               	movlw	25
  5300  002BDA  6419               	cpfsgt	___fldiv@aexp^0,c
  5301  002BDC  EFF2  F015         	goto	u3261
  5302  002BE0  EFF4  F015         	goto	u3260
  5303  002BE4                     u3261:
  5304  002BE4  EFB4  F015         	goto	l2900
  5305  002BE8                     u3260:
  5306  002BE8  500D               	movf	___fldiv@rem^0,w,c
  5307  002BEA  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  5308  002BEC  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  5309  002BEE  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  5310  002BF0  B4D8               	btfsc	status,2,c
  5311  002BF2  EFFD  F015         	goto	u3271
  5312  002BF6  EFFF  F015         	goto	u3270
  5313  002BFA                     u3271:
  5314  002BFA  EF17  F016         	goto	l2926
  5315  002BFE                     u3270:
  5316  002BFE  8014               	bsf	___fldiv@grs^0,0,c
  5317  002C00  EF17  F016         	goto	l2926
  5318  002C04                     l2920:
  5319  002C04  90D8               	bcf	status,0,c
  5320  002C06  3601               	rlcf	___fldiv@b^0,f,c
  5321  002C08  3602               	rlcf	(___fldiv@b+1)^0,f,c
  5322  002C0A  3603               	rlcf	(___fldiv@b+2)^0,f,c
  5323  002C0C  3604               	rlcf	(___fldiv@b+3)^0,f,c
  5324  002C0E  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  5325  002C10  EF0C  F016         	goto	u3281
  5326  002C14  EF0E  F016         	goto	u3280
  5327  002C18                     u3281:
  5328  002C18  EF0F  F016         	goto	l673
  5329  002C1C                     u3280:
  5330  002C1C  8001               	bsf	___fldiv@b^0,0,c
  5331  002C1E                     l673:
  5332  002C1E  90D8               	bcf	status,0,c
  5333  002C20  3614               	rlcf	___fldiv@grs^0,f,c
  5334  002C22  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  5335  002C24  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  5336  002C26  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  5337  002C28  0612               	decf	___fldiv@new_exp^0,f,c
  5338  002C2A  A0D8               	btfss	status,0,c
  5339  002C2C  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  5340  002C2E                     l2926:
  5341  002C2E  AE03               	btfss	(___fldiv@b+2)^0,7,c
  5342  002C30  EF1C  F016         	goto	u3291
  5343  002C34  EF1E  F016         	goto	u3290
  5344  002C38                     u3291:
  5345  002C38  EF02  F016         	goto	l2920
  5346  002C3C                     u3290:
  5347  002C3C  0E00               	movlw	0
  5348  002C3E  6E19               	movwf	___fldiv@aexp^0,c
  5349  002C40  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  5350  002C42  EF25  F016         	goto	u3301
  5351  002C46  EF27  F016         	goto	u3300
  5352  002C4A                     u3301:
  5353  002C4A  EF4B  F016         	goto	l675
  5354  002C4E                     u3300:
  5355  002C4E  0EFF               	movlw	255
  5356  002C50  1414               	andwf	___fldiv@grs^0,w,c
  5357  002C52  6E09               	movwf	??___fldiv^0,c
  5358  002C54  0EFF               	movlw	255
  5359  002C56  1415               	andwf	(___fldiv@grs+1)^0,w,c
  5360  002C58  6E0A               	movwf	(??___fldiv+1)^0,c
  5361  002C5A  0EFF               	movlw	255
  5362  002C5C  1416               	andwf	(___fldiv@grs+2)^0,w,c
  5363  002C5E  6E0B               	movwf	(??___fldiv+2)^0,c
  5364  002C60  0E7F               	movlw	127
  5365  002C62  1417               	andwf	(___fldiv@grs+3)^0,w,c
  5366  002C64  6E0C               	movwf	(??___fldiv+3)^0,c
  5367  002C66  5009               	movf	??___fldiv^0,w,c
  5368  002C68  100A               	iorwf	(??___fldiv+1)^0,w,c
  5369  002C6A  100B               	iorwf	(??___fldiv+2)^0,w,c
  5370  002C6C  100C               	iorwf	(??___fldiv+3)^0,w,c
  5371  002C6E  B4D8               	btfsc	status,2,c
  5372  002C70  EF3C  F016         	goto	u3311
  5373  002C74  EF3E  F016         	goto	u3310
  5374  002C78                     u3311:
  5375  002C78  EF42  F016         	goto	l676
  5376  002C7C                     u3310:
  5377  002C7C                     l2934:
  5378  002C7C  0E01               	movlw	1
  5379  002C7E  6E19               	movwf	___fldiv@aexp^0,c
  5380  002C80  EF4B  F016         	goto	l675
  5381  002C84                     l676:
  5382  002C84  A001               	btfss	___fldiv@b^0,0,c
  5383  002C86  EF47  F016         	goto	u3321
  5384  002C8A  EF49  F016         	goto	u3320
  5385  002C8E                     u3321:
  5386  002C8E  EF4B  F016         	goto	l675
  5387  002C92                     u3320:
  5388  002C92  EF3E  F016         	goto	l2934
  5389  002C96                     l675:
  5390  002C96  5019               	movf	___fldiv@aexp^0,w,c
  5391  002C98  B4D8               	btfsc	status,2,c
  5392  002C9A  EF51  F016         	goto	u3331
  5393  002C9E  EF53  F016         	goto	u3330
  5394  002CA2                     u3331:
  5395  002CA2  EF77  F016         	goto	l2946
  5396  002CA6                     u3330:
  5397  002CA6  0E01               	movlw	1
  5398  002CA8  2601               	addwf	___fldiv@b^0,f,c
  5399  002CAA  0E00               	movlw	0
  5400  002CAC  2202               	addwfc	(___fldiv@b+1)^0,f,c
  5401  002CAE  2203               	addwfc	(___fldiv@b+2)^0,f,c
  5402  002CB0  2204               	addwfc	(___fldiv@b+3)^0,f,c
  5403  002CB2  A004               	btfss	(___fldiv@b+3)^0,0,c
  5404  002CB4  EF5E  F016         	goto	u3341
  5405  002CB8  EF60  F016         	goto	u3340
  5406  002CBC                     u3341:
  5407  002CBC  EF77  F016         	goto	l2946
  5408  002CC0                     u3340:
  5409  002CC0  C001  F009         	movff	___fldiv@b,??___fldiv
  5410  002CC4  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  5411  002CC8  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  5412  002CCC  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  5413  002CD0  340C               	rlcf	(??___fldiv+3)^0,w,c
  5414  002CD2  320C               	rrcf	(??___fldiv+3)^0,f,c
  5415  002CD4  320B               	rrcf	(??___fldiv+2)^0,f,c
  5416  002CD6  320A               	rrcf	(??___fldiv+1)^0,f,c
  5417  002CD8  3209               	rrcf	??___fldiv^0,f,c
  5418  002CDA  C009  F001         	movff	??___fldiv,___fldiv@b
  5419  002CDE  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  5420  002CE2  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  5421  002CE6  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  5422  002CEA  4A12               	infsnz	___fldiv@new_exp^0,f,c
  5423  002CEC  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  5424  002CEE                     l2946:
  5425  002CEE  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5426  002CF0  EF82  F016         	goto	u3351
  5427  002CF4  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  5428  002CF6  E108               	bnz	u3350
  5429  002CF8  2812               	incf	___fldiv@new_exp^0,w,c
  5430  002CFA  A0D8               	btfss	status,0,c
  5431  002CFC  EF82  F016         	goto	u3351
  5432  002D00  EF84  F016         	goto	u3350
  5433  002D04                     u3351:
  5434  002D04  EF8F  F016         	goto	l2950
  5435  002D08                     u3350:
  5436  002D08  0E00               	movlw	0
  5437  002D0A  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  5438  002D0C  6812               	setf	___fldiv@new_exp^0,c
  5439  002D0E  0E00               	movlw	0
  5440  002D10  6E01               	movwf	___fldiv@b^0,c
  5441  002D12  0E00               	movlw	0
  5442  002D14  6E02               	movwf	(___fldiv@b+1)^0,c
  5443  002D16  0E00               	movlw	0
  5444  002D18  6E03               	movwf	(___fldiv@b+2)^0,c
  5445  002D1A  0E00               	movlw	0
  5446  002D1C  6E04               	movwf	(___fldiv@b+3)^0,c
  5447  002D1E                     l2950:
  5448  002D1E  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5449  002D20  EF9C  F016         	goto	u3360
  5450  002D24  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  5451  002D26  E106               	bnz	u3361
  5452  002D28  0412               	decf	___fldiv@new_exp^0,w,c
  5453  002D2A  B0D8               	btfsc	status,0,c
  5454  002D2C  EF9A  F016         	goto	u3361
  5455  002D30  EF9C  F016         	goto	u3360
  5456  002D34                     u3361:
  5457  002D34  EFAA  F016         	goto	l2954
  5458  002D38                     u3360:
  5459  002D38  0E00               	movlw	0
  5460  002D3A  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  5461  002D3C  0E00               	movlw	0
  5462  002D3E  6E12               	movwf	___fldiv@new_exp^0,c
  5463  002D40  0E00               	movlw	0
  5464  002D42  6E01               	movwf	___fldiv@b^0,c
  5465  002D44  0E00               	movlw	0
  5466  002D46  6E02               	movwf	(___fldiv@b+1)^0,c
  5467  002D48  0E00               	movlw	0
  5468  002D4A  6E03               	movwf	(___fldiv@b+2)^0,c
  5469  002D4C  0E00               	movlw	0
  5470  002D4E  6E04               	movwf	(___fldiv@b+3)^0,c
  5471  002D50  0E00               	movlw	0
  5472  002D52  6E11               	movwf	___fldiv@sign^0,c
  5473  002D54                     l2954:
  5474  002D54  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  5475  002D58  A018               	btfss	___fldiv@bexp^0,0,c
  5476  002D5A  EFB1  F016         	goto	u3371
  5477  002D5E  EFB3  F016         	goto	u3370
  5478  002D62                     u3371:
  5479  002D62  EFB6  F016         	goto	l2960
  5480  002D66                     u3370:
  5481  002D66  8E03               	bsf	(___fldiv@b+2)^0,7,c
  5482  002D68  EFB7  F016         	goto	l2962
  5483  002D6C                     l2960:
  5484  002D6C  9E03               	bcf	(___fldiv@b+2)^0,7,c
  5485  002D6E                     l2962:
  5486  002D6E  90D8               	bcf	status,0,c
  5487  002D70  3018               	rrcf	___fldiv@bexp^0,w,c
  5488  002D72  6E04               	movwf	(___fldiv@b+3)^0,c
  5489  002D74  EF6D  F015         	goto	l2876
  5490  002D78                     l662:
  5491  002D78  0012               	return		;funcret
  5492  002D7A                     __end_of___fldiv:
  5493                           	callstack 0
  5494                           
  5495 ;; *************** function ___awmod *****************
  5496 ;; Defined at:
  5497 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  5498 ;; Parameters:    Size  Location     Type
  5499 ;;  dividend        2    0[COMRAM] int 
  5500 ;;  divisor         2    2[COMRAM] int 
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;  sign            1    5[COMRAM] unsigned char 
  5503 ;;  counter         1    4[COMRAM] unsigned char 
  5504 ;; Return value:  Size  Location     Type
  5505 ;;                  2    0[COMRAM] int 
  5506 ;; Registers used:
  5507 ;;		wreg, status,2, status,0
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/0
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5513 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5514 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5516 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5517 ;;Total ram usage:        6 bytes
  5518 ;; Hardware stack levels used: 1
  5519 ;; This function calls:
  5520 ;;		Nothing
  5521 ;; This function is called by:
  5522 ;;		_efgtoa
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           	psect	text16
  5527  004064                     __ptext16:
  5528                           	callstack 0
  5529  004064                     ___awmod:
  5530                           	callstack 26
  5531  004064  0E00               	movlw	0
  5532  004066  6E06               	movwf	___awmod@sign^0,c
  5533  004068  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  5534  00406A  EF3B  F020         	goto	u3630
  5535  00406E  EF39  F020         	goto	u3631
  5536  004072                     u3631:
  5537  004072  EF41  F020         	goto	l3158
  5538  004076                     u3630:
  5539  004076  6C01               	negf	___awmod@dividend^0,c
  5540  004078  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5541  00407A  B0D8               	btfsc	status,0,c
  5542  00407C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5543  00407E  0E01               	movlw	1
  5544  004080  6E06               	movwf	___awmod@sign^0,c
  5545  004082                     l3158:
  5546  004082  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  5547  004084  EF48  F020         	goto	u3640
  5548  004088  EF46  F020         	goto	u3641
  5549  00408C                     u3641:
  5550  00408C  EF4C  F020         	goto	l3162
  5551  004090                     u3640:
  5552  004090  6C03               	negf	___awmod@divisor^0,c
  5553  004092  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5554  004094  B0D8               	btfsc	status,0,c
  5555  004096  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5556  004098                     l3162:
  5557  004098  5003               	movf	___awmod@divisor^0,w,c
  5558  00409A  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5559  00409C  B4D8               	btfsc	status,2,c
  5560  00409E  EF53  F020         	goto	u3651
  5561  0040A2  EF55  F020         	goto	u3650
  5562  0040A6                     u3651:
  5563  0040A6  EF79  F020         	goto	l3178
  5564  0040AA                     u3650:
  5565  0040AA  0E01               	movlw	1
  5566  0040AC  6E05               	movwf	___awmod@counter^0,c
  5567  0040AE  EF5D  F020         	goto	l3168
  5568  0040B2                     l3166:
  5569  0040B2  90D8               	bcf	status,0,c
  5570  0040B4  3603               	rlcf	___awmod@divisor^0,f,c
  5571  0040B6  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5572  0040B8  2A05               	incf	___awmod@counter^0,f,c
  5573  0040BA                     l3168:
  5574  0040BA  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5575  0040BC  EF62  F020         	goto	u3661
  5576  0040C0  EF64  F020         	goto	u3660
  5577  0040C4                     u3661:
  5578  0040C4  EF59  F020         	goto	l3166
  5579  0040C8                     u3660:
  5580  0040C8                     l3170:
  5581  0040C8  5003               	movf	___awmod@divisor^0,w,c
  5582  0040CA  5C01               	subwf	___awmod@dividend^0,w,c
  5583  0040CC  5004               	movf	(___awmod@divisor+1)^0,w,c
  5584  0040CE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5585  0040D0  A0D8               	btfss	status,0,c
  5586  0040D2  EF6D  F020         	goto	u3671
  5587  0040D6  EF6F  F020         	goto	u3670
  5588  0040DA                     u3671:
  5589  0040DA  EF73  F020         	goto	l3174
  5590  0040DE                     u3670:
  5591  0040DE  5003               	movf	___awmod@divisor^0,w,c
  5592  0040E0  5E01               	subwf	___awmod@dividend^0,f,c
  5593  0040E2  5004               	movf	(___awmod@divisor+1)^0,w,c
  5594  0040E4  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5595  0040E6                     l3174:
  5596  0040E6  90D8               	bcf	status,0,c
  5597  0040E8  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5598  0040EA  3203               	rrcf	___awmod@divisor^0,f,c
  5599  0040EC  2E05               	decfsz	___awmod@counter^0,f,c
  5600  0040EE  EF64  F020         	goto	l3170
  5601  0040F2                     l3178:
  5602  0040F2  5006               	movf	___awmod@sign^0,w,c
  5603  0040F4  B4D8               	btfsc	status,2,c
  5604  0040F6  EF7F  F020         	goto	u3681
  5605  0040FA  EF81  F020         	goto	u3680
  5606  0040FE                     u3681:
  5607  0040FE  EF85  F020         	goto	l3182
  5608  004102                     u3680:
  5609  004102  6C01               	negf	___awmod@dividend^0,c
  5610  004104  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5611  004106  B0D8               	btfsc	status,0,c
  5612  004108  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5613  00410A                     l3182:
  5614  00410A  C001  F001         	movff	___awmod@dividend,?___awmod
  5615  00410E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5616  004112  0012               	return		;funcret
  5617  004114                     __end_of___awmod:
  5618                           	callstack 0
  5619                           
  5620 ;; *************** function _dtoa *****************
  5621 ;; Defined at:
  5622 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5623 ;; Parameters:    Size  Location     Type
  5624 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  5625 ;;		 -> NULL(0), 
  5626 ;;  d               8   30[COMRAM] long long 
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;  n               8   54[COMRAM] long long 
  5629 ;;  i               2   62[COMRAM] int 
  5630 ;;  s               2   52[COMRAM] int 
  5631 ;;  w               2   50[COMRAM] int 
  5632 ;;  p               2   48[COMRAM] int 
  5633 ;; Return value:  Size  Location     Type
  5634 ;;                  2   28[COMRAM] int 
  5635 ;; Registers used:
  5636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5637 ;; Tracked objects:
  5638 ;;		On entry : 0/0
  5639 ;;		On exit  : 0/0
  5640 ;;		Unchanged: 0/0
  5641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5642 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5643 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5644 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5645 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5646 ;;Total ram usage:       36 bytes
  5647 ;; Hardware stack levels used: 1
  5648 ;; Hardware stack levels required when called: 4
  5649 ;; This function calls:
  5650 ;;		___aodiv
  5651 ;;		___aomod
  5652 ;;		_abs
  5653 ;;		_pad
  5654 ;; This function is called by:
  5655 ;;		_vfpfcnvrt
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           	psect	text17
  5660  002D7A                     __ptext17:
  5661                           	callstack 0
  5662  002D7A                     _dtoa:
  5663                           	callstack 23
  5664  002D7A                     
  5665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5666  002D7A  C01F  F037         	movff	dtoa@d,dtoa@n
  5667  002D7E  C020  F038         	movff	dtoa@d+1,dtoa@n+1
  5668  002D82  C021  F039         	movff	dtoa@d+2,dtoa@n+2
  5669  002D86  C022  F03A         	movff	dtoa@d+3,dtoa@n+3
  5670  002D8A  C023  F03B         	movff	dtoa@d+4,dtoa@n+4
  5671  002D8E  C024  F03C         	movff	dtoa@d+5,dtoa@n+5
  5672  002D92  C025  F03D         	movff	dtoa@d+6,dtoa@n+6
  5673  002D96  C026  F03E         	movff	dtoa@d+7,dtoa@n+7
  5674  002D9A                     
  5675                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5676  002D9A  BE3E               	btfsc	(dtoa@n+7)^0,7,c
  5677  002D9C  EFD2  F016         	goto	u4121
  5678  002DA0  EFD5  F016         	goto	u4120
  5679  002DA4                     u4121:
  5680  002DA4  0E01               	movlw	1
  5681  002DA6  EFD6  F016         	goto	u4130
  5682  002DAA                     u4120:
  5683  002DAA  0E00               	movlw	0
  5684  002DAC                     u4130:
  5685  002DAC  6E35               	movwf	dtoa@s^0,c
  5686  002DAE  6A36               	clrf	(dtoa@s+1)^0,c
  5687                           
  5688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5689  002DB0  5035               	movf	dtoa@s^0,w,c
  5690  002DB2  1036               	iorwf	(dtoa@s+1)^0,w,c
  5691  002DB4  B4D8               	btfsc	status,2,c
  5692  002DB6  EFDF  F016         	goto	u4141
  5693  002DBA  EFE1  F016         	goto	u4140
  5694  002DBE                     u4141:
  5695  002DBE  EFF1  F016         	goto	l3372
  5696  002DC2                     u4140:
  5697  002DC2                     
  5698                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5699  002DC2  1E3E               	comf	(dtoa@n+7)^0,f,c
  5700  002DC4  1E3D               	comf	(dtoa@n+6)^0,f,c
  5701  002DC6  1E3C               	comf	(dtoa@n+5)^0,f,c
  5702  002DC8  1E3B               	comf	(dtoa@n+4)^0,f,c
  5703  002DCA  1E3A               	comf	(dtoa@n+3)^0,f,c
  5704  002DCC  1E39               	comf	(dtoa@n+2)^0,f,c
  5705  002DCE  1E38               	comf	(dtoa@n+1)^0,f,c
  5706  002DD0  6C37               	negf	dtoa@n^0,c
  5707  002DD2  0E00               	movlw	0
  5708  002DD4  2238               	addwfc	(dtoa@n+1)^0,f,c
  5709  002DD6  2239               	addwfc	(dtoa@n+2)^0,f,c
  5710  002DD8  223A               	addwfc	(dtoa@n+3)^0,f,c
  5711  002DDA  223B               	addwfc	(dtoa@n+4)^0,f,c
  5712  002DDC  223C               	addwfc	(dtoa@n+5)^0,f,c
  5713  002DDE  223D               	addwfc	(dtoa@n+6)^0,f,c
  5714  002DE0  223E               	addwfc	(dtoa@n+7)^0,f,c
  5715  002DE2                     l3372:
  5716                           
  5717                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5718  002DE2  0100               	movlb	0	; () banked
  5719  002DE4  BFF4               	btfsc	(_prec+1)& (0+255),7,b
  5720  002DE6  EFF7  F016         	goto	u4151
  5721  002DEA  EFF9  F016         	goto	u4150
  5722  002DEE                     u4151:
  5723  002DEE  EFFA  F016         	goto	l3376
  5724  002DF2                     u4150:
  5725  002DF2                     
  5726                           ; BSR set to: 0
  5727                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5728  002DF2  93F5               	bcf	_flags& (0+255),1,b
  5729  002DF4                     l3376:
  5730                           
  5731                           ; BSR set to: 0
  5732                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5733  002DF4  BFF4               	btfsc	(_prec+1)& (0+255),7,b
  5734  002DF6  EF07  F017         	goto	u4160
  5735  002DFA  51F4               	movf	(_prec+1)& (0+255),w,b
  5736  002DFC  E106               	bnz	u4161
  5737  002DFE  05F3               	decf	_prec& (0+255),w,b
  5738  002E00  B0D8               	btfsc	status,0,c
  5739  002E02  EF05  F017         	goto	u4161
  5740  002E06  EF07  F017         	goto	u4160
  5741  002E0A                     u4161:
  5742  002E0A  EF0D  F017         	goto	l808
  5743  002E0E                     u4160:
  5744  002E0E                     
  5745                           ; BSR set to: 0
  5746  002E0E  0E00               	movlw	0
  5747  002E10  6E32               	movwf	(dtoa@p+1)^0,c
  5748  002E12  0E01               	movlw	1
  5749  002E14  6E31               	movwf	dtoa@p^0,c
  5750  002E16  EF11  F017         	goto	l810
  5751  002E1A                     l808:
  5752                           
  5753                           ; BSR set to: 0
  5754  002E1A  C0F3  F031         	movff	_prec,dtoa@p
  5755  002E1E  C0F4  F032         	movff	_prec+1,dtoa@p+1
  5756  002E22                     l810:
  5757                           
  5758                           ; BSR set to: 0
  5759                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5760  002E22  C0F1  F033         	movff	_width,dtoa@w
  5761  002E26  C0F2  F034         	movff	_width+1,dtoa@w+1
  5762  002E2A                     
  5763                           ; BSR set to: 0
  5764                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5765  002E2A  5035               	movf	dtoa@s^0,w,c
  5766  002E2C  1036               	iorwf	(dtoa@s+1)^0,w,c
  5767  002E2E  A4D8               	btfss	status,2,c
  5768  002E30  EF1C  F017         	goto	u4171
  5769  002E34  EF1E  F017         	goto	u4170
  5770  002E38                     u4171:
  5771  002E38  EF25  F017         	goto	l3384
  5772  002E3C                     u4170:
  5773  002E3C                     
  5774                           ; BSR set to: 0
  5775  002E3C  A5F5               	btfss	_flags& (0+255),2,b
  5776  002E3E  EF23  F017         	goto	u4181
  5777  002E42  EF25  F017         	goto	u4180
  5778  002E46                     u4181:
  5779  002E46  EF28  F017         	goto	l3386
  5780  002E4A                     u4180:
  5781  002E4A                     l3384:
  5782                           
  5783                           ; BSR set to: 0
  5784                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  5785  002E4A  0633               	decf	dtoa@w^0,f,c
  5786  002E4C  A0D8               	btfss	status,0,c
  5787  002E4E  0634               	decf	(dtoa@w+1)^0,f,c
  5788  002E50                     l3386:
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5792  002E50  0E00               	movlw	0
  5793  002E52  6E40               	movwf	(dtoa@i+1)^0,c
  5794  002E54  0E4F               	movlw	79
  5795  002E56  6E3F               	movwf	dtoa@i^0,c
  5796  002E58                     
  5797                           ; BSR set to: 0
  5798                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5799  002E58  0E00               	movlw	0
  5800  002E5A  0101               	movlb	1	; () banked
  5801  002E5C  6F4F               	movwf	(_dbuf+79)& (0+255),b
  5802                           
  5803                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5804  002E5E  EFAD  F017         	goto	l3400
  5805  002E62                     l3390:
  5806                           
  5807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  5808  002E62  063F               	decf	dtoa@i^0,f,c
  5809  002E64  A0D8               	btfss	status,0,c
  5810  002E66  0640               	decf	(dtoa@i+1)^0,f,c
  5811  002E68                     
  5812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5813  002E68  0E00               	movlw	low _dbuf
  5814  002E6A  243F               	addwf	dtoa@i^0,w,c
  5815  002E6C  6ED9               	movwf	fsr2l,c
  5816  002E6E  0E01               	movlw	high _dbuf
  5817  002E70  2040               	addwfc	(dtoa@i+1)^0,w,c
  5818  002E72  6EDA               	movwf	fsr2h,c
  5819  002E74  C037  F001         	movff	dtoa@n,___aomod@dividend
  5820  002E78  C038  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5821  002E7C  C039  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5822  002E80  C03A  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5823  002E84  C03B  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5824  002E88  C03C  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5825  002E8C  C03D  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5826  002E90  C03E  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5827  002E94  0E0A               	movlw	10
  5828  002E96  6E09               	movwf	___aomod@divisor^0,c
  5829  002E98  0E00               	movlw	0
  5830  002E9A  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5831  002E9C  0E00               	movlw	0
  5832  002E9E  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5833  002EA0  0E00               	movlw	0
  5834  002EA2  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5835  002EA4  0E00               	movlw	0
  5836  002EA6  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5837  002EA8  0E00               	movlw	0
  5838  002EAA  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5839  002EAC  0E00               	movlw	0
  5840  002EAE  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5841  002EB0  0E00               	movlw	0
  5842  002EB2  6E10               	movwf	(___aomod@divisor+7)^0,c
  5843  002EB4  EC73  F01C         	call	___aomod	;wreg free
  5844  002EB8  C001  F027         	movff	?___aomod,??_dtoa
  5845  002EBC  C002  F028         	movff	?___aomod+1,??_dtoa+1
  5846  002EC0  C003  F029         	movff	?___aomod+2,??_dtoa+2
  5847  002EC4  C004  F02A         	movff	?___aomod+3,??_dtoa+3
  5848  002EC8  C005  F02B         	movff	?___aomod+4,??_dtoa+4
  5849  002ECC  C006  F02C         	movff	?___aomod+5,??_dtoa+5
  5850  002ED0  C007  F02D         	movff	?___aomod+6,??_dtoa+6
  5851  002ED4  C008  F02E         	movff	?___aomod+7,??_dtoa+7
  5852  002ED8  C027  F013         	movff	??_dtoa,abs@a
  5853  002EDC  C029  F014         	movff	??_dtoa+2,abs@a+1
  5854  002EE0  EC3C  F023         	call	_abs	;wreg free
  5855  002EE4  5013               	movf	?_abs^0,w,c
  5856  002EE6  0F30               	addlw	48
  5857  002EE8  6EDF               	movwf	indf2,c
  5858  002EEA                     
  5859                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  5860  002EEA  0631               	decf	dtoa@p^0,f,c
  5861  002EEC  A0D8               	btfss	status,0,c
  5862  002EEE  0632               	decf	(dtoa@p+1)^0,f,c
  5863  002EF0                     
  5864                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  5865  002EF0  0633               	decf	dtoa@w^0,f,c
  5866  002EF2  A0D8               	btfss	status,0,c
  5867  002EF4  0634               	decf	(dtoa@w+1)^0,f,c
  5868  002EF6                     
  5869                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5870  002EF6  C037  F001         	movff	dtoa@n,___aodiv@dividend
  5871  002EFA  C038  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5872  002EFE  C039  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5873  002F02  C03A  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5874  002F06  C03B  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5875  002F0A  C03C  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5876  002F0E  C03D  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5877  002F12  C03E  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5878  002F16  0E0A               	movlw	10
  5879  002F18  6E09               	movwf	___aodiv@divisor^0,c
  5880  002F1A  0E00               	movlw	0
  5881  002F1C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5882  002F1E  0E00               	movlw	0
  5883  002F20  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5884  002F22  0E00               	movlw	0
  5885  002F24  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5886  002F26  0E00               	movlw	0
  5887  002F28  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5888  002F2A  0E00               	movlw	0
  5889  002F2C  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5890  002F2E  0E00               	movlw	0
  5891  002F30  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5892  002F32  0E00               	movlw	0
  5893  002F34  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5894  002F36  ECAF  F01B         	call	___aodiv	;wreg free
  5895  002F3A  C001  F037         	movff	?___aodiv,dtoa@n
  5896  002F3E  C002  F038         	movff	?___aodiv+1,dtoa@n+1
  5897  002F42  C003  F039         	movff	?___aodiv+2,dtoa@n+2
  5898  002F46  C004  F03A         	movff	?___aodiv+3,dtoa@n+3
  5899  002F4A  C005  F03B         	movff	?___aodiv+4,dtoa@n+4
  5900  002F4E  C006  F03C         	movff	?___aodiv+5,dtoa@n+5
  5901  002F52  C007  F03D         	movff	?___aodiv+6,dtoa@n+6
  5902  002F56  C008  F03E         	movff	?___aodiv+7,dtoa@n+7
  5903  002F5A                     l3400:
  5904                           
  5905                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5906  002F5A  BE40               	btfsc	(dtoa@i+1)^0,7,c
  5907  002F5C  EFB8  F017         	goto	u4191
  5908  002F60  5040               	movf	(dtoa@i+1)^0,w,c
  5909  002F62  E108               	bnz	u4190
  5910  002F64  043F               	decf	dtoa@i^0,w,c
  5911  002F66  A0D8               	btfss	status,0,c
  5912  002F68  EFB8  F017         	goto	u4191
  5913  002F6C  EFBA  F017         	goto	u4190
  5914  002F70                     u4191:
  5915  002F70  EFEB  F017         	goto	l3410
  5916  002F74                     u4190:
  5917  002F74  5037               	movf	dtoa@n^0,w,c
  5918  002F76  1038               	iorwf	(dtoa@n+1)^0,w,c
  5919  002F78  1039               	iorwf	(dtoa@n+2)^0,w,c
  5920  002F7A  103A               	iorwf	(dtoa@n+3)^0,w,c
  5921  002F7C  103B               	iorwf	(dtoa@n+4)^0,w,c
  5922  002F7E  103C               	iorwf	(dtoa@n+5)^0,w,c
  5923  002F80  103D               	iorwf	(dtoa@n+6)^0,w,c
  5924  002F82  103E               	iorwf	(dtoa@n+7)^0,w,c
  5925  002F84  A4D8               	btfss	status,2,c
  5926  002F86  EFC7  F017         	goto	u4201
  5927  002F8A  EFC9  F017         	goto	u4200
  5928  002F8E                     u4201:
  5929  002F8E  EF31  F017         	goto	l3390
  5930  002F92                     u4200:
  5931  002F92  BE32               	btfsc	(dtoa@p+1)^0,7,c
  5932  002F94  EFD6  F017         	goto	u4210
  5933  002F98  5032               	movf	(dtoa@p+1)^0,w,c
  5934  002F9A  E106               	bnz	u4211
  5935  002F9C  0431               	decf	dtoa@p^0,w,c
  5936  002F9E  B0D8               	btfsc	status,0,c
  5937  002FA0  EFD4  F017         	goto	u4211
  5938  002FA4  EFD6  F017         	goto	u4210
  5939  002FA8                     u4211:
  5940  002FA8  EF31  F017         	goto	l3390
  5941  002FAC                     u4210:
  5942  002FAC  BE34               	btfsc	(dtoa@w+1)^0,7,c
  5943  002FAE  EFE1  F017         	goto	u4221
  5944  002FB2  5034               	movf	(dtoa@w+1)^0,w,c
  5945  002FB4  E108               	bnz	u4220
  5946  002FB6  0433               	decf	dtoa@w^0,w,c
  5947  002FB8  A0D8               	btfss	status,0,c
  5948  002FBA  EFE1  F017         	goto	u4221
  5949  002FBE  EFE3  F017         	goto	u4220
  5950  002FC2                     u4221:
  5951  002FC2  EFEB  F017         	goto	l3410
  5952  002FC6                     u4220:
  5953  002FC6  0100               	movlb	0	; () banked
  5954  002FC8  B3F5               	btfsc	_flags& (0+255),1,b
  5955  002FCA  EFE9  F017         	goto	u4231
  5956  002FCE  EFEB  F017         	goto	u4230
  5957  002FD2                     u4231:
  5958  002FD2  EF31  F017         	goto	l3390
  5959  002FD6                     u4230:
  5960  002FD6                     l3410:
  5961                           
  5962                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5963  002FD6  5035               	movf	dtoa@s^0,w,c
  5964  002FD8  1036               	iorwf	(dtoa@s+1)^0,w,c
  5965  002FDA  A4D8               	btfss	status,2,c
  5966  002FDC  EFF2  F017         	goto	u4241
  5967  002FE0  EFF4  F017         	goto	u4240
  5968  002FE4                     u4241:
  5969  002FE4  EFFC  F017         	goto	l3414
  5970  002FE8                     u4240:
  5971  002FE8  0100               	movlb	0	; () banked
  5972  002FEA  A5F5               	btfss	_flags& (0+255),2,b
  5973  002FEC  EFFA  F017         	goto	u4251
  5974  002FF0  EFFC  F017         	goto	u4250
  5975  002FF4                     u4251:
  5976  002FF4  EF1A  F018         	goto	l3424
  5977  002FF8                     u4250:
  5978  002FF8                     l3414:
  5979                           
  5980                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  5981  002FF8  063F               	decf	dtoa@i^0,f,c
  5982  002FFA  A0D8               	btfss	status,0,c
  5983  002FFC  0640               	decf	(dtoa@i+1)^0,f,c
  5984  002FFE                     
  5985                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5986  002FFE  5035               	movf	dtoa@s^0,w,c
  5987  003000  1036               	iorwf	(dtoa@s+1)^0,w,c
  5988  003002  A4D8               	btfss	status,2,c
  5989  003004  EF06  F018         	goto	u4261
  5990  003008  EF08  F018         	goto	u4260
  5991  00300C                     u4261:
  5992  00300C  EF0E  F018         	goto	l3420
  5993  003010                     u4260:
  5994  003010  0E00               	movlw	0
  5995  003012  6E30               	movwf	(_dtoa$1043+1)^0,c
  5996  003014  0E2B               	movlw	43
  5997  003016  6E2F               	movwf	_dtoa$1043^0,c
  5998  003018  EF12  F018         	goto	l3422
  5999  00301C                     l3420:
  6000  00301C  0E00               	movlw	0
  6001  00301E  6E30               	movwf	(_dtoa$1043+1)^0,c
  6002  003020  0E2D               	movlw	45
  6003  003022  6E2F               	movwf	_dtoa$1043^0,c
  6004  003024                     l3422:
  6005  003024  0E00               	movlw	low _dbuf
  6006  003026  243F               	addwf	dtoa@i^0,w,c
  6007  003028  6ED9               	movwf	fsr2l,c
  6008  00302A  0E01               	movlw	high _dbuf
  6009  00302C  2040               	addwfc	(dtoa@i+1)^0,w,c
  6010  00302E  6EDA               	movwf	fsr2h,c
  6011  003030  C02F  FFDF         	movff	_dtoa$1043,indf2
  6012  003034                     l3424:
  6013                           
  6014                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6015  003034  C01D  F012         	movff	dtoa@fp,pad@fp
  6016  003038  C01E  F013         	movff	dtoa@fp+1,pad@fp+1
  6017  00303C  0E00               	movlw	low _dbuf
  6018  00303E  243F               	addwf	dtoa@i^0,w,c
  6019  003040  6E14               	movwf	pad@buf^0,c
  6020  003042  0E01               	movlw	high _dbuf
  6021  003044  2040               	addwfc	(dtoa@i+1)^0,w,c
  6022  003046  6E15               	movwf	(pad@buf+1)^0,c
  6023  003048  C033  F016         	movff	dtoa@w,pad@p
  6024  00304C  C034  F017         	movff	dtoa@w+1,pad@p+1
  6025  003050  EC14  F01F         	call	_pad	;wreg free
  6026  003054  C012  F01D         	movff	?_pad,?_dtoa
  6027  003058  C013  F01E         	movff	?_pad+1,?_dtoa+1
  6028  00305C  0012               	return		;funcret
  6029  00305E                     __end_of_dtoa:
  6030                           	callstack 0
  6031                           
  6032 ;; *************** function _pad *****************
  6033 ;; Defined at:
  6034 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6035 ;; Parameters:    Size  Location     Type
  6036 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  6037 ;;		 -> NULL(0), 
  6038 ;;  buf             2   19[COMRAM] PTR unsigned char 
  6039 ;;		 -> dbuf(80), 
  6040 ;;  p               2   21[COMRAM] int 
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;  w               2   26[COMRAM] int 
  6043 ;;  i               2   24[COMRAM] int 
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  2   17[COMRAM] int 
  6046 ;; Registers used:
  6047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6053 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6054 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6055 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6056 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6057 ;;Total ram usage:       11 bytes
  6058 ;; Hardware stack levels used: 1
  6059 ;; Hardware stack levels required when called: 3
  6060 ;; This function calls:
  6061 ;;		_fputc
  6062 ;;		_fputs
  6063 ;;		_strlen
  6064 ;; This function is called by:
  6065 ;;		_dtoa
  6066 ;;		_efgtoa
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           	psect	text18
  6071  003E28                     __ptext18:
  6072                           	callstack 0
  6073  003E28                     _pad:
  6074                           	callstack 23
  6075  003E28                     
  6076                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6077  003E28  0100               	movlb	0	; () banked
  6078  003E2A  A1F5               	btfss	_flags& (0+255),0,b
  6079  003E2C  EF1A  F01F         	goto	u3851
  6080  003E30  EF1C  F01F         	goto	u3850
  6081  003E34                     u3851:
  6082  003E34  EF26  F01F         	goto	l3280
  6083  003E38                     u3850:
  6084  003E38                     
  6085                           ; BSR set to: 0
  6086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6087  003E38  C014  F00B         	movff	pad@buf,fputs@s
  6088  003E3C  C015  F00C         	movff	pad@buf+1,fputs@s+1
  6089  003E40  C012  F00D         	movff	pad@fp,fputs@fp
  6090  003E44  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  6091  003E48  EC1A  F023         	call	_fputs	;wreg free
  6092  003E4C                     l3280:
  6093                           
  6094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6095  003E4C  BE17               	btfsc	(pad@p+1)^0,7,c
  6096  003E4E  EF2B  F01F         	goto	u3861
  6097  003E52  EF2D  F01F         	goto	u3860
  6098  003E56                     u3861:
  6099  003E56  EF33  F01F         	goto	l3284
  6100  003E5A                     u3860:
  6101  003E5A  C016  F01B         	movff	pad@p,pad@w
  6102  003E5E  C017  F01C         	movff	pad@p+1,pad@w+1
  6103  003E62  EF37  F01F         	goto	l797
  6104  003E66                     l3284:
  6105  003E66  0E00               	movlw	0
  6106  003E68  6E1C               	movwf	(pad@w+1)^0,c
  6107  003E6A  0E00               	movlw	0
  6108  003E6C  6E1B               	movwf	pad@w^0,c
  6109  003E6E                     l797:
  6110                           
  6111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6112  003E6E  0E00               	movlw	0
  6113  003E70  6E1A               	movwf	(pad@i+1)^0,c
  6114  003E72  0E00               	movlw	0
  6115  003E74  6E19               	movwf	pad@i^0,c
  6116                           
  6117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6118  003E76  EF49  F01F         	goto	l3290
  6119  003E7A                     l3286:
  6120                           
  6121                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6122  003E7A  0E00               	movlw	0
  6123  003E7C  6E03               	movwf	(fputc@c+1)^0,c
  6124  003E7E  0E20               	movlw	32
  6125  003E80  6E02               	movwf	fputc@c^0,c
  6126  003E82  C012  F004         	movff	pad@fp,fputc@fp
  6127  003E86  C013  F005         	movff	pad@fp+1,fputc@fp+1
  6128  003E8A  EC32  F021         	call	_fputc	;wreg free
  6129  003E8E                     
  6130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6131  003E8E  4A19               	infsnz	pad@i^0,f,c
  6132  003E90  2A1A               	incf	(pad@i+1)^0,f,c
  6133  003E92                     l3290:
  6134                           
  6135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6136  003E92  501B               	movf	pad@w^0,w,c
  6137  003E94  5C19               	subwf	pad@i^0,w,c
  6138  003E96  501A               	movf	(pad@i+1)^0,w,c
  6139  003E98  0A80               	xorlw	128
  6140  003E9A  6E18               	movwf	??_pad^0,c
  6141  003E9C  501C               	movf	(pad@w+1)^0,w,c
  6142  003E9E  0A80               	xorlw	128
  6143  003EA0  5818               	subwfb	??_pad^0,w,c
  6144  003EA2  A0D8               	btfss	status,0,c
  6145  003EA4  EF56  F01F         	goto	u3871
  6146  003EA8  EF58  F01F         	goto	u3870
  6147  003EAC                     u3871:
  6148  003EAC  EF3D  F01F         	goto	l3286
  6149  003EB0                     u3870:
  6150  003EB0                     
  6151                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6152  003EB0  0100               	movlb	0	; () banked
  6153  003EB2  B1F5               	btfsc	_flags& (0+255),0,b
  6154  003EB4  EF5E  F01F         	goto	u3881
  6155  003EB8  EF60  F01F         	goto	u3880
  6156  003EBC                     u3881:
  6157  003EBC  EF6A  F01F         	goto	l3294
  6158  003EC0                     u3880:
  6159  003EC0                     
  6160                           ; BSR set to: 0
  6161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6162  003EC0  C014  F00B         	movff	pad@buf,fputs@s
  6163  003EC4  C015  F00C         	movff	pad@buf+1,fputs@s+1
  6164  003EC8  C012  F00D         	movff	pad@fp,fputs@fp
  6165  003ECC  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  6166  003ED0  EC1A  F023         	call	_fputs	;wreg free
  6167  003ED4                     l3294:
  6168                           
  6169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6170  003ED4  C014  F001         	movff	pad@buf,strlen@s
  6171  003ED8  C015  F002         	movff	pad@buf+1,strlen@s+1
  6172  003EDC  EC94  F023         	call	_strlen	;wreg free
  6173  003EE0  501B               	movf	pad@w^0,w,c
  6174  003EE2  2401               	addwf	?_strlen^0,w,c
  6175  003EE4  6E12               	movwf	?_pad^0,c
  6176  003EE6  501C               	movf	(pad@w+1)^0,w,c
  6177  003EE8  2002               	addwfc	(?_strlen+1)^0,w,c
  6178  003EEA  6E13               	movwf	(?_pad+1)^0,c
  6179  003EEC  0012               	return		;funcret
  6180  003EEE                     __end_of_pad:
  6181                           	callstack 0
  6182                           
  6183 ;; *************** function _strlen *****************
  6184 ;; Defined at:
  6185 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  6186 ;; Parameters:    Size  Location     Type
  6187 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6188 ;;		 -> dbuf(80), 
  6189 ;; Auto vars:     Size  Location     Type
  6190 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6191 ;;		 -> dbuf(80), 
  6192 ;; Return value:  Size  Location     Type
  6193 ;;                  2    0[COMRAM] unsigned int 
  6194 ;; Registers used:
  6195 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6201 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6202 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6204 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6205 ;;Total ram usage:        4 bytes
  6206 ;; Hardware stack levels used: 1
  6207 ;; This function calls:
  6208 ;;		Nothing
  6209 ;; This function is called by:
  6210 ;;		_pad
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214                           	psect	text19
  6215  004728                     __ptext19:
  6216                           	callstack 0
  6217  004728                     _strlen:
  6218                           	callstack 25
  6219  004728  C001  F003         	movff	strlen@s,strlen@a
  6220  00472C  C002  F004         	movff	strlen@s+1,strlen@a+1
  6221  004730  EF9C  F023         	goto	l2742
  6222  004734                     l2740:
  6223  004734  4A01               	infsnz	strlen@s^0,f,c
  6224  004736  2A02               	incf	(strlen@s+1)^0,f,c
  6225  004738                     l2742:
  6226  004738  C001  FFD9         	movff	strlen@s,fsr2l
  6227  00473C  C002  FFDA         	movff	strlen@s+1,fsr2h
  6228  004740  50DF               	movf	indf2,w,c
  6229  004742  A4D8               	btfss	status,2,c
  6230  004744  EFA6  F023         	goto	u2991
  6231  004748  EFA8  F023         	goto	u2990
  6232  00474C                     u2991:
  6233  00474C  EF9A  F023         	goto	l2740
  6234  004750                     u2990:
  6235  004750  5003               	movf	strlen@a^0,w,c
  6236  004752  5C01               	subwf	strlen@s^0,w,c
  6237  004754  6E01               	movwf	?_strlen^0,c
  6238  004756  5004               	movf	(strlen@a+1)^0,w,c
  6239  004758  5802               	subwfb	(strlen@s+1)^0,w,c
  6240  00475A  6E02               	movwf	(?_strlen+1)^0,c
  6241  00475C  0012               	return		;funcret
  6242  00475E                     __end_of_strlen:
  6243                           	callstack 0
  6244                           
  6245 ;; *************** function _fputs *****************
  6246 ;; Defined at:
  6247 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;  s               2   10[COMRAM] PTR const unsigned char 
  6250 ;;		 -> dbuf(80), 
  6251 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  6252 ;;		 -> NULL(0), 
  6253 ;; Auto vars:     Size  Location     Type
  6254 ;;  i               2   15[COMRAM] int 
  6255 ;;  c               1   14[COMRAM] unsigned char 
  6256 ;; Return value:  Size  Location     Type
  6257 ;;                  2   10[COMRAM] int 
  6258 ;; Registers used:
  6259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6260 ;; Tracked objects:
  6261 ;;		On entry : 0/0
  6262 ;;		On exit  : 0/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6265 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6266 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6268 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6269 ;;Total ram usage:        7 bytes
  6270 ;; Hardware stack levels used: 1
  6271 ;; Hardware stack levels required when called: 2
  6272 ;; This function calls:
  6273 ;;		_fputc
  6274 ;; This function is called by:
  6275 ;;		_pad
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           	psect	text20
  6280  004634                     __ptext20:
  6281                           	callstack 0
  6282  004634                     _fputs:
  6283                           	callstack 23
  6284  004634  0E00               	movlw	0
  6285  004636  6E11               	movwf	(fputs@i+1)^0,c
  6286  004638  0E00               	movlw	0
  6287  00463A  6E10               	movwf	fputs@i^0,c
  6288  00463C  EF2B  F023         	goto	l2736
  6289  004640                     l2732:
  6290  004640  C00F  F002         	movff	fputs@c,fputc@c
  6291  004644  6A03               	clrf	(fputc@c+1)^0,c
  6292  004646  C00D  F004         	movff	fputs@fp,fputc@fp
  6293  00464A  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  6294  00464E  EC32  F021         	call	_fputc	;wreg free
  6295  004652  4A10               	infsnz	fputs@i^0,f,c
  6296  004654  2A11               	incf	(fputs@i+1)^0,f,c
  6297  004656                     l2736:
  6298  004656  5010               	movf	fputs@i^0,w,c
  6299  004658  240B               	addwf	fputs@s^0,w,c
  6300  00465A  6ED9               	movwf	fsr2l,c
  6301  00465C  5011               	movf	(fputs@i+1)^0,w,c
  6302  00465E  200C               	addwfc	(fputs@s+1)^0,w,c
  6303  004660  6EDA               	movwf	fsr2h,c
  6304  004662  50DF               	movf	indf2,w,c
  6305  004664  6E0F               	movwf	fputs@c^0,c
  6306  004666  500F               	movf	fputs@c^0,w,c
  6307  004668  A4D8               	btfss	status,2,c
  6308  00466A  EF39  F023         	goto	u2981
  6309  00466E  EF3B  F023         	goto	u2980
  6310  004672                     u2981:
  6311  004672  EF20  F023         	goto	l2732
  6312  004676                     u2980:
  6313  004676  0012               	return		;funcret
  6314  004678                     __end_of_fputs:
  6315                           	callstack 0
  6316                           
  6317 ;; *************** function _fputc *****************
  6318 ;; Defined at:
  6319 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  6320 ;; Parameters:    Size  Location     Type
  6321 ;;  c               2    1[COMRAM] int 
  6322 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  6323 ;;		 -> NULL(0), 
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;		None
  6326 ;; Return value:  Size  Location     Type
  6327 ;;                  2    1[COMRAM] int 
  6328 ;; Registers used:
  6329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6335 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6337 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6338 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6339 ;;Total ram usage:        9 bytes
  6340 ;; Hardware stack levels used: 1
  6341 ;; Hardware stack levels required when called: 1
  6342 ;; This function calls:
  6343 ;;		_putch
  6344 ;; This function is called by:
  6345 ;;		_pad
  6346 ;;		_vfpfcnvrt
  6347 ;;		_fputs
  6348 ;; This function uses a non-reentrant model
  6349 ;;
  6350                           
  6351                           	psect	text21
  6352  004264                     __ptext21:
  6353                           	callstack 0
  6354  004264                     _fputc:
  6355                           	callstack 26
  6356  004264  5004               	movf	fputc@fp^0,w,c
  6357  004266  1005               	iorwf	(fputc@fp+1)^0,w,c
  6358  004268  B4D8               	btfsc	status,2,c
  6359  00426A  EF39  F021         	goto	u2551
  6360  00426E  EF3B  F021         	goto	u2550
  6361  004272                     u2551:
  6362  004272  EF44  F021         	goto	l2518
  6363  004276                     u2550:
  6364  004276  5004               	movf	fputc@fp^0,w,c
  6365  004278  1005               	iorwf	(fputc@fp+1)^0,w,c
  6366  00427A  A4D8               	btfss	status,2,c
  6367  00427C  EF42  F021         	goto	u2561
  6368  004280  EF44  F021         	goto	u2560
  6369  004284                     u2561:
  6370  004284  EF49  F021         	goto	l2520
  6371  004288                     u2560:
  6372  004288                     l2518:
  6373  004288  5002               	movf	fputc@c^0,w,c
  6374  00428A  EC0D  F024         	call	_putch
  6375  00428E  EF7C  F021         	goto	l994
  6376  004292                     l2520:
  6377  004292  EE20 F004          	lfsr	2,4
  6378  004296  5004               	movf	fputc@fp^0,w,c
  6379  004298  26D9               	addwf	fsr2l,f,c
  6380  00429A  5005               	movf	(fputc@fp+1)^0,w,c
  6381  00429C  22DA               	addwfc	fsr2h,f,c
  6382  00429E  50DE               	movf	postinc2,w,c
  6383  0042A0  10DE               	iorwf	postinc2,w,c
  6384  0042A2  B4D8               	btfsc	status,2,c
  6385  0042A4  EF56  F021         	goto	u2571
  6386  0042A8  EF58  F021         	goto	u2570
  6387  0042AC                     u2571:
  6388  0042AC  EF73  F021         	goto	l2524
  6389  0042B0                     u2570:
  6390  0042B0  EE20 F004          	lfsr	2,4
  6391  0042B4  5004               	movf	fputc@fp^0,w,c
  6392  0042B6  26D9               	addwf	fsr2l,f,c
  6393  0042B8  5005               	movf	(fputc@fp+1)^0,w,c
  6394  0042BA  22DA               	addwfc	fsr2h,f,c
  6395  0042BC  EE10 F002          	lfsr	1,2
  6396  0042C0  5004               	movf	fputc@fp^0,w,c
  6397  0042C2  26E1               	addwf	fsr1l,f,c
  6398  0042C4  5005               	movf	(fputc@fp+1)^0,w,c
  6399  0042C6  22E2               	addwfc	fsr1h,f,c
  6400  0042C8  50DE               	movf	postinc2,w,c
  6401  0042CA  5CE6               	subwf	postinc1,w,c
  6402  0042CC  50E6               	movf	postinc1,w,c
  6403  0042CE  0A80               	xorlw	128
  6404  0042D0  6E0A               	movwf	(??_fputc+4)^0,c
  6405  0042D2  50DE               	movf	postinc2,w,c
  6406  0042D4  0A80               	xorlw	128
  6407  0042D6  580A               	subwfb	(??_fputc+4)^0,w,c
  6408  0042D8  B0D8               	btfsc	status,0,c
  6409  0042DA  EF71  F021         	goto	u2581
  6410  0042DE  EF73  F021         	goto	u2580
  6411  0042E2                     u2581:
  6412  0042E2  EF7C  F021         	goto	l994
  6413  0042E6                     u2580:
  6414  0042E6                     l2524:
  6415  0042E6  EE20 F002          	lfsr	2,2
  6416  0042EA  5004               	movf	fputc@fp^0,w,c
  6417  0042EC  26D9               	addwf	fsr2l,f,c
  6418  0042EE  5005               	movf	(fputc@fp+1)^0,w,c
  6419  0042F0  22DA               	addwfc	fsr2h,f,c
  6420  0042F2  2ADE               	incf	postinc2,f,c
  6421  0042F4  0E00               	movlw	0
  6422  0042F6  22DD               	addwfc	postdec2,f,c
  6423  0042F8                     l994:
  6424  0042F8  0012               	return		;funcret
  6425  0042FA                     __end_of_fputc:
  6426                           	callstack 0
  6427                           
  6428 ;; *************** function _putch *****************
  6429 ;; Defined at:
  6430 ;;		line 57 in file "main.c"
  6431 ;; Parameters:    Size  Location     Type
  6432 ;;  data            1    wreg     unsigned char 
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;  data            1    0[COMRAM] unsigned char 
  6435 ;; Return value:  Size  Location     Type
  6436 ;;                  1    wreg      void 
  6437 ;; Registers used:
  6438 ;;		wreg
  6439 ;; Tracked objects:
  6440 ;;		On entry : 0/0
  6441 ;;		On exit  : 0/0
  6442 ;;		Unchanged: 0/0
  6443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6445 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6447 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6448 ;;Total ram usage:        1 bytes
  6449 ;; Hardware stack levels used: 1
  6450 ;; This function calls:
  6451 ;;		Nothing
  6452 ;; This function is called by:
  6453 ;;		_fputc
  6454 ;; This function uses a non-reentrant model
  6455 ;;
  6456                           
  6457                           	psect	text22
  6458  00481A                     __ptext22:
  6459                           	callstack 0
  6460  00481A                     _putch:
  6461                           	callstack 26
  6462                           
  6463                           ;incstack = 0
  6464                           ;putch@data stored from wreg
  6465  00481A  6E01               	movwf	putch@data^0,c
  6466  00481C                     l38:
  6467  00481C  A89E               	btfss	3998,4,c	;volatile
  6468  00481E  EF13  F024         	goto	u2541
  6469  004822  EF15  F024         	goto	u2540
  6470  004826                     u2541:
  6471  004826  EF0E  F024         	goto	l38
  6472  00482A                     u2540:
  6473  00482A                     
  6474                           ;main.c: 59:     TXREG1 = data;
  6475  00482A  C001  FFAD         	movff	putch@data,4013	;volatile
  6476  00482E  0012               	return		;funcret
  6477  004830                     __end_of_putch:
  6478                           	callstack 0
  6479                           
  6480 ;; *************** function _abs *****************
  6481 ;; Defined at:
  6482 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;  a               2   18[COMRAM] int 
  6485 ;; Auto vars:     Size  Location     Type
  6486 ;;		None
  6487 ;; Return value:  Size  Location     Type
  6488 ;;                  2   18[COMRAM] int 
  6489 ;; Registers used:
  6490 ;;		wreg, status,2, status,0
  6491 ;; Tracked objects:
  6492 ;;		On entry : 0/0
  6493 ;;		On exit  : 0/0
  6494 ;;		Unchanged: 0/0
  6495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6496 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6498 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6499 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6500 ;;Total ram usage:        4 bytes
  6501 ;; Hardware stack levels used: 1
  6502 ;; This function calls:
  6503 ;;		Nothing
  6504 ;; This function is called by:
  6505 ;;		_dtoa
  6506 ;; This function uses a non-reentrant model
  6507 ;;
  6508                           
  6509                           	psect	text23
  6510  004678                     __ptext23:
  6511                           	callstack 0
  6512  004678                     _abs:
  6513                           	callstack 26
  6514  004678  BE14               	btfsc	(abs@a+1)^0,7,c
  6515  00467A  EF49  F023         	goto	u3890
  6516  00467E  5014               	movf	(abs@a+1)^0,w,c
  6517  004680  E106               	bnz	u3891
  6518  004682  0413               	decf	abs@a^0,w,c
  6519  004684  B0D8               	btfsc	status,0,c
  6520  004686  EF47  F023         	goto	u3891
  6521  00468A  EF49  F023         	goto	u3890
  6522  00468E                     u3891:
  6523  00468E  EF57  F023         	goto	l960
  6524  004692                     u3890:
  6525  004692  C013  F015         	movff	abs@a,??_abs
  6526  004696  C014  F016         	movff	abs@a+1,??_abs+1
  6527  00469A  1E15               	comf	??_abs^0,f,c
  6528  00469C  1E16               	comf	(??_abs+1)^0,f,c
  6529  00469E  4A15               	infsnz	??_abs^0,f,c
  6530  0046A0  2A16               	incf	(??_abs+1)^0,f,c
  6531  0046A2  C015  F013         	movff	??_abs,?_abs
  6532  0046A6  C016  F014         	movff	??_abs+1,?_abs+1
  6533  0046AA  EF5B  F023         	goto	l963
  6534  0046AE                     l960:
  6535  0046AE  C013  F013         	movff	abs@a,?_abs
  6536  0046B2  C014  F014         	movff	abs@a+1,?_abs+1
  6537  0046B6                     l963:
  6538  0046B6  0012               	return		;funcret
  6539  0046B8                     __end_of_abs:
  6540                           	callstack 0
  6541                           
  6542 ;; *************** function ___aomod *****************
  6543 ;; Defined at:
  6544 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;  dividend        8    0[COMRAM] long long 
  6547 ;;  divisor         8    8[COMRAM] long long 
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;  sign            1   17[COMRAM] unsigned char 
  6550 ;;  counter         1   16[COMRAM] unsigned char 
  6551 ;; Return value:  Size  Location     Type
  6552 ;;                  8    0[COMRAM] long long 
  6553 ;; Registers used:
  6554 ;;		wreg, status,2, status,0
  6555 ;; Tracked objects:
  6556 ;;		On entry : 0/0
  6557 ;;		On exit  : 0/0
  6558 ;;		Unchanged: 0/0
  6559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6560 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6561 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6563 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6564 ;;Total ram usage:       18 bytes
  6565 ;; Hardware stack levels used: 1
  6566 ;; This function calls:
  6567 ;;		Nothing
  6568 ;; This function is called by:
  6569 ;;		_dtoa
  6570 ;; This function uses a non-reentrant model
  6571 ;;
  6572                           
  6573                           	psect	text24
  6574  0038E6                     __ptext24:
  6575                           	callstack 0
  6576  0038E6                     ___aomod:
  6577                           	callstack 26
  6578  0038E6  0E00               	movlw	0
  6579  0038E8  6E12               	movwf	___aomod@sign^0,c
  6580  0038EA  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6581  0038EC  EF7C  F01C         	goto	u3090
  6582  0038F0  EF7A  F01C         	goto	u3091
  6583  0038F4                     u3091:
  6584  0038F4  EF8E  F01C         	goto	l2804
  6585  0038F8                     u3090:
  6586  0038F8  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6587  0038FA  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6588  0038FC  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6589  0038FE  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6590  003900  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6591  003902  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6592  003904  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6593  003906  6C01               	negf	___aomod@dividend^0,c
  6594  003908  0E00               	movlw	0
  6595  00390A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6596  00390C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6597  00390E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6598  003910  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6599  003912  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6600  003914  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6601  003916  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6602  003918  0E01               	movlw	1
  6603  00391A  6E12               	movwf	___aomod@sign^0,c
  6604  00391C                     l2804:
  6605  00391C  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6606  00391E  EF95  F01C         	goto	u3100
  6607  003922  EF93  F01C         	goto	u3101
  6608  003926                     u3101:
  6609  003926  EFA5  F01C         	goto	l2808
  6610  00392A                     u3100:
  6611  00392A  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6612  00392C  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6613  00392E  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6614  003930  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6615  003932  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6616  003934  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6617  003936  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6618  003938  6C09               	negf	___aomod@divisor^0,c
  6619  00393A  0E00               	movlw	0
  6620  00393C  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6621  00393E  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6622  003940  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6623  003942  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6624  003944  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6625  003946  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6626  003948  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6627  00394A                     l2808:
  6628  00394A  5009               	movf	___aomod@divisor^0,w,c
  6629  00394C  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6630  00394E  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6631  003950  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6632  003952  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6633  003954  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6634  003956  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6635  003958  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6636  00395A  B4D8               	btfsc	status,2,c
  6637  00395C  EFB2  F01C         	goto	u3111
  6638  003960  EFB4  F01C         	goto	u3110
  6639  003964                     u3111:
  6640  003964  EFFC  F01C         	goto	l2824
  6641  003968                     u3110:
  6642  003968  0E01               	movlw	1
  6643  00396A  6E11               	movwf	___aomod@counter^0,c
  6644  00396C  EFC2  F01C         	goto	l2814
  6645  003970                     l2812:
  6646  003970  90D8               	bcf	status,0,c
  6647  003972  3609               	rlcf	___aomod@divisor^0,f,c
  6648  003974  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6649  003976  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6650  003978  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6651  00397A  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6652  00397C  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6653  00397E  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6654  003980  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6655  003982  2A11               	incf	___aomod@counter^0,f,c
  6656  003984                     l2814:
  6657  003984  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6658  003986  EFC7  F01C         	goto	u3121
  6659  00398A  EFC9  F01C         	goto	u3120
  6660  00398E                     u3121:
  6661  00398E  EFB8  F01C         	goto	l2812
  6662  003992                     u3120:
  6663  003992                     l2816:
  6664  003992  5009               	movf	___aomod@divisor^0,w,c
  6665  003994  5C01               	subwf	___aomod@dividend^0,w,c
  6666  003996  500A               	movf	(___aomod@divisor+1)^0,w,c
  6667  003998  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6668  00399A  500B               	movf	(___aomod@divisor+2)^0,w,c
  6669  00399C  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6670  00399E  500C               	movf	(___aomod@divisor+3)^0,w,c
  6671  0039A0  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6672  0039A2  500D               	movf	(___aomod@divisor+4)^0,w,c
  6673  0039A4  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6674  0039A6  500E               	movf	(___aomod@divisor+5)^0,w,c
  6675  0039A8  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6676  0039AA  500F               	movf	(___aomod@divisor+6)^0,w,c
  6677  0039AC  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6678  0039AE  5010               	movf	(___aomod@divisor+7)^0,w,c
  6679  0039B0  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6680  0039B2  A0D8               	btfss	status,0,c
  6681  0039B4  EFDE  F01C         	goto	u3131
  6682  0039B8  EFE0  F01C         	goto	u3130
  6683  0039BC                     u3131:
  6684  0039BC  EFF0  F01C         	goto	l2820
  6685  0039C0                     u3130:
  6686  0039C0  5009               	movf	___aomod@divisor^0,w,c
  6687  0039C2  5E01               	subwf	___aomod@dividend^0,f,c
  6688  0039C4  500A               	movf	(___aomod@divisor+1)^0,w,c
  6689  0039C6  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6690  0039C8  500B               	movf	(___aomod@divisor+2)^0,w,c
  6691  0039CA  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6692  0039CC  500C               	movf	(___aomod@divisor+3)^0,w,c
  6693  0039CE  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6694  0039D0  500D               	movf	(___aomod@divisor+4)^0,w,c
  6695  0039D2  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6696  0039D4  500E               	movf	(___aomod@divisor+5)^0,w,c
  6697  0039D6  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6698  0039D8  500F               	movf	(___aomod@divisor+6)^0,w,c
  6699  0039DA  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6700  0039DC  5010               	movf	(___aomod@divisor+7)^0,w,c
  6701  0039DE  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6702  0039E0                     l2820:
  6703  0039E0  90D8               	bcf	status,0,c
  6704  0039E2  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6705  0039E4  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6706  0039E6  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6707  0039E8  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6708  0039EA  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6709  0039EC  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6710  0039EE  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6711  0039F0  3209               	rrcf	___aomod@divisor^0,f,c
  6712  0039F2  2E11               	decfsz	___aomod@counter^0,f,c
  6713  0039F4  EFC9  F01C         	goto	l2816
  6714  0039F8                     l2824:
  6715  0039F8  5012               	movf	___aomod@sign^0,w,c
  6716  0039FA  B4D8               	btfsc	status,2,c
  6717  0039FC  EF02  F01D         	goto	u3141
  6718  003A00  EF04  F01D         	goto	u3140
  6719  003A04                     u3141:
  6720  003A04  EF14  F01D         	goto	l2828
  6721  003A08                     u3140:
  6722  003A08  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6723  003A0A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6724  003A0C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6725  003A0E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6726  003A10  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6727  003A12  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6728  003A14  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6729  003A16  6C01               	negf	___aomod@dividend^0,c
  6730  003A18  0E00               	movlw	0
  6731  003A1A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6732  003A1C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6733  003A1E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6734  003A20  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6735  003A22  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6736  003A24  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6737  003A26  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6738  003A28                     l2828:
  6739  003A28  C001  F001         	movff	___aomod@dividend,?___aomod
  6740  003A2C  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6741  003A30  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6742  003A34  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6743  003A38  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6744  003A3C  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6745  003A40  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6746  003A44  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6747  003A48  0012               	return		;funcret
  6748  003A4A                     __end_of___aomod:
  6749                           	callstack 0
  6750                           
  6751 ;; *************** function ___aodiv *****************
  6752 ;; Defined at:
  6753 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  6754 ;; Parameters:    Size  Location     Type
  6755 ;;  dividend        8    0[COMRAM] long long 
  6756 ;;  divisor         8    8[COMRAM] long long 
  6757 ;; Auto vars:     Size  Location     Type
  6758 ;;  quotient        8   18[COMRAM] long long 
  6759 ;;  sign            1   17[COMRAM] unsigned char 
  6760 ;;  counter         1   16[COMRAM] unsigned char 
  6761 ;; Return value:  Size  Location     Type
  6762 ;;                  8    0[COMRAM] long long 
  6763 ;; Registers used:
  6764 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6765 ;; Tracked objects:
  6766 ;;		On entry : 0/0
  6767 ;;		On exit  : 0/0
  6768 ;;		Unchanged: 0/0
  6769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6770 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6771 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6773 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6774 ;;Total ram usage:       26 bytes
  6775 ;; Hardware stack levels used: 1
  6776 ;; This function calls:
  6777 ;;		Nothing
  6778 ;; This function is called by:
  6779 ;;		_dtoa
  6780 ;; This function uses a non-reentrant model
  6781 ;;
  6782                           
  6783                           	psect	text25
  6784  00375E                     __ptext25:
  6785                           	callstack 0
  6786  00375E                     ___aodiv:
  6787                           	callstack 26
  6788  00375E  0E00               	movlw	0
  6789  003760  6E12               	movwf	___aodiv@sign^0,c
  6790  003762  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6791  003764  EFB8  F01B         	goto	u3020
  6792  003768  EFB6  F01B         	goto	u3021
  6793  00376C                     u3021:
  6794  00376C  EFCA  F01B         	goto	l2760
  6795  003770                     u3020:
  6796  003770  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6797  003772  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6798  003774  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6799  003776  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6800  003778  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6801  00377A  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6802  00377C  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6803  00377E  6C09               	negf	___aodiv@divisor^0,c
  6804  003780  0E00               	movlw	0
  6805  003782  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6806  003784  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6807  003786  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6808  003788  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6809  00378A  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6810  00378C  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6811  00378E  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6812  003790  0E01               	movlw	1
  6813  003792  6E12               	movwf	___aodiv@sign^0,c
  6814  003794                     l2760:
  6815  003794  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6816  003796  EFD1  F01B         	goto	u3030
  6817  00379A  EFCF  F01B         	goto	u3031
  6818  00379E                     u3031:
  6819  00379E  EFE3  F01B         	goto	l2766
  6820  0037A2                     u3030:
  6821  0037A2  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6822  0037A4  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6823  0037A6  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6824  0037A8  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6825  0037AA  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6826  0037AC  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6827  0037AE  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6828  0037B0  6C01               	negf	___aodiv@dividend^0,c
  6829  0037B2  0E00               	movlw	0
  6830  0037B4  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6831  0037B6  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6832  0037B8  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6833  0037BA  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6834  0037BC  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6835  0037BE  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6836  0037C0  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6837  0037C2  0E01               	movlw	1
  6838  0037C4  1A12               	xorwf	___aodiv@sign^0,f,c
  6839  0037C6                     l2766:
  6840  0037C6  EE20  F013         	lfsr	2,___aodiv@quotient
  6841  0037CA  0E07               	movlw	7
  6842  0037CC                     u3041:
  6843  0037CC  6ADE               	clrf	postinc2,c
  6844  0037CE  06E8               	decf	wreg,f,c
  6845  0037D0  E2FD               	bc	u3041
  6846  0037D2  5009               	movf	___aodiv@divisor^0,w,c
  6847  0037D4  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6848  0037D6  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6849  0037D8  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6850  0037DA  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6851  0037DC  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6852  0037DE  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6853  0037E0  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6854  0037E2  B4D8               	btfsc	status,2,c
  6855  0037E4  EFF6  F01B         	goto	u3051
  6856  0037E8  EFF8  F01B         	goto	u3050
  6857  0037EC                     u3051:
  6858  0037EC  EF4A  F01C         	goto	l2788
  6859  0037F0                     u3050:
  6860  0037F0  0E01               	movlw	1
  6861  0037F2  6E11               	movwf	___aodiv@counter^0,c
  6862  0037F4  EF06  F01C         	goto	l2774
  6863  0037F8                     l2772:
  6864  0037F8  90D8               	bcf	status,0,c
  6865  0037FA  3609               	rlcf	___aodiv@divisor^0,f,c
  6866  0037FC  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6867  0037FE  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6868  003800  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6869  003802  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6870  003804  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6871  003806  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6872  003808  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6873  00380A  2A11               	incf	___aodiv@counter^0,f,c
  6874  00380C                     l2774:
  6875  00380C  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6876  00380E  EF0B  F01C         	goto	u3061
  6877  003812  EF0D  F01C         	goto	u3060
  6878  003816                     u3061:
  6879  003816  EFFC  F01B         	goto	l2772
  6880  00381A                     u3060:
  6881  00381A                     l2776:
  6882  00381A  90D8               	bcf	status,0,c
  6883  00381C  3613               	rlcf	___aodiv@quotient^0,f,c
  6884  00381E  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6885  003820  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6886  003822  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6887  003824  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6888  003826  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6889  003828  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6890  00382A  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6891  00382C  5009               	movf	___aodiv@divisor^0,w,c
  6892  00382E  5C01               	subwf	___aodiv@dividend^0,w,c
  6893  003830  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6894  003832  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6895  003834  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6896  003836  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6897  003838  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6898  00383A  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6899  00383C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6900  00383E  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6901  003840  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6902  003842  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6903  003844  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6904  003846  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6905  003848  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6906  00384A  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6907  00384C  A0D8               	btfss	status,0,c
  6908  00384E  EF2B  F01C         	goto	u3071
  6909  003852  EF2D  F01C         	goto	u3070
  6910  003856                     u3071:
  6911  003856  EF3E  F01C         	goto	l2784
  6912  00385A                     u3070:
  6913  00385A  5009               	movf	___aodiv@divisor^0,w,c
  6914  00385C  5E01               	subwf	___aodiv@dividend^0,f,c
  6915  00385E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6916  003860  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6917  003862  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6918  003864  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6919  003866  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6920  003868  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6921  00386A  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6922  00386C  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6923  00386E  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6924  003870  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6925  003872  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6926  003874  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6927  003876  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6928  003878  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6929  00387A  8013               	bsf	___aodiv@quotient^0,0,c
  6930  00387C                     l2784:
  6931  00387C  90D8               	bcf	status,0,c
  6932  00387E  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6933  003880  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6934  003882  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6935  003884  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6936  003886  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6937  003888  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6938  00388A  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6939  00388C  3209               	rrcf	___aodiv@divisor^0,f,c
  6940  00388E  2E11               	decfsz	___aodiv@counter^0,f,c
  6941  003890  EF0D  F01C         	goto	l2776
  6942  003894                     l2788:
  6943  003894  5012               	movf	___aodiv@sign^0,w,c
  6944  003896  B4D8               	btfsc	status,2,c
  6945  003898  EF50  F01C         	goto	u3081
  6946  00389C  EF52  F01C         	goto	u3080
  6947  0038A0                     u3081:
  6948  0038A0  EF62  F01C         	goto	l2792
  6949  0038A4                     u3080:
  6950  0038A4  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6951  0038A6  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6952  0038A8  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6953  0038AA  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6954  0038AC  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6955  0038AE  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6956  0038B0  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6957  0038B2  6C13               	negf	___aodiv@quotient^0,c
  6958  0038B4  0E00               	movlw	0
  6959  0038B6  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6960  0038B8  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6961  0038BA  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6962  0038BC  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6963  0038BE  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6964  0038C0  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6965  0038C2  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6966  0038C4                     l2792:
  6967  0038C4  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6968  0038C8  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6969  0038CC  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6970  0038D0  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6971  0038D4  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6972  0038D8  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6973  0038DC  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6974  0038E0  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6975  0038E4  0012               	return		;funcret
  6976  0038E6                     __end_of___aodiv:
  6977                           	callstack 0
  6978                           
  6979 ;; *************** function _pid_step *****************
  6980 ;; Defined at:
  6981 ;;		line 19 in file "pid.c"
  6982 ;; Parameters:    Size  Location     Type
  6983 ;;  self            2   49[COMRAM] const PTR struct .
  6984 ;;		 -> main@pid1(24), 
  6985 ;;  setpoint        4   51[COMRAM] float 
  6986 ;;  feedback        4   55[COMRAM] float 
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;  action          4   71[COMRAM] float 
  6989 ;;  err             4   67[COMRAM] float 
  6990 ;;  kgain           4   59[COMRAM] float 
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  4   49[COMRAM] float 
  6993 ;; Registers used:
  6994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7000 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7001 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7003 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7004 ;;Total ram usage:       26 bytes
  7005 ;; Hardware stack levels used: 1
  7006 ;; Hardware stack levels required when called: 2
  7007 ;; This function calls:
  7008 ;;		___fladd
  7009 ;;		___flge
  7010 ;;		___flmul
  7011 ;;		___flsub
  7012 ;; This function is called by:
  7013 ;;		_main
  7014 ;; This function uses a non-reentrant model
  7015 ;;
  7016                           
  7017                           	psect	text26
  7018  003312                     __ptext26:
  7019                           	callstack 0
  7020  003312                     _pid_step:
  7021                           	callstack 28
  7022  003312                     
  7023                           ;pid.c: 19: float pid_step( stPID * const self,;pid.c: 20:                     float set
      +                          point,;pid.c: 21:                     float feedback){;pid.c: 23:     float err = setpoi
      +                          nt - feedback;
  7024  003312  C034  F02A         	movff	pid_step@setpoint,___flsub@b
  7025  003316  C035  F02B         	movff	pid_step@setpoint+1,___flsub@b+1
  7026  00331A  C036  F02C         	movff	pid_step@setpoint+2,___flsub@b+2
  7027  00331E  C037  F02D         	movff	pid_step@setpoint+3,___flsub@b+3
  7028  003322  C038  F02E         	movff	pid_step@feedback,___flsub@a
  7029  003326  C039  F02F         	movff	pid_step@feedback+1,___flsub@a+1
  7030  00332A  C03A  F030         	movff	pid_step@feedback+2,___flsub@a+2
  7031  00332E  C03B  F031         	movff	pid_step@feedback+3,___flsub@a+3
  7032  003332  ECF7  F022         	call	___flsub	;wreg free
  7033  003336  C02A  F044         	movff	?___flsub,pid_step@err
  7034  00333A  C02B  F045         	movff	?___flsub+1,pid_step@err+1
  7035  00333E  C02C  F046         	movff	?___flsub+2,pid_step@err+2
  7036  003342  C02D  F047         	movff	?___flsub+3,pid_step@err+3
  7037  003346                     
  7038                           ;pid.c: 25:     float kgain = err * self->kp;
  7039  003346  C032  FFD9         	movff	pid_step@self,fsr2l
  7040  00334A  C033  FFDA         	movff	pid_step@self+1,fsr2h
  7041  00334E  CFDE F001          	movff	postinc2,___flmul@b
  7042  003352  CFDE F002          	movff	postinc2,___flmul@b+1
  7043  003356  CFDE F003          	movff	postinc2,___flmul@b+2
  7044  00335A  CFDE F004          	movff	postinc2,___flmul@b+3
  7045  00335E  C044  F005         	movff	pid_step@err,___flmul@a
  7046  003362  C045  F006         	movff	pid_step@err+1,___flmul@a+1
  7047  003366  C046  F007         	movff	pid_step@err+2,___flmul@a+2
  7048  00336A  C047  F008         	movff	pid_step@err+3,___flmul@a+3
  7049  00336E  ECDB  F012         	call	___flmul	;wreg free
  7050  003372  C001  F03C         	movff	?___flmul,pid_step@kgain
  7051  003376  C002  F03D         	movff	?___flmul+1,pid_step@kgain+1
  7052  00337A  C003  F03E         	movff	?___flmul+2,pid_step@kgain+2
  7053  00337E  C004  F03F         	movff	?___flmul+3,pid_step@kgain+3
  7054  003382                     
  7055                           ;pid.c: 27:     self->_integral += err * self->ki * self->h;
  7056  003382  C044  F005         	movff	pid_step@err,___flmul@a
  7057  003386  C045  F006         	movff	pid_step@err+1,___flmul@a+1
  7058  00338A  C046  F007         	movff	pid_step@err+2,___flmul@a+2
  7059  00338E  C047  F008         	movff	pid_step@err+3,___flmul@a+3
  7060  003392  EE20 F004          	lfsr	2,4
  7061  003396  5032               	movf	pid_step@self^0,w,c
  7062  003398  26D9               	addwf	fsr2l,f,c
  7063  00339A  5033               	movf	(pid_step@self+1)^0,w,c
  7064  00339C  22DA               	addwfc	fsr2h,f,c
  7065  00339E  CFDE F001          	movff	postinc2,___flmul@b
  7066  0033A2  CFDE F002          	movff	postinc2,___flmul@b+1
  7067  0033A6  CFDE F003          	movff	postinc2,___flmul@b+2
  7068  0033AA  CFDE F004          	movff	postinc2,___flmul@b+3
  7069  0033AE  ECDB  F012         	call	___flmul	;wreg free
  7070  0033B2  C001  F040         	movff	?___flmul,_pid_step$1390
  7071  0033B6  C002  F041         	movff	?___flmul+1,_pid_step$1390+1
  7072  0033BA  C003  F042         	movff	?___flmul+2,_pid_step$1390+2
  7073  0033BE  C004  F043         	movff	?___flmul+3,_pid_step$1390+3
  7074  0033C2                     
  7075                           ;pid.c: 27:     self->_integral += err * self->ki * self->h;
  7076  0033C2  EE20 F008          	lfsr	2,8
  7077  0033C6  5032               	movf	pid_step@self^0,w,c
  7078  0033C8  26D9               	addwf	fsr2l,f,c
  7079  0033CA  5033               	movf	(pid_step@self+1)^0,w,c
  7080  0033CC  22DA               	addwfc	fsr2h,f,c
  7081  0033CE  CFDE F01A          	movff	postinc2,___fladd@b
  7082  0033D2  CFDE F01B          	movff	postinc2,___fladd@b+1
  7083  0033D6  CFDE F01C          	movff	postinc2,___fladd@b+2
  7084  0033DA  CFDE F01D          	movff	postinc2,___fladd@b+3
  7085  0033DE  EE20 F014          	lfsr	2,20
  7086  0033E2  5032               	movf	pid_step@self^0,w,c
  7087  0033E4  26D9               	addwf	fsr2l,f,c
  7088  0033E6  5033               	movf	(pid_step@self+1)^0,w,c
  7089  0033E8  22DA               	addwfc	fsr2h,f,c
  7090  0033EA  CFDE F005          	movff	postinc2,___flmul@a
  7091  0033EE  CFDE F006          	movff	postinc2,___flmul@a+1
  7092  0033F2  CFDE F007          	movff	postinc2,___flmul@a+2
  7093  0033F6  CFDE F008          	movff	postinc2,___flmul@a+3
  7094  0033FA  C040  F001         	movff	_pid_step$1390,___flmul@b
  7095  0033FE  C041  F002         	movff	_pid_step$1390+1,___flmul@b+1
  7096  003402  C042  F003         	movff	_pid_step$1390+2,___flmul@b+2
  7097  003406  C043  F004         	movff	_pid_step$1390+3,___flmul@b+3
  7098  00340A  ECDB  F012         	call	___flmul	;wreg free
  7099  00340E  C001  F01E         	movff	?___flmul,___fladd@a
  7100  003412  C002  F01F         	movff	?___flmul+1,___fladd@a+1
  7101  003416  C003  F020         	movff	?___flmul+2,___fladd@a+2
  7102  00341A  C004  F021         	movff	?___flmul+3,___fladd@a+3
  7103  00341E  EC62  F00E         	call	___fladd	;wreg free
  7104  003422  EE20 F008          	lfsr	2,8
  7105  003426  5032               	movf	pid_step@self^0,w,c
  7106  003428  26D9               	addwf	fsr2l,f,c
  7107  00342A  5033               	movf	(pid_step@self+1)^0,w,c
  7108  00342C  22DA               	addwfc	fsr2h,f,c
  7109  00342E  C01A  FFDE         	movff	?___fladd,postinc2
  7110  003432  C01B  FFDE         	movff	?___fladd+1,postinc2
  7111  003436  C01C  FFDE         	movff	?___fladd+2,postinc2
  7112  00343A  C01D  FFDE         	movff	?___fladd+3,postinc2
  7113  00343E                     
  7114                           ;pid.c: 29:     float action = kgain + self->_integral;
  7115  00343E  EE20 F008          	lfsr	2,8
  7116  003442  5032               	movf	pid_step@self^0,w,c
  7117  003444  26D9               	addwf	fsr2l,f,c
  7118  003446  5033               	movf	(pid_step@self+1)^0,w,c
  7119  003448  22DA               	addwfc	fsr2h,f,c
  7120  00344A  CFDE F01A          	movff	postinc2,___fladd@b
  7121  00344E  CFDE F01B          	movff	postinc2,___fladd@b+1
  7122  003452  CFDE F01C          	movff	postinc2,___fladd@b+2
  7123  003456  CFDE F01D          	movff	postinc2,___fladd@b+3
  7124  00345A  C03C  F01E         	movff	pid_step@kgain,___fladd@a
  7125  00345E  C03D  F01F         	movff	pid_step@kgain+1,___fladd@a+1
  7126  003462  C03E  F020         	movff	pid_step@kgain+2,___fladd@a+2
  7127  003466  C03F  F021         	movff	pid_step@kgain+3,___fladd@a+3
  7128  00346A  EC62  F00E         	call	___fladd	;wreg free
  7129  00346E  C01A  F048         	movff	?___fladd,pid_step@action
  7130  003472  C01B  F049         	movff	?___fladd+1,pid_step@action+1
  7131  003476  C01C  F04A         	movff	?___fladd+2,pid_step@action+2
  7132  00347A  C01D  F04B         	movff	?___fladd+3,pid_step@action+3
  7133  00347E                     
  7134                           ;pid.c: 31:     if (action < self->min)
  7135  00347E  C048  F01A         	movff	pid_step@action,___flge@ff1
  7136  003482  C049  F01B         	movff	pid_step@action+1,___flge@ff1+1
  7137  003486  C04A  F01C         	movff	pid_step@action+2,___flge@ff1+2
  7138  00348A  C04B  F01D         	movff	pid_step@action+3,___flge@ff1+3
  7139  00348E  EE20 F010          	lfsr	2,16
  7140  003492  5032               	movf	pid_step@self^0,w,c
  7141  003494  26D9               	addwf	fsr2l,f,c
  7142  003496  5033               	movf	(pid_step@self+1)^0,w,c
  7143  003498  22DA               	addwfc	fsr2h,f,c
  7144  00349A  CFDE F01E          	movff	postinc2,___flge@ff2
  7145  00349E  CFDE F01F          	movff	postinc2,___flge@ff2+1
  7146  0034A2  CFDE F020          	movff	postinc2,___flge@ff2+2
  7147  0034A6  CFDE F021          	movff	postinc2,___flge@ff2+3
  7148  0034AA  ECA8  F01D         	call	___flge	;wreg free
  7149  0034AE  B0D8               	btfsc	status,0,c
  7150  0034B0  EF5C  F01A         	goto	u5001
  7151  0034B4  EF5E  F01A         	goto	u5000
  7152  0034B8                     u5001:
  7153  0034B8  EF6E  F01A         	goto	l3910
  7154  0034BC                     u5000:
  7155  0034BC                     
  7156                           ;pid.c: 32:         return self->min;
  7157  0034BC  EE20 F010          	lfsr	2,16
  7158  0034C0  5032               	movf	pid_step@self^0,w,c
  7159  0034C2  26D9               	addwf	fsr2l,f,c
  7160  0034C4  5033               	movf	(pid_step@self+1)^0,w,c
  7161  0034C6  22DA               	addwfc	fsr2h,f,c
  7162  0034C8  CFDE F032          	movff	postinc2,?_pid_step
  7163  0034CC  CFDE F033          	movff	postinc2,?_pid_step+1
  7164  0034D0  CFDE F034          	movff	postinc2,?_pid_step+2
  7165  0034D4  CFDE F035          	movff	postinc2,?_pid_step+3
  7166  0034D8  EFA5  F01A         	goto	l71
  7167  0034DC                     l3910:
  7168  0034DC  EE20 F00C          	lfsr	2,12
  7169  0034E0  5032               	movf	pid_step@self^0,w,c
  7170  0034E2  26D9               	addwf	fsr2l,f,c
  7171  0034E4  5033               	movf	(pid_step@self+1)^0,w,c
  7172  0034E6  22DA               	addwfc	fsr2h,f,c
  7173  0034E8  CFDE F01A          	movff	postinc2,___flge@ff1
  7174  0034EC  CFDE F01B          	movff	postinc2,___flge@ff1+1
  7175  0034F0  CFDE F01C          	movff	postinc2,___flge@ff1+2
  7176  0034F4  CFDE F01D          	movff	postinc2,___flge@ff1+3
  7177  0034F8  C048  F01E         	movff	pid_step@action,___flge@ff2
  7178  0034FC  C049  F01F         	movff	pid_step@action+1,___flge@ff2+1
  7179  003500  C04A  F020         	movff	pid_step@action+2,___flge@ff2+2
  7180  003504  C04B  F021         	movff	pid_step@action+3,___flge@ff2+3
  7181  003508  ECA8  F01D         	call	___flge	;wreg free
  7182  00350C  B0D8               	btfsc	status,0,c
  7183  00350E  EF8B  F01A         	goto	u5011
  7184  003512  EF8D  F01A         	goto	u5010
  7185  003516                     u5011:
  7186  003516  EF9D  F01A         	goto	l73
  7187  00351A                     u5010:
  7188  00351A                     
  7189                           ;pid.c: 34:         return self->max;
  7190  00351A  EE20 F00C          	lfsr	2,12
  7191  00351E  5032               	movf	pid_step@self^0,w,c
  7192  003520  26D9               	addwf	fsr2l,f,c
  7193  003522  5033               	movf	(pid_step@self+1)^0,w,c
  7194  003524  22DA               	addwfc	fsr2h,f,c
  7195  003526  CFDE F032          	movff	postinc2,?_pid_step
  7196  00352A  CFDE F033          	movff	postinc2,?_pid_step+1
  7197  00352E  CFDE F034          	movff	postinc2,?_pid_step+2
  7198  003532  CFDE F035          	movff	postinc2,?_pid_step+3
  7199  003536  EFA5  F01A         	goto	l71
  7200  00353A                     l73:
  7201                           
  7202                           ;pid.c: 36:         return action;
  7203  00353A  C048  F032         	movff	pid_step@action,?_pid_step
  7204  00353E  C049  F033         	movff	pid_step@action+1,?_pid_step+1
  7205  003542  C04A  F034         	movff	pid_step@action+2,?_pid_step+2
  7206  003546  C04B  F035         	movff	pid_step@action+3,?_pid_step+3
  7207  00354A                     l71:
  7208  00354A  0012               	return		;funcret
  7209  00354C                     __end_of_pid_step:
  7210                           	callstack 0
  7211                           
  7212 ;; *************** function ___flsub *****************
  7213 ;; Defined at:
  7214 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;  b               4   41[COMRAM] float 
  7217 ;;  a               4   45[COMRAM] float 
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;		None
  7220 ;; Return value:  Size  Location     Type
  7221 ;;                  4   41[COMRAM] float 
  7222 ;; Registers used:
  7223 ;;		wreg, status,2, status,0, cstack
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/0
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7229 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7232 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7233 ;;Total ram usage:        8 bytes
  7234 ;; Hardware stack levels used: 1
  7235 ;; Hardware stack levels required when called: 1
  7236 ;; This function calls:
  7237 ;;		___fladd
  7238 ;; This function is called by:
  7239 ;;		_pid_step
  7240 ;;		_efgtoa
  7241 ;; This function uses a non-reentrant model
  7242 ;;
  7243                           
  7244                           	psect	text27
  7245  0045EE                     __ptext27:
  7246                           	callstack 0
  7247  0045EE                     ___flsub:
  7248                           	callstack 25
  7249  0045EE  0E00               	movlw	0
  7250  0045F0  1A2E               	xorwf	___flsub@a^0,f,c
  7251  0045F2  0E00               	movlw	0
  7252  0045F4  1A2F               	xorwf	(___flsub@a+1)^0,f,c
  7253  0045F6  0E00               	movlw	0
  7254  0045F8  1A30               	xorwf	(___flsub@a+2)^0,f,c
  7255  0045FA  0E80               	movlw	128
  7256  0045FC  1A31               	xorwf	(___flsub@a+3)^0,f,c
  7257  0045FE  C02A  F01A         	movff	___flsub@b,___fladd@b
  7258  004602  C02B  F01B         	movff	___flsub@b+1,___fladd@b+1
  7259  004606  C02C  F01C         	movff	___flsub@b+2,___fladd@b+2
  7260  00460A  C02D  F01D         	movff	___flsub@b+3,___fladd@b+3
  7261  00460E  C02E  F01E         	movff	___flsub@a,___fladd@a
  7262  004612  C02F  F01F         	movff	___flsub@a+1,___fladd@a+1
  7263  004616  C030  F020         	movff	___flsub@a+2,___fladd@a+2
  7264  00461A  C031  F021         	movff	___flsub@a+3,___fladd@a+3
  7265  00461E  EC62  F00E         	call	___fladd	;wreg free
  7266  004622  C01A  F02A         	movff	?___fladd,?___flsub
  7267  004626  C01B  F02B         	movff	?___fladd+1,?___flsub+1
  7268  00462A  C01C  F02C         	movff	?___fladd+2,?___flsub+2
  7269  00462E  C01D  F02D         	movff	?___fladd+3,?___flsub+3
  7270  004632  0012               	return		;funcret
  7271  004634                     __end_of___flsub:
  7272                           	callstack 0
  7273                           
  7274 ;; *************** function ___fladd *****************
  7275 ;; Defined at:
  7276 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;  b               4   25[COMRAM] float 
  7279 ;;  a               4   29[COMRAM] float 
  7280 ;; Auto vars:     Size  Location     Type
  7281 ;;  grs             1   40[COMRAM] unsigned char 
  7282 ;;  bexp            1   39[COMRAM] unsigned char 
  7283 ;;  aexp            1   38[COMRAM] unsigned char 
  7284 ;;  signs           1   37[COMRAM] unsigned char 
  7285 ;; Return value:  Size  Location     Type
  7286 ;;                  4   25[COMRAM] unsigned char 
  7287 ;; Registers used:
  7288 ;;		wreg, status,2, status,0
  7289 ;; Tracked objects:
  7290 ;;		On entry : 0/0
  7291 ;;		On exit  : 0/0
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7294 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7295 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7296 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7297 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7298 ;;Total ram usage:       16 bytes
  7299 ;; Hardware stack levels used: 1
  7300 ;; This function calls:
  7301 ;;		Nothing
  7302 ;; This function is called by:
  7303 ;;		_pid_step
  7304 ;;		___flsub
  7305 ;;		_efgtoa
  7306 ;; This function uses a non-reentrant model
  7307 ;;
  7308                           
  7309                           	psect	text28
  7310  001CC4                     __ptext28:
  7311                           	callstack 0
  7312  001CC4                     ___fladd:
  7313                           	callstack 25
  7314  001CC4  501D               	movf	(___fladd@b+3)^0,w,c
  7315  001CC6  0B80               	andlw	128
  7316  001CC8  6E26               	movwf	___fladd@signs^0,c
  7317  001CCA  501D               	movf	(___fladd@b+3)^0,w,c
  7318  001CCC  241D               	addwf	(___fladd@b+3)^0,w,c
  7319  001CCE  6E28               	movwf	___fladd@bexp^0,c
  7320  001CD0  AE1C               	btfss	(___fladd@b+2)^0,7,c
  7321  001CD2  EF6D  F00E         	goto	u2591
  7322  001CD6  EF6F  F00E         	goto	u2590
  7323  001CDA                     u2591:
  7324  001CDA  EF70  F00E         	goto	l2534
  7325  001CDE                     u2590:
  7326  001CDE  8028               	bsf	___fladd@bexp^0,0,c
  7327  001CE0                     l2534:
  7328  001CE0  5028               	movf	___fladd@bexp^0,w,c
  7329  001CE2  B4D8               	btfsc	status,2,c
  7330  001CE4  EF76  F00E         	goto	u2601
  7331  001CE8  EF78  F00E         	goto	u2600
  7332  001CEC                     u2601:
  7333  001CEC  EF8D  F00E         	goto	l2544
  7334  001CF0                     u2600:
  7335  001CF0  2828               	incf	___fladd@bexp^0,w,c
  7336  001CF2  A4D8               	btfss	status,2,c
  7337  001CF4  EF7E  F00E         	goto	u2611
  7338  001CF8  EF80  F00E         	goto	u2610
  7339  001CFC                     u2611:
  7340  001CFC  EF88  F00E         	goto	l2540
  7341  001D00                     u2610:
  7342  001D00  0E00               	movlw	0
  7343  001D02  6E1A               	movwf	___fladd@b^0,c
  7344  001D04  0E00               	movlw	0
  7345  001D06  6E1B               	movwf	(___fladd@b+1)^0,c
  7346  001D08  0E00               	movlw	0
  7347  001D0A  6E1C               	movwf	(___fladd@b+2)^0,c
  7348  001D0C  0E00               	movlw	0
  7349  001D0E  6E1D               	movwf	(___fladd@b+3)^0,c
  7350  001D10                     l2540:
  7351  001D10  8E1C               	bsf	(___fladd@b+2)^0,7,c
  7352  001D12  0E00               	movlw	0
  7353  001D14  6E1D               	movwf	(___fladd@b+3)^0,c
  7354  001D16  EF95  F00E         	goto	l2546
  7355  001D1A                     l2544:
  7356  001D1A  0E00               	movlw	0
  7357  001D1C  6E1A               	movwf	___fladd@b^0,c
  7358  001D1E  0E00               	movlw	0
  7359  001D20  6E1B               	movwf	(___fladd@b+1)^0,c
  7360  001D22  0E00               	movlw	0
  7361  001D24  6E1C               	movwf	(___fladd@b+2)^0,c
  7362  001D26  0E00               	movlw	0
  7363  001D28  6E1D               	movwf	(___fladd@b+3)^0,c
  7364  001D2A                     l2546:
  7365  001D2A  5021               	movf	(___fladd@a+3)^0,w,c
  7366  001D2C  0B80               	andlw	128
  7367  001D2E  6E27               	movwf	___fladd@aexp^0,c
  7368  001D30  5026               	movf	___fladd@signs^0,w,c
  7369  001D32  1827               	xorwf	___fladd@aexp^0,w,c
  7370  001D34  B4D8               	btfsc	status,2,c
  7371  001D36  EF9F  F00E         	goto	u2621
  7372  001D3A  EFA1  F00E         	goto	u2620
  7373  001D3E                     u2621:
  7374  001D3E  EFA2  F00E         	goto	l2552
  7375  001D42                     u2620:
  7376  001D42  8C26               	bsf	___fladd@signs^0,6,c
  7377  001D44                     l2552:
  7378  001D44  5021               	movf	(___fladd@a+3)^0,w,c
  7379  001D46  2421               	addwf	(___fladd@a+3)^0,w,c
  7380  001D48  6E27               	movwf	___fladd@aexp^0,c
  7381  001D4A  AE20               	btfss	(___fladd@a+2)^0,7,c
  7382  001D4C  EFAA  F00E         	goto	u2631
  7383  001D50  EFAC  F00E         	goto	u2630
  7384  001D54                     u2631:
  7385  001D54  EFAD  F00E         	goto	l2558
  7386  001D58                     u2630:
  7387  001D58  8027               	bsf	___fladd@aexp^0,0,c
  7388  001D5A                     l2558:
  7389  001D5A  5027               	movf	___fladd@aexp^0,w,c
  7390  001D5C  B4D8               	btfsc	status,2,c
  7391  001D5E  EFB3  F00E         	goto	u2641
  7392  001D62  EFB5  F00E         	goto	u2640
  7393  001D66                     u2641:
  7394  001D66  EFCA  F00E         	goto	l2568
  7395  001D6A                     u2640:
  7396  001D6A  2827               	incf	___fladd@aexp^0,w,c
  7397  001D6C  A4D8               	btfss	status,2,c
  7398  001D6E  EFBB  F00E         	goto	u2651
  7399  001D72  EFBD  F00E         	goto	u2650
  7400  001D76                     u2651:
  7401  001D76  EFC5  F00E         	goto	l2564
  7402  001D7A                     u2650:
  7403  001D7A  0E00               	movlw	0
  7404  001D7C  6E1E               	movwf	___fladd@a^0,c
  7405  001D7E  0E00               	movlw	0
  7406  001D80  6E1F               	movwf	(___fladd@a+1)^0,c
  7407  001D82  0E00               	movlw	0
  7408  001D84  6E20               	movwf	(___fladd@a+2)^0,c
  7409  001D86  0E00               	movlw	0
  7410  001D88  6E21               	movwf	(___fladd@a+3)^0,c
  7411  001D8A                     l2564:
  7412  001D8A  8E20               	bsf	(___fladd@a+2)^0,7,c
  7413  001D8C  0E00               	movlw	0
  7414  001D8E  6E21               	movwf	(___fladd@a+3)^0,c
  7415  001D90  EFD2  F00E         	goto	l2570
  7416  001D94                     l2568:
  7417  001D94  0E00               	movlw	0
  7418  001D96  6E1E               	movwf	___fladd@a^0,c
  7419  001D98  0E00               	movlw	0
  7420  001D9A  6E1F               	movwf	(___fladd@a+1)^0,c
  7421  001D9C  0E00               	movlw	0
  7422  001D9E  6E20               	movwf	(___fladd@a+2)^0,c
  7423  001DA0  0E00               	movlw	0
  7424  001DA2  6E21               	movwf	(___fladd@a+3)^0,c
  7425  001DA4                     l2570:
  7426  001DA4  5028               	movf	___fladd@bexp^0,w,c
  7427  001DA6  5C27               	subwf	___fladd@aexp^0,w,c
  7428  001DA8  B0D8               	btfsc	status,0,c
  7429  001DAA  EFD9  F00E         	goto	u2661
  7430  001DAE  EFDB  F00E         	goto	u2660
  7431  001DB2                     u2661:
  7432  001DB2  EF02  F00F         	goto	l2606
  7433  001DB6                     u2660:
  7434  001DB6  AC26               	btfss	___fladd@signs^0,6,c
  7435  001DB8  EFE0  F00E         	goto	u2671
  7436  001DBC  EFE2  F00E         	goto	u2670
  7437  001DC0                     u2671:
  7438  001DC0  EFE4  F00E         	goto	l2576
  7439  001DC4                     u2670:
  7440  001DC4  0E80               	movlw	128
  7441  001DC6  1A26               	xorwf	___fladd@signs^0,f,c
  7442  001DC8                     l2576:
  7443  001DC8  C028  F029         	movff	___fladd@bexp,___fladd@grs
  7444  001DCC  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  7445  001DD0  C029  F027         	movff	___fladd@grs,___fladd@aexp
  7446  001DD4  C01A  F029         	movff	___fladd@b,___fladd@grs
  7447  001DD8  C01E  F01A         	movff	___fladd@a,___fladd@b
  7448  001DDC  C029  F01E         	movff	___fladd@grs,___fladd@a
  7449  001DE0  C01B  F029         	movff	___fladd@b+1,___fladd@grs
  7450  001DE4  C01F  F01B         	movff	___fladd@a+1,___fladd@b+1
  7451  001DE8  C029  F01F         	movff	___fladd@grs,___fladd@a+1
  7452  001DEC  C01C  F029         	movff	___fladd@b+2,___fladd@grs
  7453  001DF0  C020  F01C         	movff	___fladd@a+2,___fladd@b+2
  7454  001DF4  C029  F020         	movff	___fladd@grs,___fladd@a+2
  7455  001DF8  C01D  F029         	movff	___fladd@b+3,___fladd@grs
  7456  001DFC  C021  F01D         	movff	___fladd@a+3,___fladd@b+3
  7457  001E00  C029  F021         	movff	___fladd@grs,___fladd@a+3
  7458  001E04                     l2606:
  7459  001E04  0E00               	movlw	0
  7460  001E06  6E29               	movwf	___fladd@grs^0,c
  7461  001E08  5028               	movf	___fladd@bexp^0,w,c
  7462  001E0A  C027  F022         	movff	___fladd@aexp,??___fladd
  7463  001E0E  6A23               	clrf	(??___fladd+1)^0,c
  7464  001E10  5E22               	subwf	??___fladd^0,f,c
  7465  001E12  0E00               	movlw	0
  7466  001E14  5A23               	subwfb	(??___fladd+1)^0,f,c
  7467  001E16  BE23               	btfsc	(??___fladd+1)^0,7,c
  7468  001E18  EF17  F00F         	goto	u2681
  7469  001E1C  5023               	movf	(??___fladd+1)^0,w,c
  7470  001E1E  E109               	bnz	u2680
  7471  001E20  0E1A               	movlw	26
  7472  001E22  5C22               	subwf	??___fladd^0,w,c
  7473  001E24  A0D8               	btfss	status,0,c
  7474  001E26  EF17  F00F         	goto	u2681
  7475  001E2A  EF19  F00F         	goto	u2680
  7476  001E2E                     u2681:
  7477  001E2E  EF50  F00F         	goto	l609
  7478  001E32                     u2680:
  7479  001E32  501A               	movf	___fladd@b^0,w,c
  7480  001E34  101B               	iorwf	(___fladd@b+1)^0,w,c
  7481  001E36  101C               	iorwf	(___fladd@b+2)^0,w,c
  7482  001E38  101D               	iorwf	(___fladd@b+3)^0,w,c
  7483  001E3A  A4D8               	btfss	status,2,c
  7484  001E3C  EF22  F00F         	goto	u2691
  7485  001E40  EF25  F00F         	goto	u2690
  7486  001E44                     u2691:
  7487  001E44  0E01               	movlw	1
  7488  001E46  EF26  F00F         	goto	u2700
  7489  001E4A                     u2690:
  7490  001E4A  0E00               	movlw	0
  7491  001E4C                     u2700:
  7492  001E4C  6E29               	movwf	___fladd@grs^0,c
  7493  001E4E  0E00               	movlw	0
  7494  001E50  6E1A               	movwf	___fladd@b^0,c
  7495  001E52  0E00               	movlw	0
  7496  001E54  6E1B               	movwf	(___fladd@b+1)^0,c
  7497  001E56  0E00               	movlw	0
  7498  001E58  6E1C               	movwf	(___fladd@b+2)^0,c
  7499  001E5A  0E00               	movlw	0
  7500  001E5C  6E1D               	movwf	(___fladd@b+3)^0,c
  7501  001E5E  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  7502  001E62  EF59  F00F         	goto	l608
  7503  001E66                     l610:
  7504  001E66  A029               	btfss	___fladd@grs^0,0,c
  7505  001E68  EF38  F00F         	goto	u2711
  7506  001E6C  EF3A  F00F         	goto	u2710
  7507  001E70                     u2711:
  7508  001E70  EF40  F00F         	goto	l2618
  7509  001E74                     u2710:
  7510  001E74  90D8               	bcf	status,0,c
  7511  001E76  3029               	rrcf	___fladd@grs^0,w,c
  7512  001E78  0901               	iorlw	1
  7513  001E7A  6E29               	movwf	___fladd@grs^0,c
  7514  001E7C  EF42  F00F         	goto	l2620
  7515  001E80                     l2618:
  7516  001E80  90D8               	bcf	status,0,c
  7517  001E82  3229               	rrcf	___fladd@grs^0,f,c
  7518  001E84                     l2620:
  7519  001E84  A01A               	btfss	___fladd@b^0,0,c
  7520  001E86  EF47  F00F         	goto	u2721
  7521  001E8A  EF49  F00F         	goto	u2720
  7522  001E8E                     u2721:
  7523  001E8E  EF4A  F00F         	goto	l2624
  7524  001E92                     u2720:
  7525  001E92  8E29               	bsf	___fladd@grs^0,7,c
  7526  001E94                     l2624:
  7527  001E94  341D               	rlcf	(___fladd@b+3)^0,w,c
  7528  001E96  321D               	rrcf	(___fladd@b+3)^0,f,c
  7529  001E98  321C               	rrcf	(___fladd@b+2)^0,f,c
  7530  001E9A  321B               	rrcf	(___fladd@b+1)^0,f,c
  7531  001E9C  321A               	rrcf	___fladd@b^0,f,c
  7532  001E9E  2A28               	incf	___fladd@bexp^0,f,c
  7533  001EA0                     l609:
  7534  001EA0  5027               	movf	___fladd@aexp^0,w,c
  7535  001EA2  5C28               	subwf	___fladd@bexp^0,w,c
  7536  001EA4  A0D8               	btfss	status,0,c
  7537  001EA6  EF57  F00F         	goto	u2731
  7538  001EAA  EF59  F00F         	goto	u2730
  7539  001EAE                     u2731:
  7540  001EAE  EF33  F00F         	goto	l610
  7541  001EB2                     u2730:
  7542  001EB2                     l608:
  7543  001EB2  BC26               	btfsc	___fladd@signs^0,6,c
  7544  001EB4  EF5E  F00F         	goto	u2741
  7545  001EB8  EF60  F00F         	goto	u2740
  7546  001EBC                     u2741:
  7547  001EBC  EFA0  F00F         	goto	l2652
  7548  001EC0                     u2740:
  7549  001EC0  5028               	movf	___fladd@bexp^0,w,c
  7550  001EC2  A4D8               	btfss	status,2,c
  7551  001EC4  EF66  F00F         	goto	u2751
  7552  001EC8  EF68  F00F         	goto	u2750
  7553  001ECC                     u2751:
  7554  001ECC  EF72  F00F         	goto	l2634
  7555  001ED0                     u2750:
  7556  001ED0  0E00               	movlw	0
  7557  001ED2  6E1A               	movwf	?___fladd^0,c
  7558  001ED4  0E00               	movlw	0
  7559  001ED6  6E1B               	movwf	(?___fladd+1)^0,c
  7560  001ED8  0E00               	movlw	0
  7561  001EDA  6E1C               	movwf	(?___fladd+2)^0,c
  7562  001EDC  0E00               	movlw	0
  7563  001EDE  6E1D               	movwf	(?___fladd+3)^0,c
  7564  001EE0  EFC1  F010         	goto	l617
  7565  001EE4                     l2634:
  7566  001EE4  501E               	movf	___fladd@a^0,w,c
  7567  001EE6  261A               	addwf	___fladd@b^0,f,c
  7568  001EE8  501F               	movf	(___fladd@a+1)^0,w,c
  7569  001EEA  221B               	addwfc	(___fladd@b+1)^0,f,c
  7570  001EEC  5020               	movf	(___fladd@a+2)^0,w,c
  7571  001EEE  221C               	addwfc	(___fladd@b+2)^0,f,c
  7572  001EF0  5021               	movf	(___fladd@a+3)^0,w,c
  7573  001EF2  221D               	addwfc	(___fladd@b+3)^0,f,c
  7574  001EF4  A01D               	btfss	(___fladd@b+3)^0,0,c
  7575  001EF6  EF7F  F00F         	goto	u2761
  7576  001EFA  EF81  F00F         	goto	u2760
  7577  001EFE                     u2761:
  7578  001EFE  EF2D  F010         	goto	l2688
  7579  001F02                     u2760:
  7580  001F02  A029               	btfss	___fladd@grs^0,0,c
  7581  001F04  EF86  F00F         	goto	u2771
  7582  001F08  EF88  F00F         	goto	u2770
  7583  001F0C                     u2771:
  7584  001F0C  EF8E  F00F         	goto	l2642
  7585  001F10                     u2770:
  7586  001F10  90D8               	bcf	status,0,c
  7587  001F12  3029               	rrcf	___fladd@grs^0,w,c
  7588  001F14  0901               	iorlw	1
  7589  001F16  6E29               	movwf	___fladd@grs^0,c
  7590  001F18  EF90  F00F         	goto	l2644
  7591  001F1C                     l2642:
  7592  001F1C  90D8               	bcf	status,0,c
  7593  001F1E  3229               	rrcf	___fladd@grs^0,f,c
  7594  001F20                     l2644:
  7595  001F20  A01A               	btfss	___fladd@b^0,0,c
  7596  001F22  EF95  F00F         	goto	u2781
  7597  001F26  EF97  F00F         	goto	u2780
  7598  001F2A                     u2781:
  7599  001F2A  EF98  F00F         	goto	l2648
  7600  001F2E                     u2780:
  7601  001F2E  8E29               	bsf	___fladd@grs^0,7,c
  7602  001F30                     l2648:
  7603  001F30  341D               	rlcf	(___fladd@b+3)^0,w,c
  7604  001F32  321D               	rrcf	(___fladd@b+3)^0,f,c
  7605  001F34  321C               	rrcf	(___fladd@b+2)^0,f,c
  7606  001F36  321B               	rrcf	(___fladd@b+1)^0,f,c
  7607  001F38  321A               	rrcf	___fladd@b^0,f,c
  7608  001F3A  2A28               	incf	___fladd@bexp^0,f,c
  7609  001F3C  EF2D  F010         	goto	l2688
  7610  001F40                     l2652:
  7611  001F40  501E               	movf	___fladd@a^0,w,c
  7612  001F42  5C1A               	subwf	___fladd@b^0,w,c
  7613  001F44  501F               	movf	(___fladd@a+1)^0,w,c
  7614  001F46  581B               	subwfb	(___fladd@b+1)^0,w,c
  7615  001F48  5020               	movf	(___fladd@a+2)^0,w,c
  7616  001F4A  581C               	subwfb	(___fladd@b+2)^0,w,c
  7617  001F4C  501D               	movf	(___fladd@b+3)^0,w,c
  7618  001F4E  0A80               	xorlw	128
  7619  001F50  6E22               	movwf	??___fladd^0,c
  7620  001F52  5021               	movf	(___fladd@a+3)^0,w,c
  7621  001F54  0A80               	xorlw	128
  7622  001F56  5822               	subwfb	??___fladd^0,w,c
  7623  001F58  B0D8               	btfsc	status,0,c
  7624  001F5A  EFB1  F00F         	goto	u2791
  7625  001F5E  EFB3  F00F         	goto	u2790
  7626  001F62                     u2791:
  7627  001F62  EFDE  F00F         	goto	l2662
  7628  001F66                     u2790:
  7629  001F66  501A               	movf	___fladd@b^0,w,c
  7630  001F68  5C1E               	subwf	___fladd@a^0,w,c
  7631  001F6A  6E22               	movwf	??___fladd^0,c
  7632  001F6C  501B               	movf	(___fladd@b+1)^0,w,c
  7633  001F6E  581F               	subwfb	(___fladd@a+1)^0,w,c
  7634  001F70  6E23               	movwf	(??___fladd+1)^0,c
  7635  001F72  501C               	movf	(___fladd@b+2)^0,w,c
  7636  001F74  5820               	subwfb	(___fladd@a+2)^0,w,c
  7637  001F76  6E24               	movwf	(??___fladd+2)^0,c
  7638  001F78  501D               	movf	(___fladd@b+3)^0,w,c
  7639  001F7A  5821               	subwfb	(___fladd@a+3)^0,w,c
  7640  001F7C  6E25               	movwf	(??___fladd+3)^0,c
  7641  001F7E  0EFF               	movlw	255
  7642  001F80  2422               	addwf	??___fladd^0,w,c
  7643  001F82  6E1A               	movwf	___fladd@b^0,c
  7644  001F84  0EFF               	movlw	255
  7645  001F86  2023               	addwfc	(??___fladd+1)^0,w,c
  7646  001F88  6E1B               	movwf	(___fladd@b+1)^0,c
  7647  001F8A  0EFF               	movlw	255
  7648  001F8C  2024               	addwfc	(??___fladd+2)^0,w,c
  7649  001F8E  6E1C               	movwf	(___fladd@b+2)^0,c
  7650  001F90  0EFF               	movlw	255
  7651  001F92  2025               	addwfc	(??___fladd+3)^0,w,c
  7652  001F94  6E1D               	movwf	(___fladd@b+3)^0,c
  7653  001F96  0E80               	movlw	128
  7654  001F98  1A26               	xorwf	___fladd@signs^0,f,c
  7655  001F9A  6C29               	negf	___fladd@grs^0,c
  7656  001F9C  5029               	movf	___fladd@grs^0,w,c
  7657  001F9E  A4D8               	btfss	status,2,c
  7658  001FA0  EFD4  F00F         	goto	u2801
  7659  001FA4  EFD6  F00F         	goto	u2800
  7660  001FA8                     u2801:
  7661  001FA8  EFE6  F00F         	goto	l625
  7662  001FAC                     u2800:
  7663  001FAC  0E01               	movlw	1
  7664  001FAE  261A               	addwf	___fladd@b^0,f,c
  7665  001FB0  0E00               	movlw	0
  7666  001FB2  221B               	addwfc	(___fladd@b+1)^0,f,c
  7667  001FB4  221C               	addwfc	(___fladd@b+2)^0,f,c
  7668  001FB6  221D               	addwfc	(___fladd@b+3)^0,f,c
  7669  001FB8  EFE6  F00F         	goto	l625
  7670  001FBC                     l2662:
  7671  001FBC  501E               	movf	___fladd@a^0,w,c
  7672  001FBE  5E1A               	subwf	___fladd@b^0,f,c
  7673  001FC0  501F               	movf	(___fladd@a+1)^0,w,c
  7674  001FC2  5A1B               	subwfb	(___fladd@b+1)^0,f,c
  7675  001FC4  5020               	movf	(___fladd@a+2)^0,w,c
  7676  001FC6  5A1C               	subwfb	(___fladd@b+2)^0,f,c
  7677  001FC8  5021               	movf	(___fladd@a+3)^0,w,c
  7678  001FCA  5A1D               	subwfb	(___fladd@b+3)^0,f,c
  7679  001FCC                     l625:
  7680  001FCC  501A               	movf	___fladd@b^0,w,c
  7681  001FCE  101B               	iorwf	(___fladd@b+1)^0,w,c
  7682  001FD0  101C               	iorwf	(___fladd@b+2)^0,w,c
  7683  001FD2  101D               	iorwf	(___fladd@b+3)^0,w,c
  7684  001FD4  A4D8               	btfss	status,2,c
  7685  001FD6  EFEF  F00F         	goto	u2811
  7686  001FDA  EFF1  F00F         	goto	u2810
  7687  001FDE                     u2811:
  7688  001FDE  EF26  F010         	goto	l2686
  7689  001FE2                     u2810:
  7690  001FE2  5029               	movf	___fladd@grs^0,w,c
  7691  001FE4  A4D8               	btfss	status,2,c
  7692  001FE6  EFF7  F00F         	goto	u2821
  7693  001FEA  EFF9  F00F         	goto	u2820
  7694  001FEE                     u2821:
  7695  001FEE  EF26  F010         	goto	l2686
  7696  001FF2                     u2820:
  7697  001FF2  0E00               	movlw	0
  7698  001FF4  6E1A               	movwf	?___fladd^0,c
  7699  001FF6  0E00               	movlw	0
  7700  001FF8  6E1B               	movwf	(?___fladd+1)^0,c
  7701  001FFA  0E00               	movlw	0
  7702  001FFC  6E1C               	movwf	(?___fladd+2)^0,c
  7703  001FFE  0E00               	movlw	0
  7704  002000  6E1D               	movwf	(?___fladd+3)^0,c
  7705  002002  EFC1  F010         	goto	l617
  7706  002006                     l2670:
  7707  002006  90D8               	bcf	status,0,c
  7708  002008  361A               	rlcf	___fladd@b^0,f,c
  7709  00200A  361B               	rlcf	(___fladd@b+1)^0,f,c
  7710  00200C  361C               	rlcf	(___fladd@b+2)^0,f,c
  7711  00200E  361D               	rlcf	(___fladd@b+3)^0,f,c
  7712  002010  AE29               	btfss	___fladd@grs^0,7,c
  7713  002012  EF0D  F010         	goto	u2831
  7714  002016  EF0F  F010         	goto	u2830
  7715  00201A                     u2831:
  7716  00201A  EF10  F010         	goto	l2676
  7717  00201E                     u2830:
  7718  00201E  801A               	bsf	___fladd@b^0,0,c
  7719  002020                     l2676:
  7720  002020  A029               	btfss	___fladd@grs^0,0,c
  7721  002022  EF15  F010         	goto	u2841
  7722  002026  EF17  F010         	goto	u2840
  7723  00202A                     u2841:
  7724  00202A  EF1B  F010         	goto	l2680
  7725  00202E                     u2840:
  7726  00202E  80D8               	bsf	status,0,c
  7727  002030  3629               	rlcf	___fladd@grs^0,f,c
  7728  002032  EF1D  F010         	goto	l2682
  7729  002036                     l2680:
  7730  002036  90D8               	bcf	status,0,c
  7731  002038  3629               	rlcf	___fladd@grs^0,f,c
  7732  00203A                     l2682:
  7733  00203A  5028               	movf	___fladd@bexp^0,w,c
  7734  00203C  B4D8               	btfsc	status,2,c
  7735  00203E  EF23  F010         	goto	u2851
  7736  002042  EF25  F010         	goto	u2850
  7737  002046                     u2851:
  7738  002046  EF26  F010         	goto	l2686
  7739  00204A                     u2850:
  7740  00204A  0628               	decf	___fladd@bexp^0,f,c
  7741  00204C                     l2686:
  7742  00204C  AE1C               	btfss	(___fladd@b+2)^0,7,c
  7743  00204E  EF2B  F010         	goto	u2861
  7744  002052  EF2D  F010         	goto	u2860
  7745  002056                     u2861:
  7746  002056  EF03  F010         	goto	l2670
  7747  00205A                     u2860:
  7748  00205A                     l2688:
  7749  00205A  0E00               	movlw	0
  7750  00205C  6E27               	movwf	___fladd@aexp^0,c
  7751  00205E  AE29               	btfss	___fladd@grs^0,7,c
  7752  002060  EF34  F010         	goto	u2871
  7753  002064  EF36  F010         	goto	u2870
  7754  002068                     u2871:
  7755  002068  EF4E  F010         	goto	l634
  7756  00206C                     u2870:
  7757  00206C  C029  F022         	movff	___fladd@grs,??___fladd
  7758  002070  0E7F               	movlw	127
  7759  002072  1622               	andwf	??___fladd^0,f,c
  7760  002074  B4D8               	btfsc	status,2,c
  7761  002076  EF3F  F010         	goto	u2881
  7762  00207A  EF41  F010         	goto	u2880
  7763  00207E                     u2881:
  7764  00207E  EF45  F010         	goto	l635
  7765  002082                     u2880:
  7766  002082                     l2694:
  7767  002082  0E01               	movlw	1
  7768  002084  6E27               	movwf	___fladd@aexp^0,c
  7769  002086  EF4E  F010         	goto	l634
  7770  00208A                     l635:
  7771  00208A  A01A               	btfss	___fladd@b^0,0,c
  7772  00208C  EF4A  F010         	goto	u2891
  7773  002090  EF4C  F010         	goto	u2890
  7774  002094                     u2891:
  7775  002094  EF4E  F010         	goto	l634
  7776  002098                     u2890:
  7777  002098  EF41  F010         	goto	l2694
  7778  00209C                     l634:
  7779  00209C  5027               	movf	___fladd@aexp^0,w,c
  7780  00209E  B4D8               	btfsc	status,2,c
  7781  0020A0  EF54  F010         	goto	u2901
  7782  0020A4  EF56  F010         	goto	u2900
  7783  0020A8                     u2901:
  7784  0020A8  EF81  F010         	goto	l2706
  7785  0020AC                     u2900:
  7786  0020AC  0E01               	movlw	1
  7787  0020AE  261A               	addwf	___fladd@b^0,f,c
  7788  0020B0  0E00               	movlw	0
  7789  0020B2  221B               	addwfc	(___fladd@b+1)^0,f,c
  7790  0020B4  221C               	addwfc	(___fladd@b+2)^0,f,c
  7791  0020B6  221D               	addwfc	(___fladd@b+3)^0,f,c
  7792  0020B8  A01D               	btfss	(___fladd@b+3)^0,0,c
  7793  0020BA  EF61  F010         	goto	u2911
  7794  0020BE  EF63  F010         	goto	u2910
  7795  0020C2                     u2911:
  7796  0020C2  EF81  F010         	goto	l2706
  7797  0020C6                     u2910:
  7798  0020C6  C01A  F022         	movff	___fladd@b,??___fladd
  7799  0020CA  C01B  F023         	movff	___fladd@b+1,??___fladd+1
  7800  0020CE  C01C  F024         	movff	___fladd@b+2,??___fladd+2
  7801  0020D2  C01D  F025         	movff	___fladd@b+3,??___fladd+3
  7802  0020D6  3425               	rlcf	(??___fladd+3)^0,w,c
  7803  0020D8  3225               	rrcf	(??___fladd+3)^0,f,c
  7804  0020DA  3224               	rrcf	(??___fladd+2)^0,f,c
  7805  0020DC  3223               	rrcf	(??___fladd+1)^0,f,c
  7806  0020DE  3222               	rrcf	??___fladd^0,f,c
  7807  0020E0  C022  F01A         	movff	??___fladd,___fladd@b
  7808  0020E4  C023  F01B         	movff	??___fladd+1,___fladd@b+1
  7809  0020E8  C024  F01C         	movff	??___fladd+2,___fladd@b+2
  7810  0020EC  C025  F01D         	movff	??___fladd+3,___fladd@b+3
  7811  0020F0  2828               	incf	___fladd@bexp^0,w,c
  7812  0020F2  B4D8               	btfsc	status,2,c
  7813  0020F4  EF7E  F010         	goto	u2921
  7814  0020F8  EF80  F010         	goto	u2920
  7815  0020FC                     u2921:
  7816  0020FC  EF81  F010         	goto	l2706
  7817  002100                     u2920:
  7818  002100  2A28               	incf	___fladd@bexp^0,f,c
  7819  002102                     l2706:
  7820  002102  2828               	incf	___fladd@bexp^0,w,c
  7821  002104  B4D8               	btfsc	status,2,c
  7822  002106  EF87  F010         	goto	u2931
  7823  00210A  EF89  F010         	goto	u2930
  7824  00210E                     u2931:
  7825  00210E  EF91  F010         	goto	l2710
  7826  002112                     u2930:
  7827  002112  5028               	movf	___fladd@bexp^0,w,c
  7828  002114  A4D8               	btfss	status,2,c
  7829  002116  EF8F  F010         	goto	u2941
  7830  00211A  EF91  F010         	goto	u2940
  7831  00211E                     u2941:
  7832  00211E  EFA3  F010         	goto	l2714
  7833  002122                     u2940:
  7834  002122                     l2710:
  7835  002122  0E00               	movlw	0
  7836  002124  6E1A               	movwf	___fladd@b^0,c
  7837  002126  0E00               	movlw	0
  7838  002128  6E1B               	movwf	(___fladd@b+1)^0,c
  7839  00212A  0E00               	movlw	0
  7840  00212C  6E1C               	movwf	(___fladd@b+2)^0,c
  7841  00212E  0E00               	movlw	0
  7842  002130  6E1D               	movwf	(___fladd@b+3)^0,c
  7843  002132  5028               	movf	___fladd@bexp^0,w,c
  7844  002134  A4D8               	btfss	status,2,c
  7845  002136  EF9F  F010         	goto	u2951
  7846  00213A  EFA1  F010         	goto	u2950
  7847  00213E                     u2951:
  7848  00213E  EFA3  F010         	goto	l2714
  7849  002142                     u2950:
  7850  002142  0E00               	movlw	0
  7851  002144  6E26               	movwf	___fladd@signs^0,c
  7852  002146                     l2714:
  7853  002146  A028               	btfss	___fladd@bexp^0,0,c
  7854  002148  EFA8  F010         	goto	u2961
  7855  00214C  EFAA  F010         	goto	u2960
  7856  002150                     u2961:
  7857  002150  EFAD  F010         	goto	l2718
  7858  002154                     u2960:
  7859  002154  8E1C               	bsf	(___fladd@b+2)^0,7,c
  7860  002156  EFAE  F010         	goto	l2720
  7861  00215A                     l2718:
  7862  00215A  9E1C               	bcf	(___fladd@b+2)^0,7,c
  7863  00215C                     l2720:
  7864  00215C  90D8               	bcf	status,0,c
  7865  00215E  3028               	rrcf	___fladd@bexp^0,w,c
  7866  002160  6E1D               	movwf	(___fladd@b+3)^0,c
  7867  002162  AE26               	btfss	___fladd@signs^0,7,c
  7868  002164  EFB6  F010         	goto	u2971
  7869  002168  EFB8  F010         	goto	u2970
  7870  00216C                     u2971:
  7871  00216C  EFB9  F010         	goto	l2726
  7872  002170                     u2970:
  7873  002170  8E1D               	bsf	(___fladd@b+3)^0,7,c
  7874  002172                     l2726:
  7875  002172  C01A  F01A         	movff	___fladd@b,?___fladd
  7876  002176  C01B  F01B         	movff	___fladd@b+1,?___fladd+1
  7877  00217A  C01C  F01C         	movff	___fladd@b+2,?___fladd+2
  7878  00217E  C01D  F01D         	movff	___fladd@b+3,?___fladd+3
  7879  002182                     l617:
  7880  002182  0012               	return		;funcret
  7881  002184                     __end_of___fladd:
  7882                           	callstack 0
  7883                           
  7884 ;; *************** function ___flmul *****************
  7885 ;; Defined at:
  7886 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  7887 ;; Parameters:    Size  Location     Type
  7888 ;;  b               4    0[COMRAM] unsigned char 
  7889 ;;  a               4    4[COMRAM] unsigned char 
  7890 ;; Auto vars:     Size  Location     Type
  7891 ;;  prod            4   19[COMRAM] struct .
  7892 ;;  grs             4   13[COMRAM] unsigned long 
  7893 ;;  temp            2   23[COMRAM] struct .
  7894 ;;  bexp            1   18[COMRAM] unsigned char 
  7895 ;;  aexp            1   17[COMRAM] unsigned char 
  7896 ;;  sign            1   12[COMRAM] unsigned char 
  7897 ;; Return value:  Size  Location     Type
  7898 ;;                  4    0[COMRAM] unsigned char 
  7899 ;; Registers used:
  7900 ;;		wreg, status,2, status,0, prodl, prodh
  7901 ;; Tracked objects:
  7902 ;;		On entry : 0/0
  7903 ;;		On exit  : 0/0
  7904 ;;		Unchanged: 0/0
  7905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7906 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7907 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7908 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7909 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7910 ;;Total ram usage:       25 bytes
  7911 ;; Hardware stack levels used: 1
  7912 ;; This function calls:
  7913 ;;		Nothing
  7914 ;; This function is called by:
  7915 ;;		_pid_step
  7916 ;;		_efgtoa
  7917 ;; This function uses a non-reentrant model
  7918 ;;
  7919                           
  7920                           	psect	text29
  7921  0025B6                     __ptext29:
  7922                           	callstack 0
  7923  0025B6                     ___flmul:
  7924                           	callstack 26
  7925  0025B6  5004               	movf	(___flmul@b+3)^0,w,c
  7926  0025B8  0B80               	andlw	128
  7927  0025BA  6E0D               	movwf	___flmul@sign^0,c
  7928  0025BC  5004               	movf	(___flmul@b+3)^0,w,c
  7929  0025BE  2404               	addwf	(___flmul@b+3)^0,w,c
  7930  0025C0  6E13               	movwf	___flmul@bexp^0,c
  7931  0025C2  AE03               	btfss	(___flmul@b+2)^0,7,c
  7932  0025C4  EFE6  F012         	goto	u3381
  7933  0025C8  EFE8  F012         	goto	u3380
  7934  0025CC                     u3381:
  7935  0025CC  EFE9  F012         	goto	l2976
  7936  0025D0                     u3380:
  7937  0025D0  8013               	bsf	___flmul@bexp^0,0,c
  7938  0025D2                     l2976:
  7939  0025D2  5013               	movf	___flmul@bexp^0,w,c
  7940  0025D4  B4D8               	btfsc	status,2,c
  7941  0025D6  EFEF  F012         	goto	u3391
  7942  0025DA  EFF1  F012         	goto	u3390
  7943  0025DE                     u3391:
  7944  0025DE  EF04  F013         	goto	l2984
  7945  0025E2                     u3390:
  7946  0025E2  2813               	incf	___flmul@bexp^0,w,c
  7947  0025E4  A4D8               	btfss	status,2,c
  7948  0025E6  EFF7  F012         	goto	u3401
  7949  0025EA  EFF9  F012         	goto	u3400
  7950  0025EE                     u3401:
  7951  0025EE  EF01  F013         	goto	l2982
  7952  0025F2                     u3400:
  7953  0025F2  0E00               	movlw	0
  7954  0025F4  6E01               	movwf	___flmul@b^0,c
  7955  0025F6  0E00               	movlw	0
  7956  0025F8  6E02               	movwf	(___flmul@b+1)^0,c
  7957  0025FA  0E00               	movlw	0
  7958  0025FC  6E03               	movwf	(___flmul@b+2)^0,c
  7959  0025FE  0E00               	movlw	0
  7960  002600  6E04               	movwf	(___flmul@b+3)^0,c
  7961  002602                     l2982:
  7962  002602  8E03               	bsf	(___flmul@b+2)^0,7,c
  7963  002604  EF0C  F013         	goto	l2986
  7964  002608                     l2984:
  7965  002608  0E00               	movlw	0
  7966  00260A  6E01               	movwf	___flmul@b^0,c
  7967  00260C  0E00               	movlw	0
  7968  00260E  6E02               	movwf	(___flmul@b+1)^0,c
  7969  002610  0E00               	movlw	0
  7970  002612  6E03               	movwf	(___flmul@b+2)^0,c
  7971  002614  0E00               	movlw	0
  7972  002616  6E04               	movwf	(___flmul@b+3)^0,c
  7973  002618                     l2986:
  7974  002618  5008               	movf	(___flmul@a+3)^0,w,c
  7975  00261A  0B80               	andlw	128
  7976  00261C  1A0D               	xorwf	___flmul@sign^0,f,c
  7977  00261E  5008               	movf	(___flmul@a+3)^0,w,c
  7978  002620  2408               	addwf	(___flmul@a+3)^0,w,c
  7979  002622  6E12               	movwf	___flmul@aexp^0,c
  7980  002624  AE07               	btfss	(___flmul@a+2)^0,7,c
  7981  002626  EF17  F013         	goto	u3411
  7982  00262A  EF19  F013         	goto	u3410
  7983  00262E                     u3411:
  7984  00262E  EF1A  F013         	goto	l2994
  7985  002632                     u3410:
  7986  002632  8012               	bsf	___flmul@aexp^0,0,c
  7987  002634                     l2994:
  7988  002634  5012               	movf	___flmul@aexp^0,w,c
  7989  002636  B4D8               	btfsc	status,2,c
  7990  002638  EF20  F013         	goto	u3421
  7991  00263C  EF22  F013         	goto	u3420
  7992  002640                     u3421:
  7993  002640  EF35  F013         	goto	l3002
  7994  002644                     u3420:
  7995  002644  2812               	incf	___flmul@aexp^0,w,c
  7996  002646  A4D8               	btfss	status,2,c
  7997  002648  EF28  F013         	goto	u3431
  7998  00264C  EF2A  F013         	goto	u3430
  7999  002650                     u3431:
  8000  002650  EF32  F013         	goto	l3000
  8001  002654                     u3430:
  8002  002654  0E00               	movlw	0
  8003  002656  6E05               	movwf	___flmul@a^0,c
  8004  002658  0E00               	movlw	0
  8005  00265A  6E06               	movwf	(___flmul@a+1)^0,c
  8006  00265C  0E00               	movlw	0
  8007  00265E  6E07               	movwf	(___flmul@a+2)^0,c
  8008  002660  0E00               	movlw	0
  8009  002662  6E08               	movwf	(___flmul@a+3)^0,c
  8010  002664                     l3000:
  8011  002664  8E07               	bsf	(___flmul@a+2)^0,7,c
  8012  002666  EF3D  F013         	goto	l694
  8013  00266A                     l3002:
  8014  00266A  0E00               	movlw	0
  8015  00266C  6E05               	movwf	___flmul@a^0,c
  8016  00266E  0E00               	movlw	0
  8017  002670  6E06               	movwf	(___flmul@a+1)^0,c
  8018  002672  0E00               	movlw	0
  8019  002674  6E07               	movwf	(___flmul@a+2)^0,c
  8020  002676  0E00               	movlw	0
  8021  002678  6E08               	movwf	(___flmul@a+3)^0,c
  8022  00267A                     l694:
  8023  00267A  5012               	movf	___flmul@aexp^0,w,c
  8024  00267C  B4D8               	btfsc	status,2,c
  8025  00267E  EF43  F013         	goto	u3441
  8026  002682  EF45  F013         	goto	u3440
  8027  002686                     u3441:
  8028  002686  EF4D  F013         	goto	l3006
  8029  00268A                     u3440:
  8030  00268A  5013               	movf	___flmul@bexp^0,w,c
  8031  00268C  A4D8               	btfss	status,2,c
  8032  00268E  EF4B  F013         	goto	u3451
  8033  002692  EF4D  F013         	goto	u3450
  8034  002696                     u3451:
  8035  002696  EF57  F013         	goto	l3010
  8036  00269A                     u3450:
  8037  00269A                     l3006:
  8038  00269A  0E00               	movlw	0
  8039  00269C  6E01               	movwf	?___flmul^0,c
  8040  00269E  0E00               	movlw	0
  8041  0026A0  6E02               	movwf	(?___flmul+1)^0,c
  8042  0026A2  0E00               	movlw	0
  8043  0026A4  6E03               	movwf	(?___flmul+2)^0,c
  8044  0026A6  0E00               	movlw	0
  8045  0026A8  6E04               	movwf	(?___flmul+3)^0,c
  8046  0026AA  EFEF  F014         	goto	l698
  8047  0026AE                     l3010:
  8048  0026AE  5007               	movf	(___flmul@a+2)^0,w,c
  8049  0026B0  0201               	mulwf	___flmul@b^0,c
  8050  0026B2  CFF3 F018          	movff	prodl,___flmul@temp
  8051  0026B6  CFF4 F019          	movff	prodh,___flmul@temp+1
  8052  0026BA  5018               	movf	___flmul@temp^0,w,c
  8053  0026BC  6E0E               	movwf	___flmul@grs^0,c
  8054  0026BE  6A0F               	clrf	(___flmul@grs+1)^0,c
  8055  0026C0  6A10               	clrf	(___flmul@grs+2)^0,c
  8056  0026C2  6A11               	clrf	(___flmul@grs+3)^0,c
  8057  0026C4  5019               	movf	(___flmul@temp+1)^0,w,c
  8058  0026C6  6E14               	movwf	___flmul@prod^0,c
  8059  0026C8  6A15               	clrf	(___flmul@prod+1)^0,c
  8060  0026CA  6A16               	clrf	(___flmul@prod+2)^0,c
  8061  0026CC  6A17               	clrf	(___flmul@prod+3)^0,c
  8062  0026CE  5006               	movf	(___flmul@a+1)^0,w,c
  8063  0026D0  0202               	mulwf	(___flmul@b+1)^0,c
  8064  0026D2  CFF3 F018          	movff	prodl,___flmul@temp
  8065  0026D6  CFF4 F019          	movff	prodh,___flmul@temp+1
  8066  0026DA  5018               	movf	___flmul@temp^0,w,c
  8067  0026DC  260E               	addwf	___flmul@grs^0,f,c
  8068  0026DE  0E00               	movlw	0
  8069  0026E0  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8070  0026E2  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8071  0026E4  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8072  0026E6  5019               	movf	(___flmul@temp+1)^0,w,c
  8073  0026E8  2614               	addwf	___flmul@prod^0,f,c
  8074  0026EA  0E00               	movlw	0
  8075  0026EC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8076  0026EE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8077  0026F0  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8078  0026F2  5005               	movf	___flmul@a^0,w,c
  8079  0026F4  0203               	mulwf	(___flmul@b+2)^0,c
  8080  0026F6  CFF3 F018          	movff	prodl,___flmul@temp
  8081  0026FA  CFF4 F019          	movff	prodh,___flmul@temp+1
  8082  0026FE  5018               	movf	___flmul@temp^0,w,c
  8083  002700  260E               	addwf	___flmul@grs^0,f,c
  8084  002702  0E00               	movlw	0
  8085  002704  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8086  002706  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8087  002708  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8088  00270A  5019               	movf	(___flmul@temp+1)^0,w,c
  8089  00270C  2614               	addwf	___flmul@prod^0,f,c
  8090  00270E  0E00               	movlw	0
  8091  002710  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8092  002712  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8093  002714  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8094  002716  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  8095  00271A  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  8096  00271E  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  8097  002722  6A0E               	clrf	___flmul@grs^0,c
  8098  002724  5005               	movf	___flmul@a^0,w,c
  8099  002726  0202               	mulwf	(___flmul@b+1)^0,c
  8100  002728  CFF3 F018          	movff	prodl,___flmul@temp
  8101  00272C  CFF4 F019          	movff	prodh,___flmul@temp+1
  8102  002730  5018               	movf	___flmul@temp^0,w,c
  8103  002732  260E               	addwf	___flmul@grs^0,f,c
  8104  002734  5019               	movf	(___flmul@temp+1)^0,w,c
  8105  002736  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8106  002738  0E00               	movlw	0
  8107  00273A  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8108  00273C  0E00               	movlw	0
  8109  00273E  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8110  002740  5006               	movf	(___flmul@a+1)^0,w,c
  8111  002742  0201               	mulwf	___flmul@b^0,c
  8112  002744  CFF3 F018          	movff	prodl,___flmul@temp
  8113  002748  CFF4 F019          	movff	prodh,___flmul@temp+1
  8114  00274C  5018               	movf	___flmul@temp^0,w,c
  8115  00274E  260E               	addwf	___flmul@grs^0,f,c
  8116  002750  5019               	movf	(___flmul@temp+1)^0,w,c
  8117  002752  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8118  002754  0E00               	movlw	0
  8119  002756  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8120  002758  0E00               	movlw	0
  8121  00275A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8122  00275C  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  8123  002760  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  8124  002764  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  8125  002768  6A0E               	clrf	___flmul@grs^0,c
  8126  00276A  5005               	movf	___flmul@a^0,w,c
  8127  00276C  0201               	mulwf	___flmul@b^0,c
  8128  00276E  CFF3 F018          	movff	prodl,___flmul@temp
  8129  002772  CFF4 F019          	movff	prodh,___flmul@temp+1
  8130  002776  5018               	movf	___flmul@temp^0,w,c
  8131  002778  260E               	addwf	___flmul@grs^0,f,c
  8132  00277A  5019               	movf	(___flmul@temp+1)^0,w,c
  8133  00277C  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8134  00277E  0E00               	movlw	0
  8135  002780  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8136  002782  0E00               	movlw	0
  8137  002784  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8138  002786  5007               	movf	(___flmul@a+2)^0,w,c
  8139  002788  0202               	mulwf	(___flmul@b+1)^0,c
  8140  00278A  CFF3 F018          	movff	prodl,___flmul@temp
  8141  00278E  CFF4 F019          	movff	prodh,___flmul@temp+1
  8142  002792  5018               	movf	___flmul@temp^0,w,c
  8143  002794  2614               	addwf	___flmul@prod^0,f,c
  8144  002796  5019               	movf	(___flmul@temp+1)^0,w,c
  8145  002798  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8146  00279A  0E00               	movlw	0
  8147  00279C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8148  00279E  0E00               	movlw	0
  8149  0027A0  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8150  0027A2  5006               	movf	(___flmul@a+1)^0,w,c
  8151  0027A4  0203               	mulwf	(___flmul@b+2)^0,c
  8152  0027A6  CFF3 F018          	movff	prodl,___flmul@temp
  8153  0027AA  CFF4 F019          	movff	prodh,___flmul@temp+1
  8154  0027AE  5018               	movf	___flmul@temp^0,w,c
  8155  0027B0  2614               	addwf	___flmul@prod^0,f,c
  8156  0027B2  5019               	movf	(___flmul@temp+1)^0,w,c
  8157  0027B4  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8158  0027B6  0E00               	movlw	0
  8159  0027B8  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8160  0027BA  0E00               	movlw	0
  8161  0027BC  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8162  0027BE  5007               	movf	(___flmul@a+2)^0,w,c
  8163  0027C0  0203               	mulwf	(___flmul@b+2)^0,c
  8164  0027C2  CFF3 F018          	movff	prodl,___flmul@temp
  8165  0027C6  CFF4 F019          	movff	prodh,___flmul@temp+1
  8166  0027CA  5018               	movf	___flmul@temp^0,w,c
  8167  0027CC  6E09               	movwf	??___flmul^0,c
  8168  0027CE  5019               	movf	(___flmul@temp+1)^0,w,c
  8169  0027D0  6E0A               	movwf	(??___flmul+1)^0,c
  8170  0027D2  6A0B               	clrf	(??___flmul+2)^0,c
  8171  0027D4  6A0C               	clrf	(??___flmul+3)^0,c
  8172  0027D6  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  8173  0027DA  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  8174  0027DE  C009  F00A         	movff	??___flmul,??___flmul+1
  8175  0027E2  6A09               	clrf	??___flmul^0,c
  8176  0027E4  5009               	movf	??___flmul^0,w,c
  8177  0027E6  2614               	addwf	___flmul@prod^0,f,c
  8178  0027E8  500A               	movf	(??___flmul+1)^0,w,c
  8179  0027EA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8180  0027EC  500B               	movf	(??___flmul+2)^0,w,c
  8181  0027EE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8182  0027F0  500C               	movf	(??___flmul+3)^0,w,c
  8183  0027F2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8184  0027F4  C00E  F009         	movff	___flmul@grs,??___flmul
  8185  0027F8  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  8186  0027FC  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  8187  002800  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  8188  002804  0E19               	movlw	25
  8189  002806  EF0A  F014         	goto	u3460
  8190  00280A                     u3465:
  8191  00280A  90D8               	bcf	status,0,c
  8192  00280C  320C               	rrcf	(??___flmul+3)^0,f,c
  8193  00280E  320B               	rrcf	(??___flmul+2)^0,f,c
  8194  002810  320A               	rrcf	(??___flmul+1)^0,f,c
  8195  002812  3209               	rrcf	??___flmul^0,f,c
  8196  002814                     u3460:
  8197  002814  2EE8               	decfsz	wreg,f,c
  8198  002816  EF05  F014         	goto	u3465
  8199  00281A  5009               	movf	??___flmul^0,w,c
  8200  00281C  2614               	addwf	___flmul@prod^0,f,c
  8201  00281E  500A               	movf	(??___flmul+1)^0,w,c
  8202  002820  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8203  002822  500B               	movf	(??___flmul+2)^0,w,c
  8204  002824  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8205  002826  500C               	movf	(??___flmul+3)^0,w,c
  8206  002828  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8207  00282A  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  8208  00282E  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  8209  002832  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  8210  002836  6A0E               	clrf	___flmul@grs^0,c
  8211  002838  5012               	movf	___flmul@aexp^0,w,c
  8212  00283A  C013  F009         	movff	___flmul@bexp,??___flmul
  8213  00283E  6A0A               	clrf	(??___flmul+1)^0,c
  8214  002840  2609               	addwf	??___flmul^0,f,c
  8215  002842  0E00               	movlw	0
  8216  002844  220A               	addwfc	(??___flmul+1)^0,f,c
  8217  002846  0E82               	movlw	130
  8218  002848  2409               	addwf	??___flmul^0,w,c
  8219  00284A  6E18               	movwf	___flmul@temp^0,c
  8220  00284C  0EFF               	movlw	255
  8221  00284E  200A               	addwfc	(??___flmul+1)^0,w,c
  8222  002850  6E19               	movwf	(___flmul@temp+1)^0,c
  8223  002852  EF40  F014         	goto	l3058
  8224  002856                     l3052:
  8225  002856  90D8               	bcf	status,0,c
  8226  002858  3614               	rlcf	___flmul@prod^0,f,c
  8227  00285A  3615               	rlcf	(___flmul@prod+1)^0,f,c
  8228  00285C  3616               	rlcf	(___flmul@prod+2)^0,f,c
  8229  00285E  3617               	rlcf	(___flmul@prod+3)^0,f,c
  8230  002860  AE11               	btfss	(___flmul@grs+3)^0,7,c
  8231  002862  EF35  F014         	goto	u3471
  8232  002866  EF37  F014         	goto	u3470
  8233  00286A                     u3471:
  8234  00286A  EF38  F014         	goto	l701
  8235  00286E                     u3470:
  8236  00286E  8014               	bsf	___flmul@prod^0,0,c
  8237  002870                     l701:
  8238  002870  90D8               	bcf	status,0,c
  8239  002872  360E               	rlcf	___flmul@grs^0,f,c
  8240  002874  360F               	rlcf	(___flmul@grs+1)^0,f,c
  8241  002876  3610               	rlcf	(___flmul@grs+2)^0,f,c
  8242  002878  3611               	rlcf	(___flmul@grs+3)^0,f,c
  8243  00287A  0618               	decf	___flmul@temp^0,f,c
  8244  00287C  A0D8               	btfss	status,0,c
  8245  00287E  0619               	decf	(___flmul@temp+1)^0,f,c
  8246  002880                     l3058:
  8247  002880  AE16               	btfss	(___flmul@prod+2)^0,7,c
  8248  002882  EF45  F014         	goto	u3481
  8249  002886  EF47  F014         	goto	u3480
  8250  00288A                     u3481:
  8251  00288A  EF2B  F014         	goto	l3052
  8252  00288E                     u3480:
  8253  00288E  0E00               	movlw	0
  8254  002890  6E12               	movwf	___flmul@aexp^0,c
  8255  002892  AE11               	btfss	(___flmul@grs+3)^0,7,c
  8256  002894  EF4E  F014         	goto	u3491
  8257  002898  EF50  F014         	goto	u3490
  8258  00289C                     u3491:
  8259  00289C  EF74  F014         	goto	l703
  8260  0028A0                     u3490:
  8261  0028A0  0EFF               	movlw	255
  8262  0028A2  140E               	andwf	___flmul@grs^0,w,c
  8263  0028A4  6E09               	movwf	??___flmul^0,c
  8264  0028A6  0EFF               	movlw	255
  8265  0028A8  140F               	andwf	(___flmul@grs+1)^0,w,c
  8266  0028AA  6E0A               	movwf	(??___flmul+1)^0,c
  8267  0028AC  0EFF               	movlw	255
  8268  0028AE  1410               	andwf	(___flmul@grs+2)^0,w,c
  8269  0028B0  6E0B               	movwf	(??___flmul+2)^0,c
  8270  0028B2  0E7F               	movlw	127
  8271  0028B4  1411               	andwf	(___flmul@grs+3)^0,w,c
  8272  0028B6  6E0C               	movwf	(??___flmul+3)^0,c
  8273  0028B8  5009               	movf	??___flmul^0,w,c
  8274  0028BA  100A               	iorwf	(??___flmul+1)^0,w,c
  8275  0028BC  100B               	iorwf	(??___flmul+2)^0,w,c
  8276  0028BE  100C               	iorwf	(??___flmul+3)^0,w,c
  8277  0028C0  B4D8               	btfsc	status,2,c
  8278  0028C2  EF65  F014         	goto	u3501
  8279  0028C6  EF67  F014         	goto	u3500
  8280  0028CA                     u3501:
  8281  0028CA  EF6B  F014         	goto	l704
  8282  0028CE                     u3500:
  8283  0028CE                     l3066:
  8284  0028CE  0E01               	movlw	1
  8285  0028D0  6E12               	movwf	___flmul@aexp^0,c
  8286  0028D2  EF74  F014         	goto	l703
  8287  0028D6                     l704:
  8288  0028D6  A014               	btfss	___flmul@prod^0,0,c
  8289  0028D8  EF70  F014         	goto	u3511
  8290  0028DC  EF72  F014         	goto	u3510
  8291  0028E0                     u3511:
  8292  0028E0  EF74  F014         	goto	l703
  8293  0028E4                     u3510:
  8294  0028E4  EF67  F014         	goto	l3066
  8295  0028E8                     l703:
  8296  0028E8  5012               	movf	___flmul@aexp^0,w,c
  8297  0028EA  B4D8               	btfsc	status,2,c
  8298  0028EC  EF7A  F014         	goto	u3521
  8299  0028F0  EF7C  F014         	goto	u3520
  8300  0028F4                     u3521:
  8301  0028F4  EFA0  F014         	goto	l3078
  8302  0028F8                     u3520:
  8303  0028F8  0E01               	movlw	1
  8304  0028FA  2614               	addwf	___flmul@prod^0,f,c
  8305  0028FC  0E00               	movlw	0
  8306  0028FE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8307  002900  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8308  002902  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8309  002904  A017               	btfss	(___flmul@prod+3)^0,0,c
  8310  002906  EF87  F014         	goto	u3531
  8311  00290A  EF89  F014         	goto	u3530
  8312  00290E                     u3531:
  8313  00290E  EFA0  F014         	goto	l3078
  8314  002912                     u3530:
  8315  002912  C014  F009         	movff	___flmul@prod,??___flmul
  8316  002916  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  8317  00291A  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  8318  00291E  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  8319  002922  340C               	rlcf	(??___flmul+3)^0,w,c
  8320  002924  320C               	rrcf	(??___flmul+3)^0,f,c
  8321  002926  320B               	rrcf	(??___flmul+2)^0,f,c
  8322  002928  320A               	rrcf	(??___flmul+1)^0,f,c
  8323  00292A  3209               	rrcf	??___flmul^0,f,c
  8324  00292C  C009  F014         	movff	??___flmul,___flmul@prod
  8325  002930  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  8326  002934  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  8327  002938  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  8328  00293C  4A18               	infsnz	___flmul@temp^0,f,c
  8329  00293E  2A19               	incf	(___flmul@temp+1)^0,f,c
  8330  002940                     l3078:
  8331  002940  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  8332  002942  EFAB  F014         	goto	u3541
  8333  002946  5019               	movf	(___flmul@temp+1)^0,w,c
  8334  002948  E108               	bnz	u3540
  8335  00294A  2818               	incf	___flmul@temp^0,w,c
  8336  00294C  A0D8               	btfss	status,0,c
  8337  00294E  EFAB  F014         	goto	u3541
  8338  002952  EFAD  F014         	goto	u3540
  8339  002956                     u3541:
  8340  002956  EFB7  F014         	goto	l3082
  8341  00295A                     u3540:
  8342  00295A  0E00               	movlw	0
  8343  00295C  6E14               	movwf	___flmul@prod^0,c
  8344  00295E  0E00               	movlw	0
  8345  002960  6E15               	movwf	(___flmul@prod+1)^0,c
  8346  002962  0E80               	movlw	128
  8347  002964  6E16               	movwf	(___flmul@prod+2)^0,c
  8348  002966  0E7F               	movlw	127
  8349  002968  6E17               	movwf	(___flmul@prod+3)^0,c
  8350  00296A  EFE5  F014         	goto	l3094
  8351  00296E                     l3082:
  8352  00296E  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  8353  002970  EFC4  F014         	goto	u3550
  8354  002974  5019               	movf	(___flmul@temp+1)^0,w,c
  8355  002976  E106               	bnz	u3551
  8356  002978  0418               	decf	___flmul@temp^0,w,c
  8357  00297A  B0D8               	btfsc	status,0,c
  8358  00297C  EFC2  F014         	goto	u3551
  8359  002980  EFC4  F014         	goto	u3550
  8360  002984                     u3551:
  8361  002984  EFD0  F014         	goto	l711
  8362  002988                     u3550:
  8363  002988  0E00               	movlw	0
  8364  00298A  6E14               	movwf	___flmul@prod^0,c
  8365  00298C  0E00               	movlw	0
  8366  00298E  6E15               	movwf	(___flmul@prod+1)^0,c
  8367  002990  0E00               	movlw	0
  8368  002992  6E16               	movwf	(___flmul@prod+2)^0,c
  8369  002994  0E00               	movlw	0
  8370  002996  6E17               	movwf	(___flmul@prod+3)^0,c
  8371  002998  0E00               	movlw	0
  8372  00299A  6E0D               	movwf	___flmul@sign^0,c
  8373  00299C  EFE5  F014         	goto	l3094
  8374  0029A0                     l711:
  8375  0029A0  C018  F013         	movff	___flmul@temp,___flmul@bexp
  8376  0029A4  0EFF               	movlw	255
  8377  0029A6  1614               	andwf	___flmul@prod^0,f,c
  8378  0029A8  0EFF               	movlw	255
  8379  0029AA  1615               	andwf	(___flmul@prod+1)^0,f,c
  8380  0029AC  0E7F               	movlw	127
  8381  0029AE  1616               	andwf	(___flmul@prod+2)^0,f,c
  8382  0029B0  0E00               	movlw	0
  8383  0029B2  1617               	andwf	(___flmul@prod+3)^0,f,c
  8384  0029B4  A013               	btfss	___flmul@bexp^0,0,c
  8385  0029B6  EFDF  F014         	goto	u3561
  8386  0029BA  EFE1  F014         	goto	u3560
  8387  0029BE                     u3561:
  8388  0029BE  EFE2  F014         	goto	l3092
  8389  0029C2                     u3560:
  8390  0029C2  8E16               	bsf	(___flmul@prod+2)^0,7,c
  8391  0029C4                     l3092:
  8392  0029C4  90D8               	bcf	status,0,c
  8393  0029C6  3013               	rrcf	___flmul@bexp^0,w,c
  8394  0029C8  6E17               	movwf	(___flmul@prod+3)^0,c
  8395  0029CA                     l3094:
  8396  0029CA  500D               	movf	___flmul@sign^0,w,c
  8397  0029CC  1217               	iorwf	(___flmul@prod+3)^0,f,c
  8398  0029CE  C014  F001         	movff	___flmul@prod,?___flmul
  8399  0029D2  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  8400  0029D6  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  8401  0029DA  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  8402  0029DE                     l698:
  8403  0029DE  0012               	return		;funcret
  8404  0029E0                     __end_of___flmul:
  8405                           	callstack 0
  8406                           
  8407 ;; *************** function ___flge *****************
  8408 ;; Defined at:
  8409 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  8410 ;; Parameters:    Size  Location     Type
  8411 ;;  ff1             4   25[COMRAM] unsigned char 
  8412 ;;  ff2             4   29[COMRAM] unsigned char 
  8413 ;; Auto vars:     Size  Location     Type
  8414 ;;		None
  8415 ;; Return value:  Size  Location     Type
  8416 ;;		None               void
  8417 ;; Registers used:
  8418 ;;		wreg, status,2, status,0
  8419 ;; Tracked objects:
  8420 ;;		On entry : 0/0
  8421 ;;		On exit  : 0/0
  8422 ;;		Unchanged: 0/0
  8423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8424 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8426 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8427 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8428 ;;Total ram usage:       12 bytes
  8429 ;; Hardware stack levels used: 1
  8430 ;; This function calls:
  8431 ;;		Nothing
  8432 ;; This function is called by:
  8433 ;;		_main
  8434 ;;		_pid_step
  8435 ;;		_efgtoa
  8436 ;; This function uses a non-reentrant model
  8437 ;;
  8438                           
  8439                           	psect	text30
  8440  003B50                     __ptext30:
  8441                           	callstack 0
  8442  003B50                     ___flge:
  8443                           	callstack 26
  8444  003B50  0E00               	movlw	0
  8445  003B52  141A               	andwf	___flge@ff1^0,w,c
  8446  003B54  6E22               	movwf	??___flge^0,c
  8447  003B56  0E00               	movlw	0
  8448  003B58  141B               	andwf	(___flge@ff1+1)^0,w,c
  8449  003B5A  6E23               	movwf	(??___flge+1)^0,c
  8450  003B5C  0E80               	movlw	128
  8451  003B5E  141C               	andwf	(___flge@ff1+2)^0,w,c
  8452  003B60  6E24               	movwf	(??___flge+2)^0,c
  8453  003B62  0E7F               	movlw	127
  8454  003B64  141D               	andwf	(___flge@ff1+3)^0,w,c
  8455  003B66  6E25               	movwf	(??___flge+3)^0,c
  8456  003B68  5022               	movf	??___flge^0,w,c
  8457  003B6A  1023               	iorwf	(??___flge+1)^0,w,c
  8458  003B6C  1024               	iorwf	(??___flge+2)^0,w,c
  8459  003B6E  1025               	iorwf	(??___flge+3)^0,w,c
  8460  003B70  A4D8               	btfss	status,2,c
  8461  003B72  EFBD  F01D         	goto	u3721
  8462  003B76  EFBF  F01D         	goto	u3720
  8463  003B7A                     u3721:
  8464  003B7A  EFC7  F01D         	goto	l3206
  8465  003B7E                     u3720:
  8466  003B7E  0E00               	movlw	0
  8467  003B80  6E1A               	movwf	___flge@ff1^0,c
  8468  003B82  0E00               	movlw	0
  8469  003B84  6E1B               	movwf	(___flge@ff1+1)^0,c
  8470  003B86  0E00               	movlw	0
  8471  003B88  6E1C               	movwf	(___flge@ff1+2)^0,c
  8472  003B8A  0E00               	movlw	0
  8473  003B8C  6E1D               	movwf	(___flge@ff1+3)^0,c
  8474  003B8E                     l3206:
  8475  003B8E  0E00               	movlw	0
  8476  003B90  141E               	andwf	___flge@ff2^0,w,c
  8477  003B92  6E22               	movwf	??___flge^0,c
  8478  003B94  0E00               	movlw	0
  8479  003B96  141F               	andwf	(___flge@ff2+1)^0,w,c
  8480  003B98  6E23               	movwf	(??___flge+1)^0,c
  8481  003B9A  0E80               	movlw	128
  8482  003B9C  1420               	andwf	(___flge@ff2+2)^0,w,c
  8483  003B9E  6E24               	movwf	(??___flge+2)^0,c
  8484  003BA0  0E7F               	movlw	127
  8485  003BA2  1421               	andwf	(___flge@ff2+3)^0,w,c
  8486  003BA4  6E25               	movwf	(??___flge+3)^0,c
  8487  003BA6  5022               	movf	??___flge^0,w,c
  8488  003BA8  1023               	iorwf	(??___flge+1)^0,w,c
  8489  003BAA  1024               	iorwf	(??___flge+2)^0,w,c
  8490  003BAC  1025               	iorwf	(??___flge+3)^0,w,c
  8491  003BAE  A4D8               	btfss	status,2,c
  8492  003BB0  EFDC  F01D         	goto	u3731
  8493  003BB4  EFDE  F01D         	goto	u3730
  8494  003BB8                     u3731:
  8495  003BB8  EFE6  F01D         	goto	l3210
  8496  003BBC                     u3730:
  8497  003BBC  0E00               	movlw	0
  8498  003BBE  6E1E               	movwf	___flge@ff2^0,c
  8499  003BC0  0E00               	movlw	0
  8500  003BC2  6E1F               	movwf	(___flge@ff2+1)^0,c
  8501  003BC4  0E00               	movlw	0
  8502  003BC6  6E20               	movwf	(___flge@ff2+2)^0,c
  8503  003BC8  0E00               	movlw	0
  8504  003BCA  6E21               	movwf	(___flge@ff2+3)^0,c
  8505  003BCC                     l3210:
  8506  003BCC  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  8507  003BCE  EFEB  F01D         	goto	u3741
  8508  003BD2  EFED  F01D         	goto	u3740
  8509  003BD6                     u3741:
  8510  003BD6  EFF6  F01D         	goto	l3214
  8511  003BDA                     u3740:
  8512  003BDA  6C1A               	negf	___flge@ff1^0,c
  8513  003BDC  1E1B               	comf	(___flge@ff1+1)^0,f,c
  8514  003BDE  B0D8               	btfsc	status,0,c
  8515  003BE0  2A1B               	incf	(___flge@ff1+1)^0,f,c
  8516  003BE2  1E1C               	comf	(___flge@ff1+2)^0,f,c
  8517  003BE4  B0D8               	btfsc	status,0,c
  8518  003BE6  2A1C               	incf	(___flge@ff1+2)^0,f,c
  8519  003BE8  0E80               	movlw	128
  8520  003BEA  561D               	subfwb	(___flge@ff1+3)^0,f,c
  8521  003BEC                     l3214:
  8522  003BEC  AE21               	btfss	(___flge@ff2+3)^0,7,c
  8523  003BEE  EFFB  F01D         	goto	u3751
  8524  003BF2  EFFD  F01D         	goto	u3750
  8525  003BF6                     u3751:
  8526  003BF6  EF06  F01E         	goto	l345
  8527  003BFA                     u3750:
  8528  003BFA  6C1E               	negf	___flge@ff2^0,c
  8529  003BFC  1E1F               	comf	(___flge@ff2+1)^0,f,c
  8530  003BFE  B0D8               	btfsc	status,0,c
  8531  003C00  2A1F               	incf	(___flge@ff2+1)^0,f,c
  8532  003C02  1E20               	comf	(___flge@ff2+2)^0,f,c
  8533  003C04  B0D8               	btfsc	status,0,c
  8534  003C06  2A20               	incf	(___flge@ff2+2)^0,f,c
  8535  003C08  0E80               	movlw	128
  8536  003C0A  5621               	subfwb	(___flge@ff2+3)^0,f,c
  8537  003C0C                     l345:
  8538  003C0C  0E00               	movlw	0
  8539  003C0E  1A1A               	xorwf	___flge@ff1^0,f,c
  8540  003C10  0E00               	movlw	0
  8541  003C12  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  8542  003C14  0E00               	movlw	0
  8543  003C16  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  8544  003C18  0E80               	movlw	128
  8545  003C1A  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  8546  003C1C  0E00               	movlw	0
  8547  003C1E  1A1E               	xorwf	___flge@ff2^0,f,c
  8548  003C20  0E00               	movlw	0
  8549  003C22  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  8550  003C24  0E00               	movlw	0
  8551  003C26  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  8552  003C28  0E80               	movlw	128
  8553  003C2A  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  8554  003C2C  501E               	movf	___flge@ff2^0,w,c
  8555  003C2E  5C1A               	subwf	___flge@ff1^0,w,c
  8556  003C30  501F               	movf	(___flge@ff2+1)^0,w,c
  8557  003C32  581B               	subwfb	(___flge@ff1+1)^0,w,c
  8558  003C34  5020               	movf	(___flge@ff2+2)^0,w,c
  8559  003C36  581C               	subwfb	(___flge@ff1+2)^0,w,c
  8560  003C38  5021               	movf	(___flge@ff2+3)^0,w,c
  8561  003C3A  581D               	subwfb	(___flge@ff1+3)^0,w,c
  8562  003C3C  B0D8               	btfsc	status,0,c
  8563  003C3E  EF23  F01E         	goto	u3761
  8564  003C42  EF25  F01E         	goto	u3760
  8565  003C46                     u3761:
  8566  003C46  EF28  F01E         	goto	l3220
  8567  003C4A                     u3760:
  8568  003C4A  90D8               	bcf	status,0,c
  8569  003C4C  EF29  F01E         	goto	l350
  8570  003C50                     l3220:
  8571  003C50  80D8               	bsf	status,0,c
  8572  003C52                     l350:
  8573  003C52  0012               	return		;funcret
  8574  003C54                     __end_of___flge:
  8575                           	callstack 0
  8576                           
  8577 ;; *************** function _pid_reset *****************
  8578 ;; Defined at:
  8579 ;;		line 40 in file "pid.c"
  8580 ;; Parameters:    Size  Location     Type
  8581 ;;  self            2   22[COMRAM] const PTR struct .
  8582 ;;		 -> main@pid1(24), 
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;		None
  8585 ;; Return value:  Size  Location     Type
  8586 ;;                  1    wreg      void 
  8587 ;; Registers used:
  8588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8589 ;; Tracked objects:
  8590 ;;		On entry : 0/0
  8591 ;;		On exit  : 0/0
  8592 ;;		Unchanged: 0/0
  8593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8594 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8597 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8598 ;;Total ram usage:        2 bytes
  8599 ;; Hardware stack levels used: 1
  8600 ;; Hardware stack levels required when called: 1
  8601 ;; This function calls:
  8602 ;;		_pid_init
  8603 ;; This function is called by:
  8604 ;;		_main
  8605 ;; This function uses a non-reentrant model
  8606 ;;
  8607                           
  8608                           	psect	text31
  8609  0042FA                     __ptext31:
  8610                           	callstack 0
  8611  0042FA                     _pid_reset:
  8612                           	callstack 29
  8613  0042FA                     
  8614                           ;pid.c: 42:     pid_init(self, self->kp, self->ki, self->max, self->min, self->h);
  8615  0042FA  C017  F001         	movff	pid_reset@self,pid_init@self
  8616  0042FE  C018  F002         	movff	pid_reset@self+1,pid_init@self+1
  8617  004302  C017  FFD9         	movff	pid_reset@self,fsr2l
  8618  004306  C018  FFDA         	movff	pid_reset@self+1,fsr2h
  8619  00430A  CFDE F003          	movff	postinc2,pid_init@kp
  8620  00430E  CFDE F004          	movff	postinc2,pid_init@kp+1
  8621  004312  CFDE F005          	movff	postinc2,pid_init@kp+2
  8622  004316  CFDE F006          	movff	postinc2,pid_init@kp+3
  8623  00431A  EE20 F004          	lfsr	2,4
  8624  00431E  5017               	movf	pid_reset@self^0,w,c
  8625  004320  26D9               	addwf	fsr2l,f,c
  8626  004322  5018               	movf	(pid_reset@self+1)^0,w,c
  8627  004324  22DA               	addwfc	fsr2h,f,c
  8628  004326  CFDE F007          	movff	postinc2,pid_init@ki
  8629  00432A  CFDE F008          	movff	postinc2,pid_init@ki+1
  8630  00432E  CFDE F009          	movff	postinc2,pid_init@ki+2
  8631  004332  CFDE F00A          	movff	postinc2,pid_init@ki+3
  8632  004336  EE20 F00C          	lfsr	2,12
  8633  00433A  5017               	movf	pid_reset@self^0,w,c
  8634  00433C  26D9               	addwf	fsr2l,f,c
  8635  00433E  5018               	movf	(pid_reset@self+1)^0,w,c
  8636  004340  22DA               	addwfc	fsr2h,f,c
  8637  004342  CFDE F00B          	movff	postinc2,pid_init@max
  8638  004346  CFDE F00C          	movff	postinc2,pid_init@max+1
  8639  00434A  CFDE F00D          	movff	postinc2,pid_init@max+2
  8640  00434E  CFDE F00E          	movff	postinc2,pid_init@max+3
  8641  004352  EE20 F010          	lfsr	2,16
  8642  004356  5017               	movf	pid_reset@self^0,w,c
  8643  004358  26D9               	addwf	fsr2l,f,c
  8644  00435A  5018               	movf	(pid_reset@self+1)^0,w,c
  8645  00435C  22DA               	addwfc	fsr2h,f,c
  8646  00435E  CFDE F00F          	movff	postinc2,pid_init@min
  8647  004362  CFDE F010          	movff	postinc2,pid_init@min+1
  8648  004366  CFDE F011          	movff	postinc2,pid_init@min+2
  8649  00436A  CFDE F012          	movff	postinc2,pid_init@min+3
  8650  00436E  EE20 F014          	lfsr	2,20
  8651  004372  5017               	movf	pid_reset@self^0,w,c
  8652  004374  26D9               	addwf	fsr2l,f,c
  8653  004376  5018               	movf	(pid_reset@self+1)^0,w,c
  8654  004378  22DA               	addwfc	fsr2h,f,c
  8655  00437A  CFDE F013          	movff	postinc2,pid_init@h
  8656  00437E  CFDE F014          	movff	postinc2,pid_init@h+1
  8657  004382  CFDE F015          	movff	postinc2,pid_init@h+2
  8658  004386  CFDE F016          	movff	postinc2,pid_init@h+3
  8659  00438A  ECDF  F020         	call	_pid_init	;wreg free
  8660  00438E  0012               	return		;funcret
  8661  004390                     __end_of_pid_reset:
  8662                           	callstack 0
  8663                           
  8664 ;; *************** function _pid_init *****************
  8665 ;; Defined at:
  8666 ;;		line 3 in file "pid.c"
  8667 ;; Parameters:    Size  Location     Type
  8668 ;;  self            2    0[COMRAM] const PTR struct .
  8669 ;;		 -> main@pid1(24), 
  8670 ;;  kp              4    2[COMRAM] float 
  8671 ;;  ki              4    6[COMRAM] float 
  8672 ;;  max             4   10[COMRAM] float 
  8673 ;;  min             4   14[COMRAM] float 
  8674 ;;  h               4   18[COMRAM] float 
  8675 ;; Auto vars:     Size  Location     Type
  8676 ;;		None
  8677 ;; Return value:  Size  Location     Type
  8678 ;;                  1    wreg      void 
  8679 ;; Registers used:
  8680 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8681 ;; Tracked objects:
  8682 ;;		On entry : 0/0
  8683 ;;		On exit  : 0/0
  8684 ;;		Unchanged: 0/0
  8685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8686 ;;      Params:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8689 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8690 ;;Total ram usage:       22 bytes
  8691 ;; Hardware stack levels used: 1
  8692 ;; This function calls:
  8693 ;;		Nothing
  8694 ;; This function is called by:
  8695 ;;		_main
  8696 ;;		_pid_reset
  8697 ;; This function uses a non-reentrant model
  8698 ;;
  8699                           
  8700                           	psect	text32
  8701  0041BE                     __ptext32:
  8702                           	callstack 0
  8703  0041BE                     _pid_init:
  8704                           	callstack 29
  8705  0041BE                     
  8706                           ;pid.c: 3: void pid_init( stPID * const self,;pid.c: 4:                 float kp,;pid.c:
      +                           5:                 float ki,;pid.c: 6:                 float max,;pid.c: 7:            
      +                               float min,;pid.c: 8:                 float h){;pid.c: 10:     self->kp = kp;
  8707  0041BE  C001  FFD9         	movff	pid_init@self,fsr2l
  8708  0041C2  C002  FFDA         	movff	pid_init@self+1,fsr2h
  8709  0041C6  C003  FFDE         	movff	pid_init@kp,postinc2
  8710  0041CA  C004  FFDE         	movff	pid_init@kp+1,postinc2
  8711  0041CE  C005  FFDE         	movff	pid_init@kp+2,postinc2
  8712  0041D2  C006  FFDE         	movff	pid_init@kp+3,postinc2
  8713  0041D6                     
  8714                           ;pid.c: 11:     self->ki = ki;
  8715  0041D6  EE20 F004          	lfsr	2,4
  8716  0041DA  5001               	movf	pid_init@self^0,w,c
  8717  0041DC  26D9               	addwf	fsr2l,f,c
  8718  0041DE  5002               	movf	(pid_init@self+1)^0,w,c
  8719  0041E0  22DA               	addwfc	fsr2h,f,c
  8720  0041E2  C007  FFDE         	movff	pid_init@ki,postinc2
  8721  0041E6  C008  FFDE         	movff	pid_init@ki+1,postinc2
  8722  0041EA  C009  FFDE         	movff	pid_init@ki+2,postinc2
  8723  0041EE  C00A  FFDE         	movff	pid_init@ki+3,postinc2
  8724  0041F2                     
  8725                           ;pid.c: 12:     self->h = h;
  8726  0041F2  EE20 F014          	lfsr	2,20
  8727  0041F6  5001               	movf	pid_init@self^0,w,c
  8728  0041F8  26D9               	addwf	fsr2l,f,c
  8729  0041FA  5002               	movf	(pid_init@self+1)^0,w,c
  8730  0041FC  22DA               	addwfc	fsr2h,f,c
  8731  0041FE  C013  FFDE         	movff	pid_init@h,postinc2
  8732  004202  C014  FFDE         	movff	pid_init@h+1,postinc2
  8733  004206  C015  FFDE         	movff	pid_init@h+2,postinc2
  8734  00420A  C016  FFDE         	movff	pid_init@h+3,postinc2
  8735  00420E                     
  8736                           ;pid.c: 13:     self->max = max;
  8737  00420E  EE20 F00C          	lfsr	2,12
  8738  004212  5001               	movf	pid_init@self^0,w,c
  8739  004214  26D9               	addwf	fsr2l,f,c
  8740  004216  5002               	movf	(pid_init@self+1)^0,w,c
  8741  004218  22DA               	addwfc	fsr2h,f,c
  8742  00421A  C00B  FFDE         	movff	pid_init@max,postinc2
  8743  00421E  C00C  FFDE         	movff	pid_init@max+1,postinc2
  8744  004222  C00D  FFDE         	movff	pid_init@max+2,postinc2
  8745  004226  C00E  FFDE         	movff	pid_init@max+3,postinc2
  8746  00422A                     
  8747                           ;pid.c: 14:     self->min = min;
  8748  00422A  EE20 F010          	lfsr	2,16
  8749  00422E  5001               	movf	pid_init@self^0,w,c
  8750  004230  26D9               	addwf	fsr2l,f,c
  8751  004232  5002               	movf	(pid_init@self+1)^0,w,c
  8752  004234  22DA               	addwfc	fsr2h,f,c
  8753  004236  C00F  FFDE         	movff	pid_init@min,postinc2
  8754  00423A  C010  FFDE         	movff	pid_init@min+1,postinc2
  8755  00423E  C011  FFDE         	movff	pid_init@min+2,postinc2
  8756  004242  C012  FFDE         	movff	pid_init@min+3,postinc2
  8757  004246                     
  8758                           ;pid.c: 15:     self->_integral = 0;
  8759  004246  EE20 F008          	lfsr	2,8
  8760  00424A  5001               	movf	pid_init@self^0,w,c
  8761  00424C  26D9               	addwf	fsr2l,f,c
  8762  00424E  5002               	movf	(pid_init@self+1)^0,w,c
  8763  004250  22DA               	addwfc	fsr2h,f,c
  8764  004252  0E00               	movlw	0
  8765  004254  6EDE               	movwf	postinc2,c
  8766  004256  0E00               	movlw	0
  8767  004258  6EDE               	movwf	postinc2,c
  8768  00425A  0E00               	movlw	0
  8769  00425C  6EDE               	movwf	postinc2,c
  8770  00425E  0E00               	movlw	0
  8771  004260  6EDD               	movwf	postdec2,c
  8772  004262  0012               	return		;funcret
  8773  004264                     __end_of_pid_init:
  8774                           	callstack 0
  8775                           
  8776 ;; *************** function _move *****************
  8777 ;; Defined at:
  8778 ;;		line 13 in file "point.c"
  8779 ;; Parameters:    Size  Location     Type
  8780 ;;  self            2    0[COMRAM] const PTR struct _sPoint
  8781 ;;		 -> main@p1(10), 
  8782 ;;  dx              2    2[COMRAM] int 
  8783 ;;  dy              2    4[COMRAM] int 
  8784 ;; Auto vars:     Size  Location     Type
  8785 ;;		None
  8786 ;; Return value:  Size  Location     Type
  8787 ;;                  1    wreg      void 
  8788 ;; Registers used:
  8789 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8790 ;; Tracked objects:
  8791 ;;		On entry : 0/0
  8792 ;;		On exit  : 0/0
  8793 ;;		Unchanged: 0/0
  8794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8795 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8798 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8799 ;;Total ram usage:        6 bytes
  8800 ;; Hardware stack levels used: 1
  8801 ;; This function calls:
  8802 ;;		Nothing
  8803 ;; This function is called by:
  8804 ;;		_point_init
  8805 ;;		_main
  8806 ;; This function uses a non-reentrant model
  8807 ;;
  8808                           
  8809                           	psect	text33
  8810  0047AC                     __ptext33:
  8811                           	callstack 0
  8812  0047AC                     _move:
  8813                           	callstack 30
  8814  0047AC                     
  8815                           ;point.c: 13: static void move( stPoint *const self,;point.c: 14:                     in
      +                          t dx,;point.c: 15:                     int dy){;point.c: 16:     self->x += dx;
  8816  0047AC  C001  FFD9         	movff	move@self,fsr2l
  8817  0047B0  C002  FFDA         	movff	move@self+1,fsr2h
  8818  0047B4  5003               	movf	move@dx^0,w,c
  8819  0047B6  26DE               	addwf	postinc2,f,c
  8820  0047B8  5004               	movf	(move@dx+1)^0,w,c
  8821  0047BA  22DD               	addwfc	postdec2,f,c
  8822  0047BC                     
  8823                           ;point.c: 17:     self->y += dy;
  8824  0047BC  EE20 F002          	lfsr	2,2
  8825  0047C0  5001               	movf	move@self^0,w,c
  8826  0047C2  26D9               	addwf	fsr2l,f,c
  8827  0047C4  5002               	movf	(move@self+1)^0,w,c
  8828  0047C6  22DA               	addwfc	fsr2h,f,c
  8829  0047C8  5005               	movf	move@dy^0,w,c
  8830  0047CA  26DE               	addwf	postinc2,f,c
  8831  0047CC  5006               	movf	(move@dy+1)^0,w,c
  8832  0047CE  22DD               	addwfc	postdec2,f,c
  8833  0047D0  0012               	return		;funcret
  8834  0047D2                     __end_of_move:
  8835                           	callstack 0
  8836                           
  8837 ;; *************** function _distance *****************
  8838 ;; Defined at:
  8839 ;;		line 44 in file "point.c"
  8840 ;; Parameters:    Size  Location     Type
  8841 ;;  self            2   16[COMRAM] const PTR struct _sPoint
  8842 ;;		 -> main@p1(10), 
  8843 ;;  other           2   18[COMRAM] const PTR struct _sPoint
  8844 ;;		 -> main@p2(10), 
  8845 ;; Auto vars:     Size  Location     Type
  8846 ;;  dy              2   28[COMRAM] int 
  8847 ;;  dx              2   26[COMRAM] int 
  8848 ;;  pwd             2   24[COMRAM] int 
  8849 ;; Return value:  Size  Location     Type
  8850 ;;                  2   16[COMRAM] int 
  8851 ;; Registers used:
  8852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8853 ;; Tracked objects:
  8854 ;;		On entry : 0/0
  8855 ;;		On exit  : 0/0
  8856 ;;		Unchanged: 0/0
  8857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8858 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8859 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8860 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8861 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8862 ;;Total ram usage:       14 bytes
  8863 ;; Hardware stack levels used: 1
  8864 ;; Hardware stack levels required when called: 2
  8865 ;; This function calls:
  8866 ;;		___wmul
  8867 ;;		_int_sqrt
  8868 ;; This function is called by:
  8869 ;;		_point_init
  8870 ;;		_main
  8871 ;; This function uses a non-reentrant model
  8872 ;;
  8873                           
  8874                           	psect	text34
  8875  003FB2                     __ptext34:
  8876                           	callstack 0
  8877  003FB2                     _distance:
  8878                           	callstack 28
  8879  003FB2                     
  8880                           ;point.c: 44: static int distance( stPoint *const self,;point.c: 45:                    
      +                               stPoint *const other){;point.c: 47:     int dx = self->x - other->x;
  8881  003FB2  C013  FFD9         	movff	distance@other,fsr2l
  8882  003FB6  C014  FFDA         	movff	distance@other+1,fsr2h
  8883  003FBA  CFDE F015          	movff	postinc2,??_distance
  8884  003FBE  CFDD F016          	movff	postdec2,??_distance+1
  8885  003FC2  C011  FFD9         	movff	distance@self,fsr2l
  8886  003FC6  C012  FFDA         	movff	distance@self+1,fsr2h
  8887  003FCA  CFDE F017          	movff	postinc2,??_distance+2
  8888  003FCE  CFDD F018          	movff	postdec2,??_distance+3
  8889  003FD2  5015               	movf	??_distance^0,w,c
  8890  003FD4  5C17               	subwf	(??_distance+2)^0,w,c
  8891  003FD6  6E1B               	movwf	distance@dx^0,c
  8892  003FD8  5016               	movf	(??_distance+1)^0,w,c
  8893  003FDA  5818               	subwfb	(??_distance+3)^0,w,c
  8894  003FDC  6E1C               	movwf	(distance@dx+1)^0,c
  8895                           
  8896                           ;point.c: 48:     int dy = self->y - other->y;
  8897  003FDE  EE20 F002          	lfsr	2,2
  8898  003FE2  5013               	movf	distance@other^0,w,c
  8899  003FE4  26D9               	addwf	fsr2l,f,c
  8900  003FE6  5014               	movf	(distance@other+1)^0,w,c
  8901  003FE8  22DA               	addwfc	fsr2h,f,c
  8902  003FEA  CFDE F015          	movff	postinc2,??_distance
  8903  003FEE  CFDD F016          	movff	postdec2,??_distance+1
  8904  003FF2  EE20 F002          	lfsr	2,2
  8905  003FF6  5011               	movf	distance@self^0,w,c
  8906  003FF8  26D9               	addwf	fsr2l,f,c
  8907  003FFA  5012               	movf	(distance@self+1)^0,w,c
  8908  003FFC  22DA               	addwfc	fsr2h,f,c
  8909  003FFE  CFDE F017          	movff	postinc2,??_distance+2
  8910  004002  CFDD F018          	movff	postdec2,??_distance+3
  8911  004006  5015               	movf	??_distance^0,w,c
  8912  004008  5C17               	subwf	(??_distance+2)^0,w,c
  8913  00400A  6E1D               	movwf	distance@dy^0,c
  8914  00400C  5016               	movf	(??_distance+1)^0,w,c
  8915  00400E  5818               	subwfb	(??_distance+3)^0,w,c
  8916  004010  6E1E               	movwf	(distance@dy+1)^0,c
  8917  004012                     
  8918                           ;point.c: 49:     int pwd = dx*dx + dy*dy;
  8919  004012  C01B  F001         	movff	distance@dx,___wmul@multiplier
  8920  004016  C01C  F002         	movff	distance@dx+1,___wmul@multiplier+1
  8921  00401A  C01B  F003         	movff	distance@dx,___wmul@multiplicand
  8922  00401E  C01C  F004         	movff	distance@dx+1,___wmul@multiplicand+1
  8923  004022  ECE9  F023         	call	___wmul	;wreg free
  8924  004026  C001  F015         	movff	?___wmul,??_distance
  8925  00402A  C002  F016         	movff	?___wmul+1,??_distance+1
  8926  00402E  C01D  F001         	movff	distance@dy,___wmul@multiplier
  8927  004032  C01E  F002         	movff	distance@dy+1,___wmul@multiplier+1
  8928  004036  C01D  F003         	movff	distance@dy,___wmul@multiplicand
  8929  00403A  C01E  F004         	movff	distance@dy+1,___wmul@multiplicand+1
  8930  00403E  ECE9  F023         	call	___wmul	;wreg free
  8931  004042  5001               	movf	?___wmul^0,w,c
  8932  004044  2415               	addwf	??_distance^0,w,c
  8933  004046  6E19               	movwf	distance@pwd^0,c
  8934  004048  5002               	movf	(?___wmul+1)^0,w,c
  8935  00404A  2016               	addwfc	(??_distance+1)^0,w,c
  8936  00404C  6E1A               	movwf	(distance@pwd+1)^0,c
  8937  00404E                     
  8938                           ;point.c: 51:     return int_sqrt(pwd);
  8939  00404E  C019  F009         	movff	distance@pwd,int_sqrt@s
  8940  004052  C01A  F00A         	movff	distance@pwd+1,int_sqrt@s+1
  8941  004056  ECC8  F021         	call	_int_sqrt	;wreg free
  8942  00405A  C009  F011         	movff	?_int_sqrt,?_distance
  8943  00405E  C00A  F012         	movff	?_int_sqrt+1,?_distance+1
  8944  004062  0012               	return		;funcret
  8945  004064                     __end_of_distance:
  8946                           	callstack 0
  8947                           
  8948 ;; *************** function _int_sqrt *****************
  8949 ;; Defined at:
  8950 ;;		line 22 in file "point.c"
  8951 ;; Parameters:    Size  Location     Type
  8952 ;;  s               2    8[COMRAM] int 
  8953 ;; Auto vars:     Size  Location     Type
  8954 ;;  x1              2   12[COMRAM] int 
  8955 ;;  x0              2   14[COMRAM] int 
  8956 ;; Return value:  Size  Location     Type
  8957 ;;                  2    8[COMRAM] int 
  8958 ;; Registers used:
  8959 ;;		wreg, status,2, status,0, cstack
  8960 ;; Tracked objects:
  8961 ;;		On entry : 0/0
  8962 ;;		On exit  : 0/0
  8963 ;;		Unchanged: 0/0
  8964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8965 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8966 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8967 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8968 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8969 ;;Total ram usage:        8 bytes
  8970 ;; Hardware stack levels used: 1
  8971 ;; Hardware stack levels required when called: 1
  8972 ;; This function calls:
  8973 ;;		___awdiv
  8974 ;; This function is called by:
  8975 ;;		_distance
  8976 ;; This function uses a non-reentrant model
  8977 ;;
  8978                           
  8979                           	psect	text35
  8980  004390                     __ptext35:
  8981                           	callstack 0
  8982  004390                     _int_sqrt:
  8983                           	callstack 28
  8984  004390                     
  8985                           ;point.c: 23:  int x0 = s >> 1;
  8986  004390  340A               	rlcf	(int_sqrt@s+1)^0,w,c
  8987  004392  300A               	rrcf	(int_sqrt@s+1)^0,w,c
  8988  004394  6E0B               	movwf	??_int_sqrt^0,c
  8989  004396  3009               	rrcf	int_sqrt@s^0,w,c
  8990  004398  6E0F               	movwf	int_sqrt@x0^0,c
  8991  00439A  C00B  F010         	movff	??_int_sqrt,int_sqrt@x0+1
  8992                           
  8993                           ;point.c: 25:  if ( x0 )
  8994  00439E  500F               	movf	int_sqrt@x0^0,w,c
  8995  0043A0  1010               	iorwf	(int_sqrt@x0+1)^0,w,c
  8996  0043A2  B4D8               	btfsc	status,2,c
  8997  0043A4  EFD6  F021         	goto	u4971
  8998  0043A8  EFD8  F021         	goto	u4970
  8999  0043AC                     u4971:
  9000  0043AC  EF0A  F022         	goto	l50
  9001  0043B0                     u4970:
  9002  0043B0                     l3856:
  9003                           
  9004                           ;point.c: 26:  {;point.c: 28:   int x1 = ( x0 + s / x0 ) >> 1;
  9005  0043B0  C009  F001         	movff	int_sqrt@s,___awdiv@dividend
  9006  0043B4  C00A  F002         	movff	int_sqrt@s+1,___awdiv@dividend+1
  9007  0043B8  C00F  F003         	movff	int_sqrt@x0,___awdiv@divisor
  9008  0043BC  C010  F004         	movff	int_sqrt@x0+1,___awdiv@divisor+1
  9009  0043C0  EC77  F01F         	call	___awdiv	;wreg free
  9010  0043C4  500F               	movf	int_sqrt@x0^0,w,c
  9011  0043C6  2601               	addwf	?___awdiv^0,f,c
  9012  0043C8  5010               	movf	(int_sqrt@x0+1)^0,w,c
  9013  0043CA  2202               	addwfc	(?___awdiv+1)^0,f,c
  9014  0043CC  3402               	rlcf	(?___awdiv+1)^0,w,c
  9015  0043CE  3002               	rrcf	(?___awdiv+1)^0,w,c
  9016  0043D0  6E0B               	movwf	??_int_sqrt^0,c
  9017  0043D2  3001               	rrcf	?___awdiv^0,w,c
  9018  0043D4  6E0D               	movwf	int_sqrt@x1^0,c
  9019  0043D6  C00B  F00E         	movff	??_int_sqrt,int_sqrt@x1+1
  9020                           
  9021                           ;point.c: 30:   while ( x1 < x0 )
  9022  0043DA  EFF5  F021         	goto	l3860
  9023  0043DE                     l52:
  9024                           
  9025                           ;point.c: 31:   {;point.c: 32:    x0 = x1;
  9026  0043DE  C00D  F00F         	movff	int_sqrt@x1,int_sqrt@x0
  9027  0043E2  C00E  F010         	movff	int_sqrt@x1+1,int_sqrt@x0+1
  9028  0043E6  EFD8  F021         	goto	l3856
  9029  0043EA                     l3860:
  9030                           
  9031                           ;point.c: 30:   while ( x1 < x0 )
  9032  0043EA  500F               	movf	int_sqrt@x0^0,w,c
  9033  0043EC  5C0D               	subwf	int_sqrt@x1^0,w,c
  9034  0043EE  500E               	movf	(int_sqrt@x1+1)^0,w,c
  9035  0043F0  0A80               	xorlw	128
  9036  0043F2  6E0B               	movwf	??_int_sqrt^0,c
  9037  0043F4  5010               	movf	(int_sqrt@x0+1)^0,w,c
  9038  0043F6  0A80               	xorlw	128
  9039  0043F8  580B               	subwfb	??_int_sqrt^0,w,c
  9040  0043FA  A0D8               	btfss	status,0,c
  9041  0043FC  EF02  F022         	goto	u4981
  9042  004400  EF04  F022         	goto	u4980
  9043  004404                     u4981:
  9044  004404  EFEF  F021         	goto	l52
  9045  004408                     u4980:
  9046  004408                     
  9047                           ;point.c: 36:   return x0;
  9048  004408  C00F  F009         	movff	int_sqrt@x0,?_int_sqrt
  9049  00440C  C010  F00A         	movff	int_sqrt@x0+1,?_int_sqrt+1
  9050  004410  EF0E  F022         	goto	l54
  9051  004414                     l50:
  9052                           
  9053                           ;point.c: 39:  {;point.c: 40:   return s;
  9054  004414  C009  F009         	movff	int_sqrt@s,?_int_sqrt
  9055  004418  C00A  F00A         	movff	int_sqrt@s+1,?_int_sqrt+1
  9056  00441C                     l54:
  9057  00441C  0012               	return		;funcret
  9058  00441E                     __end_of_int_sqrt:
  9059                           	callstack 0
  9060                           
  9061 ;; *************** function ___awdiv *****************
  9062 ;; Defined at:
  9063 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  9064 ;; Parameters:    Size  Location     Type
  9065 ;;  dividend        2    0[COMRAM] int 
  9066 ;;  divisor         2    2[COMRAM] int 
  9067 ;; Auto vars:     Size  Location     Type
  9068 ;;  quotient        2    6[COMRAM] int 
  9069 ;;  sign            1    5[COMRAM] unsigned char 
  9070 ;;  counter         1    4[COMRAM] unsigned char 
  9071 ;; Return value:  Size  Location     Type
  9072 ;;                  2    0[COMRAM] int 
  9073 ;; Registers used:
  9074 ;;		wreg, status,2, status,0
  9075 ;; Tracked objects:
  9076 ;;		On entry : 0/0
  9077 ;;		On exit  : 0/0
  9078 ;;		Unchanged: 0/0
  9079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9080 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9081 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9083 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9084 ;;Total ram usage:        8 bytes
  9085 ;; Hardware stack levels used: 1
  9086 ;; This function calls:
  9087 ;;		Nothing
  9088 ;; This function is called by:
  9089 ;;		_int_sqrt
  9090 ;;		_efgtoa
  9091 ;; This function uses a non-reentrant model
  9092 ;;
  9093                           
  9094                           	psect	text36
  9095  003EEE                     __ptext36:
  9096                           	callstack 0
  9097  003EEE                     ___awdiv:
  9098                           	callstack 26
  9099  003EEE  0E00               	movlw	0
  9100  003EF0  6E06               	movwf	___awdiv@sign^0,c
  9101  003EF2  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  9102  003EF4  EF80  F01F         	goto	u3570
  9103  003EF8  EF7E  F01F         	goto	u3571
  9104  003EFC                     u3571:
  9105  003EFC  EF86  F01F         	goto	l3114
  9106  003F00                     u3570:
  9107  003F00  6C03               	negf	___awdiv@divisor^0,c
  9108  003F02  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  9109  003F04  B0D8               	btfsc	status,0,c
  9110  003F06  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  9111  003F08  0E01               	movlw	1
  9112  003F0A  6E06               	movwf	___awdiv@sign^0,c
  9113  003F0C                     l3114:
  9114  003F0C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  9115  003F0E  EF8D  F01F         	goto	u3580
  9116  003F12  EF8B  F01F         	goto	u3581
  9117  003F16                     u3581:
  9118  003F16  EF93  F01F         	goto	l3120
  9119  003F1A                     u3580:
  9120  003F1A  6C01               	negf	___awdiv@dividend^0,c
  9121  003F1C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  9122  003F1E  B0D8               	btfsc	status,0,c
  9123  003F20  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  9124  003F22  0E01               	movlw	1
  9125  003F24  1A06               	xorwf	___awdiv@sign^0,f,c
  9126  003F26                     l3120:
  9127  003F26  0E00               	movlw	0
  9128  003F28  6E08               	movwf	(___awdiv@quotient+1)^0,c
  9129  003F2A  0E00               	movlw	0
  9130  003F2C  6E07               	movwf	___awdiv@quotient^0,c
  9131  003F2E  5003               	movf	___awdiv@divisor^0,w,c
  9132  003F30  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  9133  003F32  B4D8               	btfsc	status,2,c
  9134  003F34  EF9E  F01F         	goto	u3591
  9135  003F38  EFA0  F01F         	goto	u3590
  9136  003F3C                     u3591:
  9137  003F3C  EFC8  F01F         	goto	l3142
  9138  003F40                     u3590:
  9139  003F40  0E01               	movlw	1
  9140  003F42  6E05               	movwf	___awdiv@counter^0,c
  9141  003F44  EFA8  F01F         	goto	l3128
  9142  003F48                     l3126:
  9143  003F48  90D8               	bcf	status,0,c
  9144  003F4A  3603               	rlcf	___awdiv@divisor^0,f,c
  9145  003F4C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  9146  003F4E  2A05               	incf	___awdiv@counter^0,f,c
  9147  003F50                     l3128:
  9148  003F50  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  9149  003F52  EFAD  F01F         	goto	u3601
  9150  003F56  EFAF  F01F         	goto	u3600
  9151  003F5A                     u3601:
  9152  003F5A  EFA4  F01F         	goto	l3126
  9153  003F5E                     u3600:
  9154  003F5E                     l3130:
  9155  003F5E  90D8               	bcf	status,0,c
  9156  003F60  3607               	rlcf	___awdiv@quotient^0,f,c
  9157  003F62  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  9158  003F64  5003               	movf	___awdiv@divisor^0,w,c
  9159  003F66  5C01               	subwf	___awdiv@dividend^0,w,c
  9160  003F68  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9161  003F6A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  9162  003F6C  A0D8               	btfss	status,0,c
  9163  003F6E  EFBB  F01F         	goto	u3611
  9164  003F72  EFBD  F01F         	goto	u3610
  9165  003F76                     u3611:
  9166  003F76  EFC2  F01F         	goto	l3138
  9167  003F7A                     u3610:
  9168  003F7A  5003               	movf	___awdiv@divisor^0,w,c
  9169  003F7C  5E01               	subwf	___awdiv@dividend^0,f,c
  9170  003F7E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9171  003F80  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  9172  003F82  8007               	bsf	___awdiv@quotient^0,0,c
  9173  003F84                     l3138:
  9174  003F84  90D8               	bcf	status,0,c
  9175  003F86  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  9176  003F88  3203               	rrcf	___awdiv@divisor^0,f,c
  9177  003F8A  2E05               	decfsz	___awdiv@counter^0,f,c
  9178  003F8C  EFAF  F01F         	goto	l3130
  9179  003F90                     l3142:
  9180  003F90  5006               	movf	___awdiv@sign^0,w,c
  9181  003F92  B4D8               	btfsc	status,2,c
  9182  003F94  EFCE  F01F         	goto	u3621
  9183  003F98  EFD0  F01F         	goto	u3620
  9184  003F9C                     u3621:
  9185  003F9C  EFD4  F01F         	goto	l3146
  9186  003FA0                     u3620:
  9187  003FA0  6C07               	negf	___awdiv@quotient^0,c
  9188  003FA2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  9189  003FA4  B0D8               	btfsc	status,0,c
  9190  003FA6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  9191  003FA8                     l3146:
  9192  003FA8  C007  F001         	movff	___awdiv@quotient,?___awdiv
  9193  003FAC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  9194  003FB0  0012               	return		;funcret
  9195  003FB2                     __end_of___awdiv:
  9196                           	callstack 0
  9197                           
  9198 ;; *************** function ___wmul *****************
  9199 ;; Defined at:
  9200 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  9201 ;; Parameters:    Size  Location     Type
  9202 ;;  multiplier      2    0[COMRAM] unsigned int 
  9203 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9204 ;; Auto vars:     Size  Location     Type
  9205 ;;  product         2    4[COMRAM] unsigned int 
  9206 ;; Return value:  Size  Location     Type
  9207 ;;                  2    0[COMRAM] unsigned int 
  9208 ;; Registers used:
  9209 ;;		wreg, status,2, status,0, prodl, prodh
  9210 ;; Tracked objects:
  9211 ;;		On entry : 0/0
  9212 ;;		On exit  : 0/0
  9213 ;;		Unchanged: 0/0
  9214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9215 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9216 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9218 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9219 ;;Total ram usage:        6 bytes
  9220 ;; Hardware stack levels used: 1
  9221 ;; This function calls:
  9222 ;;		Nothing
  9223 ;; This function is called by:
  9224 ;;		_distance
  9225 ;; This function uses a non-reentrant model
  9226 ;;
  9227                           
  9228                           	psect	text37
  9229  0047D2                     __ptext37:
  9230                           	callstack 0
  9231  0047D2                     ___wmul:
  9232                           	callstack 29
  9233  0047D2  5001               	movf	___wmul@multiplier^0,w,c
  9234  0047D4  0203               	mulwf	___wmul@multiplicand^0,c
  9235  0047D6  CFF3 F005          	movff	prodl,___wmul@product
  9236  0047DA  CFF4 F006          	movff	prodh,___wmul@product+1
  9237  0047DE  5001               	movf	___wmul@multiplier^0,w,c
  9238  0047E0  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9239  0047E2  50F3               	movf	243,w,c
  9240  0047E4  2606               	addwf	(___wmul@product+1)^0,f,c
  9241  0047E6  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9242  0047E8  0203               	mulwf	___wmul@multiplicand^0,c
  9243  0047EA  50F3               	movf	243,w,c
  9244  0047EC  2606               	addwf	(___wmul@product+1)^0,f,c
  9245  0047EE  C005  F001         	movff	___wmul@product,?___wmul
  9246  0047F2  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9247  0047F6  0012               	return		;funcret
  9248  0047F8                     __end_of___wmul:
  9249                           	callstack 0
  9250                           
  9251 ;; *************** function _RGB_point_init *****************
  9252 ;; Defined at:
  9253 ;;		line 68 in file "point.c"
  9254 ;; Parameters:    Size  Location     Type
  9255 ;;  self            2    6[COMRAM] const PTR struct _s_RGB_
  9256 ;;		 -> main@c1(13), 
  9257 ;;  x               2    8[COMRAM] int 
  9258 ;;  y               2   10[COMRAM] int 
  9259 ;;  R               1   12[COMRAM] unsigned char 
  9260 ;;  G               1   13[COMRAM] unsigned char 
  9261 ;;  B               1   14[COMRAM] unsigned char 
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;		None
  9264 ;; Return value:  Size  Location     Type
  9265 ;;                  1    wreg      void 
  9266 ;; Registers used:
  9267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9268 ;; Tracked objects:
  9269 ;;		On entry : 0/0
  9270 ;;		On exit  : 0/0
  9271 ;;		Unchanged: 0/0
  9272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9273 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9276 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9277 ;;Total ram usage:        9 bytes
  9278 ;; Hardware stack levels used: 1
  9279 ;; Hardware stack levels required when called: 1
  9280 ;; This function calls:
  9281 ;;		_point_init
  9282 ;; This function is called by:
  9283 ;;		_main
  9284 ;; This function uses a non-reentrant model
  9285 ;;
  9286                           
  9287                           	psect	text38
  9288  0045A0                     __ptext38:
  9289                           	callstack 0
  9290  0045A0                     _RGB_point_init:
  9291                           	callstack 29
  9292  0045A0                     
  9293                           ;point.c: 68: void RGB_point_init( st_RGB_Point *const self,;point.c: 69:               
      +                                    int x,;point.c: 70:                         int y,;point.c: 71:               
      +                                    char R,;point.c: 72:                         char G,;point.c: 73:             
      +                                      char B){;point.c: 75:     point_init(&self->super, x, y);
  9294  0045A0  C007  F001         	movff	RGB_point_init@self,point_init@self
  9295  0045A4  C008  F002         	movff	RGB_point_init@self+1,point_init@self+1
  9296  0045A8  C009  F003         	movff	RGB_point_init@x,point_init@x
  9297  0045AC  C00A  F004         	movff	RGB_point_init@x+1,point_init@x+1
  9298  0045B0  C00B  F005         	movff	RGB_point_init@y,point_init@y
  9299  0045B4  C00C  F006         	movff	RGB_point_init@y+1,point_init@y+1
  9300  0045B8  EC40  F022         	call	_point_init	;wreg free
  9301  0045BC                     
  9302                           ;point.c: 77:     self->R = R;
  9303  0045BC  EE20 F00A          	lfsr	2,10
  9304  0045C0  5007               	movf	RGB_point_init@self^0,w,c
  9305  0045C2  26D9               	addwf	fsr2l,f,c
  9306  0045C4  5008               	movf	(RGB_point_init@self+1)^0,w,c
  9307  0045C6  22DA               	addwfc	fsr2h,f,c
  9308  0045C8  C00D  FFDF         	movff	RGB_point_init@R,indf2
  9309  0045CC                     
  9310                           ;point.c: 78:     self->G = G;
  9311  0045CC  EE20 F00B          	lfsr	2,11
  9312  0045D0  5007               	movf	RGB_point_init@self^0,w,c
  9313  0045D2  26D9               	addwf	fsr2l,f,c
  9314  0045D4  5008               	movf	(RGB_point_init@self+1)^0,w,c
  9315  0045D6  22DA               	addwfc	fsr2h,f,c
  9316  0045D8  C00E  FFDF         	movff	RGB_point_init@G,indf2
  9317  0045DC                     
  9318                           ;point.c: 79:     self->B = B;
  9319  0045DC  EE20 F00C          	lfsr	2,12
  9320  0045E0  5007               	movf	RGB_point_init@self^0,w,c
  9321  0045E2  26D9               	addwf	fsr2l,f,c
  9322  0045E4  5008               	movf	(RGB_point_init@self+1)^0,w,c
  9323  0045E6  22DA               	addwfc	fsr2h,f,c
  9324  0045E8  C00F  FFDF         	movff	RGB_point_init@B,indf2
  9325  0045EC  0012               	return		;funcret
  9326  0045EE                     __end_of_RGB_point_init:
  9327                           	callstack 0
  9328                           
  9329 ;; *************** function _point_init *****************
  9330 ;; Defined at:
  9331 ;;		line 56 in file "point.c"
  9332 ;; Parameters:    Size  Location     Type
  9333 ;;  self            2    0[COMRAM] const PTR struct _sPoint
  9334 ;;		 -> main@c1(13), main@p2(10), main@p1(10), 
  9335 ;;  x               2    2[COMRAM] int 
  9336 ;;  y               2    4[COMRAM] int 
  9337 ;; Auto vars:     Size  Location     Type
  9338 ;;		None
  9339 ;; Return value:  Size  Location     Type
  9340 ;;                  1    wreg      void 
  9341 ;; Registers used:
  9342 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9343 ;; Tracked objects:
  9344 ;;		On entry : 0/0
  9345 ;;		On exit  : 0/0
  9346 ;;		Unchanged: 0/0
  9347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9348 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9351 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9352 ;;Total ram usage:        6 bytes
  9353 ;; Hardware stack levels used: 1
  9354 ;; This function calls:
  9355 ;;		Nothing
  9356 ;; This function is called by:
  9357 ;;		_main
  9358 ;;		_RGB_point_init
  9359 ;; This function uses a non-reentrant model
  9360 ;;
  9361                           
  9362                           	psect	text39
  9363  004480                     __ptext39:
  9364                           	callstack 0
  9365  004480                     _point_init:
  9366                           	callstack 30
  9367  004480                     
  9368                           ;point.c: 56: void point_init( stPoint *const self,;point.c: 57:                     int
      +                           x,;point.c: 58:                     int y){;point.c: 60:     self->set = &set;
  9369  004480  EE20 F004          	lfsr	2,4
  9370  004484  5001               	movf	point_init@self^0,w,c
  9371  004486  26D9               	addwf	fsr2l,f,c
  9372  004488  5002               	movf	(point_init@self+1)^0,w,c
  9373  00448A  22DA               	addwfc	fsr2h,f,c
  9374  00448C  0E86               	movlw	low _set
  9375  00448E  6EDE               	movwf	postinc2,c
  9376  004490  0E47               	movlw	high _set
  9377  004492  6EDD               	movwf	postdec2,c
  9378                           
  9379                           ;point.c: 61:     self->move = &move;
  9380  004494  EE20 F006          	lfsr	2,6
  9381  004498  5001               	movf	point_init@self^0,w,c
  9382  00449A  26D9               	addwf	fsr2l,f,c
  9383  00449C  5002               	movf	(point_init@self+1)^0,w,c
  9384  00449E  22DA               	addwfc	fsr2h,f,c
  9385  0044A0  0EAC               	movlw	low _move
  9386  0044A2  6EDE               	movwf	postinc2,c
  9387  0044A4  0E47               	movlw	high _move
  9388  0044A6  6EDD               	movwf	postdec2,c
  9389                           
  9390                           ;point.c: 62:     self->distance = &distance;
  9391  0044A8  EE20 F008          	lfsr	2,8
  9392  0044AC  5001               	movf	point_init@self^0,w,c
  9393  0044AE  26D9               	addwf	fsr2l,f,c
  9394  0044B0  5002               	movf	(point_init@self+1)^0,w,c
  9395  0044B2  22DA               	addwfc	fsr2h,f,c
  9396  0044B4  0EB2               	movlw	low _distance
  9397  0044B6  6EDE               	movwf	postinc2,c
  9398  0044B8  0E3F               	movlw	high _distance
  9399  0044BA  6EDD               	movwf	postdec2,c
  9400  0044BC                     
  9401                           ;point.c: 63:     self->x = x;
  9402  0044BC  C001  FFD9         	movff	point_init@self,fsr2l
  9403  0044C0  C002  FFDA         	movff	point_init@self+1,fsr2h
  9404  0044C4  C003  FFDE         	movff	point_init@x,postinc2
  9405  0044C8  C004  FFDD         	movff	point_init@x+1,postdec2
  9406  0044CC                     
  9407                           ;point.c: 64:     self->y = y;
  9408  0044CC  EE20 F002          	lfsr	2,2
  9409  0044D0  5001               	movf	point_init@self^0,w,c
  9410  0044D2  26D9               	addwf	fsr2l,f,c
  9411  0044D4  5002               	movf	(point_init@self+1)^0,w,c
  9412  0044D6  22DA               	addwfc	fsr2h,f,c
  9413  0044D8  C005  FFDE         	movff	point_init@y,postinc2
  9414  0044DC  C006  FFDD         	movff	point_init@y+1,postdec2
  9415  0044E0  0012               	return		;funcret
  9416  0044E2                     __end_of_point_init:
  9417                           	callstack 0
  9418                           
  9419                           	psect	text40
  9420  000000                     __ptext40:
  9421                           	callstack 0
  9422  000000                     
  9423                           	psect	rparam
  9424  0000                     
  9425                           	psect	idloc
  9426                           
  9427                           ;Config register IDLOC0 @ 0x200000
  9428                           ;	unspecified, using default values
  9429  200000                     	org	2097152
  9430  200000  FF                 	db	255
  9431                           
  9432                           ;Config register IDLOC1 @ 0x200001
  9433                           ;	unspecified, using default values
  9434  200001                     	org	2097153
  9435  200001  FF                 	db	255
  9436                           
  9437                           ;Config register IDLOC2 @ 0x200002
  9438                           ;	unspecified, using default values
  9439  200002                     	org	2097154
  9440  200002  FF                 	db	255
  9441                           
  9442                           ;Config register IDLOC3 @ 0x200003
  9443                           ;	unspecified, using default values
  9444  200003                     	org	2097155
  9445  200003  FF                 	db	255
  9446                           
  9447                           ;Config register IDLOC4 @ 0x200004
  9448                           ;	unspecified, using default values
  9449  200004                     	org	2097156
  9450  200004  FF                 	db	255
  9451                           
  9452                           ;Config register IDLOC5 @ 0x200005
  9453                           ;	unspecified, using default values
  9454  200005                     	org	2097157
  9455  200005  FF                 	db	255
  9456                           
  9457                           ;Config register IDLOC6 @ 0x200006
  9458                           ;	unspecified, using default values
  9459  200006                     	org	2097158
  9460  200006  FF                 	db	255
  9461                           
  9462                           ;Config register IDLOC7 @ 0x200007
  9463                           ;	unspecified, using default values
  9464  200007                     	org	2097159
  9465  200007  FF                 	db	255
  9466                           
  9467                           	psect	config
  9468                           
  9469                           ; Padding undefined space
  9470  300000                     	org	3145728
  9471  300000  FF                 	db	255
  9472                           
  9473                           ;Config register CONFIG1H @ 0x300001
  9474                           ;	Oscillator Selection bits
  9475                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
  9476                           ;	4X PLL Enable
  9477                           ;	PLLCFG = ON, Oscillator multiplied by 4
  9478                           ;	Primary clock enable bit
  9479                           ;	PRICLKEN = 0x1, unprogrammed default
  9480                           ;	Fail-Safe Clock Monitor Enable bit
  9481                           ;	FCMEN = 0x0, unprogrammed default
  9482                           ;	Internal/External Oscillator Switchover bit
  9483                           ;	IESO = 0x0, unprogrammed default
  9484  300001                     	org	3145729
  9485  300001  33                 	db	51
  9486                           
  9487                           ;Config register CONFIG2L @ 0x300002
  9488                           ;	unspecified, using default values
  9489                           ;	Power-up Timer Enable bit
  9490                           ;	PWRTEN = 0x1, unprogrammed default
  9491                           ;	Brown-out Reset Enable bits
  9492                           ;	BOREN = 0x3, unprogrammed default
  9493                           ;	Brown Out Reset Voltage bits
  9494                           ;	BORV = 0x3, unprogrammed default
  9495  300002                     	org	3145730
  9496  300002  1F                 	db	31
  9497                           
  9498                           ;Config register CONFIG2H @ 0x300003
  9499                           ;	Watchdog Timer Enable bits
  9500                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  9501                           ;	Watchdog Timer Postscale Select bits
  9502                           ;	WDTPS = 0xF, unprogrammed default
  9503  300003                     	org	3145731
  9504  300003  3C                 	db	60
  9505                           
  9506                           ; Padding undefined space
  9507  300004                     	org	3145732
  9508  300004  FF                 	db	255
  9509                           
  9510                           ;Config register CONFIG3H @ 0x300005
  9511                           ;	unspecified, using default values
  9512                           ;	CCP2 MUX bit
  9513                           ;	CCP2MX = 0x1, unprogrammed default
  9514                           ;	PORTB A/D Enable bit
  9515                           ;	PBADEN = 0x1, unprogrammed default
  9516                           ;	P3A/CCP3 Mux bit
  9517                           ;	CCP3MX = 0x1, unprogrammed default
  9518                           ;	HFINTOSC Fast Start-up
  9519                           ;	HFOFST = 0x1, unprogrammed default
  9520                           ;	Timer3 Clock input mux bit
  9521                           ;	T3CMX = 0x1, unprogrammed default
  9522                           ;	ECCP2 B output mux bit
  9523                           ;	P2BMX = 0x1, unprogrammed default
  9524                           ;	MCLR Pin Enable bit
  9525                           ;	MCLRE = 0x1, unprogrammed default
  9526  300005                     	org	3145733
  9527  300005  BF                 	db	191
  9528                           
  9529                           ;Config register CONFIG4L @ 0x300006
  9530                           ;	unspecified, using default values
  9531                           ;	Stack Full/Underflow Reset Enable bit
  9532                           ;	STVREN = 0x1, unprogrammed default
  9533                           ;	Single-Supply ICSP Enable bit
  9534                           ;	LVP = 0x1, unprogrammed default
  9535                           ;	Extended Instruction Set Enable bit
  9536                           ;	XINST = 0x0, unprogrammed default
  9537                           ;	Background Debug
  9538                           ;	DEBUG = 0x1, unprogrammed default
  9539  300006                     	org	3145734
  9540  300006  85                 	db	133
  9541                           
  9542                           ; Padding undefined space
  9543  300007                     	org	3145735
  9544  300007  FF                 	db	255
  9545                           
  9546                           ;Config register CONFIG5L @ 0x300008
  9547                           ;	unspecified, using default values
  9548                           ;	Code Protection Block 0
  9549                           ;	CP0 = 0x1, unprogrammed default
  9550                           ;	Code Protection Block 1
  9551                           ;	CP1 = 0x1, unprogrammed default
  9552                           ;	Code Protection Block 2
  9553                           ;	CP2 = 0x1, unprogrammed default
  9554                           ;	Code Protection Block 3
  9555                           ;	CP3 = 0x1, unprogrammed default
  9556  300008                     	org	3145736
  9557  300008  0F                 	db	15
  9558                           
  9559                           ;Config register CONFIG5H @ 0x300009
  9560                           ;	unspecified, using default values
  9561                           ;	Boot Block Code Protection bit
  9562                           ;	CPB = 0x1, unprogrammed default
  9563                           ;	Data EEPROM Code Protection bit
  9564                           ;	CPD = 0x1, unprogrammed default
  9565  300009                     	org	3145737
  9566  300009  C0                 	db	192
  9567                           
  9568                           ;Config register CONFIG6L @ 0x30000A
  9569                           ;	unspecified, using default values
  9570                           ;	Write Protection Block 0
  9571                           ;	WRT0 = 0x1, unprogrammed default
  9572                           ;	Write Protection Block 1
  9573                           ;	WRT1 = 0x1, unprogrammed default
  9574                           ;	Write Protection Block 2
  9575                           ;	WRT2 = 0x1, unprogrammed default
  9576                           ;	Write Protection Block 3
  9577                           ;	WRT3 = 0x1, unprogrammed default
  9578  30000A                     	org	3145738
  9579  30000A  0F                 	db	15
  9580                           
  9581                           ;Config register CONFIG6H @ 0x30000B
  9582                           ;	unspecified, using default values
  9583                           ;	Configuration Register Write Protection bit
  9584                           ;	WRTC = 0x1, unprogrammed default
  9585                           ;	Boot Block Write Protection bit
  9586                           ;	WRTB = 0x1, unprogrammed default
  9587                           ;	Data EEPROM Write Protection bit
  9588                           ;	WRTD = 0x1, unprogrammed default
  9589  30000B                     	org	3145739
  9590  30000B  E0                 	db	224
  9591                           
  9592                           ;Config register CONFIG7L @ 0x30000C
  9593                           ;	unspecified, using default values
  9594                           ;	Table Read Protection Block 0
  9595                           ;	EBTR0 = 0x1, unprogrammed default
  9596                           ;	Table Read Protection Block 1
  9597                           ;	EBTR1 = 0x1, unprogrammed default
  9598                           ;	Table Read Protection Block 2
  9599                           ;	EBTR2 = 0x1, unprogrammed default
  9600                           ;	Table Read Protection Block 3
  9601                           ;	EBTR3 = 0x1, unprogrammed default
  9602  30000C                     	org	3145740
  9603  30000C  0F                 	db	15
  9604                           
  9605                           ;Config register CONFIG7H @ 0x30000D
  9606                           ;	unspecified, using default values
  9607                           ;	Boot Block Table Read Protection bit
  9608                           ;	EBTRB = 0x1, unprogrammed default
  9609  30000D                     	org	3145741
  9610  30000D  40                 	db	64
  9611                           tosu	equ	0xFFF
  9612                           tosh	equ	0xFFE
  9613                           tosl	equ	0xFFD
  9614                           stkptr	equ	0xFFC
  9615                           pclatu	equ	0xFFB
  9616                           pclath	equ	0xFFA
  9617                           pcl	equ	0xFF9
  9618                           tblptru	equ	0xFF8
  9619                           tblptrh	equ	0xFF7
  9620                           tblptrl	equ	0xFF6
  9621                           tablat	equ	0xFF5
  9622                           prodh	equ	0xFF4
  9623                           prodl	equ	0xFF3
  9624                           indf0	equ	0xFEF
  9625                           postinc0	equ	0xFEE
  9626                           postdec0	equ	0xFED
  9627                           preinc0	equ	0xFEC
  9628                           plusw0	equ	0xFEB
  9629                           fsr0h	equ	0xFEA
  9630                           fsr0l	equ	0xFE9
  9631                           wreg	equ	0xFE8
  9632                           indf1	equ	0xFE7
  9633                           postinc1	equ	0xFE6
  9634                           postdec1	equ	0xFE5
  9635                           preinc1	equ	0xFE4
  9636                           plusw1	equ	0xFE3
  9637                           fsr1h	equ	0xFE2
  9638                           fsr1l	equ	0xFE1
  9639                           bsr	equ	0xFE0
  9640                           indf2	equ	0xFDF
  9641                           postinc2	equ	0xFDE
  9642                           postdec2	equ	0xFDD
  9643                           preinc2	equ	0xFDC
  9644                           plusw2	equ	0xFDB
  9645                           fsr2h	equ	0xFDA
  9646                           fsr2l	equ	0xFD9
  9647                           status	equ	0xFD8

Data Sizes:
    Strings     27
    Constant    0
    Data        0
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160    135     151
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    main@c1.distance	PTR FTN(const PTR struct _sPoint,const PTR struct _sPoint,)int  size(2) Largest target is 0
		 -> distance(), 

    main@c1.move	PTR FTN(const PTR struct _sPoint,int ,int ,)void  size(2) Largest target is 0
		 -> move(), 

    main@c1.set	PTR FTN(const PTR struct _sPoint,int ,int ,)void  size(2) Largest target is 0
		 -> set(), 

    S203$3$0	const PTR struct _sPoint size(2) Largest target is 10
		 -> main@p1(BANK0[10]), 

    S203$4$1	const PTR struct _sPoint size(2) Largest target is 10
		 -> main@p2(BANK0[10]), 

    S203$4$0	const PTR struct _sPoint size(2) Largest target is 10
		 -> main@p1(BANK0[10]), 

    S203$2$0	const PTR struct _sPoint size(2) Largest target is 10
		 -> main@p2(BANK0[10]), main@p1(BANK0[10]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S946_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    pid_reset@self	const PTR struct . size(2) Largest target is 24
		 -> main@pid1(BANK0[24]), 

    pid_step@self	const PTR struct . size(2) Largest target is 24
		 -> main@pid1(BANK0[24]), 

    pid_init@self	const PTR struct . size(2) Largest target is 24
		 -> main@pid1(BANK0[24]), 

    RGB_point_init@self.super.distance	PTR FTN(const PTR struct _sPoint,const PTR struct _sPoint,)int  size(2) Largest target is 2
		 -> distance(), 

    RGB_point_init@self.super.move	PTR FTN(const PTR struct _sPoint,int ,int ,)void  size(2) Largest target is 1
		 -> move(), 

    RGB_point_init@self.super.set	PTR FTN(const PTR struct _sPoint,int ,int ,)void  size(2) Largest target is 1
		 -> set(), 

    RGB_point_init@self	const PTR struct _s_RGB_Point size(2) Largest target is 13
		 -> main@c1(BANK0[13]), 

    point_init@self.distance	PTR FTN(const PTR struct _sPoint,const PTR struct _sPoint,)int  size(2) Largest target is 2
		 -> distance(), 

    point_init@self.move	PTR FTN(const PTR struct _sPoint,int ,int ,)void  size(2) Largest target is 1
		 -> move(), 

    point_init@self.set	PTR FTN(const PTR struct _sPoint,int ,int ,)void  size(2) Largest target is 1
		 -> set(), 

    point_init@self	const PTR struct _sPoint size(2) Largest target is 13
		 -> main@c1(BANK0[13]), main@p2(BANK0[10]), main@p1(BANK0[10]), 

    distance@other.distance	PTR FTN(const PTR struct _sPoint,const PTR struct _sPoint,)int  size(2) Largest target is 2
		 -> distance(), 

    distance@other.move	PTR FTN(const PTR struct _sPoint,int ,int ,)void  size(2) Largest target is 1
		 -> move(), 

    distance@other.set	PTR FTN(const PTR struct _sPoint,int ,int ,)void  size(2) Largest target is 1
		 -> set(), 

    distance@self.distance	PTR FTN(const PTR struct _sPoint,const PTR struct _sPoint,)int  size(2) Largest target is 2
		 -> distance(), 

    distance@self.move	PTR FTN(const PTR struct _sPoint,int ,int ,)void  size(2) Largest target is 1
		 -> move(), 

    distance@self.set	PTR FTN(const PTR struct _sPoint,int ,int ,)void  size(2) Largest target is 1
		 -> set(), 

    distance@other	const PTR struct _sPoint size(2) Largest target is 10
		 -> main@p2(BANK0[10]), 

    distance@self	const PTR struct _sPoint size(2) Largest target is 10
		 -> main@p1(BANK0[10]), 

    move@self.distance	PTR FTN(const PTR struct _sPoint,const PTR struct _sPoint,)int  size(2) Largest target is 2
		 -> distance(), 

    move@self.move	PTR FTN(const PTR struct _sPoint,int ,int ,)void  size(2) Largest target is 1
		 -> move(), 

    move@self.set	PTR FTN(const PTR struct _sPoint,int ,int ,)void  size(2) Largest target is 1
		 -> set(), 

    move@self	const PTR struct _sPoint size(2) Largest target is 10
		 -> main@p1(BANK0[10]), 

    set@self.distance	PTR FTN(const PTR struct _sPoint,const PTR struct _sPoint,)int  size(2) Largest target is 2
		 -> distance(), 

    set@self.move	PTR FTN(const PTR struct _sPoint,int ,int ,)void  size(2) Largest target is 1
		 -> move(), 

    set@self.set	PTR FTN(const PTR struct _sPoint,int ,int ,)void  size(2) Largest target is 1
		 -> set(), 

    set@self	const PTR struct _sPoint size(2) Largest target is 10
		 -> main@p2(BANK0[10]), main@p1(BANK0[10]), 

    c1.super.distance	PTR FTN(const PTR struct _sPoint,const PTR struct _sPoint,)int  size(2) Largest target is 2
		 -> distance(), 

    c1.super.move	PTR FTN(const PTR struct _sPoint,int ,int ,)void  size(2) Largest target is 1
		 -> move(), 

    c1.super.set	PTR FTN(const PTR struct _sPoint,int ,int ,)void  size(2) Largest target is 1
		 -> set(), 

    p2.distance	PTR FTN(const PTR struct _sPoint,const PTR struct _sPoint,)int  size(2) Largest target is 2
		 -> distance(), 

    p2.move	PTR FTN(const PTR struct _sPoint,int ,int ,)void  size(2) Largest target is 1
		 -> move(), 

    p2.set	PTR FTN(const PTR struct _sPoint,int ,int ,)void  size(2) Largest target is 1
		 -> set(), 

    S203_sPoint$distance	PTR FTN(const PTR struct _sPoint,const PTR struct _sPoint,)int  size(2) Largest target is 2
		 -> distance(), 

    p1.distance	PTR FTN(const PTR struct _sPoint,const PTR struct _sPoint,)int  size(2) Largest target is 2
		 -> distance(), 

    S203_sPoint$move	PTR FTN(const PTR struct _sPoint,int ,int ,)void  size(2) Largest target is 1
		 -> move(), 

    p1.move	PTR FTN(const PTR struct _sPoint,int ,int ,)void  size(2) Largest target is 1
		 -> move(), 

    S203_sPoint$set	PTR FTN(const PTR struct _sPoint,int ,int ,)void  size(2) Largest target is 1
		 -> set(), 

    p1.set	PTR FTN(const PTR struct _sPoint,int ,int ,)void  size(2) Largest target is 1
		 -> set(), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _efgtoa->___flsub
    _tolower->_isupper
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___aomod
    _pid_step->___flsub
    ___flsub->___fladd
    ___fladd->___flmul
    ___flge->___flmul
    _pid_reset->_pid_init
    _distance->_int_sqrt
    _int_sqrt->___awdiv
    _RGB_point_init->_point_init

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                65    65      0   53041
                                             70 BANK0     65    65      0
                     _RGB_point_init
                             ___flge
                           _distance *
                               _move *
                           _pid_init
                          _pid_reset
                           _pid_step
                         _point_init
                             _printf
                                _set *
 ---------------------------------------------------------------------------------
 (1) _set                                                  6     0      6     406
                                              0 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   33102
                                             62 BANK0      8     2      6
                           _pid_step (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   32814
                                             92 COMRAM     2     2      0
                                             56 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   32449
                                             64 COMRAM    28    22      6
                               _dtoa
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   23718
                                             49 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4954
                                             28 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3305
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1191
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     790
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _pid_step                                            26    16     10   10813
                                             49 COMRAM    26    16     10
                            ___fladd
                             ___flge
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3237
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2610
                                             25 COMRAM    16     8      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2950
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1138
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _pid_reset                                            2     0      2    1362
                                             22 COMRAM     2     0      2
                           _pid_init
 ---------------------------------------------------------------------------------
 (2) _pid_init                                            22     0     22    1154
                                              0 COMRAM    22     0     22
 ---------------------------------------------------------------------------------
 (1) _move                                                 6     0      6     247
                                              0 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (1) _distance                                            14    10      4    1984
                                             16 COMRAM    14    10      4
                             ___wmul
                           _int_sqrt
 ---------------------------------------------------------------------------------
 (2) _int_sqrt                                             8     6      2    1122
                                              8 COMRAM     8     6      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     555
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _RGB_point_init                                       9     0      9    1492
                                              6 COMRAM     9     0      9
                         _point_init
 ---------------------------------------------------------------------------------
 (1) _point_init                                           6     0      6     838
                                              0 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RGB_point_init
     _point_init
   ___flge
     ___flmul (ARG)
   _distance *
     ___wmul
     _int_sqrt
       ___awdiv
   _move *
   _pid_init *
   _pid_reset *
     _pid_init
   _pid_step *
     ___fladd
       ___flmul (ARG)
     ___flge
     ___flmul
     ___flsub
       ___fladd
       ___flmul (ARG)
   _point_init *
   _printf *
     _pid_step (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
           _strcpy
           _tolower
             _isupper
         _fputc
         _isupper
         _strncmp
         _tolower
   _set *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     87      97       5       94.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     145      12        0.0%
DATA                 0      0     145       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Apr 16 09:28:04 2021

     RGB_point_init@self 0007             ___fldiv@aexp 0019             ___fldiv@bexp 0018  
           ___fldiv@sign 0011                       l41 482E                       l50 4414  
                     l52 43DE                       l44 47AA                       l61 44E0  
                     l53 4408                       l54 441C                       l38 481C  
                     l47 47D0                       l71 354A                       l64 45EC  
                     l80 47F6                       l73 353A                       l58 4062  
                     l67 4262                       l77 438E             ___awdiv@sign 0006  
    ___wmul@multiplicand 0003                      l311 3FB0                      l207 3A48  
                    l324 4112                      l350 3C52                      l345 3C0C  
                    l610 1E66                      l194 38E4                      l354 4726  
                    l339 41BC                      l701 2870                      l711 29A0  
                    l703 28E8                      l704 28D6                      l608 1EB2  
                    l800 3EB0                      l625 1FCC                      l617 2182  
                    l609 1EA0                      l377 3B4E                      l634 209C  
                    l650 4632                      l802 3EEC                      l810 2E22  
                    l635 208A                      l662 2D78                      l808 2E1A  
                    l664 2BD8                      l673 2C1E                      l930 25B4  
                    l675 2C96                      l667 2B9C                      l828 305C  
                    l676 2C84                      l694 267A                      l846 1CC2  
                    l758 4784                      l960 46AE                      l864 1438  
                    l944 4476                      l945 447E                      l698 29DE  
                    l938 24D6                      l963 46B6                      l955 3D50  
                    l972 36A0                      l892 1878                      l797 3E6E  
                    l969 375C                      l994 42F8                      l979 46EE  
                    _abs 4678                      _pad 3E28                      _set 4786  
           ___awmod@sign 0006                      tosl 000FFD                      wreg 000FE8  
             _TXSTA1bits 000FAC             ___flmul@aexp 0012             ___flmul@bexp 0013  
           ___flmul@sign 000D             ___flmul@temp 0018             ___flmul@prod 0014  
           ___fltol@exp1 000A                     l1002 4676                     l1014 475C  
                   l1008 459E                     l1033 4540                     l1018 3E26  
                   ?_abs 0013                     l1028 4538                     l3000 2664  
                   l3010 26AE                     l3002 266A                     l3020 26FE  
                   l3012 26BA                     l3004 268A                     l3100 45EE  
                   l3110 3F00                     l3030 2740                     l3022 270A  
                   l3014 26C4                     l3006 269A                     l3102 45FE  
                   l3120 3F26                     l3112 3F08                     l3040 27A2  
                   l3032 274C                     l3024 2716                     l3016 26DA  
                   l3130 3F5E                     l3122 3F2E                     l3114 3F0C  
                   l3106 3EEE                     l3210 3BCC                     l3202 3B50  
                   l3050 2838                     l3042 27AE                     l3034 275C  
                   l3026 2724                     l3018 26E6                     l3140 3F8A  
                   l3132 3F64                     l3124 3F40                     l3116 3F1A  
                   l3108 3EF2                     l3220 3C50                     l3212 3BDA  
                   l3204 3B7E                     l3060 288E                     l3052 2856  
                   l3044 27CA                     l3036 2776                     l3028 2730  
                   l3300 4692                     l3134 3F7A                     l3126 3F48  
                   l3142 3F90                     l3118 3F22                     l3214 3BEC  
                   l3206 3B8E                     l3070 28F8                     l3062 2892  
                   l3054 2860                     l3046 27F4                     l3038 2786  
                   l2510 481C                     l3150 4064                     l3310 3CE6  
                   l3302 3C54                     l3144 3FA0                     l3136 3F82  
                   l3128 3F50                     l3216 3BFA                     l3208 3BBC  
                   l3080 295A                     l3072 2904                     l3064 28A0  
                   l3056 286E                     l3048 282A                     l2600 1DF8  
                   l2512 482A                     l2520 4292                     l3400 2F5A  
                   l3160 4090                     l3152 4068                     l3224 46F0  
                   l3240 3A9E                     l3232 3A4A                     l3320 3D48  
                   l3304 3C74                     l3146 3FA8                     l3138 3F84  
                   l3218 3C4A                     l3090 29C2                     l3082 296E  
                   l3074 2912                     l3066 28CE                     l3058 2880  
                   l2610 1E32                     l2602 1DFC                     l2530 1CD0  
                   l2522 42B0                     l2514 4264                     l3402 2F74  
                   l3410 2FD6                     l3170 40C8                     l3162 4098  
                   l3154 4076                     l3226 4706                     l3242 3AA0  
                   l3234 3A60                     l3306 3CB2                     l3314 3CF2  
                   l3092 29C4                     l3084 2988                     l3076 293C  
                   l2700 20B8                     l2620 1E84                     l2612 1E4E  
                   l2604 1E00                     l2540 1D10                     l2532 1CDE  
                   l2524 42E6                     l2516 4276                     l3420 301C  
                   l3412 2FE8                     l3404 2F92                     l3180 4102  
                   l3172 40DE                     l3164 40AA                     l3156 407E  
                   l3228 4716                     l3244 3AB0                     l3316 3D04  
                   l3308 3CDA                     l3340 356C                     l3324 4542  
                   l3332 4518                     l3500 12D0                     l3086 29A4  
                   l3094 29CA                     l3078 2940                     l2710 2122  
                   l2702 20C6                     l2630 1ED0                     l2622 1E92  
                   l2614 1E5E                     l2606 1E04                     l2550 1D42  
                   l2542 1D12                     l2534 1CE0                     l2518 4288  
                   l3422 3024                     l3414 2FF8                     l3406 2FAC  
                   l3182 410A                     l3174 40E6                     l3166 40B2  
                   l3158 4082                     l3190 4152                     l3270 3B2E  
                   l3254 3ADA                     l3246 3AB4                     l3238 3A74  
                   l3350 3654                     l3342 35C2                     l3326 4552  
                   l3334 452A                     l3510 13A0                     l3502 1304  
                   l3430 1028                     l3096 29CE                     l3088 29B4  
                   l2720 215C                     l2712 2142                     l2704 2100  
                   l2640 1F10                     l2624 1E94                     l2616 1E74  
                   l2608 1E08                     l2560 1D6A                     l2552 1D44  
                   l2536 1CF0                     l2544 1D1A                     l2528 1CC4  
                   l2800 38F8                     l3280 3E4C                     l3416 2FFE  
                   l3424 3034                     l3408 2FC6                     l3176 40EC  
                   l3168 40BA                     l3192 4180                     l3272 3B3E  
                   l3264 3B02                     l3256 3AE4                     l3248 3AC2  
                   l3360 373C                     l3352 3690                     l3344 35D6  
                   l3328 44E2                     l3600 183C                     l3520 140A  
                   l3504 130A                     l3512 13D2                     l3440 107C  
                   l3432 1038                     l2722 2162                     l2714 2146  
                   l2706 2102                     l2650 1F3A                     l2642 1F1C  
                   l2634 1EE4                     l2626 1E9E                     l2618 1E80  
                   l2570 1DA4                     l2562 1D7A                     l2554 1D4A  
                   l2546 1D2A                     l2538 1D00                     l2810 3968  
                   l2802 3918                     l2730 4634                     l3290 3E92  
                   l3282 3E5A                     l3418 3010                     l3370 2DC2  
                   l3178 40F2                     l3194 4190                     l3186 4114  
                   l3266 3B0E                     l3258 3AEE                     l3362 374C  
                   l3346 35E4                     l3354 36C4                     l3338 354C  
                   l3610 1894                     l3602 1840                     l3522 1412  
                   l3514 13E2                     l3506 1364                     l3450 10C2  
                   l3442 1084                     l3434 1046                     l2724 2170  
                   l2716 2154                     l2708 2112                     l2660 1FAC  
                   l2644 1F20                     l2636 1EF4                     l2628 1EC0  
                   l2652 1F40                     l2580 1DD0                     l2572 1DB6  
                   l2564 1D8A                     l2556 1D58                     l2548 1D30  
                   l2820 39E0                     l2812 3970                     l2804 391C  
                   l2732 4640                     l2740 4734                     l3292 3EC0  
                   l3284 3E66                     l3276 3E28                     l3380 2E2A  
                   l3372 2DE2                     l2900 2B68                     l3196 41B4  
                   l3188 4142                     l3268 3B1E                     l3356 3700  
                   l3700 1BB0                     l3620 193A                     l3612 18F8  
                   l3604 1850                     l3540 14C2                     l3532 1456  
                   l3524 142C                     l3516 13E6                     l3508 1398  
                   l3460 10FE                     l3452 10CA                     l3444 1096  
                   l3436 104E                     l3428 101E                     l2726 2172  
                   l2718 215A                     l2670 2006                     l2654 1F66  
                   l2662 1FBC                     l2646 1F2E                     l2638 1F02  
                   l2590 1DE4                     l2582 1DD4                     l2574 1DC4  
                   l2566 1D8C                     l2558 1D5A                     l2822 39F2  
                   l2814 3984                     l2806 392A                     l2734 4652  
                   l2742 4738                     l3294 3ED4                     l3286 3E7A  
                   l3278 3E38                     l3390 2E62                     l3382 2E3C  
                   l3374 2DF2                     l3366 2D7A                     l2910 2BC4  
                   l2902 2B78                     l3198 41BA                     l3358 3714  
                   l3710 1BF6                     l3702 1BCA                     l3630 1976  
                   l3614 1908                     l3622 1942                     l3606 1864  
                   l3550 1500                     l3534 1468                     l3542 14C6  
                   l3518 13F8                     l3526 1444                     l3470 117A  
                   l3454 10CE                     l3446 10A4                     l3438 1072  
                   l2680 2036                     l2672 2010                     l2664 1FE2  
                   l2656 1F9A                     l2648 1F30                     l2592 1DE8  
                   l2584 1DD8                     l2576 1DC8                     l2568 1D94  
                   l2760 3794                     l2752 375E                     l2816 3992  
                   l2824 39F8                     l2808 394A                     l2736 4656  
                   l2744 4750                     l3288 3E8E                     l3392 2E68  
                   l3384 2E4A                     l3376 2DF4                     l3368 2D9A  
                   l2920 2C04                     l2912 2BC6                     l2904 2B8C  
                   l2840 2A0C                     l2832 29E0                     l3720 1C46  
                   l3712 1C06                     l3704 1BD0                     l3640 19A2  
                   l3632 197C                     l3624 1954                     l3616 191A  
                   l3608 1870                     l3560 154E                     l3552 1504  
                   l3544 14CE                     l3536 1484                     l3472 1184  
                   l3464 1134                     l3456 10D2                     l3448 10B6  
                   l2690 205E                     l2682 203A                     l2674 201E  
                   l2666 1FF2                     l2658 1F9C                     l2594 1DEC  
                   l2586 1DDC                     l2578 1DCC                     l2770 37F0  
                   l2762 37A2                     l2754 3762                     l2826 3A08  
                   l2818 39C0                     l3298 4678                     l2738 4728  
                   l3394 2EEA                     l3386 2E50                     l3378 2E0E  
                   l2930 2C40                     l2922 2C0E                     l2914 2BD6  
                   l2906 2B9A                     l2850 2A46                     l2842 2A1C  
                   l2834 29EC                     l3730 1C82                     l3722 1C58  
                   l3714 1C0C                     l3706 1BE2                     l3634 1988  
                   l3626 1962                     l3642 19A8                     l3650 19D6  
                   l3618 192C                     l3570 15E6                     l3554 1516  
                   l3562 1556                     l3546 14E0                     l3538 14BA  
                   l3490 1258                     l3482 1208                     l3466 1146  
                   l3458 10D8                     l3802 2460                     l2692 206C  
                   l2684 204A                     l2676 2020                     l2596 1DF0  
                   l2588 1DE0                     l3900 343E                     l2780 385A  
                   l2772 37F8                     l2764 37C2                     l2756 3770  
                   l2828 3A28                     l3396 2EF0                     l3388 2E58  
                   l2940 2CB2                     l2932 2C4E                     l2924 2C1C  
                   l2916 2BE8                     l2908 2BA6                     l2860 2A72  
                   l2852 2A4C                     l2844 2A2C                     l2836 29FA  
                   l2748 46B8                     l3724 1C64                     l3716 1C12  
                   l3708 1BEE                     l3732 1C9E                     l3660 1A8C  
                   l3652 1A2E                     l3644 19BA                     l3636 1998  
                   l3628 1972                     l3580 16CA                     l3572 163E  
                   l3564 155E                     l3556 1524                     l3548 14F2  
                   l3484 121A                     l3468 1162                     l3476 11AC  
                   l3804 2472                     l3812 2512                     l2694 2082  
                   l2678 202E                     l2686 204C                     l2598 1DF4  
                   l3910 34DC                     l3902 347E                     l2790 38A4  
                   l2782 387A                     l2774 380C                     l2766 37C6  
                   l2758 3790                     l3398 2EF6                     l2950 2D1E  
                   l2942 2CC0                     l2934 2C7C                     l2918 2BFE  
                   l2926 2C2E                     l2870 2AAC                     l2862 2A82  
                   l2854 2A52                     l2846 2A2E                     l2838 29FC  
                   l3726 1C6C                     l3670 1ADC                     l3662 1AA8  
                   l3654 1A62                     l3646 19CC                     l3638 199C  
                   l3590 1764                     l3582 16FC                     l3574 1672  
                   l3566 156E                     l3558 153C                     l3486 1236  
                   l3478 11D2                     l3494 1280                     l3750 3DDC  
                   l3742 3D88                     l3830 25A2                     l3814 2536  
                   l3822 2564                     l3806 24A6                     ?_pad 0012  
                   l3840 41F2                     l2688 205A                     l3912 351A  
                   l3904 34BC                     l2792 38C4                     l2784 387C  
                   l2776 381A                     l2768 37D2                     l2960 2D6C  
                   l2952 2D38                     l2944 2CEA                     l2928 2C3C  
                   l2872 2AC2                     l2864 2A92                     l2856 2A60  
                   l2848 2A36                     l3728 1C7C                     l3680 1B1E  
                   l3672 1AEC                     l3664 1ABA                     l3656 1A6A  
                   l3648 19D0                     l3592 1798                     l3584 1712  
                   l3568 1582                     l3576 1678                     l3496 129A  
                   l3488 124E                     l3752 3E04                     l3744 3D96  
                   l3736 3D52                     l3824 2572                     l3816 2544  
                   l3808 24E6                     l3760 21B6                     l3920 4786  
                   l3850 44BC                     l3842 420E                     l2970 25B6  
                   l2698 20AC                     l2786 388E                     l2778 382C  
                   l2962 2D6E                     l2954 2D54                     l2938 2CA6  
                   l2946 2CEE                     l2890 2B16                     l2874 2AD2  
                   l2882 2AF2                     l2866 2A94                     l2858 2A62  
                   l3690 1B4E                     l3682 1B2C                     l3674 1AFE  
                   l3666 1AC8                     l3658 1A6E                     l3594 17EE  
                   l3586 1744                     l3578 1696                     l3746 3DAE  
                   l3738 3D7C                     l3818 2558                     l3770 222C  
                   l3762 21C8                     l3922 4796                     l3852 44CC  
                   l3860 43EA                     l3932 3FB2                     l3844 422A  
                   l3836 41BE                     l2980 25F2                     l2972 25C2  
                   l2788 3894                     l2796 38E6                     l2956 2D58  
                   l2948 2D08                     l2892 2B30                     l2884 2B02  
                   l2876 2ADA                     l2868 2A9C                     l3692 1B74  
                   l3684 1B34                     l3676 1B06                     l3668 1AD8  
                   l3596 17F4                     l3588 1754                     l3748 3DCA  
                   l3780 22FC                     l3772 223C                     l3764 21CC  
                   l3828 257E                     l3756 2184                     l3940 305E  
                   l3854 4390                     l3934 4012                     l3926 47AC  
                   l3846 4246                     l3838 41D6                     l3918 42FA  
                   l2990 2624                     l2982 2602                     l2974 25D0  
                   l2798 38EA                     l2958 2D66                     l2894 2B40  
                   l2886 2B02                     l2878 2ADE                     l3694 1B90  
                   l3686 1B3C                     l3678 1B16                     l3598 1828  
                   l3790 236A                     l3774 226C                     l3766 21EC  
                   l3758 21A8                     l3870 441E                     l3950 306C  
                   l3942 3062                     l3848 4480                     l3880 45BC  
                   l3864 47D2                     l3856 43B0                     l3936 404E  
                   l3928 47BC                     l2992 2632                     l2984 2608  
                   l2976 25D2                     l2896 2B50                     l3696 1B98  
                   l3688 1B48                     l3792 239A                     l3784 2334  
                   l3776 2290                     l3768 21FC                     l3872 4426  
                   l3960 312A                     l3952 306E                     l3944 3066  
                   l3882 45CC                     l3866 47EE                     l2994 2634  
                   l2986 2618                     l2978 25E2                     l2898 2B60  
                   l3698 1B9E                     l3786 2346                     l3778 22B4  
                   l3874 4434                     l3970 3218                     l3962 3160  
                   l3954 30CA                     l3946 3068                     l3884 45DC  
                   l2996 2644                     l2988 261E                     l3892 3312  
                   l3788 235C                     l3796 23C6                     l3876 445A  
                   l3980 32F2                     l3972 322E                     l3964 3196  
                   l3956 30E6                     l3948 306A                     l3878 45A0  
                   l2998 2654                     l3894 3346                     l3798 23F4  
                   l3886 475E                     l3974 3278                     l3966 31CC  
                   l3958 3102                     l3896 3382                     l3888 4768  
                   l3976 32B4                     l3968 3202                     l3898 33C2  
                   l3978 32E6                     ?_set 0001                     STR_1 1011  
                   STR_2 1011                     STR_3 1015                     STR_4 1001  
                   STR_5 1009                     STR_8 1005                     STR_9 100D  
                   u3000 46E8                     u3001 46E2                     u3010 46EA  
                   u3020 3770                     u3100 392A                     u3021 376C  
                   u3101 3926                     u3030 37A2                     u3110 3968  
                   u3031 379E                     u3111 3964                     u3120 3992  
                   u3200 2A82                     u4000 4514                     u3041 37CC  
                   u3121 398E                     u3201 2A7E                     u3050 37F0  
                   u3130 39C0                     u3210 2AC2                     u4010 452A  
                   u3051 37EC                     u3131 39BC                     u3211 2ABE  
                   u4011 4526                     u3060 381A                     u3140 3A08  
                   u3300 2C4E                     u3220 2B02                     u4100 3700  
                   u4020 3594                     u3061 3816                     u3141 3A04  
                   u3301 2C4A                     u3221 2AFE                     u4101 36FC  
                   u3070 385A                     u3310 2C7C                     u3230 2B78  
                   u3150 29FA                     u4110 373C                     u4030 35C2  
                   u3071 3856                     u3311 2C78                     u3231 2B74  
                   u3151 29F6                     u4111 3738                     u4031 35BE  
                   u3400 25F2                     u2600 1CF0                     u5000 34BC  
                   u3080 38A4                     u4200 2F92                     u4120 2DAA  
                   u3320 2C92                     u3240 2B9A                     u3160 2A0C  
                   u4040 35E4                     u3401 25EE                     u2601 1CEC  
                   u5001 34B8                     u3081 38A0                     u4201 2F8E  
                   u4121 2DA4                     u3321 2C8E                     u3241 2B96  
                   u3161 2A08                     u4041 35E0                     u4025 358A  
                   u3410 2632                     u2610 1D00                     u5010 351A  
                   u3090 38F8                     u4210 2FAC                     u4130 2DAC  
                   u3330 2CA6                     u3250 2BC4                     u3170 2A1C  
                   u3411 262E                     u2611 1CFC                     u5011 3516  
                   u3091 38F4                     u4211 2FA8                     u3331 2CA2  
                   u3251 2BC0                     u3171 2A18                     u3500 28CE  
                   u3420 2644                     u2700 1E4C                     u2620 1D42  
                   u2540 482A                     u4220 2FC6                     u4140 2DC2  
                   u3340 2CC0                     u3260 2BE8                     u3180 2A60  
                   u4060 3650                     u4300 10B6                     u3501 28CA  
                   u3421 2640                     u2621 1D3E                     u2541 4826  
                   u4221 2FC2                     u4141 2DBE                     u3341 2CBC  
                   u3261 2BE4                     u3181 2A5C                     u4061 364C  
                   u4301 10B2                     u3510 28E4                     u3430 2654  
                   u2710 1E74                     u2630 1D58                     u2550 4276  
                   u4230 2FD6                     u4150 2DF2                     u3350 2D08  
                   u3270 2BFE                     u3190 2A72                     u4070 3674  
                   u4310 10FE                     u3511 28E0                     u3431 2650  
                   u2711 1E70                     u2631 1D54                     u2551 4272  
                   u4231 2FD2                     u4151 2DEE                     u3351 2D04  
                   u3271 2BFA                     u3191 2A6E                     u4055 35F8  
                   u4311 10FA                     u3600 3F5E                     u3520 28F8  
                   u3440 268A                     u2800 1FAC                     u2720 1E92  
                   u2640 1D6A                     u2560 4288                     u4240 2FE8  
                   u4160 2E0E                     u3360 2D38                     u3280 2C1C  
                   u4080 3690                     u4056 3602                     u4400 1360  
                   u4320 112C                     u3601 3F5A                     u3521 28F4  
                   u3441 2686                     u2801 1FA8                     u2721 1E8E  
                   u2641 1D66                     u2561 4284                     u4241 2FE4  
                   u4161 2E0A                     u3361 2D34                     u3281 2C18  
                   u4081 368C                     u4057 3612                     u4401 135C  
                   u4321 1126                     u3610 3F7A                     u3530 2912  
                   u3450 269A                     u2810 1FE2                     u2730 1EB2  
                   u2650 1D7A                     u2570 42B0                     u4250 2FF8  
                   u4170 2E3C                     u3370 2D66                     u3290 2C3C  
                   u4090 36E4                     u4410 13D2                     u4330 112E  
                   u3611 3F76                     u3531 290E                     u3451 2696  
                   u2811 1FDE                     u2731 1EAE                     u2651 1D76  
                   u2571 42AC                     u4251 2FF4                     u4171 2E38  
                   u3371 2D62                     u3291 2C38                     u4075 366A  
                   u4411 13CE                     u3620 3FA0                     u3540 295A  
                   u3460 2814                     u3380 25D0                     u2900 20AC  
                   u2820 1FF2                     u2740 1EC0                     u2660 1DB6  
                   u2580 42E6                     u4260 3010                     u4180 2E4A  
                   u3700 4180                     u4500 14F2                     u4420 13F8  
                   u4340 1146                     u5060 32E6                     u5028 314C  
                   u3621 3F9C                     u3541 2956                     u3381 25CC  
                   u2901 20A8                     u2821 1FEE                     u2741 1EBC  
                   u2661 1DB2                     u2581 42E2                     u4261 300C  
                   u4181 2E46                     u3701 417C                     u4501 14EE  
                   u4421 13F4                     u4341 1142                     u5061 32E2  
                   u5029 3160                     u3550 2988                     u3470 286E  
                   u3390 25E2                     u2910 20C6                     u2830 201E  
                   u2750 1ED0                     u2670 1DC4                     u2590 1CDE  
                   u4190 2F74                     u3630 4076                     u3710 41B4  
                   u4510 1500                     u4430 140A                     u4350 11D2  
                   u4270 1046                     u5038 3182                     u3551 2984  
                   u3471 286A                     u3391 25DE                     u2911 20C2  
                   u2831 201A                     u2751 1ECC                     u2671 1DC0  
                   u2591 1CDA                     u4191 2F70                     u3631 4072  
                   u3711 41B0                     u4095 36DA                     u4511 14FC  
                   u4431 1406                     u4351 11CE                     u4271 1042  
                   u5039 3196                     u3720 3B7E                     u3560 29C2  
                   u3480 288E                     u2920 2100                     u2840 202E  
                   u2760 1F02                     u2680 1E32                     u3640 4090  
                   u3800 3AC2                     u4600 183C                     u4520 1516  
                   u4440 142C                     u4360 1200                     u4280 1096  
                   u5048 31B0                     u3721 3B7A                     u3561 29BE  
                   u3481 288A                     u3465 280A                     u2921 20FC  
                   u2841 202A                     u2761 1EFE                     u2681 1E2E  
                   u3641 408C                     u3801 3ABE                     u4601 1838  
                   u4521 1512                     u4441 1428                     u4361 11FA  
                   u4281 1092                     u5049 31C4                     u3570 3F00  
                   u3730 3BBC                     u3490 28A0                     u2930 2112  
                   u2850 204A                     u2770 1F10                     u2690 1E4A  
                   u3650 40AA                     u3810 3AD6                     u4610 1864  
                   u4530 1524                     u4450 1452                     u4370 1202  
                   u4290 10A4                     u5058 31EE                     u3571 3EFC  
                   u3731 3BB8                     u3491 289C                     u2931 210E  
                   u2851 2046                     u2771 1F0C                     u2691 1E44  
                   u3651 40A6                     u3811 3AD2                     u4611 1860  
                   u4531 1520                     u4451 144E                     u4291 10A0  
                   u5059 3202                     u3580 3F1A                     u3740 3BDA  
                   u2940 2122                     u2860 205A                     u2780 1F2E  
                   u3660 40C8                     u3820 3AFE                     u3900 3C94  
                   u4700 1AA8                     u4620 1908                     u4540 154E  
                   u4460 1468                     u4380 121A                     u3581 3F16  
                   u3741 3BD6                     u2941 211E                     u2861 2056  
                   u2781 1F2A                     u3661 40C4                     u3821 3AFA  
                   u4701 1AA4                     u4621 1904                     u4541 154A  
                   u4461 1464                     u4381 1216                     u5077 32FE  
                   u3590 3F40                     u3750 3BFA                     u2950 2142  
                   u2870 206C                     u2790 1F66                     u3670 40DE  
                   u3830 3B1E                     u3910 3CB2                     u4710 1ABA  
                   u4630 191A                     u4550 1696                     u4470 1484  
                   u4390 12CC                     u3591 3F3C                     u3751 3BF6  
                   u2951 213E                     u2871 2068                     u2791 1F62  
                   u3671 40DA                     u3831 3B1A                     u3911 3CAE  
                   u4711 1AB6                     u4631 1916                     u4551 1692  
                   u4471 1480                     u4391 12C8                     u3760 3C4A  
                   u2960 2154                     u2880 2082                     u3680 4102  
                   u3840 3B2E                     u3920 3CDA                     u4800 1C58  
                   u4720 1AC8                     u4640 192C                     u4560 16FC  
                   u4480 14BA                     u3761 3C46                     u2961 2150  
                   u2881 207E                     u3681 40FE                     u3841 3B2A  
                   u3921 3CD6                     u3905 3C8A                     u4801 1C54  
                   u4721 1AC4                     u4641 1928                     u4561 16F8  
                   u4481 14B6                     u2970 2170                     u2890 2098  
                   u3850 3E38                     u3690 4142                     u3770 4706  
                   u3930 3D04                     u4730 1AFE                     u4650 193A  
                   u4570 1744                     u4490 14E0                     u4810 3D7C  
                   u2971 216C                     u2891 2094                     u3851 3E34  
                   u3691 413E                     u3771 4702                     u3931 3D00  
                   u4731 1AFA                     u4651 1936                     u4571 1740  
                   u4491 14DC                     u4811 3D78                     u2980 4676  
                   u3860 3E5A                     u3780 3A60                     u4740 1B2C  
                   u4660 1954                     u4580 1754                     u4820 3DAE  
                   u4900 22B4                     u2981 4672                     u3861 3E56  
                   u3781 3A5C                     u4741 1B28                     u4661 1950  
                   u4581 1750                     u4821 3DAA                     u4901 22B0  
                   u2990 4750                     u3870 3EB0                     u3790 3A94  
                   u3950 3D3E                     u4750 1BB0                     u4670 1962  
                   u4590 17EE                     u4830 3DCA                     u4910 2346  
                   u2991 474C                     u3871 3EAC                     u3951 3D38  
                   u4751 1BAC                     u4671 195E                     u4591 17EA  
                   u4831 3DC6                     u4911 2342                     u3880 3EC0  
                   u3960 3D40                     u4760 1BCA                     u4680 19BA  
                   u4840 3DDC                     u4920 23F4                     u3881 3EBC  
                   u3945 3D16                     u4761 1BC6                     u4681 19B6  
                   u4841 3DD8                     u4921 23F0                     u3890 4692  
                   u3970 458C                     u4770 1BE2                     u4690 1A8C  
                   u4850 3E04                     u4930 245A                     u3891 468E  
                   u3795 3A8A                     u4771 1BDE                     u4691 1A88  
                   u4851 3E00                     u4931 2454                     u3980 459E  
                   u4780 1C40                     u4940 245C                     u4860 21A8  
                   u3981 459A                     u4781 1C3A                     u4861 21A4  
                   u3990 4512                     u4790 1C42                     u4950 2472  
                   u4870 21FC                     u3991 450C                     u4951 246E  
                   u4871 21F8                     u4960 2536                     u4880 223C  
                   u3977 4582                     u4961 2532                     u4881 2238  
                   u4970 43B0                     u4890 2290                     u4971 43AC  
                   u4891 228C                     u4980 4408                     u4981 4404  
                   u4990 4476                     u4991 4472              distance@pwd 0019  
                   abs@a 0013                     _dbuf 0100                     _main 305E  
                   _dtoa 2D7A                     _prec 00F3                     _move 47AC  
                   _nout 00EF                     pad@i 0019                     pad@p 0016  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001B  
                   fsr2l 000FD9                     set@x 0003                     set@y 0005  
          ___fpclassifyf 3C54                     prodh 000FF4                     prodl 000FF3  
                   start 0000          ___fldiv@new_exp 0012             _tolower$1189 000D  
           ___param_bank 000000                    ??_abs 0015                    ??_pad 0018  
                  ??_set 0007            ___fltol@sign1 0009          __end_of___aodiv 38E6  
        __end_of___fladd 2184                    ?_main 0001                    ?_dtoa 001D  
        __end_of___aomod 3A4A          __end_of___fldiv 2D7A          __end_of___awdiv 3FB2  
        __end_of___flneg 4728                    STR_12 1019                    STR_14 1019  
                  ?_move 0001          __end_of___awmod 4114          __end_of___flmul 29E0  
        __end_of___flsub 4634          __end_of___fltol 3B50          ___awdiv@divisor 0003  
        ___awdiv@counter 0005             vfpfcnvrt@fmt 0043                    _TX1IF 007CF4  
           distance@self 0011                    _flags 00F5                    _fputc 4264  
                  _fputs 4634                    pad@fp 0012                    _width 00F1  
                  _putch 481A                    dtoa@d 001F                    dtoa@i 003F  
                  dtoa@n 0037                    dtoa@p 0031                    dtoa@s 0035  
                  dtoa@w 0033          __end_of_isupper 46F0                    pclath 000FFA  
                  tablat 000FF5                    status 000FD8            pid_reset@self 0017  
         ?___fpclassifyf 0001          __end_of_tolower 4542          __end_of_strncmp 3E28  
        __initialization 47F8             __end_of_main 3312             __end_of_dtoa 305E  
           __end_of_move 47D2                   ??_main 00A6                   ??_dtoa 0027  
                 ??_move 0007            pid_step@kgain 003C            __activetblptr 000002  
__size_of_RGB_point_init 004E                   ?_fputc 0002                   ?_fputs 000B  
       ___awdiv@dividend 0001                   ?_putch 0001                   _SPBRG1 000FAF  
                 _TXREG1 000FAD             vfprintf@cfmt 005D         __end_of_distance 4064  
                 ___flge 3B50                   ___fleq 4114            distance@other 0013  
              ??___aodiv 0011                ??___fladd 0022                ??___aomod 0011  
                 ___wmul 47D2                ??___fldiv 0009                ??___awdiv 0005  
              ??___flneg 0005                ??___awmod 0005                ??___flmul 0009  
              ??___flsub 0032                ??___fltol 0005                   _efgtoa 101E  
                 _floorf 354C                   clear_0 47FE                   clear_1 480A  
       ___awdiv@quotient 0007          ___awmod@divisor 0003         __end_of_pid_init 4264  
                 isa$std 000001         __end_of_int_sqrt 441E          ___awmod@counter 0005  
       __end_of_pid_step 354C                   _printf 475E                   pad@buf 0014  
                 main@c1 00AE                   main@p1 00DD                   fp__set 0000  
                 main@p2 00BB                   dtoa@fp 001D                   _strcpy 4542  
                 _strlen 4728                   fputc@c 0002                   fputs@c 000F  
                 fputs@i 0010                   fputs@s 000B          ___fpclassifyf@e 0009  
        ___fpclassifyf@u 000B          ___fpclassifyf@x 0001                   move@dx 0003  
                 move@dy 0005             __mediumconst 0000                   tblptrh 000FF7  
              ??_isupper 0003                   tblptrl 000FF6                   tblptru 000FF8  
       pid_step@feedback 0038         __end_of_vfprintf 4480                ??_tolower 0009  
              ??_strncmp 0007               ___flge@ff1 001A               ___flge@ff2 001E  
        ??___fpclassifyf 0005               ___fleq@ff1 0001               ___fleq@ff2 0005  
             __accesstop 0060  __end_of__initialization 4810               ___flneg@f1 0001  
          ___rparam_used 000001               ___fltol@f1 0001              pid_init@max 000B  
            pid_init@min 000F           __pcstackCOMRAM 0001         pid_step@setpoint 0034  
          __end_of_fputc 42FA            __end_of_fputs 4678            __end_of_putch 4830  
            pid_step@err 0044                  ??_fputc 0006                  ??_fputs 000F  
         pid_step@action 0048                  ??_putch 0001               __pbssBANK0 00E7  
             __pbssBANK1 0100       __size_of_pid_reset 0096                  ?___flge 001A  
                ?___fleq 0001                  ?___wmul 0001                  ?_efgtoa 0032  
                ?_floorf 001A                  ?_printf 009E                  ?_strcpy 0001  
                ?_strlen 0001           _RGB_point_init 45A0       __size_of_vfpfcnvrt 0432  
              ?_distance 0011                ?_pid_init 0001                ?_int_sqrt 0009  
              ?_pid_step 0032                  __Hparam 0000                  __Lparam 0000  
        __size_of___flge 0104          __size_of___fleq 00AA                  ___aodiv 375E  
                ___fladd 1CC4                  ___aomod 38E6                  ___fldiv 29E0  
                ___awdiv 3EEE                  ___flneg 46F0                  ___awmod 4064  
                ___flmul 25B6                  ___flsub 45EE                  ___fltol 3A4A  
        __size_of___wmul 0026                ?_vfprintf 0098             __psmallconst 1000  
        __size_of_efgtoa 0CA6   __end_of_RGB_point_init 45EE          __size_of_floorf 0212  
                __pcinit 47F8                  __ramtop 1000                  __ptext0 305E  
                __ptext1 4786                  __ptext2 475E                  __ptext3 441E  
                __ptext4 2184                  __ptext5 3D52                  __ptext6 101E  
                __ptext7 44E2                  __ptext8 46B8                  __ptext9 4542  
        __size_of_printf 0028            _pid_step$1390 0040          __size_of_strcpy 005E  
        __size_of_strlen 0036             __size_of_abs 0040             __size_of_pad 00C6  
           __size_of_set 0026         ___awmod@dividend 0001                  _isupper 46B8  
                efgtoa@c 0038                  efgtoa@d 0078                  efgtoa@e 0090  
                efgtoa@f 0034                  efgtoa@g 008C                  efgtoa@h 0082  
                efgtoa@i 008A                  efgtoa@l 0086                  efgtoa@m 0072  
                efgtoa@n 0092                  efgtoa@p 007C                  efgtoa@t 006C  
                efgtoa@u 0094                  efgtoa@w 007E        __end_of_pid_reset 4390  
                fp__move 0000                  _tolower 44E2                  _strncmp 3D52  
             ??_distance 0015     end_of_initialization 4810                  floorf@e 0028  
                floorf@m 0024                  floorf@u 002A                  floorf@x 001A  
                fputc@fp 0004            __Lmediumconst 0000                  fputs@fp 000D  
             ??_pid_init 0017               ??_int_sqrt 000B                  set@self 0001  
             ??_pid_step 003C        __end_of_vfpfcnvrt 25B6               efgtoa@mode 0081  
             efgtoa@sign 007A                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_vfprintf 005D  
             _point_init 4480                  strcpy@d 0009                  strlen@a 0003  
                strcpy@s 0007                  strlen@s 0001          ?_RGB_point_init 0007  
            point_init@x 0003              point_init@y 0005              ___fladd@grs 0029  
              _TRISCbits 000F94          RGB_point_init@B 000F          RGB_point_init@G 000E  
        RGB_point_init@R 000D          RGB_point_init@x 0009          RGB_point_init@y 000B  
            ___fldiv@grs 0014              ___fldiv@rem 000D              ___flmul@grs 000E  
             distance@dx 001B               distance@dy 001D             pid_init@self 0001  
         __end_of___flge 3C54           __end_of___fleq 41BE              vfpfcnvrt@ap 0045  
            vfpfcnvrt@ct 0059              vfpfcnvrt@fp 0041              vfpfcnvrt@ll 004B  
         __end_of___wmul 47F8           __end_of_efgtoa 1CC4           __end_of_floorf 375E  
             floorf@F527 00E7           __end_of_printf 4786           __end_of_strcpy 45A0  
         __end_of_strlen 475E      start_initialization 47F8              __end_of_abs 46B8  
            __end_of_pad 3EEE              __end_of_set 47AC             pid_step@self 0032  
  __end_of___fpclassifyf 3D52              vfprintf@fmt 009A                 ??___flge 0022  
               ??___fleq 0009                 ??___wmul 0005                 ??_efgtoa 0039  
            ?_point_init 0001                 ??_floorf 001E                 ??_printf 005F  
               ??_strcpy 0005                 ??_strlen 0003                ___fladd@a 001E  
              ___fladd@b 001A                ___fldiv@a 0005                ___fldiv@b 0001  
              ___flmul@a 0005                ___flmul@b 0001                ___flsub@a 002E  
              ___flsub@b 002A            __pcstackBANK0 0060               pid_init@ki 0007  
             pid_init@kp 0003         ___aodiv@dividend 0001               int_sqrt@x0 000F  
             int_sqrt@x1 000D        __size_of_distance 00B2              _efgtoa$1072 0064  
            _efgtoa$1067 0060              _efgtoa$1076 0066              _efgtoa$1068 0062  
            _efgtoa$1077 0068              _efgtoa$1078 006A                _main$1389 00A8  
              _dtoa$1043 002F        __size_of_pid_init 00A6        __size_of_int_sqrt 008E  
      __size_of_pid_step 023A                 ?___aodiv 0001                 ?___fladd 001A  
               ?___aomod 0001                 ?___fldiv 0001                 ?___awdiv 0001  
       ___aodiv@quotient 0013                 ?___flneg 0001                 ?___awmod 0001  
               ?___flmul 0001                 ?___flsub 002A                 ?___fltol 0001  
      __size_of_vfprintf 0062              __smallconst 1000                 ?_isupper 0001  
               ?_tolower 0007           __size_of_fputc 0096           __size_of_fputs 0044  
               ?_strncmp 0001           __size_of_putch 0016                _pid_reset 42FA  
    __size_of_point_init 0062           ___wmul@product 0005         ??_RGB_point_init 0010  
              _vfpfcnvrt 2184        ___wmul@multiplier 0001               vfpfcnvrt@c 005C  
             vfpfcnvrt@f 0055               ?_pid_reset 0017                 __Hrparam 0000  
             vfprintf@ap 009C                 __Lrparam 0000               vfprintf@fp 0098  
       __size_of___aodiv 0188         __size_of___fladd 04C0         __size_of___aomod 0164  
       __size_of___fldiv 039A         __size_of___awdiv 00C4         __size_of___flneg 0038  
       __size_of___awmod 00B0         __size_of___flmul 042A         __size_of___flsub 0046  
       __size_of___fltol 0106               ?_vfpfcnvrt 0041                pid_init@h 0013  
        ___aodiv@divisor 0009                int_sqrt@s 0009          ___aodiv@counter 0011  
     ___fpclassifyf@F465 00EB                 __ptext10 354C                 __ptext11 3C54  
               __ptext20 4634                 __ptext12 3A4A                 __ptext21 4264  
               __ptext13 46F0                 __ptext30 3B50                 __ptext22 481A  
               __ptext14 4114                 __ptext31 42FA                 __ptext23 4678  
               __ptext15 29E0                 __ptext40 0000                 __ptext32 41BE  
               __ptext24 38E6                 __ptext16 4064                 __ptext33 47AC  
               __ptext25 375E                 __ptext17 2D7A                 __ptext34 3FB2  
               __ptext26 3312                 __ptext18 3E28                 __ptext35 4390  
               __ptext27 45EE                 __ptext19 4728                 __ptext36 3EEE  
               __ptext28 1CC4                 __ptext37 47D2                 __ptext29 25B6  
               __ptext38 45A0                 __ptext39 4480         __size_of_isupper 0038  
               _distance 3FB2         __size_of_tolower 0060               strcpy@dest 0001  
       __size_of_strncmp 00D6            __size_of_main 02B4            __size_of_dtoa 02E4  
          __size_of_move 0026                 _pid_init 41BE                 _int_sqrt 4390  
               _pid_step 3312           point_init@self 0001                 efgtoa@fp 0032  
               efgtoa@ne 0070                 efgtoa@pp 006E                 efgtoa@ou 0074  
               isa$xinst 000000                 _vfprintf 441E             ??_point_init 0007  
              printf@fmt 009E                 main@pid1 00C5                 main@dist 00AC  
       ___aomod@dividend 0001                putch@data 0001           _vfpfcnvrt$1096 0053  
            ??_pid_reset 0019                 move@self 0001       __end_of_point_init 44E2  
              strcpy@src 0003               _RCSTA1bits 000FAB                 isupper@c 0001  
              strncmp@_l 0001                strncmp@_r 0003              efgtoa@nmode 0080  
               printf@ap 00A4          ___aomod@divisor 0009              ??_vfpfcnvrt 0047  
        ___aomod@counter 0011                 tolower@c 0007   __size_of___fpclassifyf 00FE  
               strncmp@l 0008                 strncmp@n 0005                 strncmp@r 000A  
          ___fladd@signs 0026             ___aodiv@sign 0012             ___fladd@aexp 0027  
           ___fladd@bexp 0028             ___aomod@sign 0012              fp__distance 0000  
