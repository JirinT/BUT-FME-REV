Version 4.0 HI-TECH Software Intermediate Code
[v F7 `*S1 ~T0 @X0 1 t ]
[v F6 `(v ~T0 @X0 0 tf3`C*S1`i`i ]
[v F13 `*S1 ~T0 @X0 1 t ]
[v F12 `(v ~T0 @X0 0 tf3`C*S1`i`i ]
[v F19 `*S1 ~T0 @X0 1 t ]
[v F21 `*S1 ~T0 @X0 1 t ]
[v F18 `(i ~T0 @X0 0 tf2`C*S1`C*S1 ]
"7 ./point.h
[; ;./point.h: 7: typedef struct _sPoint{
[s S1 `i 1 `i 1 `*F6 1 `*F12 1 `*F18 1 ]
[n S1 _sPoint x y set move distance ]
[v F46 `*S1 ~T0 @X0 1 t ]
[v F52 `*S1 ~T0 @X0 1 t ]
[v F62 `*S1 ~T0 @X0 1 t ]
[v F63 `*S1 ~T0 @X0 1 t ]
[v F72 `*S1 ~T0 @X0 1 t ]
"15
[; ;./point.h: 15: typedef struct _s_RGB_Point{
[s S2 `S1 1 `uc 1 `uc 1 `uc 1 ]
[n S2 _s_RGB_Point super R G B ]
[v F123 `*S2 ~T0 @X0 1 t ]
"4 point.c
[; ;point.c: 4: static void set( stPoint *const self,
[v _set `(v ~T0 @X0 1 sf3`C*S1`i`i ]
"6
[; ;point.c: 6:                     int y){
{
[e :U _set ]
[v F48 `*S1 ~T0 @X0 1 t ]
"4
[; ;point.c: 4: static void set( stPoint *const self,
[v _self `C*S1 ~T0 @X0 1 r1 ]
"5
[; ;point.c: 5:                     int x,
[v _x `i ~T0 @X0 1 r2 ]
"6
[; ;point.c: 6:                     int y){
[v _y `i ~T0 @X0 1 r3 ]
[f ]
"7
[; ;point.c: 7:     self->x = x;
[e = . *U _self 0 _x ]
"8
[; ;point.c: 8:     self->y = y;
[e = . *U _self 1 _y ]
"9
[; ;point.c: 9:     return;
[e $UE 3  ]
"10
[; ;point.c: 10: }
[e :UE 3 ]
}
"13
[; ;point.c: 13: static void move( stPoint *const self,
[v _move `(v ~T0 @X0 1 sf3`C*S1`i`i ]
"15
[; ;point.c: 15:                     int dy){
{
[e :U _move ]
[v F54 `*S1 ~T0 @X0 1 t ]
"13
[; ;point.c: 13: static void move( stPoint *const self,
[v _self `C*S1 ~T0 @X0 1 r1 ]
"14
[; ;point.c: 14:                     int dx,
[v _dx `i ~T0 @X0 1 r2 ]
"15
[; ;point.c: 15:                     int dy){
[v _dy `i ~T0 @X0 1 r3 ]
[f ]
"16
[; ;point.c: 16:     self->x += dx;
[e =+ . *U _self 0 _dx ]
"17
[; ;point.c: 17:     self->y += dy;
[e =+ . *U _self 1 _dy ]
"18
[; ;point.c: 18:     return;
[e $UE 4  ]
"19
[; ;point.c: 19: }
[e :UE 4 ]
}
"22
[; ;point.c: 22: static int int_sqrt(int s){
[v _int_sqrt `(i ~T0 @X0 1 sf1`i ]
{
[e :U _int_sqrt ]
[v _s `i ~T0 @X0 1 r1 ]
[f ]
"23
[; ;point.c: 23:  int x0 = s >> 1;
[v _x0 `i ~T0 @X0 1 a ]
[e = _x0 >> _s -> 1 `i ]
"25
[; ;point.c: 25:  if ( x0 )
[e $ ! != _x0 -> 0 `i 6  ]
"26
[; ;point.c: 26:  {
{
"28
[; ;point.c: 28:   int x1 = ( x0 + s / x0 ) >> 1;
[v _x1 `i ~T0 @X0 1 a ]
[e = _x1 >> + _x0 / _s _x0 -> 1 `i ]
"30
[; ;point.c: 30:   while ( x1 < x0 )
[e $U 7  ]
[e :U 8 ]
"31
[; ;point.c: 31:   {
{
"32
[; ;point.c: 32:    x0 = x1;
[e = _x0 _x1 ]
"33
[; ;point.c: 33:    x1 = ( x0 + s / x0 ) >> 1;
[e = _x1 >> + _x0 / _s _x0 -> 1 `i ]
"34
[; ;point.c: 34:   }
}
[e :U 7 ]
"30
[; ;point.c: 30:   while ( x1 < x0 )
[e $ < _x1 _x0 8  ]
[e :U 9 ]
"36
[; ;point.c: 36:   return x0;
[e ) _x0 ]
[e $UE 5  ]
"37
[; ;point.c: 37:  }
}
[e $U 10  ]
"38
[; ;point.c: 38:  else
[e :U 6 ]
"39
[; ;point.c: 39:  {
{
"40
[; ;point.c: 40:   return s;
[e ) _s ]
[e $UE 5  ]
"41
[; ;point.c: 41:  }
}
[e :U 10 ]
"42
[; ;point.c: 42: }
[e :UE 5 ]
}
"44
[; ;point.c: 44: static int distance( stPoint *const self,
[v _distance `(i ~T0 @X0 1 sf2`C*S1`C*S1 ]
"45
[; ;point.c: 45:                         stPoint *const other){
{
[e :U _distance ]
[v F65 `*S1 ~T0 @X0 1 t ]
"44
[; ;point.c: 44: static int distance( stPoint *const self,
[v _self `C*S1 ~T0 @X0 1 r1 ]
[v F67 `*S1 ~T0 @X0 1 t ]
"45
[; ;point.c: 45:                         stPoint *const other){
[v _other `C*S1 ~T0 @X0 1 r2 ]
[f ]
"47
[; ;point.c: 47:     int dx = self->x - other->x;
[v _dx `i ~T0 @X0 1 a ]
[e = _dx - . *U _self 0 . *U _other 0 ]
"48
[; ;point.c: 48:     int dy = self->y - other->y;
[v _dy `i ~T0 @X0 1 a ]
[e = _dy - . *U _self 1 . *U _other 1 ]
"49
[; ;point.c: 49:     int pwd = dx*dx + dy*dy;
[v _pwd `i ~T0 @X0 1 a ]
[e = _pwd + * _dx _dx * _dy _dy ]
"51
[; ;point.c: 51:     return int_sqrt(pwd);
[e ) ( _int_sqrt (1 _pwd ]
[e $UE 11  ]
"53
[; ;point.c: 53: }
[e :UE 11 ]
}
"56
[; ;point.c: 56: void point_init( stPoint *const self,
[v _point_init `(v ~T0 @X0 1 ef3`C*S1`i`i ]
"58
[; ;point.c: 58:                     int y){
{
[e :U _point_init ]
[v F74 `*S1 ~T0 @X0 1 t ]
"56
[; ;point.c: 56: void point_init( stPoint *const self,
[v _self `C*S1 ~T0 @X0 1 r1 ]
"57
[; ;point.c: 57:                     int x,
[v _x `i ~T0 @X0 1 r2 ]
"58
[; ;point.c: 58:                     int y){
[v _y `i ~T0 @X0 1 r3 ]
[f ]
"60
[; ;point.c: 60:     self->set = &set;
[e = . *U _self 2 &U _set ]
"61
[; ;point.c: 61:     self->move = &move;
[e = . *U _self 3 &U _move ]
"62
[; ;point.c: 62:     self->distance = &distance;
[e = . *U _self 4 &U _distance ]
"63
[; ;point.c: 63:     self->x = x;
[e = . *U _self 0 _x ]
"64
[; ;point.c: 64:     self->y = y;
[e = . *U _self 1 _y ]
"66
[; ;point.c: 66: }
[e :UE 12 ]
}
"68
[; ;point.c: 68: void RGB_point_init( st_RGB_Point *const self,
[v _RGB_point_init `(v ~T0 @X0 1 ef6`C*S2`i`i`uc`uc`uc ]
"73
[; ;point.c: 73:                         char B){
{
[e :U _RGB_point_init ]
[v F125 `*S2 ~T0 @X0 1 t ]
"68
[; ;point.c: 68: void RGB_point_init( st_RGB_Point *const self,
[v _self `C*S2 ~T0 @X0 1 r1 ]
"69
[; ;point.c: 69:                         int x,
[v _x `i ~T0 @X0 1 r2 ]
"70
[; ;point.c: 70:                         int y,
[v _y `i ~T0 @X0 1 r3 ]
"71
[; ;point.c: 71:                         char R,
[v _R `uc ~T0 @X0 1 r4 ]
"72
[; ;point.c: 72:                         char G,
[v _G `uc ~T0 @X0 1 r5 ]
"73
[; ;point.c: 73:                         char B){
[v _B `uc ~T0 @X0 1 r6 ]
[f ]
"75
[; ;point.c: 75:     point_init(&self->super, x, y);
[e ( _point_init (3 , , &U . *U _self 0 _x _y ]
"77
[; ;point.c: 77:     self->R = R;
[e = . *U _self 1 _R ]
"78
[; ;point.c: 78:     self->G = G;
[e = . *U _self 2 _G ]
"79
[; ;point.c: 79:     self->B = B;
[e = . *U _self 3 _B ]
"81
[; ;point.c: 81: }
[e :UE 13 ]
}
