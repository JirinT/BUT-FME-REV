

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jan 31 14:39:38 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35  0000                     
    36                           ; Version 2.10
    37                           ; Generated 31/07/2019 GMT
    38                           ; 
    39                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F46K22 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     _ANSELAbits	set	3896
    71  0000                     _ANSELCbits	set	3898
    72  0000                     _ANSELDbits	set	3899
    73  0000                     _SSP2STATbits	set	3949
    74  0000                     _SSP2BUF	set	3951
    75  0000                     _SSP2CON2bits	set	3947
    76  0000                     _SSP2ADD	set	3950
    77  0000                     _SSP2CON1bits	set	3948
    78  0000                     _LATAbits	set	3977
    79  0000                     _RCREG1	set	4014
    80  0000                     _TXREG1	set	4013
    81  0000                     _PORTAbits	set	3968
    82  0000                     _PORTCbits	set	3970
    83  0000                     _ADRESL	set	4035
    84  0000                     _ADRESH	set	4036
    85  0000                     _RCSTA1bits	set	4011
    86  0000                     _TXSTA1bits	set	4012
    87  0000                     _SPBRG1	set	4015
    88  0000                     _ADCON0bits	set	4034
    89  0000                     _ADCON2bits	set	4032
    90  0000                     _ADCON2	set	4032
    91  0000                     _ADCON1	set	4033
    92  0000                     _TRISEbits	set	3990
    93  0000                     _TRISAbits	set	3986
    94  0000                     _LATCbits	set	3979
    95  0000                     _LATDbits	set	3980
    96  0000                     _TRISCbits	set	3988
    97  0000                     _TRISDbits	set	3989
    98  0000                     _SSP2IF	set	32039
    99  0000                     _RC1IF	set	31989
   100  0000                     _TX1IF	set	31988
   101  0000                     _LATD6	set	31846
   102  0000                     _LATD5	set	31845
   103  0000                     _LATD4	set	31844
   104  0000                     _LATC4	set	31836
   105  0000                     _LATD3	set	31843
   106  0000                     _LATD2	set	31842
   107  0000                     _GODONE	set	32273
   108  0000                     _ADON	set	32272
   109                           
   110                           	psect	smallconst
   111  001000                     __psmallconst:
   112                           	opt callstack 0
   113  001000  00                 	db	0
   114  001001                     STR_2:
   115  001001  20                 	db	32
   116  001002  20                 	db	32
   117  001003  20                 	db	32
   118  001004  20                 	db	32
   119  001005  20                 	db	32
   120  001006  20                 	db	32
   121  001007  20                 	db	32
   122  001008  20                 	db	32
   123  001009  20                 	db	32
   124  00100A  20                 	db	32
   125  00100B  20                 	db	32
   126  00100C  20                 	db	32
   127  00100D  20                 	db	32
   128  00100E  20                 	db	32
   129  00100F  20                 	db	32
   130  001010  20                 	db	32
   131  001011  00                 	db	0
   132  001012                     STR_1:
   133  001012  4D                 	db	77	;'M'
   134  001013  65                 	db	101	;'e'
   135  001014  63                 	db	99	;'c'
   136  001015  68                 	db	104	;'h'
   137  001016  6C                 	db	108	;'l'
   138  001017  61                 	db	97	;'a'
   139  001018  62                 	db	98	;'b'
   140  001019  20                 	db	32
   141  00101A  6A                 	db	106	;'j'
   142  00101B  65                 	db	101	;'e'
   143  00101C  20                 	db	32
   144  00101D  62                 	db	98	;'b'
   145  00101E  6F                 	db	111	;'o'
   146  00101F  7A                 	db	122	;'z'
   147  001020  69                 	db	105	;'i'
   148  001021  21                 	db	33
   149  001022  00                 	db	0
   150  001023                     STR_3:
   151  001023  50                 	db	80	;'P'
   152  001024  6F                 	db	111	;'o'
   153  001025  74                 	db	116	;'t'
   154  001026  31                 	db	49	;'1'
   155  001027  3A                 	db	58	;':'
   156  001028  20                 	db	32
   157  001029  25                 	db	37
   158  00102A  64                 	db	100	;'d'
   159  00102B  20                 	db	32
   160  00102C  5B                 	db	91	;'['
   161  00102D  6D                 	db	109	;'m'
   162  00102E  56                 	db	86	;'V'
   163  00102F  5D                 	db	93	;']'
   164  001030  0A                 	db	10
   165  001031  00                 	db	0
   166  001032                     STR_4:
   167  001032  50                 	db	80	;'P'
   168  001033  6F                 	db	111	;'o'
   169  001034  74                 	db	116	;'t'
   170  001035  32                 	db	50	;'2'
   171  001036  3A                 	db	58	;':'
   172  001037  20                 	db	32
   173  001038  25                 	db	37
   174  001039  64                 	db	100	;'d'
   175  00103A  00                 	db	0
   176                           
   177                           ; #config settings
   178  00103B  00                 	db	0	; dummy byte at the end
   179  0000                     
   180                           	psect	cinit
   181  00216E                     __pcinit:
   182                           	opt callstack 0
   183  00216E                     start_initialization:
   184                           	opt callstack 0
   185  00216E                     __initialization:
   186                           	opt callstack 0
   187                           
   188                           ; Clear objects allocated to BANK0 (40 bytes)
   189  00216E  EE00  F060         	lfsr	0,__pbssBANK0
   190  002172  0E28               	movlw	40
   191  002174                     clear_0:
   192  002174  6AEE               	clrf	postinc0,c
   193  002176  06E8               	decf	wreg,f,c
   194  002178  E1FD               	bnz	clear_0
   195  00217A                     end_of_initialization:
   196                           	opt callstack 0
   197  00217A                     __end_of__initialization:
   198                           	opt callstack 0
   199  00217A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   200  00217C  6EF8               	movwf	tblptru,c
   201  00217E  0100               	movlb	0
   202  002180  EF2D  F00B         	goto	_main	;jump to C main() function
   203                           
   204                           	psect	bssBANK0
   205  000060                     __pbssBANK0:
   206                           	opt callstack 0
   207  000060                     _nout:
   208                           	opt callstack 0
   209  000060                     	ds	2
   210  000062                     _width:
   211                           	opt callstack 0
   212  000062                     	ds	2
   213  000064                     _prec:
   214                           	opt callstack 0
   215  000064                     	ds	2
   216  000066                     _flags:
   217                           	opt callstack 0
   218  000066                     	ds	2
   219  000068                     _dbuf:
   220                           	opt callstack 0
   221  000068                     	ds	32
   222                           
   223                           	psect	cstackBANK0
   224  000088                     __pcstackBANK0:
   225                           	opt callstack 0
   226  000088                     	ds	2
   227  00008A                     sprintf@ap:
   228                           	opt callstack 0
   229  00008A                     printf@ap:
   230                           	opt callstack 0
   231                           
   232                           ; 2 bytes @ 0x2
   233  00008A                     	ds	2
   234  00008C                     sprintf@f:
   235                           	opt callstack 0
   236                           
   237                           ; 6 bytes @ 0x4
   238  00008C                     	ds	6
   239  000092                     main@text:
   240                           	opt callstack 0
   241                           
   242                           ; 17 bytes @ 0xA
   243  000092                     	ds	17
   244  0000A3                     main@pot2:
   245                           	opt callstack 0
   246                           
   247                           ; 2 bytes @ 0x1B
   248  0000A3                     	ds	2
   249  0000A5                     main@flag:
   250                           	opt callstack 0
   251                           
   252                           ; 1 bytes @ 0x1D
   253  0000A5                     	ds	1
   254  0000A6                     main@count:
   255                           	opt callstack 0
   256                           
   257                           ; 1 bytes @ 0x1E
   258  0000A6                     	ds	1
   259  0000A7                     main@pot1:
   260                           	opt callstack 0
   261                           
   262                           ; 4 bytes @ 0x1F
   263  0000A7                     	ds	4
   264                           
   265                           	psect	cstackCOMRAM
   266  000001                     __pcstackCOMRAM:
   267                           	opt callstack 0
   268  000001                     ??_REV_btn:
   269  000001                     ?_strlen:
   270                           	opt callstack 0
   271  000001                     ?_REV_pot:
   272                           	opt callstack 0
   273  000001                     ?___lmul:
   274                           	opt callstack 0
   275  000001                     ?___aodiv:
   276                           	opt callstack 0
   277  000001                     ?___aomod:
   278                           	opt callstack 0
   279  000001                     putch@c:
   280                           	opt callstack 0
   281  000001                     LCD_Send@data:
   282                           	opt callstack 0
   283  000001                     strlen@s:
   284                           	opt callstack 0
   285  000001                     ___lmul@multiplier:
   286                           	opt callstack 0
   287  000001                     ___aodiv@dividend:
   288                           	opt callstack 0
   289  000001                     ___aomod@dividend:
   290                           	opt callstack 0
   291                           
   292                           ; 8 bytes @ 0x0
   293  000001                     	ds	1
   294  000002                     ??_LCD_Init:
   295  000002                     LCD_ShowString@textData:
   296                           	opt callstack 0
   297  000002                     fputc@c:
   298                           	opt callstack 0
   299                           
   300                           ; 2 bytes @ 0x1
   301  000002                     	ds	1
   302  000003                     ??_REV_pot:
   303  000003                     REV_btn@id:
   304                           	opt callstack 0
   305  000003                     strlen@a:
   306                           	opt callstack 0
   307                           
   308                           ; 2 bytes @ 0x2
   309  000003                     	ds	1
   310  000004                     REV_btn@btn_state:
   311                           	opt callstack 0
   312  000004                     LCD_ShowString@lineNum:
   313                           	opt callstack 0
   314  000004                     fputc@fp:
   315                           	opt callstack 0
   316                           
   317                           ; 2 bytes @ 0x3
   318  000004                     	ds	1
   319  000005                     REV_pot@adc_id:
   320                           	opt callstack 0
   321  000005                     REV_led@state:
   322                           	opt callstack 0
   323  000005                     LCD_ShowString@i:
   324                           	opt callstack 0
   325  000005                     ___lmul@multiplicand:
   326                           	opt callstack 0
   327                           
   328                           ; 4 bytes @ 0x4
   329  000005                     	ds	1
   330  000006                     ??_fputc:
   331  000006                     ??_REV_led:
   332                           
   333                           ; 1 bytes @ 0x5
   334  000006                     	ds	2
   335  000008                     REV_led@id:
   336                           	opt callstack 0
   337                           
   338                           ; 1 bytes @ 0x7
   339  000008                     	ds	1
   340  000009                     ___lmul@product:
   341                           	opt callstack 0
   342  000009                     ___aodiv@divisor:
   343                           	opt callstack 0
   344  000009                     ___aomod@divisor:
   345                           	opt callstack 0
   346                           
   347                           ; 8 bytes @ 0x8
   348  000009                     	ds	2
   349  00000B                     fputs@s:
   350                           	opt callstack 0
   351                           
   352                           ; 2 bytes @ 0xA
   353  00000B                     	ds	2
   354  00000D                     fputs@fp:
   355                           	opt callstack 0
   356                           
   357                           ; 2 bytes @ 0xC
   358  00000D                     	ds	2
   359  00000F                     fputs@c:
   360                           	opt callstack 0
   361                           
   362                           ; 1 bytes @ 0xE
   363  00000F                     	ds	1
   364  000010                     fputs@i:
   365                           	opt callstack 0
   366                           
   367                           ; 2 bytes @ 0xF
   368  000010                     	ds	1
   369  000011                     ___aodiv@counter:
   370                           	opt callstack 0
   371  000011                     ___aomod@counter:
   372                           	opt callstack 0
   373                           
   374                           ; 1 bytes @ 0x10
   375  000011                     	ds	1
   376  000012                     ?_pad:
   377                           	opt callstack 0
   378  000012                     ___aodiv@sign:
   379                           	opt callstack 0
   380  000012                     ___aomod@sign:
   381                           	opt callstack 0
   382  000012                     pad@fp:
   383                           	opt callstack 0
   384                           
   385                           ; 2 bytes @ 0x11
   386  000012                     	ds	1
   387  000013                     ?_abs:
   388                           	opt callstack 0
   389  000013                     abs@a:
   390                           	opt callstack 0
   391  000013                     ___aodiv@quotient:
   392                           	opt callstack 0
   393                           
   394                           ; 8 bytes @ 0x12
   395  000013                     	ds	1
   396  000014                     pad@buf:
   397                           	opt callstack 0
   398                           
   399                           ; 2 bytes @ 0x13
   400  000014                     	ds	1
   401  000015                     ??_abs:
   402                           
   403                           ; 1 bytes @ 0x14
   404  000015                     	ds	1
   405  000016                     pad@p:
   406                           	opt callstack 0
   407                           
   408                           ; 2 bytes @ 0x15
   409  000016                     	ds	2
   410  000018                     ??_pad:
   411                           
   412                           ; 1 bytes @ 0x17
   413  000018                     	ds	1
   414  000019                     pad@i:
   415                           	opt callstack 0
   416                           
   417                           ; 2 bytes @ 0x18
   418  000019                     	ds	2
   419  00001B                     pad@w:
   420                           	opt callstack 0
   421                           
   422                           ; 2 bytes @ 0x1A
   423  00001B                     	ds	2
   424  00001D                     ?_dtoa:
   425                           	opt callstack 0
   426  00001D                     dtoa@fp:
   427                           	opt callstack 0
   428                           
   429                           ; 2 bytes @ 0x1C
   430  00001D                     	ds	2
   431  00001F                     dtoa@d:
   432                           	opt callstack 0
   433                           
   434                           ; 8 bytes @ 0x1E
   435  00001F                     	ds	8
   436  000027                     ??_dtoa:
   437                           
   438                           ; 1 bytes @ 0x26
   439  000027                     	ds	8
   440  00002F                     _dtoa$1605:
   441                           	opt callstack 0
   442                           
   443                           ; 2 bytes @ 0x2E
   444  00002F                     	ds	2
   445  000031                     dtoa@p:
   446                           	opt callstack 0
   447                           
   448                           ; 2 bytes @ 0x30
   449  000031                     	ds	2
   450  000033                     dtoa@w:
   451                           	opt callstack 0
   452                           
   453                           ; 2 bytes @ 0x32
   454  000033                     	ds	2
   455  000035                     dtoa@s:
   456                           	opt callstack 0
   457                           
   458                           ; 2 bytes @ 0x34
   459  000035                     	ds	2
   460  000037                     dtoa@n:
   461                           	opt callstack 0
   462                           
   463                           ; 8 bytes @ 0x36
   464  000037                     	ds	8
   465  00003F                     dtoa@i:
   466                           	opt callstack 0
   467                           
   468                           ; 2 bytes @ 0x3E
   469  00003F                     	ds	2
   470  000041                     ?_vfpfcnvrt:
   471                           	opt callstack 0
   472  000041                     vfpfcnvrt@fp:
   473                           	opt callstack 0
   474                           
   475                           ; 2 bytes @ 0x40
   476  000041                     	ds	2
   477  000043                     vfpfcnvrt@fmt:
   478                           	opt callstack 0
   479                           
   480                           ; 2 bytes @ 0x42
   481  000043                     	ds	2
   482  000045                     vfpfcnvrt@ap:
   483                           	opt callstack 0
   484                           
   485                           ; 2 bytes @ 0x44
   486  000045                     	ds	2
   487  000047                     ??_vfpfcnvrt:
   488                           
   489                           ; 1 bytes @ 0x46
   490  000047                     	ds	2
   491  000049                     vfpfcnvrt@ll:
   492                           	opt callstack 0
   493                           
   494                           ; 8 bytes @ 0x48
   495  000049                     	ds	8
   496  000051                     ?_vfprintf:
   497                           	opt callstack 0
   498  000051                     vfprintf@fp:
   499                           	opt callstack 0
   500                           
   501                           ; 2 bytes @ 0x50
   502  000051                     	ds	2
   503  000053                     vfprintf@fmt:
   504                           	opt callstack 0
   505                           
   506                           ; 2 bytes @ 0x52
   507  000053                     	ds	2
   508  000055                     vfprintf@ap:
   509                           	opt callstack 0
   510                           
   511                           ; 2 bytes @ 0x54
   512  000055                     	ds	2
   513  000057                     vfprintf@cfmt:
   514                           	opt callstack 0
   515                           
   516                           ; 2 bytes @ 0x56
   517  000057                     	ds	2
   518  000059                     ?_sprintf:
   519                           	opt callstack 0
   520  000059                     ?_printf:
   521                           	opt callstack 0
   522  000059                     sprintf@s:
   523                           	opt callstack 0
   524  000059                     printf@fmt:
   525                           	opt callstack 0
   526                           
   527                           ; 2 bytes @ 0x58
   528  000059                     	ds	2
   529  00005B                     sprintf@fmt:
   530                           	opt callstack 0
   531                           
   532                           ; 2 bytes @ 0x5A
   533  00005B                     	ds	4
   534  00005F                     ??_main:
   535                           
   536                           ; 1 bytes @ 0x5E
   537  00005F                     	ds	1
   538                           
   539 ;;
   540 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   541 ;;
   542 ;; *************** function _main *****************
   543 ;; Defined at:
   544 ;;		line 16 in file "main_advanced.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;		None
   547 ;; Auto vars:     Size  Location     Type
   548 ;;  text           17   10[BANK0 ] unsigned char [17]
   549 ;;  pot1            4   31[BANK0 ] long 
   550 ;;  pot2            2   27[BANK0 ] short 
   551 ;;  count           1   30[BANK0 ] unsigned char 
   552 ;;  flag            1   29[BANK0 ] _Bool 
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      void 
   555 ;; Registers used:
   556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   563 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   564 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;      Totals:         1      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;Total ram usage:       26 bytes
   567 ;; Hardware stack levels required when called:    8
   568 ;; This function calls:
   569 ;;		_LCD_Clear
   570 ;;		_LCD_ShowString
   571 ;;		_REV_btn
   572 ;;		_REV_init
   573 ;;		_REV_led
   574 ;;		_REV_pot
   575 ;;		___lmul
   576 ;;		_printf
   577 ;;		_sprintf
   578 ;; This function is called by:
   579 ;;		Startup code after reset
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           	psect	text0
   584  00165A                     __ptext0:
   585                           	opt callstack 0
   586  00165A                     _main:
   587                           	opt callstack 23
   588  00165A                     
   589                           ;main_advanced.c: 18:     REV_init();
   590  00165A  EC8A  F00F         	call	_REV_init	;wreg free
   591  00165E                     
   592                           ;main_advanced.c: 19:     _Bool flag = 1;
   593  00165E  0E01               	movlw	1
   594  001660  0100               	movlb	0	; () banked
   595  001662  6FA5               	movwf	main@flag& (0+255),b
   596  001664                     
   597                           ; BSR set to: 0
   598                           ;main_advanced.c: 20:     char count = 0;
   599  001664  0E00               	movlw	0
   600  001666  6FA6               	movwf	main@count& (0+255),b
   601  001668                     
   602                           ; BSR set to: 0
   603                           ;main_advanced.c: 21:     char text[17];;main_advanced.c: 22:     int32_t pot1;;main_adv
      +                          anced.c: 23:     int16_t pot2;;main_advanced.c: 26:     sprintf(text,"Mechlab je bozi!")
      +                          ;
   604  001668  0E92               	movlw	low main@text
   605  00166A  6E59               	movwf	sprintf@s^0,c
   606  00166C  0E00               	movlw	high main@text
   607  00166E  6E5A               	movwf	(sprintf@s+1)^0,c
   608  001670  0E12               	movlw	low STR_1
   609  001672  6E5B               	movwf	sprintf@fmt^0,c
   610  001674  0E10               	movlw	high STR_1
   611  001676  6E5C               	movwf	(sprintf@fmt+1)^0,c
   612  001678  ECEF  F00F         	call	_sprintf	;wreg free
   613  00167C                     
   614                           ;main_advanced.c: 27:     LCD_ShowString(1,text);
   615  00167C  0E92               	movlw	low main@text
   616  00167E  6E02               	movwf	LCD_ShowString@textData^0,c
   617  001680  0E00               	movlw	high main@text
   618  001682  6E03               	movwf	(LCD_ShowString@textData+1)^0,c
   619  001684  0E01               	movlw	1
   620  001686  ECCE  F00E         	call	_LCD_ShowString
   621  00168A                     
   622                           ;main_advanced.c: 28:     sprintf(text,"                ");
   623  00168A  0E92               	movlw	low main@text
   624  00168C  6E59               	movwf	sprintf@s^0,c
   625  00168E  0E00               	movlw	high main@text
   626  001690  6E5A               	movwf	(sprintf@s+1)^0,c
   627  001692  0E01               	movlw	low STR_2
   628  001694  6E5B               	movwf	sprintf@fmt^0,c
   629  001696  0E10               	movlw	high STR_2
   630  001698  6E5C               	movwf	(sprintf@fmt+1)^0,c
   631  00169A  ECEF  F00F         	call	_sprintf	;wreg free
   632  00169E                     l2001:
   633                           
   634                           ;main_advanced.c: 33:         if (count == 100 && flag){
   635  00169E  0E64               	movlw	100
   636  0016A0  0100               	movlb	0	; () banked
   637  0016A2  19A6               	xorwf	main@count& (0+255),w,b
   638  0016A4  A4D8               	btfss	status,2,c
   639  0016A6  EF57  F00B         	goto	u1601
   640  0016AA  EF59  F00B         	goto	u1600
   641  0016AE                     u1601:
   642  0016AE  EF9A  F00B         	goto	l2011
   643  0016B2                     u1600:
   644  0016B2                     
   645                           ; BSR set to: 0
   646  0016B2  51A5               	movf	main@flag& (0+255),w,b
   647  0016B4  B4D8               	btfsc	status,2,c
   648  0016B6  EF5F  F00B         	goto	u1611
   649  0016BA  EF61  F00B         	goto	u1610
   650  0016BE                     u1611:
   651  0016BE  EF9A  F00B         	goto	l2011
   652  0016C2                     u1610:
   653  0016C2                     
   654                           ; BSR set to: 0
   655                           ;main_advanced.c: 34:             count = 0;
   656  0016C2  0E00               	movlw	0
   657  0016C4  6FA6               	movwf	main@count& (0+255),b
   658  0016C6                     
   659                           ; BSR set to: 0
   660                           ;main_advanced.c: 35:             pot1 = (3300*pot1)>>10;
   661  0016C6  0E0A               	movlw	10
   662  0016C8  6E5F               	movwf	??_main^0,c
   663  0016CA  C0A7  F001         	movff	main@pot1,___lmul@multiplier
   664  0016CE  C0A8  F002         	movff	main@pot1+1,___lmul@multiplier+1
   665  0016D2  C0A9  F003         	movff	main@pot1+2,___lmul@multiplier+2
   666  0016D6  C0AA  F004         	movff	main@pot1+3,___lmul@multiplier+3
   667  0016DA  0EE4               	movlw	228
   668  0016DC  6E05               	movwf	___lmul@multiplicand^0,c
   669  0016DE  0E0C               	movlw	12
   670  0016E0  6E06               	movwf	(___lmul@multiplicand+1)^0,c
   671  0016E2  0E00               	movlw	0
   672  0016E4  6E07               	movwf	(___lmul@multiplicand+2)^0,c
   673  0016E6  0E00               	movlw	0
   674  0016E8  6E08               	movwf	(___lmul@multiplicand+3)^0,c
   675  0016EA  EC55  F00F         	call	___lmul	;wreg free
   676  0016EE                     u1625:
   677  0016EE  665F               	tstfsz	??_main^0,c
   678  0016F0  EF7C  F00B         	goto	u1626
   679  0016F4  EF84  F00B         	goto	u1627
   680  0016F8                     u1626:
   681  0016F8  3404               	rlcf	(?___lmul+3)^0,w,c
   682  0016FA  3204               	rrcf	(?___lmul+3)^0,f,c
   683  0016FC  3203               	rrcf	(?___lmul+2)^0,f,c
   684  0016FE  3202               	rrcf	(?___lmul+1)^0,f,c
   685  001700  3201               	rrcf	?___lmul^0,f,c
   686  001702  2E5F               	decfsz	??_main^0,f,c
   687  001704  EF77  F00B         	goto	u1625
   688  001708                     u1627:
   689  001708  C001  F0A7         	movff	?___lmul,main@pot1
   690  00170C  C002  F0A8         	movff	?___lmul+1,main@pot1+1
   691  001710  C003  F0A9         	movff	?___lmul+2,main@pot1+2
   692  001714  C004  F0AA         	movff	?___lmul+3,main@pot1+3
   693  001718                     
   694                           ;main_advanced.c: 36:             printf("Pot1: %d [mV]\n", pot1);
   695  001718  0E23               	movlw	low STR_3
   696  00171A  6E59               	movwf	printf@fmt^0,c
   697  00171C  0E10               	movlw	high STR_3
   698  00171E  6E5A               	movwf	(printf@fmt+1)^0,c
   699  001720  C0A7  F05B         	movff	main@pot1,?_printf+2
   700  001724  C0A8  F05C         	movff	main@pot1+1,?_printf+3
   701  001728  C0A9  F05D         	movff	main@pot1+2,?_printf+4
   702  00172C  C0AA  F05E         	movff	main@pot1+3,?_printf+5
   703  001730  EC90  F010         	call	_printf	;wreg free
   704  001734                     l2011:
   705                           
   706                           ;main_advanced.c: 39:         REV_led(2,REV_btn(1));
   707  001734  0E01               	movlw	1
   708  001736  EC92  F00C         	call	_REV_btn
   709  00173A  6E05               	movwf	REV_led@state^0,c
   710  00173C  0E02               	movlw	2
   711  00173E  EC23  F00D         	call	_REV_led
   712  001742                     
   713                           ;main_advanced.c: 40:         REV_led(3,REV_btn(2));
   714  001742  0E02               	movlw	2
   715  001744  EC92  F00C         	call	_REV_btn
   716  001748  6E05               	movwf	REV_led@state^0,c
   717  00174A  0E03               	movlw	3
   718  00174C  EC23  F00D         	call	_REV_led
   719  001750                     
   720                           ;main_advanced.c: 42:         pot1 = REV_pot(1);
   721  001750  0E01               	movlw	1
   722  001752  EC17  F00F         	call	_REV_pot
   723  001756  C001  F0A7         	movff	?_REV_pot,main@pot1
   724  00175A  C002  F0A8         	movff	?_REV_pot+1,main@pot1+1
   725  00175E  0100               	movlb	0	; () banked
   726  001760  0E00               	movlw	0
   727  001762  BFA8               	btfsc	(main@pot1+1)& (0+255),7,b
   728  001764  0EFF               	movlw	-1
   729  001766  6FA9               	movwf	(main@pot1+2)& (0+255),b
   730  001768  6FAA               	movwf	(main@pot1+3)& (0+255),b
   731  00176A                     
   732                           ; BSR set to: 0
   733                           ;main_advanced.c: 43:         pot2 = REV_pot(2);
   734  00176A  0E02               	movlw	2
   735  00176C  EC17  F00F         	call	_REV_pot
   736  001770  C001  F0A3         	movff	?_REV_pot,main@pot2
   737  001774  C002  F0A4         	movff	?_REV_pot+1,main@pot2+1
   738  001778                     
   739                           ;main_advanced.c: 45:         sprintf(text,"Pot2: %d",pot2);
   740  001778  0E92               	movlw	low main@text
   741  00177A  6E59               	movwf	sprintf@s^0,c
   742  00177C  0E00               	movlw	high main@text
   743  00177E  6E5A               	movwf	(sprintf@s+1)^0,c
   744  001780  0E32               	movlw	low STR_4
   745  001782  6E5B               	movwf	sprintf@fmt^0,c
   746  001784  0E10               	movlw	high STR_4
   747  001786  6E5C               	movwf	(sprintf@fmt+1)^0,c
   748  001788  C0A3  F05D         	movff	main@pot2,?_sprintf+4
   749  00178C  C0A4  F05E         	movff	main@pot2+1,?_sprintf+5
   750  001790  ECEF  F00F         	call	_sprintf	;wreg free
   751  001794                     
   752                           ;main_advanced.c: 46:         LCD_ShowString(2,text);
   753  001794  0E92               	movlw	low main@text
   754  001796  6E02               	movwf	LCD_ShowString@textData^0,c
   755  001798  0E00               	movlw	high main@text
   756  00179A  6E03               	movwf	(LCD_ShowString@textData+1)^0,c
   757  00179C  0E02               	movlw	2
   758  00179E  ECCE  F00E         	call	_LCD_ShowString
   759  0017A2                     
   760                           ;main_advanced.c: 48:         if (PORTAbits.RA3){
   761  0017A2  A680               	btfss	128,3,c	;volatile
   762  0017A4  EFD6  F00B         	goto	u1631
   763  0017A8  EFD8  F00B         	goto	u1630
   764  0017AC                     u1631:
   765  0017AC  EFDA  F00B         	goto	l2027
   766  0017B0                     u1630:
   767  0017B0                     
   768                           ;main_advanced.c: 49:             LCD_Clear();
   769  0017B0  EC75  F010         	call	_LCD_Clear	;wreg free
   770  0017B4                     l2027:
   771                           
   772                           ;main_advanced.c: 52:         count++;
   773  0017B4  0100               	movlb	0	; () banked
   774  0017B6  2BA6               	incf	main@count& (0+255),f,b
   775  0017B8  EF4F  F00B         	goto	l2001
   776  0017BC  EF00  F000         	goto	start
   777  0017C0                     __end_of_main:
   778                           	opt callstack 0
   779                           
   780 ;; *************** function _sprintf *****************
   781 ;; Defined at:
   782 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;  s               2   88[COMRAM] PTR unsigned char 
   785 ;;		 -> main@text(17), 
   786 ;;  fmt             2   90[COMRAM] PTR const unsigned char 
   787 ;;		 -> STR_4(9), STR_2(17), STR_1(17), 
   788 ;; Auto vars:     Size  Location     Type
   789 ;;  f               6    4[BANK0 ] struct _IO_FILE
   790 ;;  ap              2    2[BANK0 ] PTR void [1]
   791 ;;		 -> ?_printf(2), ?_sprintf(2), 
   792 ;;  ret             2    0        int 
   793 ;; Return value:  Size  Location     Type
   794 ;;                  2   88[COMRAM] int 
   795 ;; Registers used:
   796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   797 ;; Tracked objects:
   798 ;;		On entry : 0/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   802 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   803 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   805 ;;      Totals:         6      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   806 ;;Total ram usage:       16 bytes
   807 ;; Hardware stack levels used:    1
   808 ;; Hardware stack levels required when called:    7
   809 ;; This function calls:
   810 ;;		_vfprintf
   811 ;; This function is called by:
   812 ;;		_main
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           	psect	text1
   817  001FDE                     __ptext1:
   818                           	opt callstack 0
   819  001FDE                     _sprintf:
   820                           	opt callstack 23
   821  001FDE  0E5D               	movlw	low (?_sprintf+4)
   822  001FE0  0100               	movlb	0	; () banked
   823  001FE2  6F8A               	movwf	sprintf@ap& (0+255),b
   824  001FE4  0E00               	movlw	high (?_sprintf+4)
   825  001FE6  6F8B               	movwf	(sprintf@ap+1)& (0+255),b
   826  001FE8  C059  F08C         	movff	sprintf@s,sprintf@f
   827  001FEC  C05A  F08D         	movff	sprintf@s+1,sprintf@f+1
   828  001FF0                     
   829                           ; BSR set to: 0
   830  001FF0  0E00               	movlw	0
   831  001FF2  6F8F               	movwf	(sprintf@f+3)& (0+255),b
   832  001FF4  0E00               	movlw	0
   833  001FF6  6F8E               	movwf	(sprintf@f+2)& (0+255),b
   834  001FF8                     
   835                           ; BSR set to: 0
   836  001FF8  0E00               	movlw	0
   837  001FFA  6F91               	movwf	(sprintf@f+5)& (0+255),b
   838  001FFC  0E00               	movlw	0
   839  001FFE  6F90               	movwf	(sprintf@f+4)& (0+255),b
   840  002000                     
   841                           ; BSR set to: 0
   842  002000  0E8C               	movlw	low sprintf@f
   843  002002  6E51               	movwf	vfprintf@fp^0,c
   844  002004  0E00               	movlw	high sprintf@f
   845  002006  6E52               	movwf	(vfprintf@fp+1)^0,c
   846  002008  C05B  F053         	movff	sprintf@fmt,vfprintf@fmt
   847  00200C  C05C  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
   848  002010  0E8A               	movlw	low sprintf@ap
   849  002012  6E55               	movwf	vfprintf@ap^0,c
   850  002014  0E00               	movlw	high sprintf@ap
   851  002016  6E56               	movwf	(vfprintf@ap+1)^0,c
   852  002018  ECBE  F00F         	call	_vfprintf	;wreg free
   853  00201C  0100               	movlb	0	; () banked
   854  00201E  518E               	movf	(sprintf@f+2)& (0+255),w,b
   855  002020  2459               	addwf	sprintf@s^0,w,c
   856  002022  6ED9               	movwf	fsr2l,c
   857  002024  518F               	movf	(sprintf@f+3)& (0+255),w,b
   858  002026  205A               	addwfc	(sprintf@s+1)^0,w,c
   859  002028  6EDA               	movwf	fsr2h,c
   860  00202A  0E00               	movlw	0
   861  00202C  6EDF               	movwf	indf2,c
   862  00202E                     
   863                           ; BSR set to: 0
   864  00202E  0012               	return		;funcret
   865  002030                     __end_of_sprintf:
   866                           	opt callstack 0
   867                           
   868 ;; *************** function _printf *****************
   869 ;; Defined at:
   870 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;  fmt             2   88[COMRAM] PTR const unsigned char 
   873 ;;		 -> STR_3(15), 
   874 ;; Auto vars:     Size  Location     Type
   875 ;;  ap              2    2[BANK0 ] PTR void [1]
   876 ;;		 -> ?_printf(2), ?_sprintf(2), 
   877 ;;  ret             2    0        int 
   878 ;; Return value:  Size  Location     Type
   879 ;;                  2   88[COMRAM] int 
   880 ;; Registers used:
   881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   887 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   888 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   890 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   891 ;;Total ram usage:       10 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; Hardware stack levels required when called:    7
   894 ;; This function calls:
   895 ;;		_vfprintf
   896 ;; This function is called by:
   897 ;;		_main
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901                           	psect	text2
   902  002120                     __ptext2:
   903                           	opt callstack 0
   904  002120                     _printf:
   905                           	opt callstack 23
   906  002120  0E5B               	movlw	low (?_printf+2)
   907  002122  0100               	movlb	0	; () banked
   908  002124  6F8A               	movwf	printf@ap& (0+255),b
   909  002126  0E00               	movlw	high (?_printf+2)
   910  002128  6F8B               	movwf	(printf@ap+1)& (0+255),b
   911  00212A                     
   912                           ; BSR set to: 0
   913  00212A  0E00               	movlw	0
   914  00212C  6E51               	movwf	vfprintf@fp^0,c
   915  00212E  0E00               	movlw	0
   916  002130  6E52               	movwf	(vfprintf@fp+1)^0,c
   917  002132  C059  F053         	movff	printf@fmt,vfprintf@fmt
   918  002136  C05A  F054         	movff	printf@fmt+1,vfprintf@fmt+1
   919  00213A  0E8A               	movlw	low printf@ap
   920  00213C  6E55               	movwf	vfprintf@ap^0,c
   921  00213E  0E00               	movlw	high printf@ap
   922  002140  6E56               	movwf	(vfprintf@ap+1)^0,c
   923  002142  ECBE  F00F         	call	_vfprintf	;wreg free
   924  002146  0012               	return		;funcret
   925  002148                     __end_of_printf:
   926                           	opt callstack 0
   927                           
   928 ;; *************** function _vfprintf *****************
   929 ;; Defined at:
   930 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
   933 ;;		 -> sprintf@f(6), NULL(0), 
   934 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
   935 ;;		 -> STR_4(9), STR_3(15), STR_2(17), STR_1(17), 
   936 ;;  ap              2   84[COMRAM] PTR PTR void 
   937 ;;		 -> printf@ap(2), sprintf@ap(2), 
   938 ;; Auto vars:     Size  Location     Type
   939 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
   940 ;;		 -> STR_4(9), STR_3(15), STR_2(17), STR_1(17), 
   941 ;; Return value:  Size  Location     Type
   942 ;;                  2   80[COMRAM] int 
   943 ;; Registers used:
   944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   950 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   951 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   953 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;Total ram usage:        8 bytes
   955 ;; Hardware stack levels used:    1
   956 ;; Hardware stack levels required when called:    6
   957 ;; This function calls:
   958 ;;		_vfpfcnvrt
   959 ;; This function is called by:
   960 ;;		_sprintf
   961 ;;		_printf
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text3
   966  001F7C                     __ptext3:
   967                           	opt callstack 0
   968  001F7C                     _vfprintf:
   969                           	opt callstack 23
   970  001F7C                     
   971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
   972  001F7C  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
   973  001F80  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   974  001F84                     
   975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
   976  001F84  0E00               	movlw	0
   977  001F86  0100               	movlb	0	; () banked
   978  001F88  6F61               	movwf	(_nout+1)& (0+255),b
   979  001F8A  0E00               	movlw	0
   980  001F8C  6F60               	movwf	_nout& (0+255),b
   981                           
   982                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   983  001F8E  EFDC  F00F         	goto	l1841
   984  001F92                     l1839:
   985                           
   986                           ; BSR set to: 0
   987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
   988  001F92  C051  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
   989  001F96  C052  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   990  001F9A  0E57               	movlw	low vfprintf@cfmt
   991  001F9C  6E43               	movwf	vfpfcnvrt@fmt^0,c
   992  001F9E  0E00               	movlw	high vfprintf@cfmt
   993  001FA0  6E44               	movwf	(vfpfcnvrt@fmt+1)^0,c
   994  001FA2  C055  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
   995  001FA6  C056  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   996  001FAA  EC8F  F009         	call	_vfpfcnvrt	;wreg free
   997  001FAE  5041               	movf	?_vfpfcnvrt^0,w,c
   998  001FB0  0100               	movlb	0	; () banked
   999  001FB2  2760               	addwf	_nout& (0+255),f,b
  1000  001FB4  5042               	movf	(?_vfpfcnvrt+1)^0,w,c
  1001  001FB6  2361               	addwfc	(_nout+1)& (0+255),f,b
  1002  001FB8                     l1841:
  1003                           
  1004                           ; BSR set to: 0
  1005                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1006  001FB8  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  1007  001FBC  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1008  001FC0                     	if	0	;tblptru may be non-zero
  1009  001FC0                     	endif
  1010  001FC0                     	if	0	;tblptru may be non-zero
  1011  001FC0                     	endif
  1012  001FC0  0008               	tblrd		*
  1013  001FC2  50F5               	movf	tablat,w,c
  1014  001FC4  0900               	iorlw	0
  1015  001FC6  A4D8               	btfss	status,2,c
  1016  001FC8  EFE8  F00F         	goto	u1311
  1017  001FCC  EFEA  F00F         	goto	u1310
  1018  001FD0                     u1311:
  1019  001FD0  EFC9  F00F         	goto	l1839
  1020  001FD4                     u1310:
  1021  001FD4                     
  1022                           ; BSR set to: 0
  1023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1024  001FD4  C060  F051         	movff	_nout,?_vfprintf
  1025  001FD8  C061  F052         	movff	_nout+1,?_vfprintf+1
  1026  001FDC                     
  1027                           ; BSR set to: 0
  1028  001FDC  0012               	return		;funcret
  1029  001FDE                     __end_of_vfprintf:
  1030                           	opt callstack 0
  1031                           
  1032 ;; *************** function _vfpfcnvrt *****************
  1033 ;; Defined at:
  1034 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  1037 ;;		 -> sprintf@f(6), NULL(0), 
  1038 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  1039 ;;		 -> vfprintf@cfmt(2), 
  1040 ;;  ap              2   68[COMRAM] PTR PTR void 
  1041 ;;		 -> printf@ap(2), sprintf@ap(2), 
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;  ll              8   72[COMRAM] long long 
  1044 ;;  llu             8    0        unsigned long long 
  1045 ;;  f               4    0        unsigned long long 
  1046 ;;  vp              3    0        PTR void 
  1047 ;;  ct              3    0        unsigned char [3]
  1048 ;;  cp              3    0        PTR unsigned char 
  1049 ;;  i               2    0        int 
  1050 ;;  done            2    0        int 
  1051 ;;  c               1    0        unsigned char 
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  2   64[COMRAM] int 
  1054 ;; Registers used:
  1055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1061 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1062 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1063 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1064 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1065 ;;Total ram usage:       16 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; Hardware stack levels required when called:    5
  1068 ;; This function calls:
  1069 ;;		_dtoa
  1070 ;;		_fputc
  1071 ;; This function is called by:
  1072 ;;		_vfprintf
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text4
  1077  00131E                     __ptext4:
  1078                           	opt callstack 0
  1079  00131E                     _vfpfcnvrt:
  1080                           	opt callstack 23
  1081  00131E                     
  1082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1083  00131E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1084  001322  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1085  001326  CFDE FFF6          	movff	postinc2,tblptrl
  1086  00132A  CFDD FFF7          	movff	postdec2,tblptrh
  1087  00132E                     	if	0	;tblptru may be non-zero
  1088  00132E                     	endif
  1089  00132E                     	if	0	;tblptru may be non-zero
  1090  00132E                     	endif
  1091  00132E  0008               	tblrd		*
  1092  001330  50F5               	movf	tablat,w,c
  1093  001332  0A25               	xorlw	37
  1094  001334  A4D8               	btfss	status,2,c
  1095  001336  EF9F  F009         	goto	u1251
  1096  00133A  EFA1  F009         	goto	u1250
  1097  00133E                     u1251:
  1098  00133E  EF4D  F00A         	goto	l1811
  1099  001342                     u1250:
  1100  001342                     
  1101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1102  001342  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1103  001346  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1104  00134A  2ADE               	incf	postinc2,f,c
  1105  00134C  0E00               	movlw	0
  1106  00134E  22DD               	addwfc	postdec2,f,c
  1107  001350                     
  1108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1109  001350  0E00               	movlw	0
  1110  001352  0100               	movlb	0	; () banked
  1111  001354  6F63               	movwf	(_width+1)& (0+255),b
  1112  001356  0E00               	movlw	0
  1113  001358  6F62               	movwf	_width& (0+255),b
  1114  00135A  C062  F066         	movff	_width,_flags
  1115  00135E  C063  F067         	movff	_width+1,_flags+1
  1116  001362                     
  1117                           ; BSR set to: 0
  1118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1119  001362  6964               	setf	_prec& (0+255),b
  1120  001364  6965               	setf	(_prec+1)& (0+255),b
  1121  001366                     
  1122                           ; BSR set to: 0
  1123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1124  001366  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1125  00136A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1126  00136E  CFDE FFF6          	movff	postinc2,tblptrl
  1127  001372  CFDD FFF7          	movff	postdec2,tblptrh
  1128  001376                     	if	0	;tblptru may be non-zero
  1129  001376                     	endif
  1130  001376                     	if	0	;tblptru may be non-zero
  1131  001376                     	endif
  1132  001376  0008               	tblrd		*
  1133  001378  50F5               	movf	tablat,w,c
  1134  00137A  0A64               	xorlw	100
  1135  00137C  B4D8               	btfsc	status,2,c
  1136  00137E  EFC3  F009         	goto	u1261
  1137  001382  EFC5  F009         	goto	u1260
  1138  001386                     u1261:
  1139  001386  EFD7  F009         	goto	l1789
  1140  00138A                     u1260:
  1141  00138A                     
  1142                           ; BSR set to: 0
  1143  00138A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1144  00138E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1145  001392  CFDE FFF6          	movff	postinc2,tblptrl
  1146  001396  CFDD FFF7          	movff	postdec2,tblptrh
  1147  00139A                     	if	0	;tblptru may be non-zero
  1148  00139A                     	endif
  1149  00139A                     	if	0	;tblptru may be non-zero
  1150  00139A                     	endif
  1151  00139A  0008               	tblrd		*
  1152  00139C  50F5               	movf	tablat,w,c
  1153  00139E  0A69               	xorlw	105
  1154  0013A0  A4D8               	btfss	status,2,c
  1155  0013A2  EFD5  F009         	goto	u1271
  1156  0013A6  EFD7  F009         	goto	u1270
  1157  0013AA                     u1271:
  1158  0013AA  EF17  F00A         	goto	l1795
  1159  0013AE                     u1270:
  1160  0013AE                     l1789:
  1161                           
  1162                           ; BSR set to: 0
  1163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1164  0013AE  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1165  0013B2  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1166  0013B6  2ADE               	incf	postinc2,f,c
  1167  0013B8  0E00               	movlw	0
  1168  0013BA  22DD               	addwfc	postdec2,f,c
  1169                           
  1170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1171  0013BC  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1172  0013C0  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1173  0013C4  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1174  0013C8  0E02               	movlw	2
  1175  0013CA  26DE               	addwf	postinc2,f,c
  1176  0013CC  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1177  0013D0  0E00               	movlw	0
  1178  0013D2  22DD               	addwfc	postdec2,f,c
  1179  0013D4  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1180  0013D8  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1181  0013DC  CFDE F049          	movff	postinc2,vfpfcnvrt@ll
  1182  0013E0  CFDD F04A          	movff	postdec2,vfpfcnvrt@ll+1
  1183  0013E4  0E00               	movlw	0
  1184  0013E6  BE4A               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1185  0013E8  0EFF               	movlw	-1
  1186  0013EA  6E4B               	movwf	(vfpfcnvrt@ll+2)^0,c
  1187  0013EC  6E4C               	movwf	(vfpfcnvrt@ll+3)^0,c
  1188  0013EE  6E4D               	movwf	(vfpfcnvrt@ll+4)^0,c
  1189  0013F0  6E4E               	movwf	(vfpfcnvrt@ll+5)^0,c
  1190  0013F2  6E4F               	movwf	(vfpfcnvrt@ll+6)^0,c
  1191  0013F4  6E50               	movwf	(vfpfcnvrt@ll+7)^0,c
  1192  0013F6                     
  1193                           ; BSR set to: 0
  1194                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1195  0013F6  C041  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  1196  0013FA  C042  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1197  0013FE  C049  F01F         	movff	vfpfcnvrt@ll,dtoa@d
  1198  001402  C04A  F020         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1199  001406  C04B  F021         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1200  00140A  C04C  F022         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1201  00140E  C04D  F023         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1202  001412  C04E  F024         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1203  001416  C04F  F025         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1204  00141A  C050  F026         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1205  00141E  EC1E  F008         	call	_dtoa	;wreg free
  1206  001422  C01D  F041         	movff	?_dtoa,?_vfpfcnvrt
  1207  001426  C01E  F042         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1208  00142A  EF68  F00A         	goto	l287
  1209  00142E                     l1795:
  1210                           
  1211                           ; BSR set to: 0
  1212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1213  00142E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1214  001432  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1215  001436  CFDE FFF6          	movff	postinc2,tblptrl
  1216  00143A  CFDD FFF7          	movff	postdec2,tblptrh
  1217  00143E                     	if	0	;tblptru may be non-zero
  1218  00143E                     	endif
  1219  00143E                     	if	0	;tblptru may be non-zero
  1220  00143E                     	endif
  1221  00143E  0008               	tblrd		*
  1222  001440  50F5               	movf	tablat,w,c
  1223  001442  0A25               	xorlw	37
  1224  001444  A4D8               	btfss	status,2,c
  1225  001446  EF27  F00A         	goto	u1281
  1226  00144A  EF29  F00A         	goto	u1280
  1227  00144E                     u1281:
  1228  00144E  EF40  F00A         	goto	l1805
  1229  001452                     u1280:
  1230  001452                     
  1231                           ; BSR set to: 0
  1232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1233  001452  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1234  001456  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1235  00145A  2ADE               	incf	postinc2,f,c
  1236  00145C  0E00               	movlw	0
  1237  00145E  22DD               	addwfc	postdec2,f,c
  1238  001460                     
  1239                           ; BSR set to: 0
  1240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1241  001460  0E00               	movlw	0
  1242  001462  6E03               	movwf	(fputc@c+1)^0,c
  1243  001464  0E25               	movlw	37
  1244  001466  6E02               	movwf	fputc@c^0,c
  1245  001468  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1246  00146C  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1247  001470  EC06  F00E         	call	_fputc	;wreg free
  1248  001474                     l1801:
  1249                           
  1250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1251  001474  0E00               	movlw	0
  1252  001476  6E42               	movwf	(?_vfpfcnvrt+1)^0,c
  1253  001478  0E01               	movlw	1
  1254  00147A  6E41               	movwf	?_vfpfcnvrt^0,c
  1255  00147C  EF68  F00A         	goto	l287
  1256  001480                     l1805:
  1257                           
  1258                           ; BSR set to: 0
  1259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1260  001480  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1261  001484  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1262  001488  2ADE               	incf	postinc2,f,c
  1263  00148A  0E00               	movlw	0
  1264  00148C  22DD               	addwfc	postdec2,f,c
  1265  00148E                     
  1266                           ; BSR set to: 0
  1267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1268  00148E  0E00               	movlw	0
  1269  001490  6E42               	movwf	(?_vfpfcnvrt+1)^0,c
  1270  001492  0E00               	movlw	0
  1271  001494  6E41               	movwf	?_vfpfcnvrt^0,c
  1272  001496  EF68  F00A         	goto	l287
  1273  00149A                     l1811:
  1274                           
  1275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1276  00149A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1277  00149E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1278  0014A2  CFDE FFF6          	movff	postinc2,tblptrl
  1279  0014A6  CFDD FFF7          	movff	postdec2,tblptrh
  1280  0014AA                     	if	0	;tblptru may be non-zero
  1281  0014AA                     	endif
  1282  0014AA                     	if	0	;tblptru may be non-zero
  1283  0014AA                     	endif
  1284  0014AA  0008               	tblrd		*
  1285  0014AC  50F5               	movf	tablat,w,c
  1286  0014AE  6E02               	movwf	fputc@c^0,c
  1287  0014B0  6A03               	clrf	(fputc@c+1)^0,c
  1288  0014B2  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1289  0014B6  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1290  0014BA  EC06  F00E         	call	_fputc	;wreg free
  1291  0014BE                     
  1292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1293  0014BE  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1294  0014C2  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1295  0014C6  2ADE               	incf	postinc2,f,c
  1296  0014C8  0E00               	movlw	0
  1297  0014CA  22DD               	addwfc	postdec2,f,c
  1298  0014CC  EF3A  F00A         	goto	l1801
  1299  0014D0                     l287:
  1300  0014D0  0012               	return		;funcret
  1301  0014D2                     __end_of_vfpfcnvrt:
  1302                           	opt callstack 0
  1303                           
  1304 ;; *************** function _dtoa *****************
  1305 ;; Defined at:
  1306 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  1309 ;;		 -> sprintf@f(6), NULL(0), 
  1310 ;;  d               8   30[COMRAM] long long 
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;  n               8   54[COMRAM] long long 
  1313 ;;  i               2   62[COMRAM] int 
  1314 ;;  s               2   52[COMRAM] int 
  1315 ;;  w               2   50[COMRAM] int 
  1316 ;;  p               2   48[COMRAM] int 
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  2   28[COMRAM] int 
  1319 ;; Registers used:
  1320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1326 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1327 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1328 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1329 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1330 ;;Total ram usage:       36 bytes
  1331 ;; Hardware stack levels used:    1
  1332 ;; Hardware stack levels required when called:    4
  1333 ;; This function calls:
  1334 ;;		___aodiv
  1335 ;;		___aomod
  1336 ;;		_abs
  1337 ;;		_pad
  1338 ;; This function is called by:
  1339 ;;		_vfpfcnvrt
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           	psect	text5
  1344  00103C                     __ptext5:
  1345                           	opt callstack 0
  1346  00103C                     _dtoa:
  1347                           	opt callstack 23
  1348  00103C                     
  1349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  1350  00103C  C01F  F037         	movff	dtoa@d,dtoa@n
  1351  001040  C020  F038         	movff	dtoa@d+1,dtoa@n+1
  1352  001044  C021  F039         	movff	dtoa@d+2,dtoa@n+2
  1353  001048  C022  F03A         	movff	dtoa@d+3,dtoa@n+3
  1354  00104C  C023  F03B         	movff	dtoa@d+4,dtoa@n+4
  1355  001050  C024  F03C         	movff	dtoa@d+5,dtoa@n+5
  1356  001054  C025  F03D         	movff	dtoa@d+6,dtoa@n+6
  1357  001058  C026  F03E         	movff	dtoa@d+7,dtoa@n+7
  1358  00105C                     
  1359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  1360  00105C  BE3E               	btfsc	(dtoa@n+7)^0,7,c
  1361  00105E  EF33  F008         	goto	u1081
  1362  001062  EF36  F008         	goto	u1080
  1363  001066                     u1081:
  1364  001066  0E01               	movlw	1
  1365  001068  EF37  F008         	goto	u1090
  1366  00106C                     u1080:
  1367  00106C  0E00               	movlw	0
  1368  00106E                     u1090:
  1369  00106E  6E35               	movwf	dtoa@s^0,c
  1370  001070  6A36               	clrf	(dtoa@s+1)^0,c
  1371                           
  1372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  1373  001072  5035               	movf	dtoa@s^0,w,c
  1374  001074  1036               	iorwf	(dtoa@s+1)^0,w,c
  1375  001076  B4D8               	btfsc	status,2,c
  1376  001078  EF40  F008         	goto	u1101
  1377  00107C  EF42  F008         	goto	u1100
  1378  001080                     u1101:
  1379  001080  EF52  F008         	goto	l1719
  1380  001084                     u1100:
  1381  001084                     
  1382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  1383  001084  1E3E               	comf	(dtoa@n+7)^0,f,c
  1384  001086  1E3D               	comf	(dtoa@n+6)^0,f,c
  1385  001088  1E3C               	comf	(dtoa@n+5)^0,f,c
  1386  00108A  1E3B               	comf	(dtoa@n+4)^0,f,c
  1387  00108C  1E3A               	comf	(dtoa@n+3)^0,f,c
  1388  00108E  1E39               	comf	(dtoa@n+2)^0,f,c
  1389  001090  1E38               	comf	(dtoa@n+1)^0,f,c
  1390  001092  6C37               	negf	dtoa@n^0,c
  1391  001094  0E00               	movlw	0
  1392  001096  2238               	addwfc	(dtoa@n+1)^0,f,c
  1393  001098  2239               	addwfc	(dtoa@n+2)^0,f,c
  1394  00109A  223A               	addwfc	(dtoa@n+3)^0,f,c
  1395  00109C  223B               	addwfc	(dtoa@n+4)^0,f,c
  1396  00109E  223C               	addwfc	(dtoa@n+5)^0,f,c
  1397  0010A0  223D               	addwfc	(dtoa@n+6)^0,f,c
  1398  0010A2  223E               	addwfc	(dtoa@n+7)^0,f,c
  1399  0010A4                     l1719:
  1400                           
  1401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  1402  0010A4  0100               	movlb	0	; () banked
  1403  0010A6  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1404  0010A8  EF58  F008         	goto	u1111
  1405  0010AC  EF5A  F008         	goto	u1110
  1406  0010B0                     u1111:
  1407  0010B0  EF5B  F008         	goto	l1723
  1408  0010B4                     u1110:
  1409  0010B4                     
  1410                           ; BSR set to: 0
  1411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  1412  0010B4  9366               	bcf	_flags& (0+255),1,b
  1413  0010B6                     l1723:
  1414                           
  1415                           ; BSR set to: 0
  1416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  1417  0010B6  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1418  0010B8  EF68  F008         	goto	u1120
  1419  0010BC  5165               	movf	(_prec+1)& (0+255),w,b
  1420  0010BE  E106               	bnz	u1121
  1421  0010C0  0564               	decf	_prec& (0+255),w,b
  1422  0010C2  B0D8               	btfsc	status,0,c
  1423  0010C4  EF66  F008         	goto	u1121
  1424  0010C8  EF68  F008         	goto	u1120
  1425  0010CC                     u1121:
  1426  0010CC  EF6E  F008         	goto	l260
  1427  0010D0                     u1120:
  1428  0010D0                     
  1429                           ; BSR set to: 0
  1430  0010D0  0E00               	movlw	0
  1431  0010D2  6E32               	movwf	(dtoa@p+1)^0,c
  1432  0010D4  0E01               	movlw	1
  1433  0010D6  6E31               	movwf	dtoa@p^0,c
  1434  0010D8  EF72  F008         	goto	l262
  1435  0010DC                     l260:
  1436                           
  1437                           ; BSR set to: 0
  1438  0010DC  C064  F031         	movff	_prec,dtoa@p
  1439  0010E0  C065  F032         	movff	_prec+1,dtoa@p+1
  1440  0010E4                     l262:
  1441                           
  1442                           ; BSR set to: 0
  1443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  1444  0010E4  C062  F033         	movff	_width,dtoa@w
  1445  0010E8  C063  F034         	movff	_width+1,dtoa@w+1
  1446  0010EC                     
  1447                           ; BSR set to: 0
  1448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  1449  0010EC  5035               	movf	dtoa@s^0,w,c
  1450  0010EE  1036               	iorwf	(dtoa@s+1)^0,w,c
  1451  0010F0  A4D8               	btfss	status,2,c
  1452  0010F2  EF7D  F008         	goto	u1131
  1453  0010F6  EF7F  F008         	goto	u1130
  1454  0010FA                     u1131:
  1455  0010FA  EF86  F008         	goto	l1731
  1456  0010FE                     u1130:
  1457  0010FE                     
  1458                           ; BSR set to: 0
  1459  0010FE  A566               	btfss	_flags& (0+255),2,b
  1460  001100  EF84  F008         	goto	u1141
  1461  001104  EF86  F008         	goto	u1140
  1462  001108                     u1141:
  1463  001108  EF89  F008         	goto	l1733
  1464  00110C                     u1140:
  1465  00110C                     l1731:
  1466                           
  1467                           ; BSR set to: 0
  1468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  1469  00110C  0633               	decf	dtoa@w^0,f,c
  1470  00110E  A0D8               	btfss	status,0,c
  1471  001110  0634               	decf	(dtoa@w+1)^0,f,c
  1472  001112                     l1733:
  1473                           
  1474                           ; BSR set to: 0
  1475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  1476  001112  0E00               	movlw	0
  1477  001114  6E40               	movwf	(dtoa@i+1)^0,c
  1478  001116  0E1F               	movlw	31
  1479  001118  6E3F               	movwf	dtoa@i^0,c
  1480  00111A                     
  1481                           ; BSR set to: 0
  1482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  1483  00111A  0E00               	movlw	0
  1484  00111C  6F87               	movwf	(_dbuf+31)& (0+255),b
  1485                           
  1486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1487  00111E  EF0D  F009         	goto	l1747
  1488  001122                     l1737:
  1489                           
  1490                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  1491  001122  063F               	decf	dtoa@i^0,f,c
  1492  001124  A0D8               	btfss	status,0,c
  1493  001126  0640               	decf	(dtoa@i+1)^0,f,c
  1494  001128                     
  1495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  1496  001128  0E68               	movlw	low _dbuf
  1497  00112A  243F               	addwf	dtoa@i^0,w,c
  1498  00112C  6ED9               	movwf	fsr2l,c
  1499  00112E  0E00               	movlw	high _dbuf
  1500  001130  2040               	addwfc	(dtoa@i+1)^0,w,c
  1501  001132  6EDA               	movwf	fsr2h,c
  1502  001134  C037  F001         	movff	dtoa@n,___aomod@dividend
  1503  001138  C038  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1504  00113C  C039  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1505  001140  C03A  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1506  001144  C03B  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1507  001148  C03C  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1508  00114C  C03D  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1509  001150  C03E  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1510  001154  0E0A               	movlw	10
  1511  001156  6E09               	movwf	___aomod@divisor^0,c
  1512  001158  0E00               	movlw	0
  1513  00115A  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1514  00115C  0E00               	movlw	0
  1515  00115E  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1516  001160  0E00               	movlw	0
  1517  001162  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1518  001164  0E00               	movlw	0
  1519  001166  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1520  001168  0E00               	movlw	0
  1521  00116A  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1522  00116C  0E00               	movlw	0
  1523  00116E  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1524  001170  0E00               	movlw	0
  1525  001172  6E10               	movwf	(___aomod@divisor+7)^0,c
  1526  001174  ECE0  F00B         	call	___aomod	;wreg free
  1527  001178  C001  F027         	movff	?___aomod,??_dtoa
  1528  00117C  C002  F028         	movff	?___aomod+1,??_dtoa+1
  1529  001180  C003  F029         	movff	?___aomod+2,??_dtoa+2
  1530  001184  C004  F02A         	movff	?___aomod+3,??_dtoa+3
  1531  001188  C005  F02B         	movff	?___aomod+4,??_dtoa+4
  1532  00118C  C006  F02C         	movff	?___aomod+5,??_dtoa+5
  1533  001190  C007  F02D         	movff	?___aomod+6,??_dtoa+6
  1534  001194  C008  F02E         	movff	?___aomod+7,??_dtoa+7
  1535  001198  C027  F013         	movff	??_dtoa,abs@a
  1536  00119C  C029  F014         	movff	??_dtoa+2,abs@a+1
  1537  0011A0  EC3A  F010         	call	_abs	;wreg free
  1538  0011A4  5013               	movf	?_abs^0,w,c
  1539  0011A6  0F30               	addlw	48
  1540  0011A8  6EDF               	movwf	indf2,c
  1541  0011AA                     
  1542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  1543  0011AA  0631               	decf	dtoa@p^0,f,c
  1544  0011AC  A0D8               	btfss	status,0,c
  1545  0011AE  0632               	decf	(dtoa@p+1)^0,f,c
  1546  0011B0                     
  1547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  1548  0011B0  0633               	decf	dtoa@w^0,f,c
  1549  0011B2  A0D8               	btfss	status,0,c
  1550  0011B4  0634               	decf	(dtoa@w+1)^0,f,c
  1551  0011B6                     
  1552                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  1553  0011B6  C037  F001         	movff	dtoa@n,___aodiv@dividend
  1554  0011BA  C038  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1555  0011BE  C039  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1556  0011C2  C03A  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1557  0011C6  C03B  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1558  0011CA  C03C  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1559  0011CE  C03D  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1560  0011D2  C03E  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1561  0011D6  0E0A               	movlw	10
  1562  0011D8  6E09               	movwf	___aodiv@divisor^0,c
  1563  0011DA  0E00               	movlw	0
  1564  0011DC  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1565  0011DE  0E00               	movlw	0
  1566  0011E0  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1567  0011E2  0E00               	movlw	0
  1568  0011E4  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1569  0011E6  0E00               	movlw	0
  1570  0011E8  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1571  0011EA  0E00               	movlw	0
  1572  0011EC  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1573  0011EE  0E00               	movlw	0
  1574  0011F0  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1575  0011F2  0E00               	movlw	0
  1576  0011F4  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1577  0011F6  EC69  F00A         	call	___aodiv	;wreg free
  1578  0011FA  C001  F037         	movff	?___aodiv,dtoa@n
  1579  0011FE  C002  F038         	movff	?___aodiv+1,dtoa@n+1
  1580  001202  C003  F039         	movff	?___aodiv+2,dtoa@n+2
  1581  001206  C004  F03A         	movff	?___aodiv+3,dtoa@n+3
  1582  00120A  C005  F03B         	movff	?___aodiv+4,dtoa@n+4
  1583  00120E  C006  F03C         	movff	?___aodiv+5,dtoa@n+5
  1584  001212  C007  F03D         	movff	?___aodiv+6,dtoa@n+6
  1585  001216  C008  F03E         	movff	?___aodiv+7,dtoa@n+7
  1586  00121A                     l1747:
  1587                           
  1588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1589  00121A  BE40               	btfsc	(dtoa@i+1)^0,7,c
  1590  00121C  EF18  F009         	goto	u1151
  1591  001220  5040               	movf	(dtoa@i+1)^0,w,c
  1592  001222  E108               	bnz	u1150
  1593  001224  043F               	decf	dtoa@i^0,w,c
  1594  001226  A0D8               	btfss	status,0,c
  1595  001228  EF18  F009         	goto	u1151
  1596  00122C  EF1A  F009         	goto	u1150
  1597  001230                     u1151:
  1598  001230  EF4B  F009         	goto	l1757
  1599  001234                     u1150:
  1600  001234  5037               	movf	dtoa@n^0,w,c
  1601  001236  1038               	iorwf	(dtoa@n+1)^0,w,c
  1602  001238  1039               	iorwf	(dtoa@n+2)^0,w,c
  1603  00123A  103A               	iorwf	(dtoa@n+3)^0,w,c
  1604  00123C  103B               	iorwf	(dtoa@n+4)^0,w,c
  1605  00123E  103C               	iorwf	(dtoa@n+5)^0,w,c
  1606  001240  103D               	iorwf	(dtoa@n+6)^0,w,c
  1607  001242  103E               	iorwf	(dtoa@n+7)^0,w,c
  1608  001244  A4D8               	btfss	status,2,c
  1609  001246  EF27  F009         	goto	u1161
  1610  00124A  EF29  F009         	goto	u1160
  1611  00124E                     u1161:
  1612  00124E  EF91  F008         	goto	l1737
  1613  001252                     u1160:
  1614  001252  BE32               	btfsc	(dtoa@p+1)^0,7,c
  1615  001254  EF36  F009         	goto	u1170
  1616  001258  5032               	movf	(dtoa@p+1)^0,w,c
  1617  00125A  E106               	bnz	u1171
  1618  00125C  0431               	decf	dtoa@p^0,w,c
  1619  00125E  B0D8               	btfsc	status,0,c
  1620  001260  EF34  F009         	goto	u1171
  1621  001264  EF36  F009         	goto	u1170
  1622  001268                     u1171:
  1623  001268  EF91  F008         	goto	l1737
  1624  00126C                     u1170:
  1625  00126C  BE34               	btfsc	(dtoa@w+1)^0,7,c
  1626  00126E  EF41  F009         	goto	u1181
  1627  001272  5034               	movf	(dtoa@w+1)^0,w,c
  1628  001274  E108               	bnz	u1180
  1629  001276  0433               	decf	dtoa@w^0,w,c
  1630  001278  A0D8               	btfss	status,0,c
  1631  00127A  EF41  F009         	goto	u1181
  1632  00127E  EF43  F009         	goto	u1180
  1633  001282                     u1181:
  1634  001282  EF4B  F009         	goto	l1757
  1635  001286                     u1180:
  1636  001286  0100               	movlb	0	; () banked
  1637  001288  B366               	btfsc	_flags& (0+255),1,b
  1638  00128A  EF49  F009         	goto	u1191
  1639  00128E  EF4B  F009         	goto	u1190
  1640  001292                     u1191:
  1641  001292  EF91  F008         	goto	l1737
  1642  001296                     u1190:
  1643  001296                     l1757:
  1644                           
  1645                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  1646  001296  5035               	movf	dtoa@s^0,w,c
  1647  001298  1036               	iorwf	(dtoa@s+1)^0,w,c
  1648  00129A  A4D8               	btfss	status,2,c
  1649  00129C  EF52  F009         	goto	u1201
  1650  0012A0  EF54  F009         	goto	u1200
  1651  0012A4                     u1201:
  1652  0012A4  EF5C  F009         	goto	l1761
  1653  0012A8                     u1200:
  1654  0012A8  0100               	movlb	0	; () banked
  1655  0012AA  A566               	btfss	_flags& (0+255),2,b
  1656  0012AC  EF5A  F009         	goto	u1211
  1657  0012B0  EF5C  F009         	goto	u1210
  1658  0012B4                     u1211:
  1659  0012B4  EF7A  F009         	goto	l1771
  1660  0012B8                     u1210:
  1661  0012B8                     l1761:
  1662                           
  1663                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  1664  0012B8  063F               	decf	dtoa@i^0,f,c
  1665  0012BA  A0D8               	btfss	status,0,c
  1666  0012BC  0640               	decf	(dtoa@i+1)^0,f,c
  1667  0012BE                     
  1668                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  1669  0012BE  5035               	movf	dtoa@s^0,w,c
  1670  0012C0  1036               	iorwf	(dtoa@s+1)^0,w,c
  1671  0012C2  A4D8               	btfss	status,2,c
  1672  0012C4  EF66  F009         	goto	u1221
  1673  0012C8  EF68  F009         	goto	u1220
  1674  0012CC                     u1221:
  1675  0012CC  EF6E  F009         	goto	l1767
  1676  0012D0                     u1220:
  1677  0012D0  0E00               	movlw	0
  1678  0012D2  6E30               	movwf	(_dtoa$1605+1)^0,c
  1679  0012D4  0E2B               	movlw	43
  1680  0012D6  6E2F               	movwf	_dtoa$1605^0,c
  1681  0012D8  EF72  F009         	goto	l1769
  1682  0012DC                     l1767:
  1683  0012DC  0E00               	movlw	0
  1684  0012DE  6E30               	movwf	(_dtoa$1605+1)^0,c
  1685  0012E0  0E2D               	movlw	45
  1686  0012E2  6E2F               	movwf	_dtoa$1605^0,c
  1687  0012E4                     l1769:
  1688  0012E4  0E68               	movlw	low _dbuf
  1689  0012E6  243F               	addwf	dtoa@i^0,w,c
  1690  0012E8  6ED9               	movwf	fsr2l,c
  1691  0012EA  0E00               	movlw	high _dbuf
  1692  0012EC  2040               	addwfc	(dtoa@i+1)^0,w,c
  1693  0012EE  6EDA               	movwf	fsr2h,c
  1694  0012F0  C02F  FFDF         	movff	_dtoa$1605,indf2
  1695  0012F4                     l1771:
  1696                           
  1697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  1698  0012F4  C01D  F012         	movff	dtoa@fp,pad@fp
  1699  0012F8  C01E  F013         	movff	dtoa@fp+1,pad@fp+1
  1700  0012FC  0E68               	movlw	low _dbuf
  1701  0012FE  243F               	addwf	dtoa@i^0,w,c
  1702  001300  6E14               	movwf	pad@buf^0,c
  1703  001302  0E00               	movlw	high _dbuf
  1704  001304  2040               	addwfc	(dtoa@i+1)^0,w,c
  1705  001306  6E15               	movwf	(pad@buf+1)^0,c
  1706  001308  C033  F016         	movff	dtoa@w,pad@p
  1707  00130C  C034  F017         	movff	dtoa@w+1,pad@p+1
  1708  001310  EC6B  F00E         	call	_pad	;wreg free
  1709  001314  C012  F01D         	movff	?_pad,?_dtoa
  1710  001318  C013  F01E         	movff	?_pad+1,?_dtoa+1
  1711  00131C  0012               	return		;funcret
  1712  00131E                     __end_of_dtoa:
  1713                           	opt callstack 0
  1714                           
  1715 ;; *************** function _pad *****************
  1716 ;; Defined at:
  1717 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  1720 ;;		 -> sprintf@f(6), NULL(0), 
  1721 ;;  buf             2   19[COMRAM] PTR unsigned char 
  1722 ;;		 -> dbuf(32), 
  1723 ;;  p               2   21[COMRAM] int 
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;  w               2   26[COMRAM] int 
  1726 ;;  i               2   24[COMRAM] int 
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  2   17[COMRAM] int 
  1729 ;; Registers used:
  1730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1736 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1737 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1738 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1739 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;Total ram usage:       11 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; Hardware stack levels required when called:    3
  1743 ;; This function calls:
  1744 ;;		_fputc
  1745 ;;		_fputs
  1746 ;;		_strlen
  1747 ;; This function is called by:
  1748 ;;		_dtoa
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           	psect	text6
  1753  001CD6                     __ptext6:
  1754                           	opt callstack 0
  1755  001CD6                     _pad:
  1756                           	opt callstack 23
  1757  001CD6                     
  1758                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  1759  001CD6  0100               	movlb	0	; () banked
  1760  001CD8  A166               	btfss	_flags& (0+255),0,b
  1761  001CDA  EF71  F00E         	goto	u901
  1762  001CDE  EF73  F00E         	goto	u900
  1763  001CE2                     u901:
  1764  001CE2  EF7D  F00E         	goto	l1611
  1765  001CE6                     u900:
  1766  001CE6                     
  1767                           ; BSR set to: 0
  1768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  1769  001CE6  C014  F00B         	movff	pad@buf,fputs@s
  1770  001CEA  C015  F00C         	movff	pad@buf+1,fputs@s+1
  1771  001CEE  C012  F00D         	movff	pad@fp,fputs@fp
  1772  001CF2  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  1773  001CF6  EC18  F010         	call	_fputs	;wreg free
  1774  001CFA                     l1611:
  1775                           
  1776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  1777  001CFA  BE17               	btfsc	(pad@p+1)^0,7,c
  1778  001CFC  EF82  F00E         	goto	u911
  1779  001D00  EF84  F00E         	goto	u910
  1780  001D04                     u911:
  1781  001D04  EF8A  F00E         	goto	l1615
  1782  001D08                     u910:
  1783  001D08  C016  F01B         	movff	pad@p,pad@w
  1784  001D0C  C017  F01C         	movff	pad@p+1,pad@w+1
  1785  001D10  EF8E  F00E         	goto	l249
  1786  001D14                     l1615:
  1787  001D14  0E00               	movlw	0
  1788  001D16  6E1C               	movwf	(pad@w+1)^0,c
  1789  001D18  0E00               	movlw	0
  1790  001D1A  6E1B               	movwf	pad@w^0,c
  1791  001D1C                     l249:
  1792                           
  1793                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  1794  001D1C  0E00               	movlw	0
  1795  001D1E  6E1A               	movwf	(pad@i+1)^0,c
  1796  001D20  0E00               	movlw	0
  1797  001D22  6E19               	movwf	pad@i^0,c
  1798                           
  1799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1800  001D24  EFA0  F00E         	goto	l1621
  1801  001D28                     l1617:
  1802                           
  1803                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  1804  001D28  0E00               	movlw	0
  1805  001D2A  6E03               	movwf	(fputc@c+1)^0,c
  1806  001D2C  0E20               	movlw	32
  1807  001D2E  6E02               	movwf	fputc@c^0,c
  1808  001D30  C012  F004         	movff	pad@fp,fputc@fp
  1809  001D34  C013  F005         	movff	pad@fp+1,fputc@fp+1
  1810  001D38  EC06  F00E         	call	_fputc	;wreg free
  1811  001D3C                     
  1812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  1813  001D3C  4A19               	infsnz	pad@i^0,f,c
  1814  001D3E  2A1A               	incf	(pad@i+1)^0,f,c
  1815  001D40                     l1621:
  1816                           
  1817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1818  001D40  501B               	movf	pad@w^0,w,c
  1819  001D42  5C19               	subwf	pad@i^0,w,c
  1820  001D44  501A               	movf	(pad@i+1)^0,w,c
  1821  001D46  0A80               	xorlw	128
  1822  001D48  6E18               	movwf	??_pad^0,c
  1823  001D4A  501C               	movf	(pad@w+1)^0,w,c
  1824  001D4C  0A80               	xorlw	128
  1825  001D4E  5818               	subwfb	??_pad^0,w,c
  1826  001D50  A0D8               	btfss	status,0,c
  1827  001D52  EFAD  F00E         	goto	u921
  1828  001D56  EFAF  F00E         	goto	u920
  1829  001D5A                     u921:
  1830  001D5A  EF94  F00E         	goto	l1617
  1831  001D5E                     u920:
  1832  001D5E                     
  1833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  1834  001D5E  0100               	movlb	0	; () banked
  1835  001D60  B166               	btfsc	_flags& (0+255),0,b
  1836  001D62  EFB5  F00E         	goto	u931
  1837  001D66  EFB7  F00E         	goto	u930
  1838  001D6A                     u931:
  1839  001D6A  EFC1  F00E         	goto	l1625
  1840  001D6E                     u930:
  1841  001D6E                     
  1842                           ; BSR set to: 0
  1843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  1844  001D6E  C014  F00B         	movff	pad@buf,fputs@s
  1845  001D72  C015  F00C         	movff	pad@buf+1,fputs@s+1
  1846  001D76  C012  F00D         	movff	pad@fp,fputs@fp
  1847  001D7A  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  1848  001D7E  EC18  F010         	call	_fputs	;wreg free
  1849  001D82                     l1625:
  1850                           
  1851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  1852  001D82  C014  F001         	movff	pad@buf,strlen@s
  1853  001D86  C015  F002         	movff	pad@buf+1,strlen@s+1
  1854  001D8A  EC5A  F010         	call	_strlen	;wreg free
  1855  001D8E  501B               	movf	pad@w^0,w,c
  1856  001D90  2401               	addwf	?_strlen^0,w,c
  1857  001D92  6E12               	movwf	?_pad^0,c
  1858  001D94  501C               	movf	(pad@w+1)^0,w,c
  1859  001D96  2002               	addwfc	(?_strlen+1)^0,w,c
  1860  001D98  6E13               	movwf	(?_pad+1)^0,c
  1861  001D9A  0012               	return		;funcret
  1862  001D9C                     __end_of_pad:
  1863                           	opt callstack 0
  1864                           
  1865 ;; *************** function _strlen *****************
  1866 ;; Defined at:
  1867 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1870 ;;		 -> dbuf(32), 
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1873 ;;		 -> dbuf(32), 
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  2    0[COMRAM] unsigned int 
  1876 ;; Registers used:
  1877 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1883 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1884 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1886 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1887 ;;Total ram usage:        4 bytes
  1888 ;; Hardware stack levels used:    1
  1889 ;; This function calls:
  1890 ;;		Nothing
  1891 ;; This function is called by:
  1892 ;;		_pad
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	text7
  1897  0020B4                     __ptext7:
  1898                           	opt callstack 0
  1899  0020B4                     _strlen:
  1900                           	opt callstack 25
  1901  0020B4  C001  F003         	movff	strlen@s,strlen@a
  1902  0020B8  C002  F004         	movff	strlen@s+1,strlen@a+1
  1903  0020BC  EF62  F010         	goto	l1601
  1904  0020C0                     l1599:
  1905  0020C0  4A01               	infsnz	strlen@s^0,f,c
  1906  0020C2  2A02               	incf	(strlen@s+1)^0,f,c
  1907  0020C4                     l1601:
  1908  0020C4  C001  FFD9         	movff	strlen@s,fsr2l
  1909  0020C8  C002  FFDA         	movff	strlen@s+1,fsr2h
  1910  0020CC  50DF               	movf	indf2,w,c
  1911  0020CE  A4D8               	btfss	status,2,c
  1912  0020D0  EF6C  F010         	goto	u891
  1913  0020D4  EF6E  F010         	goto	u890
  1914  0020D8                     u891:
  1915  0020D8  EF60  F010         	goto	l1599
  1916  0020DC                     u890:
  1917  0020DC  5003               	movf	strlen@a^0,w,c
  1918  0020DE  5C01               	subwf	strlen@s^0,w,c
  1919  0020E0  6E01               	movwf	?_strlen^0,c
  1920  0020E2  5004               	movf	(strlen@a+1)^0,w,c
  1921  0020E4  5802               	subwfb	(strlen@s+1)^0,w,c
  1922  0020E6  6E02               	movwf	(?_strlen+1)^0,c
  1923  0020E8  0012               	return		;funcret
  1924  0020EA                     __end_of_strlen:
  1925                           	opt callstack 0
  1926                           
  1927 ;; *************** function _fputs *****************
  1928 ;; Defined at:
  1929 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  s               2   10[COMRAM] PTR const unsigned char 
  1932 ;;		 -> dbuf(32), 
  1933 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  1934 ;;		 -> sprintf@f(6), NULL(0), 
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;  i               2   15[COMRAM] int 
  1937 ;;  c               1   14[COMRAM] unsigned char 
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  2   10[COMRAM] int 
  1940 ;; Registers used:
  1941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1947 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1948 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1950 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1951 ;;Total ram usage:        7 bytes
  1952 ;; Hardware stack levels used:    1
  1953 ;; Hardware stack levels required when called:    2
  1954 ;; This function calls:
  1955 ;;		_fputc
  1956 ;; This function is called by:
  1957 ;;		_pad
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text8
  1962  002030                     __ptext8:
  1963                           	opt callstack 0
  1964  002030                     _fputs:
  1965                           	opt callstack 23
  1966  002030  0E00               	movlw	0
  1967  002032  6E11               	movwf	(fputs@i+1)^0,c
  1968  002034  0E00               	movlw	0
  1969  002036  6E10               	movwf	fputs@i^0,c
  1970  002038  EF29  F010         	goto	l1595
  1971  00203C                     l1591:
  1972  00203C  C00F  F002         	movff	fputs@c,fputc@c
  1973  002040  6A03               	clrf	(fputc@c+1)^0,c
  1974  002042  C00D  F004         	movff	fputs@fp,fputc@fp
  1975  002046  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  1976  00204A  EC06  F00E         	call	_fputc	;wreg free
  1977  00204E  4A10               	infsnz	fputs@i^0,f,c
  1978  002050  2A11               	incf	(fputs@i+1)^0,f,c
  1979  002052                     l1595:
  1980  002052  5010               	movf	fputs@i^0,w,c
  1981  002054  240B               	addwf	fputs@s^0,w,c
  1982  002056  6ED9               	movwf	fsr2l,c
  1983  002058  5011               	movf	(fputs@i+1)^0,w,c
  1984  00205A  200C               	addwfc	(fputs@s+1)^0,w,c
  1985  00205C  6EDA               	movwf	fsr2h,c
  1986  00205E  50DF               	movf	indf2,w,c
  1987  002060  6E0F               	movwf	fputs@c^0,c
  1988  002062  500F               	movf	fputs@c^0,w,c
  1989  002064  A4D8               	btfss	status,2,c
  1990  002066  EF37  F010         	goto	u881
  1991  00206A  EF39  F010         	goto	u880
  1992  00206E                     u881:
  1993  00206E  EF1E  F010         	goto	l1591
  1994  002072                     u880:
  1995  002072  0012               	return		;funcret
  1996  002074                     __end_of_fputs:
  1997                           	opt callstack 0
  1998                           
  1999 ;; *************** function _fputc *****************
  2000 ;; Defined at:
  2001 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  c               2    1[COMRAM] int 
  2004 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  2005 ;;		 -> sprintf@f(6), NULL(0), 
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;		None
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  2    1[COMRAM] int 
  2010 ;; Registers used:
  2011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2017 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2019 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2020 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2021 ;;Total ram usage:        9 bytes
  2022 ;; Hardware stack levels used:    1
  2023 ;; Hardware stack levels required when called:    1
  2024 ;; This function calls:
  2025 ;;		_putch
  2026 ;; This function is called by:
  2027 ;;		_pad
  2028 ;;		_vfpfcnvrt
  2029 ;;		_fputs
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           	psect	text9
  2034  001C0C                     __ptext9:
  2035                           	opt callstack 0
  2036  001C0C                     _fputc:
  2037                           	opt callstack 26
  2038  001C0C  5004               	movf	fputc@fp^0,w,c
  2039  001C0E  1005               	iorwf	(fputc@fp+1)^0,w,c
  2040  001C10  B4D8               	btfsc	status,2,c
  2041  001C12  EF0D  F00E         	goto	u841
  2042  001C16  EF0F  F00E         	goto	u840
  2043  001C1A                     u841:
  2044  001C1A  EF18  F00E         	goto	l1579
  2045  001C1E                     u840:
  2046  001C1E  5004               	movf	fputc@fp^0,w,c
  2047  001C20  1005               	iorwf	(fputc@fp+1)^0,w,c
  2048  001C22  A4D8               	btfss	status,2,c
  2049  001C24  EF16  F00E         	goto	u851
  2050  001C28  EF18  F00E         	goto	u850
  2051  001C2C                     u851:
  2052  001C2C  EF1D  F00E         	goto	l1581
  2053  001C30                     u850:
  2054  001C30                     l1579:
  2055  001C30  5002               	movf	fputc@c^0,w,c
  2056  001C32  ECC2  F010         	call	_putch
  2057  001C36  EF6A  F00E         	goto	l987
  2058  001C3A                     l1581:
  2059  001C3A  EE20 F004          	lfsr	2,4
  2060  001C3E  5004               	movf	fputc@fp^0,w,c
  2061  001C40  26D9               	addwf	fsr2l,f,c
  2062  001C42  5005               	movf	(fputc@fp+1)^0,w,c
  2063  001C44  22DA               	addwfc	fsr2h,f,c
  2064  001C46  50DE               	movf	postinc2,w,c
  2065  001C48  10DE               	iorwf	postinc2,w,c
  2066  001C4A  B4D8               	btfsc	status,2,c
  2067  001C4C  EF2A  F00E         	goto	u861
  2068  001C50  EF2C  F00E         	goto	u860
  2069  001C54                     u861:
  2070  001C54  EF47  F00E         	goto	l1585
  2071  001C58                     u860:
  2072  001C58  EE20 F004          	lfsr	2,4
  2073  001C5C  5004               	movf	fputc@fp^0,w,c
  2074  001C5E  26D9               	addwf	fsr2l,f,c
  2075  001C60  5005               	movf	(fputc@fp+1)^0,w,c
  2076  001C62  22DA               	addwfc	fsr2h,f,c
  2077  001C64  EE10 F002          	lfsr	1,2
  2078  001C68  5004               	movf	fputc@fp^0,w,c
  2079  001C6A  26E1               	addwf	fsr1l,f,c
  2080  001C6C  5005               	movf	(fputc@fp+1)^0,w,c
  2081  001C6E  22E2               	addwfc	fsr1h,f,c
  2082  001C70  50DE               	movf	postinc2,w,c
  2083  001C72  5CE6               	subwf	postinc1,w,c
  2084  001C74  50E6               	movf	postinc1,w,c
  2085  001C76  0A80               	xorlw	128
  2086  001C78  6E0A               	movwf	(??_fputc+4)^0,c
  2087  001C7A  50DE               	movf	postinc2,w,c
  2088  001C7C  0A80               	xorlw	128
  2089  001C7E  580A               	subwfb	(??_fputc+4)^0,w,c
  2090  001C80  B0D8               	btfsc	status,0,c
  2091  001C82  EF45  F00E         	goto	u871
  2092  001C86  EF47  F00E         	goto	u870
  2093  001C8A                     u871:
  2094  001C8A  EF6A  F00E         	goto	l987
  2095  001C8E                     u870:
  2096  001C8E                     l1585:
  2097  001C8E  EE20 F002          	lfsr	2,2
  2098  001C92  5004               	movf	fputc@fp^0,w,c
  2099  001C94  26D9               	addwf	fsr2l,f,c
  2100  001C96  5005               	movf	(fputc@fp+1)^0,w,c
  2101  001C98  22DA               	addwfc	fsr2h,f,c
  2102  001C9A  CFDE F006          	movff	postinc2,??_fputc
  2103  001C9E  CFDD F007          	movff	postdec2,??_fputc+1
  2104  001CA2  C004  FFD9         	movff	fputc@fp,fsr2l
  2105  001CA6  C005  FFDA         	movff	fputc@fp+1,fsr2h
  2106  001CAA  CFDE F008          	movff	postinc2,??_fputc+2
  2107  001CAE  CFDD F009          	movff	postdec2,??_fputc+3
  2108  001CB2  5006               	movf	??_fputc^0,w,c
  2109  001CB4  2408               	addwf	(??_fputc+2)^0,w,c
  2110  001CB6  6ED9               	movwf	fsr2l,c
  2111  001CB8  5007               	movf	(??_fputc+1)^0,w,c
  2112  001CBA  2009               	addwfc	(??_fputc+3)^0,w,c
  2113  001CBC  6EDA               	movwf	fsr2h,c
  2114  001CBE  C002  FFDF         	movff	fputc@c,indf2
  2115  001CC2  EE20 F002          	lfsr	2,2
  2116  001CC6  5004               	movf	fputc@fp^0,w,c
  2117  001CC8  26D9               	addwf	fsr2l,f,c
  2118  001CCA  5005               	movf	(fputc@fp+1)^0,w,c
  2119  001CCC  22DA               	addwfc	fsr2h,f,c
  2120  001CCE  2ADE               	incf	postinc2,f,c
  2121  001CD0  0E00               	movlw	0
  2122  001CD2  22DD               	addwfc	postdec2,f,c
  2123  001CD4                     l987:
  2124  001CD4  0012               	return		;funcret
  2125  001CD6                     __end_of_fputc:
  2126                           	opt callstack 0
  2127                           
  2128 ;; *************** function _putch *****************
  2129 ;; Defined at:
  2130 ;;		line 170 in file "rev-basic.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;  c               1    wreg     unsigned char 
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;  c               1    0[COMRAM] unsigned char 
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      void 
  2137 ;; Registers used:
  2138 ;;		wreg
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2145 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2147 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2148 ;;Total ram usage:        1 bytes
  2149 ;; Hardware stack levels used:    1
  2150 ;; This function calls:
  2151 ;;		Nothing
  2152 ;; This function is called by:
  2153 ;;		_fputc
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           	psect	text10
  2158  002184                     __ptext10:
  2159                           	opt callstack 0
  2160  002184                     _putch:
  2161                           	opt callstack 26
  2162                           
  2163                           ;incstack = 0
  2164                           ;putch@c stored from wreg
  2165  002184  6E01               	movwf	putch@c^0,c
  2166  002186                     l114:
  2167  002186  A89E               	btfss	3998,4,c	;volatile
  2168  002188  EFC8  F010         	goto	u831
  2169  00218C  EFCA  F010         	goto	u830
  2170  002190                     u831:
  2171  002190  EFC3  F010         	goto	l114
  2172  002194                     u830:
  2173  002194                     
  2174                           ;rev-basic.c: 174:     TXREG1 = c;
  2175  002194  C001  FFAD         	movff	putch@c,4013	;volatile
  2176  002198  0012               	return		;funcret
  2177  00219A                     __end_of_putch:
  2178                           	opt callstack 0
  2179                           
  2180 ;; *************** function _abs *****************
  2181 ;; Defined at:
  2182 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  a               2   18[COMRAM] int 
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;		None
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  2   18[COMRAM] int 
  2189 ;; Registers used:
  2190 ;;		wreg, status,2, status,0
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2198 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2199 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2200 ;;Total ram usage:        4 bytes
  2201 ;; Hardware stack levels used:    1
  2202 ;; This function calls:
  2203 ;;		Nothing
  2204 ;; This function is called by:
  2205 ;;		_dtoa
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text11
  2210  002074                     __ptext11:
  2211                           	opt callstack 0
  2212  002074                     _abs:
  2213                           	opt callstack 26
  2214  002074  BE14               	btfsc	(abs@a+1)^0,7,c
  2215  002076  EF47  F010         	goto	u940
  2216  00207A  5014               	movf	(abs@a+1)^0,w,c
  2217  00207C  E106               	bnz	u941
  2218  00207E  0413               	decf	abs@a^0,w,c
  2219  002080  B0D8               	btfsc	status,0,c
  2220  002082  EF45  F010         	goto	u941
  2221  002086  EF47  F010         	goto	u940
  2222  00208A                     u941:
  2223  00208A  EF55  F010         	goto	l972
  2224  00208E                     u940:
  2225  00208E  C013  F015         	movff	abs@a,??_abs
  2226  002092  C014  F016         	movff	abs@a+1,??_abs+1
  2227  002096  1E15               	comf	??_abs^0,f,c
  2228  002098  1E16               	comf	(??_abs+1)^0,f,c
  2229  00209A  4A15               	infsnz	??_abs^0,f,c
  2230  00209C  2A16               	incf	(??_abs+1)^0,f,c
  2231  00209E  C015  F013         	movff	??_abs,?_abs
  2232  0020A2  C016  F014         	movff	??_abs+1,?_abs+1
  2233  0020A6  EF59  F010         	goto	l975
  2234  0020AA                     l972:
  2235  0020AA  C013  F013         	movff	abs@a,?_abs
  2236  0020AE  C014  F014         	movff	abs@a+1,?_abs+1
  2237  0020B2                     l975:
  2238  0020B2  0012               	return		;funcret
  2239  0020B4                     __end_of_abs:
  2240                           	opt callstack 0
  2241                           
  2242 ;; *************** function ___aomod *****************
  2243 ;; Defined at:
  2244 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;  dividend        8    0[COMRAM] long long 
  2247 ;;  divisor         8    8[COMRAM] long long 
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;  sign            1   17[COMRAM] unsigned char 
  2250 ;;  counter         1   16[COMRAM] unsigned char 
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  8    0[COMRAM] long long 
  2253 ;; Registers used:
  2254 ;;		wreg, status,2, status,0
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2260 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2261 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2263 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2264 ;;Total ram usage:       18 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; This function calls:
  2267 ;;		Nothing
  2268 ;; This function is called by:
  2269 ;;		_dtoa
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273                           	psect	text12
  2274  0017C0                     __ptext12:
  2275                           	opt callstack 0
  2276  0017C0                     ___aomod:
  2277                           	opt callstack 26
  2278  0017C0  0E00               	movlw	0
  2279  0017C2  6E12               	movwf	___aomod@sign^0,c
  2280  0017C4  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2281  0017C6  EFE9  F00B         	goto	u1020
  2282  0017CA  EFE7  F00B         	goto	u1021
  2283  0017CE                     u1021:
  2284  0017CE  EFFB  F00B         	goto	l1685
  2285  0017D2                     u1020:
  2286  0017D2  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2287  0017D4  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2288  0017D6  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2289  0017D8  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2290  0017DA  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2291  0017DC  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2292  0017DE  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2293  0017E0  6C01               	negf	___aomod@dividend^0,c
  2294  0017E2  0E00               	movlw	0
  2295  0017E4  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2296  0017E6  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2297  0017E8  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2298  0017EA  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2299  0017EC  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2300  0017EE  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2301  0017F0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2302  0017F2  0E01               	movlw	1
  2303  0017F4  6E12               	movwf	___aomod@sign^0,c
  2304  0017F6                     l1685:
  2305  0017F6  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2306  0017F8  EF02  F00C         	goto	u1030
  2307  0017FC  EF00  F00C         	goto	u1031
  2308  001800                     u1031:
  2309  001800  EF12  F00C         	goto	l1689
  2310  001804                     u1030:
  2311  001804  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2312  001806  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2313  001808  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2314  00180A  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2315  00180C  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2316  00180E  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2317  001810  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2318  001812  6C09               	negf	___aomod@divisor^0,c
  2319  001814  0E00               	movlw	0
  2320  001816  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2321  001818  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2322  00181A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2323  00181C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2324  00181E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2325  001820  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2326  001822  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2327  001824                     l1689:
  2328  001824  5009               	movf	___aomod@divisor^0,w,c
  2329  001826  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2330  001828  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2331  00182A  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2332  00182C  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2333  00182E  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2334  001830  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2335  001832  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2336  001834  B4D8               	btfsc	status,2,c
  2337  001836  EF1F  F00C         	goto	u1041
  2338  00183A  EF21  F00C         	goto	u1040
  2339  00183E                     u1041:
  2340  00183E  EF69  F00C         	goto	l1705
  2341  001842                     u1040:
  2342  001842  0E01               	movlw	1
  2343  001844  6E11               	movwf	___aomod@counter^0,c
  2344  001846  EF2F  F00C         	goto	l1695
  2345  00184A                     l1693:
  2346  00184A  90D8               	bcf	status,0,c
  2347  00184C  3609               	rlcf	___aomod@divisor^0,f,c
  2348  00184E  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2349  001850  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2350  001852  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2351  001854  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2352  001856  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2353  001858  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2354  00185A  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2355  00185C  2A11               	incf	___aomod@counter^0,f,c
  2356  00185E                     l1695:
  2357  00185E  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2358  001860  EF34  F00C         	goto	u1051
  2359  001864  EF36  F00C         	goto	u1050
  2360  001868                     u1051:
  2361  001868  EF25  F00C         	goto	l1693
  2362  00186C                     u1050:
  2363  00186C                     l1697:
  2364  00186C  5009               	movf	___aomod@divisor^0,w,c
  2365  00186E  5C01               	subwf	___aomod@dividend^0,w,c
  2366  001870  500A               	movf	(___aomod@divisor+1)^0,w,c
  2367  001872  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2368  001874  500B               	movf	(___aomod@divisor+2)^0,w,c
  2369  001876  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2370  001878  500C               	movf	(___aomod@divisor+3)^0,w,c
  2371  00187A  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2372  00187C  500D               	movf	(___aomod@divisor+4)^0,w,c
  2373  00187E  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2374  001880  500E               	movf	(___aomod@divisor+5)^0,w,c
  2375  001882  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2376  001884  500F               	movf	(___aomod@divisor+6)^0,w,c
  2377  001886  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2378  001888  5010               	movf	(___aomod@divisor+7)^0,w,c
  2379  00188A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2380  00188C  A0D8               	btfss	status,0,c
  2381  00188E  EF4B  F00C         	goto	u1061
  2382  001892  EF4D  F00C         	goto	u1060
  2383  001896                     u1061:
  2384  001896  EF5D  F00C         	goto	l1701
  2385  00189A                     u1060:
  2386  00189A  5009               	movf	___aomod@divisor^0,w,c
  2387  00189C  5E01               	subwf	___aomod@dividend^0,f,c
  2388  00189E  500A               	movf	(___aomod@divisor+1)^0,w,c
  2389  0018A0  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2390  0018A2  500B               	movf	(___aomod@divisor+2)^0,w,c
  2391  0018A4  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2392  0018A6  500C               	movf	(___aomod@divisor+3)^0,w,c
  2393  0018A8  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2394  0018AA  500D               	movf	(___aomod@divisor+4)^0,w,c
  2395  0018AC  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2396  0018AE  500E               	movf	(___aomod@divisor+5)^0,w,c
  2397  0018B0  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2398  0018B2  500F               	movf	(___aomod@divisor+6)^0,w,c
  2399  0018B4  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2400  0018B6  5010               	movf	(___aomod@divisor+7)^0,w,c
  2401  0018B8  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2402  0018BA                     l1701:
  2403  0018BA  90D8               	bcf	status,0,c
  2404  0018BC  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2405  0018BE  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2406  0018C0  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2407  0018C2  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2408  0018C4  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2409  0018C6  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2410  0018C8  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2411  0018CA  3209               	rrcf	___aomod@divisor^0,f,c
  2412  0018CC  2E11               	decfsz	___aomod@counter^0,f,c
  2413  0018CE  EF36  F00C         	goto	l1697
  2414  0018D2                     l1705:
  2415  0018D2  5012               	movf	___aomod@sign^0,w,c
  2416  0018D4  B4D8               	btfsc	status,2,c
  2417  0018D6  EF6F  F00C         	goto	u1071
  2418  0018DA  EF71  F00C         	goto	u1070
  2419  0018DE                     u1071:
  2420  0018DE  EF81  F00C         	goto	l1709
  2421  0018E2                     u1070:
  2422  0018E2  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2423  0018E4  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2424  0018E6  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2425  0018E8  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2426  0018EA  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2427  0018EC  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2428  0018EE  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2429  0018F0  6C01               	negf	___aomod@dividend^0,c
  2430  0018F2  0E00               	movlw	0
  2431  0018F4  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2432  0018F6  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2433  0018F8  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2434  0018FA  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2435  0018FC  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2436  0018FE  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2437  001900  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2438  001902                     l1709:
  2439  001902  C001  F001         	movff	___aomod@dividend,?___aomod
  2440  001906  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2441  00190A  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2442  00190E  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2443  001912  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2444  001916  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2445  00191A  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2446  00191E  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2447  001922  0012               	return		;funcret
  2448  001924                     __end_of___aomod:
  2449                           	opt callstack 0
  2450                           
  2451 ;; *************** function ___aodiv *****************
  2452 ;; Defined at:
  2453 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;  dividend        8    0[COMRAM] long long 
  2456 ;;  divisor         8    8[COMRAM] long long 
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;  quotient        8   18[COMRAM] long long 
  2459 ;;  sign            1   17[COMRAM] unsigned char 
  2460 ;;  counter         1   16[COMRAM] unsigned char 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  8    0[COMRAM] long long 
  2463 ;; Registers used:
  2464 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2470 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2471 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;Total ram usage:       26 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_dtoa
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text13
  2484  0014D2                     __ptext13:
  2485                           	opt callstack 0
  2486  0014D2                     ___aodiv:
  2487                           	opt callstack 26
  2488  0014D2  0E00               	movlw	0
  2489  0014D4  6E12               	movwf	___aodiv@sign^0,c
  2490  0014D6  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2491  0014D8  EF72  F00A         	goto	u950
  2492  0014DC  EF70  F00A         	goto	u951
  2493  0014E0                     u951:
  2494  0014E0  EF84  F00A         	goto	l1641
  2495  0014E4                     u950:
  2496  0014E4  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2497  0014E6  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2498  0014E8  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2499  0014EA  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2500  0014EC  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2501  0014EE  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2502  0014F0  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2503  0014F2  6C09               	negf	___aodiv@divisor^0,c
  2504  0014F4  0E00               	movlw	0
  2505  0014F6  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2506  0014F8  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2507  0014FA  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2508  0014FC  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2509  0014FE  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2510  001500  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2511  001502  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2512  001504  0E01               	movlw	1
  2513  001506  6E12               	movwf	___aodiv@sign^0,c
  2514  001508                     l1641:
  2515  001508  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2516  00150A  EF8B  F00A         	goto	u960
  2517  00150E  EF89  F00A         	goto	u961
  2518  001512                     u961:
  2519  001512  EF9D  F00A         	goto	l1647
  2520  001516                     u960:
  2521  001516  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2522  001518  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2523  00151A  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2524  00151C  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2525  00151E  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2526  001520  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2527  001522  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2528  001524  6C01               	negf	___aodiv@dividend^0,c
  2529  001526  0E00               	movlw	0
  2530  001528  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2531  00152A  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2532  00152C  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2533  00152E  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2534  001530  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2535  001532  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2536  001534  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2537  001536  0E01               	movlw	1
  2538  001538  1A12               	xorwf	___aodiv@sign^0,f,c
  2539  00153A                     l1647:
  2540  00153A  EE20  F013         	lfsr	2,___aodiv@quotient
  2541  00153E  0E07               	movlw	7
  2542  001540                     u971:
  2543  001540  6ADE               	clrf	postinc2,c
  2544  001542  06E8               	decf	wreg,f,c
  2545  001544  E2FD               	bc	u971
  2546  001546  5009               	movf	___aodiv@divisor^0,w,c
  2547  001548  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2548  00154A  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2549  00154C  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2550  00154E  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2551  001550  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2552  001552  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2553  001554  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2554  001556  B4D8               	btfsc	status,2,c
  2555  001558  EFB0  F00A         	goto	u981
  2556  00155C  EFB2  F00A         	goto	u980
  2557  001560                     u981:
  2558  001560  EF04  F00B         	goto	l1669
  2559  001564                     u980:
  2560  001564  0E01               	movlw	1
  2561  001566  6E11               	movwf	___aodiv@counter^0,c
  2562  001568  EFC0  F00A         	goto	l1655
  2563  00156C                     l1653:
  2564  00156C  90D8               	bcf	status,0,c
  2565  00156E  3609               	rlcf	___aodiv@divisor^0,f,c
  2566  001570  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2567  001572  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2568  001574  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2569  001576  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2570  001578  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2571  00157A  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2572  00157C  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2573  00157E  2A11               	incf	___aodiv@counter^0,f,c
  2574  001580                     l1655:
  2575  001580  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2576  001582  EFC5  F00A         	goto	u991
  2577  001586  EFC7  F00A         	goto	u990
  2578  00158A                     u991:
  2579  00158A  EFB6  F00A         	goto	l1653
  2580  00158E                     u990:
  2581  00158E                     l1657:
  2582  00158E  90D8               	bcf	status,0,c
  2583  001590  3613               	rlcf	___aodiv@quotient^0,f,c
  2584  001592  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2585  001594  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2586  001596  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2587  001598  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2588  00159A  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2589  00159C  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2590  00159E  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2591  0015A0  5009               	movf	___aodiv@divisor^0,w,c
  2592  0015A2  5C01               	subwf	___aodiv@dividend^0,w,c
  2593  0015A4  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2594  0015A6  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2595  0015A8  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2596  0015AA  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2597  0015AC  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2598  0015AE  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2599  0015B0  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2600  0015B2  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2601  0015B4  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2602  0015B6  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2603  0015B8  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2604  0015BA  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2605  0015BC  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2606  0015BE  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2607  0015C0  A0D8               	btfss	status,0,c
  2608  0015C2  EFE5  F00A         	goto	u1001
  2609  0015C6  EFE7  F00A         	goto	u1000
  2610  0015CA                     u1001:
  2611  0015CA  EFF8  F00A         	goto	l1665
  2612  0015CE                     u1000:
  2613  0015CE  5009               	movf	___aodiv@divisor^0,w,c
  2614  0015D0  5E01               	subwf	___aodiv@dividend^0,f,c
  2615  0015D2  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2616  0015D4  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2617  0015D6  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2618  0015D8  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2619  0015DA  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2620  0015DC  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2621  0015DE  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2622  0015E0  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2623  0015E2  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2624  0015E4  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2625  0015E6  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2626  0015E8  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2627  0015EA  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2628  0015EC  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2629  0015EE  8013               	bsf	___aodiv@quotient^0,0,c
  2630  0015F0                     l1665:
  2631  0015F0  90D8               	bcf	status,0,c
  2632  0015F2  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2633  0015F4  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2634  0015F6  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2635  0015F8  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2636  0015FA  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2637  0015FC  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2638  0015FE  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2639  001600  3209               	rrcf	___aodiv@divisor^0,f,c
  2640  001602  2E11               	decfsz	___aodiv@counter^0,f,c
  2641  001604  EFC7  F00A         	goto	l1657
  2642  001608                     l1669:
  2643  001608  5012               	movf	___aodiv@sign^0,w,c
  2644  00160A  B4D8               	btfsc	status,2,c
  2645  00160C  EF0A  F00B         	goto	u1011
  2646  001610  EF0C  F00B         	goto	u1010
  2647  001614                     u1011:
  2648  001614  EF1C  F00B         	goto	l1673
  2649  001618                     u1010:
  2650  001618  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2651  00161A  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2652  00161C  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2653  00161E  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2654  001620  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2655  001622  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2656  001624  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2657  001626  6C13               	negf	___aodiv@quotient^0,c
  2658  001628  0E00               	movlw	0
  2659  00162A  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2660  00162C  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2661  00162E  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2662  001630  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2663  001632  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2664  001634  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2665  001636  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2666  001638                     l1673:
  2667  001638  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2668  00163C  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2669  001640  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2670  001644  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2671  001648  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2672  00164C  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2673  001650  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2674  001654  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2675  001658  0012               	return		;funcret
  2676  00165A                     __end_of___aodiv:
  2677                           	opt callstack 0
  2678                           
  2679 ;; *************** function ___lmul *****************
  2680 ;; Defined at:
  2681 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;  multiplier      4    0[COMRAM] unsigned long 
  2684 ;;  multiplicand    4    4[COMRAM] unsigned long 
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;  product         4    8[COMRAM] unsigned long 
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  4    0[COMRAM] unsigned long 
  2689 ;; Registers used:
  2690 ;;		wreg, status,2, status,0
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2696 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;Total ram usage:       12 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; This function calls:
  2703 ;;		Nothing
  2704 ;; This function is called by:
  2705 ;;		_main
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           	psect	text14
  2710  001EAA                     __ptext14:
  2711                           	opt callstack 0
  2712  001EAA                     ___lmul:
  2713                           	opt callstack 30
  2714  001EAA  0E00               	movlw	0
  2715  001EAC  6E09               	movwf	___lmul@product^0,c
  2716  001EAE  0E00               	movlw	0
  2717  001EB0  6E0A               	movwf	(___lmul@product+1)^0,c
  2718  001EB2  0E00               	movlw	0
  2719  001EB4  6E0B               	movwf	(___lmul@product+2)^0,c
  2720  001EB6  0E00               	movlw	0
  2721  001EB8  6E0C               	movwf	(___lmul@product+3)^0,c
  2722  001EBA                     l1981:
  2723  001EBA  A001               	btfss	___lmul@multiplier^0,0,c
  2724  001EBC  EF62  F00F         	goto	u1581
  2725  001EC0  EF64  F00F         	goto	u1580
  2726  001EC4                     u1581:
  2727  001EC4  EF6C  F00F         	goto	l1985
  2728  001EC8                     u1580:
  2729  001EC8  5005               	movf	___lmul@multiplicand^0,w,c
  2730  001ECA  2609               	addwf	___lmul@product^0,f,c
  2731  001ECC  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  2732  001ECE  220A               	addwfc	(___lmul@product+1)^0,f,c
  2733  001ED0  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  2734  001ED2  220B               	addwfc	(___lmul@product+2)^0,f,c
  2735  001ED4  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  2736  001ED6  220C               	addwfc	(___lmul@product+3)^0,f,c
  2737  001ED8                     l1985:
  2738  001ED8  90D8               	bcf	status,0,c
  2739  001EDA  3605               	rlcf	___lmul@multiplicand^0,f,c
  2740  001EDC  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2741  001EDE  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2742  001EE0  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2743  001EE2  90D8               	bcf	status,0,c
  2744  001EE4  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  2745  001EE6  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  2746  001EE8  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  2747  001EEA  3201               	rrcf	___lmul@multiplier^0,f,c
  2748  001EEC  5001               	movf	___lmul@multiplier^0,w,c
  2749  001EEE  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  2750  001EF0  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  2751  001EF2  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  2752  001EF4  A4D8               	btfss	status,2,c
  2753  001EF6  EF7F  F00F         	goto	u1591
  2754  001EFA  EF81  F00F         	goto	u1590
  2755  001EFE                     u1591:
  2756  001EFE  EF5D  F00F         	goto	l1981
  2757  001F02                     u1590:
  2758  001F02  C009  F001         	movff	___lmul@product,?___lmul
  2759  001F06  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  2760  001F0A  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  2761  001F0E  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  2762  001F12  0012               	return		;funcret
  2763  001F14                     __end_of___lmul:
  2764                           	opt callstack 0
  2765                           
  2766 ;; *************** function _REV_pot *****************
  2767 ;; Defined at:
  2768 ;;		line 73 in file "rev-basic.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  adc_id          1    wreg     unsigned char 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  adc_id          1    4[COMRAM] unsigned char 
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  2    0[COMRAM] int 
  2775 ;; Registers used:
  2776 ;;		wreg, status,2, status,0
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2784 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2785 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2786 ;;Total ram usage:        5 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; This function calls:
  2789 ;;		Nothing
  2790 ;; This function is called by:
  2791 ;;		_main
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           	psect	text15
  2796  001E2E                     __ptext15:
  2797                           	opt callstack 0
  2798  001E2E                     _REV_pot:
  2799                           	opt callstack 30
  2800                           
  2801                           ;incstack = 0
  2802                           ;REV_pot@adc_id stored from wreg
  2803  001E2E  6E05               	movwf	REV_pot@adc_id^0,c
  2804  001E30                     
  2805                           ;rev-basic.c: 75:     switch(adc_id){
  2806  001E30  EF2C  F00F         	goto	l1877
  2807  001E34                     l1867:
  2808                           
  2809                           ;rev-basic.c: 77:             ADCON0bits.CHS = 0b00100;
  2810  001E34  50C2               	movf	194,w,c	;volatile
  2811  001E36  0B83               	andlw	-125
  2812  001E38  0910               	iorlw	16
  2813  001E3A  6EC2               	movwf	194,c	;volatile
  2814                           
  2815                           ;rev-basic.c: 78:             break;
  2816  001E3C  EF41  F00F         	goto	l76
  2817  001E40                     l1869:
  2818                           
  2819                           ;rev-basic.c: 80:             ADCON0bits.CHS = 0b00101;
  2820  001E40  50C2               	movf	194,w,c	;volatile
  2821  001E42  0B83               	andlw	-125
  2822  001E44  0914               	iorlw	20
  2823  001E46  6EC2               	movwf	194,c	;volatile
  2824                           
  2825                           ;rev-basic.c: 81:             break;
  2826  001E48  EF41  F00F         	goto	l76
  2827  001E4C                     l1871:
  2828                           
  2829                           ;rev-basic.c: 83:             return 0;
  2830  001E4C  0E00               	movlw	0
  2831  001E4E  6E02               	movwf	(?_REV_pot+1)^0,c
  2832  001E50  0E00               	movlw	0
  2833  001E52  6E01               	movwf	?_REV_pot^0,c
  2834  001E54  EF54  F00F         	goto	l79
  2835  001E58                     l1877:
  2836  001E58  5005               	movf	REV_pot@adc_id^0,w,c
  2837  001E5A  6E03               	movwf	??_REV_pot^0,c
  2838  001E5C  6A04               	clrf	(??_REV_pot+1)^0,c
  2839                           
  2840                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2841                           ; Switch size 1, requested type "simple"
  2842                           ; Number of cases is 1, Range of values is 0 to 0
  2843                           ; switch strategies available:
  2844                           ; Name         Instructions Cycles
  2845                           ; simple_byte            4     3 (average)
  2846                           ;	Chosen strategy is simple_byte
  2847  001E5E  5004               	movf	(??_REV_pot+1)^0,w,c
  2848  001E60  0A00               	xorlw	0	; case 0
  2849  001E62  B4D8               	btfsc	status,2,c
  2850  001E64  EF36  F00F         	goto	l2109
  2851  001E68  EF26  F00F         	goto	l1871
  2852  001E6C                     l2109:
  2853                           
  2854                           ; Switch size 1, requested type "simple"
  2855                           ; Number of cases is 2, Range of values is 1 to 2
  2856                           ; switch strategies available:
  2857                           ; Name         Instructions Cycles
  2858                           ; simple_byte            7     4 (average)
  2859                           ;	Chosen strategy is simple_byte
  2860  001E6C  5003               	movf	??_REV_pot^0,w,c
  2861  001E6E  0A01               	xorlw	1	; case 1
  2862  001E70  B4D8               	btfsc	status,2,c
  2863  001E72  EF1A  F00F         	goto	l1867
  2864  001E76  0A03               	xorlw	3	; case 2
  2865  001E78  B4D8               	btfsc	status,2,c
  2866  001E7A  EF20  F00F         	goto	l1869
  2867  001E7E  EF26  F00F         	goto	l1871
  2868  001E82                     l76:
  2869                           
  2870                           ;rev-basic.c: 86:     GODONE = 1;
  2871  001E82  82C2               	bsf	4034,1,c	;volatile
  2872  001E84                     l80:
  2873  001E84  B2C2               	btfsc	4034,1,c	;volatile
  2874  001E86  EF47  F00F         	goto	u1321
  2875  001E8A  EF49  F00F         	goto	u1320
  2876  001E8E                     u1321:
  2877  001E8E  EF42  F00F         	goto	l80
  2878  001E92                     u1320:
  2879  001E92                     
  2880                           ;rev-basic.c: 89:     return ((ADRESH << 8) | ADRESL);
  2881  001E92  50C3               	movf	195,w,c	;volatile
  2882  001E94  CFC4 F003          	movff	4036,??_REV_pot	;volatile
  2883  001E98  6A04               	clrf	(??_REV_pot+1)^0,c
  2884  001E9A  C003  F004         	movff	??_REV_pot,??_REV_pot+1
  2885  001E9E  6A03               	clrf	??_REV_pot^0,c
  2886  001EA0  1003               	iorwf	??_REV_pot^0,w,c
  2887  001EA2  6E01               	movwf	?_REV_pot^0,c
  2888  001EA4  5004               	movf	(??_REV_pot+1)^0,w,c
  2889  001EA6  6E02               	movwf	(?_REV_pot+1)^0,c
  2890  001EA8                     l79:
  2891  001EA8  0012               	return		;funcret
  2892  001EAA                     __end_of_REV_pot:
  2893                           	opt callstack 0
  2894                           
  2895 ;; *************** function _REV_led *****************
  2896 ;; Defined at:
  2897 ;;		line 135 in file "rev-basic.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  id              1    wreg     unsigned char 
  2900 ;;  state           1    4[COMRAM] unsigned char 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;  id              1    7[COMRAM] unsigned char 
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      void 
  2905 ;; Registers used:
  2906 ;;		wreg, status,2, status,0
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2912 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;Total ram usage:        4 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; This function calls:
  2919 ;;		Nothing
  2920 ;; This function is called by:
  2921 ;;		_main
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           	psect	text16
  2926  001A46                     __ptext16:
  2927                           	opt callstack 0
  2928  001A46                     _REV_led:
  2929                           	opt callstack 30
  2930                           
  2931                           ;incstack = 0
  2932                           ;REV_led@id stored from wreg
  2933  001A46  6E08               	movwf	REV_led@id^0,c
  2934  001A48                     
  2935                           ;rev-basic.c: 144:     state = (unsigned char)(state == 0 ? 1 : 0);
  2936  001A48  5005               	movf	REV_led@state^0,w,c
  2937  001A4A  B4D8               	btfsc	status,2,c
  2938  001A4C  EF2A  F00D         	goto	u1371
  2939  001A50  EF2D  F00D         	goto	u1370
  2940  001A54                     u1371:
  2941  001A54  0E01               	movlw	1
  2942  001A56  EF2E  F00D         	goto	u1380
  2943  001A5A                     u1370:
  2944  001A5A  0E00               	movlw	0
  2945  001A5C                     u1380:
  2946  001A5C  6E05               	movwf	REV_led@state^0,c
  2947                           
  2948                           ;rev-basic.c: 145:     switch(id){
  2949  001A5E  EF73  F00D         	goto	l1923
  2950  001A62                     l103:
  2951                           
  2952                           ;rev-basic.c: 147:             LATD2 = state;
  2953  001A62  B005               	btfsc	REV_led@state^0,0,c
  2954  001A64  EF36  F00D         	goto	u1391
  2955  001A68  EF39  F00D         	goto	u1390
  2956  001A6C                     u1391:
  2957  001A6C  848C               	bsf	3980,2,c	;volatile
  2958  001A6E  EF3A  F00D         	goto	u1405
  2959  001A72                     u1390:
  2960  001A72  948C               	bcf	3980,2,c	;volatile
  2961  001A74                     u1405:
  2962                           
  2963                           ;rev-basic.c: 148:             break;
  2964  001A74  EF98  F00D         	goto	l111
  2965  001A78                     l105:
  2966                           
  2967                           ;rev-basic.c: 150:             LATD3 = state;
  2968  001A78  B005               	btfsc	REV_led@state^0,0,c
  2969  001A7A  EF41  F00D         	goto	u1411
  2970  001A7E  EF44  F00D         	goto	u1410
  2971  001A82                     u1411:
  2972  001A82  868C               	bsf	3980,3,c	;volatile
  2973  001A84  EF45  F00D         	goto	u1425
  2974  001A88                     u1410:
  2975  001A88  968C               	bcf	3980,3,c	;volatile
  2976  001A8A                     u1425:
  2977                           
  2978                           ;rev-basic.c: 151:             break;
  2979  001A8A  EF98  F00D         	goto	l111
  2980  001A8E                     l106:
  2981                           
  2982                           ;rev-basic.c: 153:             LATC4 = state;
  2983  001A8E  B005               	btfsc	REV_led@state^0,0,c
  2984  001A90  EF4C  F00D         	goto	u1431
  2985  001A94  EF4F  F00D         	goto	u1430
  2986  001A98                     u1431:
  2987  001A98  888B               	bsf	3979,4,c	;volatile
  2988  001A9A  EF50  F00D         	goto	u1445
  2989  001A9E                     u1430:
  2990  001A9E  988B               	bcf	3979,4,c	;volatile
  2991  001AA0                     u1445:
  2992                           
  2993                           ;rev-basic.c: 154:             break;
  2994  001AA0  EF98  F00D         	goto	l111
  2995  001AA4                     l107:
  2996                           
  2997                           ;rev-basic.c: 156:             LATD4 = state;
  2998  001AA4  B005               	btfsc	REV_led@state^0,0,c
  2999  001AA6  EF57  F00D         	goto	u1451
  3000  001AAA  EF5A  F00D         	goto	u1450
  3001  001AAE                     u1451:
  3002  001AAE  888C               	bsf	3980,4,c	;volatile
  3003  001AB0  EF5B  F00D         	goto	u1465
  3004  001AB4                     u1450:
  3005  001AB4  988C               	bcf	3980,4,c	;volatile
  3006  001AB6                     u1465:
  3007                           
  3008                           ;rev-basic.c: 157:             break;
  3009  001AB6  EF98  F00D         	goto	l111
  3010  001ABA                     l108:
  3011                           
  3012                           ;rev-basic.c: 159:             LATD5 = state;
  3013  001ABA  B005               	btfsc	REV_led@state^0,0,c
  3014  001ABC  EF62  F00D         	goto	u1471
  3015  001AC0  EF65  F00D         	goto	u1470
  3016  001AC4                     u1471:
  3017  001AC4  8A8C               	bsf	3980,5,c	;volatile
  3018  001AC6  EF66  F00D         	goto	u1485
  3019  001ACA                     u1470:
  3020  001ACA  9A8C               	bcf	3980,5,c	;volatile
  3021  001ACC                     u1485:
  3022                           
  3023                           ;rev-basic.c: 160:             break;
  3024  001ACC  EF98  F00D         	goto	l111
  3025  001AD0                     l109:
  3026                           
  3027                           ;rev-basic.c: 162:             LATD6 = state;
  3028  001AD0  B005               	btfsc	REV_led@state^0,0,c
  3029  001AD2  EF6D  F00D         	goto	u1491
  3030  001AD6  EF70  F00D         	goto	u1490
  3031  001ADA                     u1491:
  3032  001ADA  8C8C               	bsf	3980,6,c	;volatile
  3033  001ADC  EF71  F00D         	goto	u1505
  3034  001AE0                     u1490:
  3035  001AE0  9C8C               	bcf	3980,6,c	;volatile
  3036  001AE2                     u1505:
  3037                           
  3038                           ;rev-basic.c: 163:             break;
  3039  001AE2  EF98  F00D         	goto	l111
  3040  001AE6                     l1923:
  3041  001AE6  5008               	movf	REV_led@id^0,w,c
  3042  001AE8  6E06               	movwf	??_REV_led^0,c
  3043  001AEA  6A07               	clrf	(??_REV_led+1)^0,c
  3044                           
  3045                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3046                           ; Switch size 1, requested type "simple"
  3047                           ; Number of cases is 1, Range of values is 0 to 0
  3048                           ; switch strategies available:
  3049                           ; Name         Instructions Cycles
  3050                           ; simple_byte            4     3 (average)
  3051                           ;	Chosen strategy is simple_byte
  3052  001AEC  5007               	movf	(??_REV_led+1)^0,w,c
  3053  001AEE  0A00               	xorlw	0	; case 0
  3054  001AF0  B4D8               	btfsc	status,2,c
  3055  001AF2  EF7D  F00D         	goto	l2111
  3056  001AF6  EF98  F00D         	goto	l111
  3057  001AFA                     l2111:
  3058                           
  3059                           ; Switch size 1, requested type "simple"
  3060                           ; Number of cases is 6, Range of values is 1 to 6
  3061                           ; switch strategies available:
  3062                           ; Name         Instructions Cycles
  3063                           ; simple_byte           19    10 (average)
  3064                           ;	Chosen strategy is simple_byte
  3065  001AFA  5006               	movf	??_REV_led^0,w,c
  3066  001AFC  0A01               	xorlw	1	; case 1
  3067  001AFE  B4D8               	btfsc	status,2,c
  3068  001B00  EF31  F00D         	goto	l103
  3069  001B04  0A03               	xorlw	3	; case 2
  3070  001B06  B4D8               	btfsc	status,2,c
  3071  001B08  EF3C  F00D         	goto	l105
  3072  001B0C  0A01               	xorlw	1	; case 3
  3073  001B0E  B4D8               	btfsc	status,2,c
  3074  001B10  EF47  F00D         	goto	l106
  3075  001B14  0A07               	xorlw	7	; case 4
  3076  001B16  B4D8               	btfsc	status,2,c
  3077  001B18  EF52  F00D         	goto	l107
  3078  001B1C  0A01               	xorlw	1	; case 5
  3079  001B1E  B4D8               	btfsc	status,2,c
  3080  001B20  EF5D  F00D         	goto	l108
  3081  001B24  0A03               	xorlw	3	; case 6
  3082  001B26  B4D8               	btfsc	status,2,c
  3083  001B28  EF68  F00D         	goto	l109
  3084  001B2C  EF98  F00D         	goto	l111
  3085  001B30                     l111:
  3086  001B30  0012               	return		;funcret
  3087  001B32                     __end_of_REV_led:
  3088                           	opt callstack 0
  3089                           
  3090 ;; *************** function _REV_init *****************
  3091 ;; Defined at:
  3092 ;;		line 6 in file "rev-basic.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;		None
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;  dummy_int       2    0        int 
  3097 ;;  dummy_char      1    0        unsigned char 
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  1    wreg      void 
  3100 ;; Registers used:
  3101 ;;		wreg, status,2, status,0, cstack
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3111 ;;Total ram usage:        0 bytes
  3112 ;; Hardware stack levels used:    1
  3113 ;; Hardware stack levels required when called:    2
  3114 ;; This function calls:
  3115 ;;		_LCD_Init
  3116 ;; This function is called by:
  3117 ;;		_main
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           	psect	text17
  3122  001F14                     __ptext17:
  3123                           	opt callstack 0
  3124  001F14                     _REV_init:
  3125                           	opt callstack 28
  3126  001F14                     
  3127                           ;rev-basic.c: 7:     char dummy_char;;rev-basic.c: 8:     int dummy_int;;rev-basic.c: 10
      +                          :     TRISDbits.RD2 = 0;
  3128  001F14  9495               	bcf	149,2,c	;volatile
  3129                           
  3130                           ;rev-basic.c: 11:     TRISDbits.RD3 = 0;
  3131  001F16  9695               	bcf	149,3,c	;volatile
  3132                           
  3133                           ;rev-basic.c: 12:     TRISCbits.RC4 = 0;
  3134  001F18  9894               	bcf	148,4,c	;volatile
  3135                           
  3136                           ;rev-basic.c: 13:     TRISDbits.RD4 = 0;
  3137  001F1A  9895               	bcf	149,4,c	;volatile
  3138                           
  3139                           ;rev-basic.c: 14:     TRISDbits.RD5 = 0;
  3140  001F1C  9A95               	bcf	149,5,c	;volatile
  3141                           
  3142                           ;rev-basic.c: 15:     TRISDbits.RD6 = 0;
  3143  001F1E  9C95               	bcf	149,6,c	;volatile
  3144                           
  3145                           ;rev-basic.c: 17:     ANSELDbits.ANSD2 = 0;
  3146  001F20  010F               	movlb	15	; () banked
  3147  001F22  953B               	bcf	59,2,b	;volatile
  3148                           
  3149                           ;rev-basic.c: 18:     ANSELDbits.ANSD3 = 0;
  3150  001F24  973B               	bcf	59,3,b	;volatile
  3151                           
  3152                           ;rev-basic.c: 19:     ANSELCbits.ANSC4 = 0;
  3153  001F26  993A               	bcf	58,4,b	;volatile
  3154                           
  3155                           ;rev-basic.c: 20:     ANSELCbits.ANSC7 = 0;
  3156  001F28  9F3A               	bcf	58,7,b	;volatile
  3157                           
  3158                           ;rev-basic.c: 21:     ANSELDbits.ANSD4 = 0;
  3159  001F2A  993B               	bcf	59,4,b	;volatile
  3160                           
  3161                           ;rev-basic.c: 22:     ANSELDbits.ANSD5 = 0;
  3162  001F2C  9B3B               	bcf	59,5,b	;volatile
  3163                           
  3164                           ;rev-basic.c: 23:     ANSELDbits.ANSD6 = 0;
  3165  001F2E  9D3B               	bcf	59,6,b	;volatile
  3166                           
  3167                           ;rev-basic.c: 25:     LATDbits.LATD2 = 1;
  3168  001F30  848C               	bsf	140,2,c	;volatile
  3169                           
  3170                           ;rev-basic.c: 26:     LATDbits.LATD3 = 1;
  3171  001F32  868C               	bsf	140,3,c	;volatile
  3172                           
  3173                           ;rev-basic.c: 27:     LATCbits.LATC4 = 1;
  3174  001F34  888B               	bsf	139,4,c	;volatile
  3175                           
  3176                           ;rev-basic.c: 28:     LATDbits.LATD4 = 1;
  3177  001F36  888C               	bsf	140,4,c	;volatile
  3178                           
  3179                           ;rev-basic.c: 29:     LATDbits.LATD6 = 1;
  3180  001F38  8C8C               	bsf	140,6,c	;volatile
  3181                           
  3182                           ;rev-basic.c: 30:     LATDbits.LATD5 = 1;
  3183  001F3A  8A8C               	bsf	140,5,c	;volatile
  3184                           
  3185                           ;rev-basic.c: 33:     TRISCbits.RC0 = 1;
  3186  001F3C  8094               	bsf	148,0,c	;volatile
  3187                           
  3188                           ;rev-basic.c: 34:     TRISAbits.RA4 = 1;
  3189  001F3E  8892               	bsf	146,4,c	;volatile
  3190                           
  3191                           ;rev-basic.c: 35:     TRISAbits.RA3 = 1;
  3192  001F40  8692               	bsf	146,3,c	;volatile
  3193                           
  3194                           ;rev-basic.c: 36:     TRISAbits.RA2 = 1;
  3195  001F42  8492               	bsf	146,2,c	;volatile
  3196                           
  3197                           ;rev-basic.c: 38:     TRISCbits.TRISC6 = 1;
  3198  001F44  8C94               	bsf	148,6,c	;volatile
  3199                           
  3200                           ;rev-basic.c: 39:     TRISCbits.TRISC7 = 1;
  3201  001F46  8E94               	bsf	148,7,c	;volatile
  3202                           
  3203                           ;rev-basic.c: 42:     ANSELAbits.ANSA3 = 0;
  3204  001F48  9738               	bcf	56,3,b	;volatile
  3205                           
  3206                           ;rev-basic.c: 43:     ANSELAbits.ANSA2 = 0;
  3207  001F4A  9538               	bcf	56,2,b	;volatile
  3208                           
  3209                           ;rev-basic.c: 46:     TRISAbits.RA5 = 1;
  3210  001F4C  8A92               	bsf	146,5,c	;volatile
  3211                           
  3212                           ;rev-basic.c: 47:     TRISEbits.RE0 = 1;
  3213  001F4E  8096               	bsf	150,0,c	;volatile
  3214                           
  3215                           ;rev-basic.c: 49:     TRISAbits.RA5 = 1;
  3216  001F50  8A92               	bsf	146,5,c	;volatile
  3217                           
  3218                           ;rev-basic.c: 50:     TRISEbits.RE0 = 1;
  3219  001F52  8096               	bsf	150,0,c	;volatile
  3220                           
  3221                           ;rev-basic.c: 52:     ADON = 1;
  3222  001F54  80C2               	bsf	4034,0,c	;volatile
  3223  001F56                     
  3224                           ; BSR set to: 15
  3225                           ;rev-basic.c: 53:     ADCON1 = 0;
  3226  001F56  0E00               	movlw	0
  3227  001F58  6EC1               	movwf	193,c	;volatile
  3228  001F5A                     
  3229                           ; BSR set to: 15
  3230                           ;rev-basic.c: 54:     ADCON2 = (unsigned char)(ADCON2 | 0b00110101);
  3231  001F5A  50C0               	movf	192,w,c	;volatile
  3232  001F5C  0935               	iorlw	53
  3233  001F5E  6EC0               	movwf	192,c	;volatile
  3234  001F60                     
  3235                           ; BSR set to: 15
  3236                           ;rev-basic.c: 56:     ADCON2bits.ADFM = 1;
  3237  001F60  8EC0               	bsf	192,7,c	;volatile
  3238  001F62                     
  3239                           ; BSR set to: 15
  3240                           ;rev-basic.c: 57:     ADCON2bits.ADCS = 0b101;
  3241  001F62  50C0               	movf	192,w,c	;volatile
  3242  001F64  0BF8               	andlw	-8
  3243  001F66  0905               	iorlw	5
  3244  001F68  6EC0               	movwf	192,c	;volatile
  3245  001F6A                     
  3246                           ; BSR set to: 15
  3247                           ;rev-basic.c: 58:     ADCON0bits.ADON = 1;
  3248  001F6A  80C2               	bsf	194,0,c	;volatile
  3249  001F6C                     
  3250                           ; BSR set to: 15
  3251                           ;rev-basic.c: 62:     SPBRG1 = 51;
  3252  001F6C  0E33               	movlw	51
  3253  001F6E  6EAF               	movwf	175,c	;volatile
  3254  001F70                     
  3255                           ; BSR set to: 15
  3256                           ;rev-basic.c: 64:     TXSTA1bits.TXEN = 1;
  3257  001F70  8AAC               	bsf	172,5,c	;volatile
  3258  001F72                     
  3259                           ; BSR set to: 15
  3260                           ;rev-basic.c: 65:     RCSTA1bits.CREN = 1;
  3261  001F72  88AB               	bsf	171,4,c	;volatile
  3262  001F74                     
  3263                           ; BSR set to: 15
  3264                           ;rev-basic.c: 66:     RCSTA1bits.SPEN = 1;
  3265  001F74  8EAB               	bsf	171,7,c	;volatile
  3266  001F76                     
  3267                           ; BSR set to: 15
  3268                           ;rev-basic.c: 69:     LCD_Init();
  3269  001F76  EC99  F00D         	call	_LCD_Init	;wreg free
  3270  001F7A  0012               	return		;funcret
  3271  001F7C                     __end_of_REV_init:
  3272                           	opt callstack 0
  3273                           
  3274 ;; *************** function _LCD_Init *****************
  3275 ;; Defined at:
  3276 ;;		line 6 in file "lcd.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;		None
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;		None
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  1    wreg      void 
  3283 ;; Registers used:
  3284 ;;		wreg, status,2, cstack
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3292 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3293 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3294 ;;Total ram usage:        1 bytes
  3295 ;; Hardware stack levels used:    1
  3296 ;; Hardware stack levels required when called:    1
  3297 ;; This function calls:
  3298 ;;		_LCD_Send
  3299 ;; This function is called by:
  3300 ;;		_REV_init
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           	psect	text18
  3305  001B32                     __ptext18:
  3306                           	opt callstack 0
  3307  001B32                     _LCD_Init:
  3308                           	opt callstack 28
  3309  001B32                     
  3310                           ;lcd.c: 8:     ANSELDbits.ANSD0 = 0;
  3311  001B32  010F               	movlb	15	; () banked
  3312  001B34  913B               	bcf	59,0,b	;volatile
  3313                           
  3314                           ;lcd.c: 9:     ANSELDbits.ANSD1 = 0;
  3315  001B36  933B               	bcf	59,1,b	;volatile
  3316                           
  3317                           ;lcd.c: 11:     TRISDbits.TRISD0 = 1;
  3318  001B38  8095               	bsf	149,0,c	;volatile
  3319                           
  3320                           ;lcd.c: 12:     TRISDbits.TRISD1 = 1;
  3321  001B3A  8295               	bsf	149,1,c	;volatile
  3322                           
  3323                           ;lcd.c: 13:     TRISAbits.TRISA0 = 0;
  3324  001B3C  9092               	bcf	146,0,c	;volatile
  3325                           
  3326                           ;lcd.c: 14:     LATAbits.LATA0 = 1;
  3327  001B3E  8089               	bsf	137,0,c	;volatile
  3328  001B40                     
  3329                           ; BSR set to: 15
  3330                           ;lcd.c: 17:     SSP2CON1bits.SSPM = 0b1000;
  3331  001B40  506C               	movf	108,w,c	;volatile
  3332  001B42  0BF0               	andlw	-16
  3333  001B44  0908               	iorlw	8
  3334  001B46  6E6C               	movwf	108,c	;volatile
  3335                           
  3336                           ;lcd.c: 18:     SSP2ADD = 19;
  3337  001B48  0E13               	movlw	19
  3338  001B4A  6E6E               	movwf	110,c	;volatile
  3339  001B4C                     
  3340                           ; BSR set to: 15
  3341                           ;lcd.c: 19:     SSP2CON1bits.SSPEN = 1;
  3342  001B4C  8A6C               	bsf	108,5,c	;volatile
  3343  001B4E                     
  3344                           ; BSR set to: 15
  3345                           ;lcd.c: 21:     _delay((unsigned long)((5)*(32E6/4000.0)));
  3346  001B4E  0E34               	movlw	52
  3347  001B50  6E02               	movwf	??_LCD_Init^0,c
  3348  001B52  0EF2               	movlw	242
  3349  001B54                     u1647:
  3350  001B54  2EE8               	decfsz	wreg,f,c
  3351  001B56  D7FE               	bra	u1647
  3352  001B58  2E02               	decfsz	??_LCD_Init^0,f,c
  3353  001B5A  D7FC               	bra	u1647
  3354  001B5C                     
  3355                           ;lcd.c: 23:     SSP2CON2bits.SEN = 1;
  3356  001B5C  806B               	bsf	107,0,c	;volatile
  3357  001B5E                     l153:
  3358  001B5E  B06B               	btfsc	107,0,c	;volatile
  3359  001B60  EFB4  F00D         	goto	u1291
  3360  001B64  EFB6  F00D         	goto	u1290
  3361  001B68                     u1291:
  3362  001B68  EFAF  F00D         	goto	l153
  3363  001B6C                     u1290:
  3364  001B6C                     
  3365                           ;lcd.c: 25:     SSP2IF = 0;
  3366  001B6C  9EA4               	bcf	4004,7,c	;volatile
  3367  001B6E                     
  3368                           ;lcd.c: 30:     LCD_Send(0x7C);
  3369  001B6E  0E7C               	movlw	124
  3370  001B70  ECA4  F010         	call	_LCD_Send
  3371                           
  3372                           ;lcd.c: 31:     LCD_Send(0x80);
  3373  001B74  0E80               	movlw	128
  3374  001B76  ECA4  F010         	call	_LCD_Send
  3375                           
  3376                           ;lcd.c: 32:     LCD_Send(0x38);
  3377  001B7A  0E38               	movlw	56
  3378  001B7C  ECA4  F010         	call	_LCD_Send
  3379                           
  3380                           ;lcd.c: 33:     LCD_Send(0x80);
  3381  001B80  0E80               	movlw	128
  3382  001B82  ECA4  F010         	call	_LCD_Send
  3383                           
  3384                           ;lcd.c: 34:     LCD_Send(0x39);
  3385  001B86  0E39               	movlw	57
  3386  001B88  ECA4  F010         	call	_LCD_Send
  3387                           
  3388                           ;lcd.c: 35:     LCD_Send(0x80);
  3389  001B8C  0E80               	movlw	128
  3390  001B8E  ECA4  F010         	call	_LCD_Send
  3391                           
  3392                           ;lcd.c: 36:     LCD_Send(0x17);
  3393  001B92  0E17               	movlw	23
  3394  001B94  ECA4  F010         	call	_LCD_Send
  3395                           
  3396                           ;lcd.c: 37:     LCD_Send(0x80);
  3397  001B98  0E80               	movlw	128
  3398  001B9A  ECA4  F010         	call	_LCD_Send
  3399                           
  3400                           ;lcd.c: 38:     LCD_Send(0x7A);
  3401  001B9E  0E7A               	movlw	122
  3402  001BA0  ECA4  F010         	call	_LCD_Send
  3403                           
  3404                           ;lcd.c: 39:     LCD_Send(0x80);
  3405  001BA4  0E80               	movlw	128
  3406  001BA6  ECA4  F010         	call	_LCD_Send
  3407                           
  3408                           ;lcd.c: 40:     LCD_Send(0x5E);
  3409  001BAA  0E5E               	movlw	94
  3410  001BAC  ECA4  F010         	call	_LCD_Send
  3411                           
  3412                           ;lcd.c: 41:     LCD_Send(0x80);
  3413  001BB0  0E80               	movlw	128
  3414  001BB2  ECA4  F010         	call	_LCD_Send
  3415                           
  3416                           ;lcd.c: 42:     LCD_Send(0x6B);
  3417  001BB6  0E6B               	movlw	107
  3418  001BB8  ECA4  F010         	call	_LCD_Send
  3419                           
  3420                           ;lcd.c: 43:     LCD_Send(0x80);
  3421  001BBC  0E80               	movlw	128
  3422  001BBE  ECA4  F010         	call	_LCD_Send
  3423                           
  3424                           ;lcd.c: 44:     LCD_Send(0x0C);
  3425  001BC2  0E0C               	movlw	12
  3426  001BC4  ECA4  F010         	call	_LCD_Send
  3427                           
  3428                           ;lcd.c: 45:     LCD_Send(0x80);
  3429  001BC8  0E80               	movlw	128
  3430  001BCA  ECA4  F010         	call	_LCD_Send
  3431                           
  3432                           ;lcd.c: 46:     LCD_Send(0x01);
  3433  001BCE  0E01               	movlw	1
  3434  001BD0  ECA4  F010         	call	_LCD_Send
  3435                           
  3436                           ;lcd.c: 47:     LCD_Send(0x80);
  3437  001BD4  0E80               	movlw	128
  3438  001BD6  ECA4  F010         	call	_LCD_Send
  3439                           
  3440                           ;lcd.c: 48:     LCD_Send(0x06);
  3441  001BDA  0E06               	movlw	6
  3442  001BDC  ECA4  F010         	call	_LCD_Send
  3443                           
  3444                           ;lcd.c: 49:     LCD_Send(0x80);
  3445  001BE0  0E80               	movlw	128
  3446  001BE2  ECA4  F010         	call	_LCD_Send
  3447                           
  3448                           ;lcd.c: 50:     LCD_Send(0x02);
  3449  001BE6  0E02               	movlw	2
  3450  001BE8  ECA4  F010         	call	_LCD_Send
  3451  001BEC                     
  3452                           ;lcd.c: 52:     SSP2CON2bits.PEN = 1;
  3453  001BEC  846B               	bsf	107,2,c	;volatile
  3454  001BEE                     l156:
  3455  001BEE  B46B               	btfsc	107,2,c	;volatile
  3456  001BF0  EFFC  F00D         	goto	u1301
  3457  001BF4  EFFE  F00D         	goto	u1300
  3458  001BF8                     u1301:
  3459  001BF8  EFF7  F00D         	goto	l156
  3460  001BFC                     u1300:
  3461  001BFC                     
  3462                           ;lcd.c: 55:     _delay((unsigned long)((5)*(32E6/4000.0)));
  3463  001BFC  0E34               	movlw	52
  3464  001BFE  6E02               	movwf	??_LCD_Init^0,c
  3465  001C00  0EF2               	movlw	242
  3466  001C02                     u1657:
  3467  001C02  2EE8               	decfsz	wreg,f,c
  3468  001C04  D7FE               	bra	u1657
  3469  001C06  2E02               	decfsz	??_LCD_Init^0,f,c
  3470  001C08  D7FC               	bra	u1657
  3471  001C0A  0012               	return		;funcret
  3472  001C0C                     __end_of_LCD_Init:
  3473                           	opt callstack 0
  3474                           
  3475 ;; *************** function _REV_btn *****************
  3476 ;; Defined at:
  3477 ;;		line 92 in file "rev-basic.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;  id              1    wreg     unsigned char 
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;  id              1    2[COMRAM] unsigned char 
  3482 ;;  btn_state       1    3[COMRAM] unsigned char 
  3483 ;; Return value:  Size  Location     Type
  3484 ;;                  1    wreg      unsigned char 
  3485 ;; Registers used:
  3486 ;;		wreg, status,2, status,0
  3487 ;; Tracked objects:
  3488 ;;		On entry : 0/0
  3489 ;;		On exit  : 0/0
  3490 ;;		Unchanged: 0/0
  3491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3493 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3494 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3495 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3496 ;;Total ram usage:        4 bytes
  3497 ;; Hardware stack levels used:    1
  3498 ;; This function calls:
  3499 ;;		Nothing
  3500 ;; This function is called by:
  3501 ;;		_main
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           	psect	text19
  3506  001924                     __ptext19:
  3507                           	opt callstack 0
  3508  001924                     _REV_btn:
  3509                           	opt callstack 30
  3510                           
  3511                           ;incstack = 0
  3512                           ;REV_btn@id stored from wreg
  3513  001924  6E03               	movwf	REV_btn@id^0,c
  3514  001926                     
  3515                           ;rev-basic.c: 94:     char btn_state;;rev-basic.c: 96:     switch(id){
  3516  001926  EFAD  F00C         	goto	l1891
  3517  00192A                     l86:
  3518                           
  3519                           ;rev-basic.c: 98:             btn_state = PORTCbits.RC0;
  3520  00192A  0E00               	movlw	0
  3521  00192C  B082               	btfsc	130,0,c	;volatile
  3522  00192E  0E01               	movlw	1
  3523  001930  6E04               	movwf	REV_btn@btn_state^0,c
  3524                           
  3525                           ;rev-basic.c: 99:             break;
  3526  001932  EFCA  F00C         	goto	l1893
  3527  001936                     l88:
  3528                           
  3529                           ;rev-basic.c: 101:             btn_state = PORTAbits.RA4;
  3530  001936  0E00               	movlw	0
  3531  001938  B880               	btfsc	128,4,c	;volatile
  3532  00193A  0E01               	movlw	1
  3533  00193C  6E04               	movwf	REV_btn@btn_state^0,c
  3534                           
  3535                           ;rev-basic.c: 102:             break;
  3536  00193E  EFCA  F00C         	goto	l1893
  3537  001942                     l89:
  3538                           
  3539                           ;rev-basic.c: 104:             btn_state = PORTAbits.RA3;
  3540  001942  0E00               	movlw	0
  3541  001944  B680               	btfsc	128,3,c	;volatile
  3542  001946  0E01               	movlw	1
  3543  001948  6E04               	movwf	REV_btn@btn_state^0,c
  3544                           
  3545                           ;rev-basic.c: 105:             break;
  3546  00194A  EFCA  F00C         	goto	l1893
  3547  00194E                     l90:
  3548                           
  3549                           ;rev-basic.c: 107:             btn_state = PORTAbits.RA2;
  3550  00194E  0E00               	movlw	0
  3551  001950  B480               	btfsc	128,2,c	;volatile
  3552  001952  0E01               	movlw	1
  3553  001954  6E04               	movwf	REV_btn@btn_state^0,c
  3554                           
  3555                           ;rev-basic.c: 108:             break;
  3556  001956  EFCA  F00C         	goto	l1893
  3557  00195A                     l1891:
  3558  00195A  5003               	movf	REV_btn@id^0,w,c
  3559  00195C  6E01               	movwf	??_REV_btn^0,c
  3560  00195E  6A02               	clrf	(??_REV_btn+1)^0,c
  3561                           
  3562                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3563                           ; Switch size 1, requested type "simple"
  3564                           ; Number of cases is 1, Range of values is 0 to 0
  3565                           ; switch strategies available:
  3566                           ; Name         Instructions Cycles
  3567                           ; simple_byte            4     3 (average)
  3568                           ;	Chosen strategy is simple_byte
  3569  001960  5002               	movf	(??_REV_btn+1)^0,w,c
  3570  001962  0A00               	xorlw	0	; case 0
  3571  001964  B4D8               	btfsc	status,2,c
  3572  001966  EFB7  F00C         	goto	l2113
  3573  00196A  EFCA  F00C         	goto	l1893
  3574  00196E                     l2113:
  3575                           
  3576                           ; Switch size 1, requested type "simple"
  3577                           ; Number of cases is 4, Range of values is 1 to 4
  3578                           ; switch strategies available:
  3579                           ; Name         Instructions Cycles
  3580                           ; simple_byte           13     7 (average)
  3581                           ;	Chosen strategy is simple_byte
  3582  00196E  5001               	movf	??_REV_btn^0,w,c
  3583  001970  0A01               	xorlw	1	; case 1
  3584  001972  B4D8               	btfsc	status,2,c
  3585  001974  EF95  F00C         	goto	l86
  3586  001978  0A03               	xorlw	3	; case 2
  3587  00197A  B4D8               	btfsc	status,2,c
  3588  00197C  EF9B  F00C         	goto	l88
  3589  001980  0A01               	xorlw	1	; case 3
  3590  001982  B4D8               	btfsc	status,2,c
  3591  001984  EFA1  F00C         	goto	l89
  3592  001988  0A07               	xorlw	7	; case 4
  3593  00198A  B4D8               	btfsc	status,2,c
  3594  00198C  EFA7  F00C         	goto	l90
  3595  001990  EFCA  F00C         	goto	l1893
  3596  001994                     l1893:
  3597                           
  3598                           ;rev-basic.c: 113:     _delay((unsigned long)((5)*(16000000/4000.0)));
  3599  001994  0E1A               	movlw	26
  3600  001996  6E01               	movwf	??_REV_btn^0,c
  3601  001998  0EF8               	movlw	248
  3602  00199A                     u1667:
  3603  00199A  2EE8               	decfsz	wreg,f,c
  3604  00199C  D7FE               	bra	u1667
  3605  00199E  2E01               	decfsz	??_REV_btn^0,f,c
  3606  0019A0  D7FC               	bra	u1667
  3607  0019A2  D000               	nop2	
  3608                           
  3609                           ;rev-basic.c: 115:     switch(id){
  3610  0019A4  EF04  F00D         	goto	l1905
  3611  0019A8                     l1895:
  3612                           
  3613                           ;rev-basic.c: 117:             btn_state &= PORTCbits.RC0;
  3614  0019A8  B082               	btfsc	130,0,c	;volatile
  3615  0019AA  EFD9  F00C         	goto	u1331
  3616  0019AE  EFDC  F00C         	goto	u1330
  3617  0019B2                     u1331:
  3618  0019B2  0E01               	movlw	1
  3619  0019B4  EFDD  F00C         	goto	u1336
  3620  0019B8                     u1330:
  3621  0019B8  0E00               	movlw	0
  3622  0019BA                     u1336:
  3623  0019BA  1604               	andwf	REV_btn@btn_state^0,f,c
  3624                           
  3625                           ;rev-basic.c: 118:             break;
  3626  0019BC  EF21  F00D         	goto	l1907
  3627  0019C0                     l1897:
  3628                           
  3629                           ;rev-basic.c: 120:             btn_state &= PORTAbits.RA4;
  3630  0019C0  B880               	btfsc	128,4,c	;volatile
  3631  0019C2  EFE5  F00C         	goto	u1341
  3632  0019C6  EFE8  F00C         	goto	u1340
  3633  0019CA                     u1341:
  3634  0019CA  0E01               	movlw	1
  3635  0019CC  EFE9  F00C         	goto	u1346
  3636  0019D0                     u1340:
  3637  0019D0  0E00               	movlw	0
  3638  0019D2                     u1346:
  3639  0019D2  1604               	andwf	REV_btn@btn_state^0,f,c
  3640                           
  3641                           ;rev-basic.c: 121:             break;
  3642  0019D4  EF21  F00D         	goto	l1907
  3643  0019D8                     l1899:
  3644                           
  3645                           ;rev-basic.c: 123:             btn_state &= PORTAbits.RA3;
  3646  0019D8  B680               	btfsc	128,3,c	;volatile
  3647  0019DA  EFF1  F00C         	goto	u1351
  3648  0019DE  EFF4  F00C         	goto	u1350
  3649  0019E2                     u1351:
  3650  0019E2  0E01               	movlw	1
  3651  0019E4  EFF5  F00C         	goto	u1356
  3652  0019E8                     u1350:
  3653  0019E8  0E00               	movlw	0
  3654  0019EA                     u1356:
  3655  0019EA  1604               	andwf	REV_btn@btn_state^0,f,c
  3656                           
  3657                           ;rev-basic.c: 124:             break;
  3658  0019EC  EF21  F00D         	goto	l1907
  3659  0019F0                     l1901:
  3660                           
  3661                           ;rev-basic.c: 126:             btn_state &= PORTAbits.RA2;
  3662  0019F0  B480               	btfsc	128,2,c	;volatile
  3663  0019F2  EFFD  F00C         	goto	u1361
  3664  0019F6  EF00  F00D         	goto	u1360
  3665  0019FA                     u1361:
  3666  0019FA  0E01               	movlw	1
  3667  0019FC  EF01  F00D         	goto	u1366
  3668  001A00                     u1360:
  3669  001A00  0E00               	movlw	0
  3670  001A02                     u1366:
  3671  001A02  1604               	andwf	REV_btn@btn_state^0,f,c
  3672                           
  3673                           ;rev-basic.c: 127:             break;
  3674  001A04  EF21  F00D         	goto	l1907
  3675  001A08                     l1905:
  3676  001A08  5003               	movf	REV_btn@id^0,w,c
  3677  001A0A  6E01               	movwf	??_REV_btn^0,c
  3678  001A0C  6A02               	clrf	(??_REV_btn+1)^0,c
  3679                           
  3680                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3681                           ; Switch size 1, requested type "simple"
  3682                           ; Number of cases is 1, Range of values is 0 to 0
  3683                           ; switch strategies available:
  3684                           ; Name         Instructions Cycles
  3685                           ; simple_byte            4     3 (average)
  3686                           ;	Chosen strategy is simple_byte
  3687  001A0E  5002               	movf	(??_REV_btn+1)^0,w,c
  3688  001A10  0A00               	xorlw	0	; case 0
  3689  001A12  B4D8               	btfsc	status,2,c
  3690  001A14  EF0E  F00D         	goto	l2115
  3691  001A18  EF21  F00D         	goto	l1907
  3692  001A1C                     l2115:
  3693                           
  3694                           ; Switch size 1, requested type "simple"
  3695                           ; Number of cases is 4, Range of values is 1 to 4
  3696                           ; switch strategies available:
  3697                           ; Name         Instructions Cycles
  3698                           ; simple_byte           13     7 (average)
  3699                           ;	Chosen strategy is simple_byte
  3700  001A1C  5001               	movf	??_REV_btn^0,w,c
  3701  001A1E  0A01               	xorlw	1	; case 1
  3702  001A20  B4D8               	btfsc	status,2,c
  3703  001A22  EFD4  F00C         	goto	l1895
  3704  001A26  0A03               	xorlw	3	; case 2
  3705  001A28  B4D8               	btfsc	status,2,c
  3706  001A2A  EFE0  F00C         	goto	l1897
  3707  001A2E  0A01               	xorlw	1	; case 3
  3708  001A30  B4D8               	btfsc	status,2,c
  3709  001A32  EFEC  F00C         	goto	l1899
  3710  001A36  0A07               	xorlw	7	; case 4
  3711  001A38  B4D8               	btfsc	status,2,c
  3712  001A3A  EFF8  F00C         	goto	l1901
  3713  001A3E  EF21  F00D         	goto	l1907
  3714  001A42                     l1907:
  3715                           
  3716                           ;rev-basic.c: 132:     return btn_state;
  3717  001A42  5004               	movf	REV_btn@btn_state^0,w,c
  3718  001A44  0012               	return		;funcret
  3719  001A46                     __end_of_REV_btn:
  3720                           	opt callstack 0
  3721                           
  3722 ;; *************** function _LCD_ShowString *****************
  3723 ;; Defined at:
  3724 ;;		line 58 in file "lcd.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;  lineNum         1    wreg     unsigned char 
  3727 ;;  textData        2    1[COMRAM] PTR unsigned char 
  3728 ;;		 -> main@text(17), 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;  lineNum         1    3[COMRAM] unsigned char 
  3731 ;;  i               1    4[COMRAM] unsigned char 
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  1    wreg      void 
  3734 ;; Registers used:
  3735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3742 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3744 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3745 ;;Total ram usage:        4 bytes
  3746 ;; Hardware stack levels used:    1
  3747 ;; Hardware stack levels required when called:    1
  3748 ;; This function calls:
  3749 ;;		_LCD_Send
  3750 ;; This function is called by:
  3751 ;;		_main
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755                           	psect	text20
  3756  001D9C                     __ptext20:
  3757                           	opt callstack 0
  3758  001D9C                     _LCD_ShowString:
  3759                           	opt callstack 29
  3760                           
  3761                           ;incstack = 0
  3762                           ;LCD_ShowString@lineNum stored from wreg
  3763  001D9C  6E04               	movwf	LCD_ShowString@lineNum^0,c
  3764  001D9E                     
  3765                           ;lcd.c: 63:     SSP2CON2bits.SEN = 1;
  3766  001D9E  806B               	bsf	107,0,c	;volatile
  3767  001DA0                     l162:
  3768  001DA0  B06B               	btfsc	107,0,c	;volatile
  3769  001DA2  EFD5  F00E         	goto	u1511
  3770  001DA6  EFD7  F00E         	goto	u1510
  3771  001DAA                     u1511:
  3772  001DAA  EFD0  F00E         	goto	l162
  3773  001DAE                     u1510:
  3774  001DAE                     
  3775                           ;lcd.c: 65:     SSP2IF = 0;
  3776  001DAE  9EA4               	bcf	4004,7,c	;volatile
  3777  001DB0                     
  3778                           ;lcd.c: 67:     LCD_Send(0x7c);
  3779  001DB0  0E7C               	movlw	124
  3780  001DB2  ECA4  F010         	call	_LCD_Send
  3781                           
  3782                           ;lcd.c: 69:     LCD_Send(0x80);
  3783  001DB6  0E80               	movlw	128
  3784  001DB8  ECA4  F010         	call	_LCD_Send
  3785  001DBC                     
  3786                           ;lcd.c: 71:     if(lineNum == 1){
  3787  001DBC  0404               	decf	LCD_ShowString@lineNum^0,w,c
  3788  001DBE  A4D8               	btfss	status,2,c
  3789  001DC0  EFE4  F00E         	goto	u1521
  3790  001DC4  EFE6  F00E         	goto	u1520
  3791  001DC8                     u1521:
  3792  001DC8  EFEB  F00E         	goto	l1939
  3793  001DCC                     u1520:
  3794  001DCC                     
  3795                           ;lcd.c: 72:         LCD_Send(0x80);
  3796  001DCC  0E80               	movlw	128
  3797  001DCE  ECA4  F010         	call	_LCD_Send
  3798                           
  3799                           ;lcd.c: 73:     }
  3800  001DD2  EFF7  F00E         	goto	l166
  3801  001DD6                     l1939:
  3802  001DD6  0E02               	movlw	2
  3803  001DD8  1804               	xorwf	LCD_ShowString@lineNum^0,w,c
  3804  001DDA  A4D8               	btfss	status,2,c
  3805  001DDC  EFF2  F00E         	goto	u1531
  3806  001DE0  EFF4  F00E         	goto	u1530
  3807  001DE4                     u1531:
  3808  001DE4  EFF7  F00E         	goto	l166
  3809  001DE8                     u1530:
  3810  001DE8                     
  3811                           ;lcd.c: 75:         LCD_Send(0xC0);
  3812  001DE8  0EC0               	movlw	192
  3813  001DEA  ECA4  F010         	call	_LCD_Send
  3814  001DEE                     l166:
  3815                           
  3816                           ;lcd.c: 78:     LCD_Send(0x40);
  3817  001DEE  0E40               	movlw	64
  3818  001DF0  ECA4  F010         	call	_LCD_Send
  3819  001DF4                     
  3820                           ;lcd.c: 80:     for (i = 0; i<16; i++){
  3821  001DF4  0E00               	movlw	0
  3822  001DF6  6E05               	movwf	LCD_ShowString@i^0,c
  3823  001DF8                     l1949:
  3824                           
  3825                           ;lcd.c: 81:         LCD_Send(textData[i]);
  3826  001DF8  5005               	movf	LCD_ShowString@i^0,w,c
  3827  001DFA  2402               	addwf	LCD_ShowString@textData^0,w,c
  3828  001DFC  6ED9               	movwf	fsr2l,c
  3829  001DFE  0E00               	movlw	0
  3830  001E00  2003               	addwfc	(LCD_ShowString@textData+1)^0,w,c
  3831  001E02  6EDA               	movwf	fsr2h,c
  3832  001E04  50DF               	movf	indf2,w,c
  3833  001E06  ECA4  F010         	call	_LCD_Send
  3834  001E0A                     
  3835                           ;lcd.c: 82:     }
  3836  001E0A  2A05               	incf	LCD_ShowString@i^0,f,c
  3837  001E0C  0E0F               	movlw	15
  3838  001E0E  6405               	cpfsgt	LCD_ShowString@i^0,c
  3839  001E10  EF0C  F00F         	goto	u1541
  3840  001E14  EF0E  F00F         	goto	u1540
  3841  001E18                     u1541:
  3842  001E18  EFFC  F00E         	goto	l1949
  3843  001E1C                     u1540:
  3844  001E1C                     
  3845                           ;lcd.c: 84:     SSP2CON2bits.PEN = 1;
  3846  001E1C  846B               	bsf	107,2,c	;volatile
  3847  001E1E                     l170:
  3848  001E1E  B46B               	btfsc	107,2,c	;volatile
  3849  001E20  EF14  F00F         	goto	u1551
  3850  001E24  EF16  F00F         	goto	u1550
  3851  001E28                     u1551:
  3852  001E28  EF0F  F00F         	goto	l170
  3853  001E2C                     u1550:
  3854  001E2C  0012               	return		;funcret
  3855  001E2E                     __end_of_LCD_ShowString:
  3856                           	opt callstack 0
  3857                           
  3858 ;; *************** function _LCD_Clear *****************
  3859 ;; Defined at:
  3860 ;;		line 97 in file "lcd.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;		None
  3863 ;; Auto vars:     Size  Location     Type
  3864 ;;		None
  3865 ;; Return value:  Size  Location     Type
  3866 ;;                  1    wreg      void 
  3867 ;; Registers used:
  3868 ;;		wreg, cstack
  3869 ;; Tracked objects:
  3870 ;;		On entry : 0/0
  3871 ;;		On exit  : 0/0
  3872 ;;		Unchanged: 0/0
  3873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;Total ram usage:        0 bytes
  3879 ;; Hardware stack levels used:    1
  3880 ;; Hardware stack levels required when called:    1
  3881 ;; This function calls:
  3882 ;;		_LCD_Send
  3883 ;; This function is called by:
  3884 ;;		_main
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           	psect	text21
  3889  0020EA                     __ptext21:
  3890                           	opt callstack 0
  3891  0020EA                     _LCD_Clear:
  3892                           	opt callstack 29
  3893  0020EA                     
  3894                           ;lcd.c: 98:     SSP2CON2bits.SEN = 1;
  3895  0020EA  806B               	bsf	107,0,c	;volatile
  3896  0020EC                     l185:
  3897  0020EC  B06B               	btfsc	107,0,c	;volatile
  3898  0020EE  EF7B  F010         	goto	u1561
  3899  0020F2  EF7D  F010         	goto	u1560
  3900  0020F6                     u1561:
  3901  0020F6  EF76  F010         	goto	l185
  3902  0020FA                     u1560:
  3903  0020FA                     
  3904                           ;lcd.c: 100:     SSP2IF = 0;
  3905  0020FA  9EA4               	bcf	4004,7,c	;volatile
  3906  0020FC                     
  3907                           ;lcd.c: 102:     LCD_Send(0x7C);
  3908  0020FC  0E7C               	movlw	124
  3909  0020FE  ECA4  F010         	call	_LCD_Send
  3910                           
  3911                           ;lcd.c: 103:     LCD_Send(0x80);
  3912  002102  0E80               	movlw	128
  3913  002104  ECA4  F010         	call	_LCD_Send
  3914                           
  3915                           ;lcd.c: 104:     LCD_Send(0x01);
  3916  002108  0E01               	movlw	1
  3917  00210A  ECA4  F010         	call	_LCD_Send
  3918  00210E                     
  3919                           ;lcd.c: 106:     SSP2CON2bits.PEN = 1;
  3920  00210E  846B               	bsf	107,2,c	;volatile
  3921  002110                     l188:
  3922  002110  B46B               	btfsc	107,2,c	;volatile
  3923  002112  EF8D  F010         	goto	u1571
  3924  002116  EF8F  F010         	goto	u1570
  3925  00211A                     u1571:
  3926  00211A  EF88  F010         	goto	l188
  3927  00211E                     u1570:
  3928  00211E  0012               	return		;funcret
  3929  002120                     __end_of_LCD_Clear:
  3930                           	opt callstack 0
  3931                           
  3932 ;; *************** function _LCD_Send *****************
  3933 ;; Defined at:
  3934 ;;		line 88 in file "lcd.c"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;  data            1    wreg     unsigned char 
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;  data            1    0[COMRAM] unsigned char 
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  1    wreg      void 
  3941 ;; Registers used:
  3942 ;;		wreg
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3949 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3951 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3952 ;;Total ram usage:        1 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; This function calls:
  3955 ;;		Nothing
  3956 ;; This function is called by:
  3957 ;;		_LCD_Init
  3958 ;;		_LCD_ShowString
  3959 ;;		_LCD_Clear
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963                           	psect	text22
  3964  002148                     __ptext22:
  3965                           	opt callstack 0
  3966  002148                     _LCD_Send:
  3967                           	opt callstack 28
  3968                           
  3969                           ;incstack = 0
  3970                           ;LCD_Send@data stored from wreg
  3971  002148  6E01               	movwf	LCD_Send@data^0,c
  3972  00214A                     
  3973                           ;lcd.c: 90:     SSP2BUF = data;
  3974  00214A  C001  FF6F         	movff	LCD_Send@data,3951	;volatile
  3975  00214E                     l176:
  3976  00214E  B06D               	btfsc	109,0,c	;volatile
  3977  002150  EFAC  F010         	goto	u1231
  3978  002154  EFAE  F010         	goto	u1230
  3979  002158                     u1231:
  3980  002158  EFA7  F010         	goto	l176
  3981  00215C                     u1230:
  3982  00215C                     l179:
  3983  00215C  AEA4               	btfss	4004,7,c	;volatile
  3984  00215E  EFB3  F010         	goto	u1241
  3985  002162  EFB5  F010         	goto	u1240
  3986  002166                     u1241:
  3987  002166  EFAE  F010         	goto	l179
  3988  00216A                     u1240:
  3989  00216A                     
  3990                           ;lcd.c: 93:     SSP2IF = 0;
  3991  00216A  9EA4               	bcf	4004,7,c	;volatile
  3992  00216C  0012               	return		;funcret
  3993  00216E                     __end_of_LCD_Send:
  3994                           	opt callstack 0
  3995                           
  3996                           	psect	rparam
  3997  0000                     tosu	equ	0xFFF
  3998                           tosh	equ	0xFFE
  3999                           tosl	equ	0xFFD
  4000                           stkptr	equ	0xFFC
  4001                           pclatu	equ	0xFFB
  4002                           pclath	equ	0xFFA
  4003                           pcl	equ	0xFF9
  4004                           tblptru	equ	0xFF8
  4005                           tblptrh	equ	0xFF7
  4006                           tblptrl	equ	0xFF6
  4007                           tablat	equ	0xFF5
  4008                           prodh	equ	0xFF4
  4009                           prodl	equ	0xFF3
  4010                           indf0	equ	0xFEF
  4011                           postinc0	equ	0xFEE
  4012                           postdec0	equ	0xFED
  4013                           preinc0	equ	0xFEC
  4014                           plusw0	equ	0xFEB
  4015                           fsr0h	equ	0xFEA
  4016                           fsr0l	equ	0xFE9
  4017                           wreg	equ	0xFE8
  4018                           indf1	equ	0xFE7
  4019                           postinc1	equ	0xFE6
  4020                           postdec1	equ	0xFE5
  4021                           preinc1	equ	0xFE4
  4022                           plusw1	equ	0xFE3
  4023                           fsr1h	equ	0xFE2
  4024                           fsr1l	equ	0xFE1
  4025                           bsr	equ	0xFE0
  4026                           indf2	equ	0xFDF
  4027                           postinc2	equ	0xFDE
  4028                           postdec2	equ	0xFDD
  4029                           preinc2	equ	0xFDC
  4030                           plusw2	equ	0xFDB
  4031                           fsr2h	equ	0xFDA
  4032                           fsr2l	equ	0xFD9
  4033                           status	equ	0xFD8


Data Sizes:
    Strings     58
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     35      75
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[9]), STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> main@text(BANK0[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main@text(BANK0[17]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    S2066_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main@text(BANK0[17]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main@text(BANK0[17]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[9]), STR_3(CODE[15]), STR_2(CODE[17]), STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[9]), STR_3(CODE[15]), STR_2(CODE[17]), STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    LCD_ShowString@textData	PTR unsigned char  size(2) Largest target is 17
		 -> main@text(BANK0[17]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _main->_sprintf
    _sprintf->_vfprintf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___aomod
    _REV_led->_REV_btn
    _REV_init->_LCD_Init
    _LCD_Init->_LCD_Send
    _LCD_ShowString->_LCD_Send
    _LCD_Clear->_LCD_Send

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0   14963
                                             94 COMRAM     1     1      0
                                             10 BANK0     25    25      0
                          _LCD_Clear
                     _LCD_ShowString
                            _REV_btn
                           _REV_init
                            _REV_led
                            _REV_pot
                             ___lmul
                             _printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    7054
                                             88 COMRAM     6     0      6
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6    6529
                                             88 COMRAM     6     0      6
                                              0 BANK0      4     4      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6399
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5817
                                             64 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4402
                                             28 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2753
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1257
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     856
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _REV_pot                                              5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _REV_led                                              4     3      1     329
                                              4 COMRAM     4     3      1
                            _REV_btn (ARG)
 ---------------------------------------------------------------------------------
 (1) _REV_init                                             3     3      0      22
                           _LCD_Init
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             1     1      0      22
                                              1 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _REV_btn                                              4     4      0      74
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _LCD_ShowString                                       4     2      2     309
                                              1 COMRAM     4     2      2
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0      22
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Send
   _LCD_ShowString
     _LCD_Send
   _REV_btn
   _REV_init
     _LCD_Init
       _LCD_Send
   _REV_led
     _REV_btn (ARG)
   _REV_pot
   ___lmul
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     23      4B       5       46.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AA      12        0.0%
DATA                 0      0      AA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jan 31 14:39:38 2020

                     l71 1F7A                       l80 1E84                       l90 194E  
                     l76 1E82                       l86 192A                       l79 1EA8  
                     l88 1936                       l89 1942                       l99 1A44  
           REV_led@state 0005                      l111 1B30                      l103 1A62  
                    l105 1A78                      l106 1A8E                      l114 2186  
                    l107 1AA4                      l108 1ABA                      l109 1AD0  
                    l117 2198                      l153 1B5E                      l170 1E1E  
                    l162 1DA0                      l155 1B6C                      l411 1658  
                    l164 1DAE                      l156 1BEE                      l308 1F02  
                    l252 1D5E                      l260 10DC                      l181 216A  
                    l173 1E2C                      l309 1F12                      l182 216C  
                    l166 1DEE                      l254 1D9A                      l262 10E4  
                    l191 211E                      l159 1C0A                      l176 214E  
                    l424 1922                      l280 131C                      l185 20EC  
                    l169 1E1C                      l249 1D1C                      l179 215C  
                    l187 20FA                      l188 2110                      l293 1FD4  
                    l294 1FDC                      l287 14D0                      l972 20AA  
                    l975 20B2                      l987 1CD4                      l995 2072  
                    u900 1CE6                      u901 1CE2                      u830 2194  
                    u910 1D08                      u831 2190                      u911 1D04  
                    u840 1C1E                      u920 1D5E                      u841 1C1A  
                    u921 1D5A                      u850 1C30                      u930 1D6E  
                    u851 1C2C                      u931 1D6A                      u940 208E  
                    u860 1C58                      u941 208A                      u861 1C54  
                    u950 14E4                      u870 1C8E                      u951 14E0  
                    u871 1C8A                      u960 1516                      u880 2072  
                    u961 1512                      u881 206E                      u890 20DC  
                    u971 1540                      u891 20D8                      u980 1564  
                    u981 1560                      u990 158E                      u991 158A  
                    _abs 2074                      _pad 1CD6                      wreg 000FE8  
             _TXSTA1bits 000FAC                     l1002 202E                     l1015 20E8  
                   l1009 2146                     l2001 169E                     l2003 16B2  
                   l2011 1734                     ?_abs 0013                     l2021 1794  
                   l2013 1742                     l2005 16C2                     l2111 1AFA  
                   l2023 17A2                     l2015 1750                     l2007 16C6  
                   l2113 196E                     l2025 17B0                     l2017 176A  
                   l2009 1718                     l2115 1A1C                     l2027 17B4  
                   l2019 1778                     l2109 1E6C                     l1601 20C4  
                   l1603 20DC                     l1611 1CFA                     l1701 18BA  
                   l1621 1D40                     l1613 1D08                     l1703 18CC  
                   l1631 208E                     l1623 1D6E                     l1615 1D14  
                   l1607 1CD6                     l1641 1508                     l1633 14D2  
                   l1705 18D2                     l1625 1D82                     l1617 1D28  
                   l1609 1CE6                     l1721 10B4                     l1713 103C  
                   l1801 1474                     l1651 1564                     l1643 1516  
                   l1635 14D6                     l1707 18E2                     l1571 2186  
                   l1619 1D3C                     l1731 110C                     l1723 10B6  
                   l1715 105C                     l1811 149A                     l1901 19F0  
                   l1821 1B40                     l1661 15CE                     l1653 156C  
                   l1645 1536                     l1637 14E4                     l1709 1902  
                   l1629 2074                     l1573 2194                     l1581 1C3A  
                   l1741 11AA                     l1733 1112                     l1725 10D0  
                   l1717 1084                     l1813 14BE                     l1805 1480  
                   l1831 1BEC                     l1823 1B4C                     l1671 1618  
                   l1663 15EE                     l1655 1580                     l1647 153A  
                   l1639 1504                     l1583 1C58                     l1575 1C0C  
                   l1591 203C                     l1751 1252                     l1743 11B0  
                   l1735 111A                     l1727 10EC                     l1719 10A4  
                   l1807 148E                     l1905 1A08                     l1833 1BFC  
                   l1825 1B4E                     l1673 1638                     l1665 15F0  
                   l1657 158E                     l1649 1546                     l1681 17D2  
                   l1585 1C8E                     l1577 1C1E                     l1593 204E  
                   l1761 12B8                     l1753 126C                     l1745 11B6  
                   l1737 1122                     l1729 10FE                     l1841 1FB8  
                   l1931 1D9E                     l1907 1A42                     l1827 1B5C  
                   l1819 1B32                     l1851 1F62                     l1843 1F14  
                   l1923 1AE6                     l1667 1602                     l1659 15A0  
                   l1691 1842                     l1683 17F2                     l1579 1C30  
                   l1595 2052                     l1763 12BE                     l1771 12F4  
                   l1755 1286                     l1739 1128                     l1747 121A  
                   l1835 1F7C                     l1941 1DE8                     l1933 1DB0  
                   l1829 1B6E                     l1861 1F74                     l1853 1F6A  
                   l1845 1F56                     l1669 1608                     l1693 184A  
                   l1685 17F6                     l1677 17C0                     l1589 2030  
                   l1597 20B4                     l1765 12D0                     l1749 1234  
                   l1757 1296                     l1781 1350                     l1837 1F84  
                   l1775 214A                     l1951 1E0A                     l1943 1DF4  
                   l1935 1DBC                     l1863 1F76                     l1855 1F6C  
                   l1847 1F5A                     l1919 1A48                     l1871 1E4C  
                   l1695 185E                     l1687 1804                     l1679 17C4  
                   l1599 20C0                     l1767 12DC                     l1759 12A8  
                   l1791 13F6                     l1783 1362                     l1839 1F92  
                   l1953 1E0C                     l1937 1DCC                     l1929 1D9E  
                   l1857 1F70                     l1849 1F60                     l1865 1E30  
                   l1697 186C                     l1689 1824                     l1769 12E4  
                   l1785 1366                     l1777 131E                     l1961 1FDE  
                   l1955 20EA                     l1939 1DD6                     l1891 195A  
                   l1859 1F72                     l1867 1E34                     l1699 189A  
                   l1795 142E                     l1787 138A                     l1779 1342  
                   l1963 1FF0                     l1957 20FC                     l1949 1DF8  
                   l1893 1994                     l1869 1E40                     l1877 1E58  
                   l1981 1EBA                     l1797 1452                     l1789 13AE  
                   l1973 2120                     l1965 1FF8                     ?_pad 0012  
                   l1959 210E                     l1895 19A8                     l1887 1926  
                   l1879 1E92                     l1983 1EC8                     l1799 1460  
                   l1975 212A                     l1967 2000                     l1991 165E  
                   l1897 19C0                     l1985 1ED8                     l1969 201C  
                   l1993 1664                     l1899 19D8                     l1987 1EE2  
                   l1979 1EAA                     l1995 1668                     l1997 167C  
                   l1989 165A                     l1999 168A                     _ADON 007E10  
                   STR_1 1012                     STR_2 1001                     STR_3 1023  
                   STR_4 1032                     u1000 15CE                     u1001 15CA  
                   u1010 1618                     u1011 1614                     u1020 17D2  
                   u1100 1084                     u1021 17CE                     u1101 1080  
                   u1030 1804                     u1110 10B4                     u1031 1800  
                   u1111 10B0                     u1040 1842                     u1200 12A8  
                   u1120 10D0                     u1041 183E                     u1201 12A4  
                   u1121 10CC                     u1050 186C                     u1210 12B8  
                   u1130 10FE                     u1051 1868                     u1211 12B4  
                   u1131 10FA                     u1300 1BFC                     u1060 189A  
                   u1220 12D0                     u1140 110C                     u1301 1BF8  
                   u1061 1896                     u1221 12CC                     u1141 1108  
                   u1230 215C                     u1070 18E2                     u1150 1234  
                   u1310 1FD4                     u1231 2158                     u1071 18DE  
                   u1151 1230                     u1311 1FD0                     u1240 216A  
                   u1320 1E92                     u1160 1252                     u1080 106C  
                   u1241 2166                     u1321 1E8E                     u1161 124E  
                   u1081 1066                     u1330 19B8                     u1410 1A88  
                   u1170 126C                     u1090 106E                     u1250 1342  
                   u1331 19B2                     u1411 1A82                     u1171 1268  
                   u1251 133E                     u1340 19D0                     u1180 1286  
                   u1260 138A                     u1341 19CA                     u1405 1A74  
                   u1181 1282                     u1261 1386                     u1510 1DAE  
                   u1350 19E8                     u1430 1A9E                     u1190 1296  
                   u1270 13AE                     u1511 1DAA                     u1351 19E2  
                   u1431 1A98                     u1191 1292                     u1271 13AA  
                   u1520 1DCC                     u1360 1A00                     u1336 19BA  
                   u1280 1452                     u1600 16B2                     u1521 1DC8  
                   u1361 19FA                     u1505 1AE2                     u1425 1A8A  
                   u1281 144E                     u1601 16AE                     u1530 1DE8  
                   u1346 19D2                     u1290 1B6C                     u1450 1AB4  
                   u1370 1A5A                     u1610 16C2                     u1531 1DE4  
                   u1291 1B68                     u1451 1AAE                     u1371 1A54  
                   u1611 16BE                     u1540 1E1C                     u1356 19EA  
                   u1380 1A5C                     u1541 1E18                     u1445 1AA0  
                   u1550 1E2C                     u1366 1A02                     u1470 1ACA  
                   u1390 1A72                     u1630 17B0                     u1551 1E28  
                   u1471 1AC4                     u1391 1A6C                     u1631 17AC  
                   u1560 20FA                     u1561 20F6                     u1465 1AB6  
                   u1625 16EE                     u1570 211E                     u1490 1AE0  
                   u1626 16F8                     u1571 211A                     u1491 1ADA  
                   u1627 1708                     u1580 1EC8                     u1485 1ACC  
                   u1581 1EC4                     u1590 1F02                     u1647 1B54  
                   u1591 1EFE                     u1657 1C02                     u1667 199A  
                   abs@a 0013                     _dbuf 0068                     _main 165A  
                   _dtoa 103C          __end_of_REV_btn 1A46          __end_of_REV_led 1B32  
     __size_of_LCD_Clear 0036                     _prec 0064          __end_of_REV_pot 1EAA  
                   _nout 0060                     pad@i 0019                     pad@p 0016  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 001B                     fsr2l 000FD9  
                   start 0000             ___param_bank 000000           _LCD_ShowString 1D9C  
                  ??_abs 0015                    ??_pad 0018         __end_of_LCD_Init 1C0C  
       __end_of_LCD_Send 216E          __end_of___aodiv 165A                    ?_main 0001  
                  ?_dtoa 001D          __end_of___aomod 1924                    _LATD2 007C62  
                  _LATC4 007C5C                    _LATD3 007C63                    _LATD4 007C64  
                  _RC1IF 007CF5                    _LATD5 007C65                    _LATD6 007C66  
           vfpfcnvrt@fmt 0043                    _TX1IF 007CF4      ___lmul@multiplicand 0005  
                  _flags 0066                    _fputc 1C0C                    _fputs 2030  
       __end_of_REV_init 1F7C                    pad@fp 0012                    _width 0062  
                  _putch 2184                    dtoa@d 001F                    dtoa@i 003F  
                  dtoa@n 0037                    dtoa@p 0031                    dtoa@s 0035  
                  dtoa@w 0033                    tablat 000FF5                    status 000FD8  
        __end_of_sprintf 2030           __CFG_FOSC$HSMP 000000            REV_pot@adc_id 0005  
        __initialization 216E   __end_of_LCD_ShowString 1E2E             __end_of_main 17C0  
           __end_of_dtoa 131E             LCD_Send@data 0001                   ??_main 005F  
                 ??_dtoa 0027        __end_of_LCD_Clear 2120            __activetblptr 000002  
         __CFG_PLLCFG$ON 000000                   _ADCON1 000FC1                   _ADCON2 000FC0  
              ??_REV_led 0006                ??_REV_btn 0001                   ?_fputc 0002  
                 ?_fputs 000B                   _ADRESH 000FC4                   _ADRESL 000FC3  
              ??_REV_pot 0003                   ?_putch 0001                   _GODONE 007E11  
         __CFG_WDTEN$OFF 000000                   _RCREG1 000FAE                   _SPBRG1 000FAF  
                 _SSP2IF 007D27                   _TXREG1 000FAD             vfprintf@cfmt 0057  
        ?_LCD_ShowString 0002                   ___lmul 1EAA                ??___aodiv 0011  
              ??___aomod 0011                   clear_0 2174                   _printf 2120  
                 pad@buf 0014                   dtoa@fp 001D                   _strlen 20B4  
       REV_btn@btn_state 0004                   fputc@c 0002                   fputs@c 000F  
                 fputs@i 0010                   fputs@s 000B             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
                 putch@c 0001         __end_of_vfprintf 1FDE                ??_sprintf 005F  
             __accesstop 0060  __end_of__initialization 217A                ?_LCD_Init 0001  
              ?_LCD_Send 0001            ___rparam_used 000001           __pcstackCOMRAM 0001  
          __end_of_fputc 1CD6            __end_of_fputs 2074            __end_of_putch 219A  
              ?_REV_init 0001                  ??_fputc 0006                  ??_fputs 000F  
                ??_putch 0001               __pbssBANK0 0060               ??_LCD_Init 0002  
             ??_LCD_Send 0001                  ?___lmul 0001               ??_REV_init 0003  
         ___lmul@product 0009                  ?_printf 0059                  ?_strlen 0001  
     __size_of_vfpfcnvrt 01B4                  _SSP2ADD 000F6E                  _SSP2BUF 000F6F  
                _REV_led 1A46                  _REV_btn 1924                  _REV_pot 1E2E  
              REV_led@id 0008                REV_btn@id 0003          LCD_ShowString@i 0005  
                __Hparam 0000                  __Lparam 0000                  ___aodiv 14D2  
                ___aomod 17C0          __size_of___lmul 006A                ?_vfprintf 0051  
           __psmallconst 1000                  __pcinit 216E                  __ramtop 1000  
                __ptext0 165A                  __ptext1 1FDE                  __ptext2 2120  
                __ptext3 1F7C                  __ptext4 131E                  __ptext5 103C  
                __ptext6 1CD6                  __ptext7 20B4                  __ptext8 2030  
                __ptext9 1C0C          __size_of_printf 0028          __size_of_strlen 0036  
           __size_of_abs 0040             __size_of_pad 00C6                _LCD_Clear 20EA  
                _sprintf 1FDE     end_of_initialization 217A                  fputc@fp 0004  
          __Lmediumconst 0000                  fputs@fp 000D         ??_LCD_ShowString 0004  
  LCD_ShowString@lineNum 0004        __end_of_vfpfcnvrt 14D2                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 0057                  strlen@a 0003                  strlen@s 0001  
              _PORTAbits 000F80                _PORTCbits 000F82                _TRISAbits 000F92  
              _TRISCbits 000F94                _TRISDbits 000F95                _TRISEbits 000F96  
             ?_LCD_Clear 0001        __size_of_LCD_Init 00DA        __size_of_LCD_Send 0026  
         __end_of___lmul 1F14              vfpfcnvrt@ap 0045              vfpfcnvrt@fp 0041  
            vfpfcnvrt@ll 0049        __size_of_REV_init 0068           __end_of_printf 2148  
         __end_of_strlen 20EA      start_initialization 216E              __end_of_abs 20B4  
            __end_of_pad 1D9C              vfprintf@fmt 0053                 ??___lmul 0009  
               ??_printf 005F                 ??_strlen 0003            __pcstackBANK0 0088  
       ___aodiv@dividend 0001              ??_LCD_Clear 0002                 ?_REV_led 0005  
               ?_REV_btn 0001                 ?_REV_pot 0001                _dtoa$1605 002F  
               ?___aodiv 0001                 ?___aomod 0001         ___aodiv@quotient 0013  
       __CFG_PRICLKEN$ON 000000        __size_of_vfprintf 0062              __smallconst 1000  
               ?_sprintf 0059           __size_of_fputc 00CA           __size_of_fputs 0044  
         __size_of_putch 0016                 _LCD_Init 1B32                 _LCD_Send 2148  
               _LATAbits 000F89                 _LATCbits 000F8B                 _LATDbits 000F8C  
               _REV_init 1F14                _vfpfcnvrt 131E               _ADCON0bits 000FC2  
             _ADCON2bits 000FC0                main@count 00A6        ___lmul@multiplier 0001  
       __size_of_REV_btn 0122         __size_of_REV_led 00EC         __size_of_REV_pot 007C  
               __Hrparam 0000               vfprintf@ap 0055                 __Lrparam 0000  
             vfprintf@fp 0051         __size_of___aodiv 0188         __size_of___aomod 0164  
             ?_vfpfcnvrt 0041          ___aodiv@divisor 0009          ___aodiv@counter 0011  
             _ANSELAbits 000F38               _ANSELCbits 000F3A               _ANSELDbits 000F3B  
             sprintf@fmt 005B                 __ptext10 2184                 __ptext11 2074  
               __ptext20 1D9C                 __ptext12 17C0                 __ptext21 20EA  
               __ptext13 14D2                 __ptext22 2148                 __ptext14 1EAA  
               __ptext15 1E2E                 __ptext16 1A46                 __ptext17 1F14  
               __ptext18 1B32                 __ptext19 1924             _SSP2CON1bits 000F6C  
           _SSP2CON2bits 000F6B         __size_of_sprintf 0052            __size_of_main 0166  
          __size_of_dtoa 02E2                 _vfprintf 1F7C  __size_of_LCD_ShowString 0092  
              printf@fmt 0059                 main@flag 00A5                 main@pot1 00A7  
               main@pot2 00A3                 main@text 0092             _SSP2STATbits 000F6D  
       ___aomod@dividend 0001                sprintf@ap 008A               _RCSTA1bits 000FAB  
               printf@ap 008A          ___aomod@divisor 0009              ??_vfpfcnvrt 0047  
        ___aomod@counter 0011   LCD_ShowString@textData 0002                 sprintf@f 008C  
               sprintf@s 0059             ___aodiv@sign 0012             ___aomod@sign 0012  
