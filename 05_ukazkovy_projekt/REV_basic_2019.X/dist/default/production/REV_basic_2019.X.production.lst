

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jan 22 10:21:02 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27  0000                     
    28                           ; Version 2.10
    29                           ; Generated 31/07/2019 GMT
    30                           ; 
    31                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F46K22 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     
    63                           	psect	smallconst
    64  001000                     __psmallconst:
    65                           	opt callstack 0
    66  001000  00                 	db	0
    67  001001                     _dpowers:
    68                           	opt callstack 0
    69  001001  0001               	dw	1
    70  001003  000A               	dw	10
    71  001005  0064               	dw	100
    72  001007  03E8               	dw	1000
    73  001009  2710               	dw	10000
    74  00100B                     __end_of_dpowers:
    75                           	opt callstack 0
    76  0000                     _ANSELAbits	set	3896
    77  0000                     _ANSELCbits	set	3898
    78  0000                     _ANSELDbits	set	3899
    79  0000                     _SSP2STATbits	set	3949
    80  0000                     _SSP2BUF	set	3951
    81  0000                     _SSP2CON2bits	set	3947
    82  0000                     _SSP2ADD	set	3950
    83  0000                     _SSP2CON1bits	set	3948
    84  0000                     _LATAbits	set	3977
    85  0000                     _RCREG1	set	4014
    86  0000                     _TXREG1	set	4013
    87  0000                     _PORTAbits	set	3968
    88  0000                     _PORTCbits	set	3970
    89  0000                     _ADRESL	set	4035
    90  0000                     _ADRESH	set	4036
    91  0000                     _RCSTA1bits	set	4011
    92  0000                     _TXSTA1bits	set	4012
    93  0000                     _SPBRG1	set	4015
    94  0000                     _ADCON0bits	set	4034
    95  0000                     _ADCON2bits	set	4032
    96  0000                     _ADCON2	set	4032
    97  0000                     _ADCON1	set	4033
    98  0000                     _TRISEbits	set	3990
    99  0000                     _TRISAbits	set	3986
   100  0000                     _LATCbits	set	3979
   101  0000                     _LATDbits	set	3980
   102  0000                     _TRISCbits	set	3988
   103  0000                     _TRISDbits	set	3989
   104  0000                     _SSP2IF	set	32039
   105  0000                     _RC1IF	set	31989
   106  0000                     _TX1IF	set	31988
   107  0000                     _LATD6	set	31846
   108  0000                     _LATD5	set	31845
   109  0000                     _LATD4	set	31844
   110  0000                     _LATC4	set	31836
   111  0000                     _LATD3	set	31843
   112  0000                     _LATD2	set	31842
   113  0000                     _GODONE	set	32273
   114  0000                     _ADON	set	32272
   115  00100B                     STR_2:
   116  00100B  20                 	db	32
   117  00100C  20                 	db	32
   118  00100D  20                 	db	32
   119  00100E  20                 	db	32
   120  00100F  20                 	db	32
   121  001010  20                 	db	32
   122  001011  20                 	db	32
   123  001012  20                 	db	32
   124  001013  20                 	db	32
   125  001014  20                 	db	32
   126  001015  20                 	db	32
   127  001016  20                 	db	32
   128  001017  20                 	db	32
   129  001018  20                 	db	32
   130  001019  20                 	db	32
   131  00101A  20                 	db	32
   132  00101B  00                 	db	0
   133  00101C                     STR_1:
   134  00101C  4D                 	db	77	;'M'
   135  00101D  65                 	db	101	;'e'
   136  00101E  63                 	db	99	;'c'
   137  00101F  68                 	db	104	;'h'
   138  001020  6C                 	db	108	;'l'
   139  001021  61                 	db	97	;'a'
   140  001022  62                 	db	98	;'b'
   141  001023  20                 	db	32
   142  001024  6A                 	db	106	;'j'
   143  001025  65                 	db	101	;'e'
   144  001026  20                 	db	32
   145  001027  62                 	db	98	;'b'
   146  001028  6F                 	db	111	;'o'
   147  001029  7A                 	db	122	;'z'
   148  00102A  69                 	db	105	;'i'
   149  00102B  21                 	db	33
   150  00102C  00                 	db	0
   151  00102D                     STR_3:
   152  00102D  50                 	db	80	;'P'
   153  00102E  6F                 	db	111	;'o'
   154  00102F  74                 	db	116	;'t'
   155  001030  31                 	db	49	;'1'
   156  001031  3A                 	db	58	;':'
   157  001032  20                 	db	32
   158  001033  25                 	db	37
   159  001034  64                 	db	100	;'d'
   160  001035  20                 	db	32
   161  001036  5B                 	db	91	;'['
   162  001037  6D                 	db	109	;'m'
   163  001038  56                 	db	86	;'V'
   164  001039  5D                 	db	93	;']'
   165  00103A  0A                 	db	10
   166  00103B  00                 	db	0
   167  00103C                     STR_4:
   168  00103C  50                 	db	80	;'P'
   169  00103D  6F                 	db	111	;'o'
   170  00103E  74                 	db	116	;'t'
   171  00103F  32                 	db	50	;'2'
   172  001040  3A                 	db	58	;':'
   173  001041  20                 	db	32
   174  001042  25                 	db	37
   175  001043  64                 	db	100	;'d'
   176  001044  00                 	db	0
   177                           
   178                           ; #config settings
   179  001045  00                 	db	0	; dummy byte at the end
   180  0000                     
   181                           	psect	cinit
   182  001AD0                     __pcinit:
   183                           	opt callstack 0
   184  001AD0                     start_initialization:
   185                           	opt callstack 0
   186  001AD0                     __initialization:
   187                           	opt callstack 0
   188  001AD0                     end_of_initialization:
   189                           	opt callstack 0
   190  001AD0                     __end_of__initialization:
   191                           	opt callstack 0
   192  001AD0  0100               	movlb	0
   193  001AD2  EF9C  F009         	goto	_main	;jump to C main() function
   194                           
   195                           	psect	cstackCOMRAM
   196  000001                     __pcstackCOMRAM:
   197                           	opt callstack 0
   198  000001                     ??_REV_btn:
   199  000001                     ?_REV_pot:
   200                           	opt callstack 0
   201  000001                     ?___lwdiv:
   202                           	opt callstack 0
   203  000001                     ?___lmul:
   204                           	opt callstack 0
   205  000001                     putch@c:
   206                           	opt callstack 0
   207  000001                     LCD_Send@data:
   208                           	opt callstack 0
   209  000001                     ___lwdiv@dividend:
   210                           	opt callstack 0
   211  000001                     ___lmul@multiplier:
   212                           	opt callstack 0
   213                           
   214                           ; 4 bytes @ 0x0
   215  000001                     	ds	1
   216  000002                     ??_LCD_Init:
   217  000002                     REV_btn@id:
   218                           	opt callstack 0
   219  000002                     LCD_ShowString@textData:
   220                           	opt callstack 0
   221                           
   222                           ; 2 bytes @ 0x1
   223  000002                     	ds	1
   224  000003                     ??_REV_pot:
   225  000003                     REV_btn@btn_state:
   226                           	opt callstack 0
   227  000003                     ___lwdiv@divisor:
   228                           	opt callstack 0
   229                           
   230                           ; 2 bytes @ 0x2
   231  000003                     	ds	1
   232  000004                     REV_led@state:
   233                           	opt callstack 0
   234  000004                     LCD_ShowString@lineNum:
   235                           	opt callstack 0
   236                           
   237                           ; 1 bytes @ 0x3
   238  000004                     	ds	1
   239  000005                     REV_pot@adc_id:
   240                           	opt callstack 0
   241  000005                     REV_led@id:
   242                           	opt callstack 0
   243  000005                     LCD_ShowString@i:
   244                           	opt callstack 0
   245  000005                     ___lwdiv@quotient:
   246                           	opt callstack 0
   247  000005                     ___lmul@multiplicand:
   248                           	opt callstack 0
   249                           
   250                           ; 4 bytes @ 0x4
   251  000005                     	ds	2
   252  000007                     ___lwdiv@counter:
   253                           	opt callstack 0
   254                           
   255                           ; 1 bytes @ 0x6
   256  000007                     	ds	1
   257  000008                     ?___lwmod:
   258                           	opt callstack 0
   259  000008                     ___lwmod@dividend:
   260                           	opt callstack 0
   261                           
   262                           ; 2 bytes @ 0x7
   263  000008                     	ds	1
   264  000009                     ___lmul@product:
   265                           	opt callstack 0
   266                           
   267                           ; 4 bytes @ 0x8
   268  000009                     	ds	1
   269  00000A                     ___lwmod@divisor:
   270                           	opt callstack 0
   271                           
   272                           ; 2 bytes @ 0x9
   273  00000A                     	ds	2
   274  00000C                     ___lwmod@counter:
   275                           	opt callstack 0
   276                           
   277                           ; 1 bytes @ 0xB
   278  00000C                     	ds	1
   279  00000D                     ?__doprnt:
   280                           	opt callstack 0
   281  00000D                     __doprnt@pb:
   282                           	opt callstack 0
   283                           
   284                           ; 2 bytes @ 0xC
   285  00000D                     	ds	2
   286  00000F                     __doprnt@f:
   287                           	opt callstack 0
   288                           
   289                           ; 2 bytes @ 0xE
   290  00000F                     	ds	2
   291  000011                     __doprnt@ap:
   292                           	opt callstack 0
   293                           
   294                           ; 2 bytes @ 0x10
   295  000011                     	ds	2
   296  000013                     ??__doprnt:
   297                           
   298                           ; 1 bytes @ 0x12
   299  000013                     	ds	2
   300  000015                     __doprnt@flag:
   301                           	opt callstack 0
   302                           
   303                           ; 1 bytes @ 0x14
   304  000015                     	ds	1
   305  000016                     __doprnt@prec:
   306                           	opt callstack 0
   307                           
   308                           ; 1 bytes @ 0x15
   309  000016                     	ds	1
   310  000017                     __doprnt@val:
   311                           	opt callstack 0
   312                           
   313                           ; 2 bytes @ 0x16
   314  000017                     	ds	2
   315  000019                     __doprnt@c:
   316                           	opt callstack 0
   317                           
   318                           ; 1 bytes @ 0x18
   319  000019                     	ds	1
   320  00001A                     ?_sprintf:
   321                           	opt callstack 0
   322  00001A                     ?_printf:
   323                           	opt callstack 0
   324  00001A                     printf@f:
   325                           	opt callstack 0
   326  00001A                     sprintf@wh:
   327                           	opt callstack 0
   328                           
   329                           ; 2 bytes @ 0x19
   330  00001A                     	ds	2
   331  00001C                     sprintf@f:
   332                           	opt callstack 0
   333                           
   334                           ; 2 bytes @ 0x1B
   335  00001C                     	ds	4
   336  000020                     printf@ap:
   337                           	opt callstack 0
   338  000020                     sprintf@ap:
   339                           	opt callstack 0
   340                           
   341                           ; 2 bytes @ 0x1F
   342  000020                     	ds	2
   343  000022                     printf@pb:
   344                           	opt callstack 0
   345  000022                     sprintf@pb:
   346                           	opt callstack 0
   347                           
   348                           ; 4 bytes @ 0x21
   349  000022                     	ds	4
   350  000026                     ??_main:
   351                           
   352                           ; 1 bytes @ 0x25
   353  000026                     	ds	1
   354  000027                     main@text:
   355                           	opt callstack 0
   356                           
   357                           ; 17 bytes @ 0x26
   358  000027                     	ds	17
   359  000038                     main@pot2:
   360                           	opt callstack 0
   361                           
   362                           ; 2 bytes @ 0x37
   363  000038                     	ds	2
   364  00003A                     main@flag:
   365                           	opt callstack 0
   366                           
   367                           ; 1 bytes @ 0x39
   368  00003A                     	ds	1
   369  00003B                     main@count:
   370                           	opt callstack 0
   371                           
   372                           ; 1 bytes @ 0x3A
   373  00003B                     	ds	1
   374  00003C                     main@pot1:
   375                           	opt callstack 0
   376                           
   377                           ; 4 bytes @ 0x3B
   378  00003C                     	ds	4
   379                           
   380 ;;
   381 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   382 ;;
   383 ;; *************** function _main *****************
   384 ;; Defined at:
   385 ;;		line 16 in file "main_advanced.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;		None
   388 ;; Auto vars:     Size  Location     Type
   389 ;;  text           17   38[COMRAM] unsigned char [17]
   390 ;;  pot1            4   59[COMRAM] long 
   391 ;;  pot2            2   55[COMRAM] int 
   392 ;;  count           1   58[COMRAM] unsigned char 
   393 ;;  flag            1   57[COMRAM] unsigned char 
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   404 ;;      Locals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   405 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   406 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   407 ;;Total ram usage:       26 bytes
   408 ;; Hardware stack levels required when called:    3
   409 ;; This function calls:
   410 ;;		_LCD_Clear
   411 ;;		_LCD_ShowString
   412 ;;		_REV_btn
   413 ;;		_REV_init
   414 ;;		_REV_led
   415 ;;		_REV_pot
   416 ;;		___lmul
   417 ;;		_printf
   418 ;;		_sprintf
   419 ;; This function is called by:
   420 ;;		Startup code after reset
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           	psect	text0
   425  001338                     __ptext0:
   426                           	opt callstack 0
   427  001338                     _main:
   428                           	opt callstack 28
   429  001338                     
   430                           ;main_advanced.c: 18: REV_init();
   431  001338  EC8D  F00C         	call	_REV_init	;wreg free
   432  00133C                     
   433                           ;main_advanced.c: 19: bool flag = 1;
   434  00133C  0E01               	movlw	1
   435  00133E  6E3A               	movwf	main@flag^0,c
   436  001340                     
   437                           ;main_advanced.c: 20: char count = 0;
   438  001340  0E00               	movlw	0
   439  001342  6E3B               	movwf	main@count^0,c
   440  001344                     
   441                           ;main_advanced.c: 21: char text[17];;main_advanced.c: 22: int32_t pot1;;main_advanced.c:
      +                           23: int16_t pot2;;main_advanced.c: 26: sprintf(text,"Mechlab je bozi!");
   442  001344  0E27               	movlw	low main@text
   443  001346  6E1A               	movwf	sprintf@wh^0,c
   444  001348  0E00               	movlw	high main@text
   445  00134A  6E1B               	movwf	(sprintf@wh+1)^0,c
   446  00134C  0E1C               	movlw	low STR_1
   447  00134E  6E1C               	movwf	sprintf@f^0,c
   448  001350  0E10               	movlw	high STR_1
   449  001352  6E1D               	movwf	(sprintf@f+1)^0,c
   450  001354  ECF3  F00C         	call	_sprintf	;wreg free
   451  001358                     
   452                           ;main_advanced.c: 27: LCD_ShowString(1,text);
   453  001358  0E27               	movlw	low main@text
   454  00135A  6E02               	movwf	LCD_ShowString@textData^0,c
   455  00135C  0E00               	movlw	high main@text
   456  00135E  6E03               	movwf	(LCD_ShowString@textData+1)^0,c
   457  001360  0E01               	movlw	1
   458  001362  ECA1  F00B         	call	_LCD_ShowString
   459  001366                     
   460                           ;main_advanced.c: 28: sprintf(text,"                ");
   461  001366  0E27               	movlw	low main@text
   462  001368  6E1A               	movwf	sprintf@wh^0,c
   463  00136A  0E00               	movlw	high main@text
   464  00136C  6E1B               	movwf	(sprintf@wh+1)^0,c
   465  00136E  0E0B               	movlw	low STR_2
   466  001370  6E1C               	movwf	sprintf@f^0,c
   467  001372  0E10               	movlw	high STR_2
   468  001374  6E1D               	movwf	(sprintf@f+1)^0,c
   469  001376  ECF3  F00C         	call	_sprintf	;wreg free
   470  00137A                     l1530:
   471                           
   472                           ;main_advanced.c: 33: if (count == 100 && flag){
   473  00137A  0E64               	movlw	100
   474  00137C  183B               	xorwf	main@count^0,w,c
   475  00137E  A4D8               	btfss	status,2,c
   476  001380  EFC4  F009         	goto	u991
   477  001384  EFC6  F009         	goto	u990
   478  001388                     u991:
   479  001388  EF07  F00A         	goto	l1540
   480  00138C                     u990:
   481  00138C  503A               	movf	main@flag^0,w,c
   482  00138E  B4D8               	btfsc	status,2,c
   483  001390  EFCC  F009         	goto	u1001
   484  001394  EFCE  F009         	goto	u1000
   485  001398                     u1001:
   486  001398  EF07  F00A         	goto	l1540
   487  00139C                     u1000:
   488  00139C                     
   489                           ;main_advanced.c: 34: count = 0;
   490  00139C  0E00               	movlw	0
   491  00139E  6E3B               	movwf	main@count^0,c
   492  0013A0                     
   493                           ;main_advanced.c: 35: pot1 = (3300*pot1)>>10;
   494  0013A0  0E0A               	movlw	10
   495  0013A2  6E26               	movwf	??_main^0,c
   496  0013A4  C03C  F001         	movff	main@pot1,___lmul@multiplier
   497  0013A8  C03D  F002         	movff	main@pot1+1,___lmul@multiplier+1
   498  0013AC  C03E  F003         	movff	main@pot1+2,___lmul@multiplier+2
   499  0013B0  C03F  F004         	movff	main@pot1+3,___lmul@multiplier+3
   500  0013B4  0EE4               	movlw	228
   501  0013B6  6E05               	movwf	___lmul@multiplicand^0,c
   502  0013B8  0E0C               	movlw	12
   503  0013BA  6E06               	movwf	(___lmul@multiplicand+1)^0,c
   504  0013BC  0E00               	movlw	0
   505  0013BE  6E07               	movwf	(___lmul@multiplicand+2)^0,c
   506  0013C0  0E00               	movlw	0
   507  0013C2  6E08               	movwf	(___lmul@multiplicand+3)^0,c
   508  0013C4  EC24  F00C         	call	___lmul	;wreg free
   509  0013C8                     u1015:
   510  0013C8  6626               	tstfsz	??_main^0,c
   511  0013CA  EFE9  F009         	goto	u1016
   512  0013CE  EFF1  F009         	goto	u1017
   513  0013D2                     u1016:
   514  0013D2  3404               	rlcf	(?___lmul+3)^0,w,c
   515  0013D4  3204               	rrcf	(?___lmul+3)^0,f,c
   516  0013D6  3203               	rrcf	(?___lmul+2)^0,f,c
   517  0013D8  3202               	rrcf	(?___lmul+1)^0,f,c
   518  0013DA  3201               	rrcf	?___lmul^0,f,c
   519  0013DC  2E26               	decfsz	??_main^0,f,c
   520  0013DE  EFE4  F009         	goto	u1015
   521  0013E2                     u1017:
   522  0013E2  C001  F03C         	movff	?___lmul,main@pot1
   523  0013E6  C002  F03D         	movff	?___lmul+1,main@pot1+1
   524  0013EA  C003  F03E         	movff	?___lmul+2,main@pot1+2
   525  0013EE  C004  F03F         	movff	?___lmul+3,main@pot1+3
   526  0013F2                     
   527                           ;main_advanced.c: 36: printf("Pot1: %d [mV]\n", pot1);
   528  0013F2  0E2D               	movlw	low STR_3
   529  0013F4  6E1A               	movwf	printf@f^0,c
   530  0013F6  0E10               	movlw	high STR_3
   531  0013F8  6E1B               	movwf	(printf@f+1)^0,c
   532  0013FA  C03C  F01C         	movff	main@pot1,?_printf+2
   533  0013FE  C03D  F01D         	movff	main@pot1+1,?_printf+3
   534  001402  C03E  F01E         	movff	main@pot1+2,?_printf+4
   535  001406  C03F  F01F         	movff	main@pot1+3,?_printf+5
   536  00140A  EC14  F00D         	call	_printf	;wreg free
   537  00140E                     l1540:
   538                           
   539                           ;main_advanced.c: 37: };main_advanced.c: 39: REV_led(2,REV_btn(1));
   540  00140E  0E01               	movlw	1
   541  001410  EC4B  F00A         	call	_REV_btn
   542  001414  6E04               	movwf	REV_led@state^0,c
   543  001416  0E02               	movlw	2
   544  001418  EC35  F00B         	call	_REV_led
   545  00141C                     
   546                           ;main_advanced.c: 40: REV_led(3,REV_btn(2));
   547  00141C  0E02               	movlw	2
   548  00141E  EC4B  F00A         	call	_REV_btn
   549  001422  6E04               	movwf	REV_led@state^0,c
   550  001424  0E03               	movlw	3
   551  001426  EC35  F00B         	call	_REV_led
   552  00142A                     
   553                           ;main_advanced.c: 42: pot1 = REV_pot(1);
   554  00142A  0E01               	movlw	1
   555  00142C  EC59  F00C         	call	_REV_pot
   556  001430  C001  F03C         	movff	?_REV_pot,main@pot1
   557  001434  C002  F03D         	movff	?_REV_pot+1,main@pot1+1
   558  001438  0E00               	movlw	0
   559  00143A  BE3D               	btfsc	(main@pot1+1)^0,7,c
   560  00143C  0EFF               	movlw	-1
   561  00143E  6E3E               	movwf	(main@pot1+2)^0,c
   562  001440  6E3F               	movwf	(main@pot1+3)^0,c
   563  001442                     
   564                           ;main_advanced.c: 43: pot2 = REV_pot(2);
   565  001442  0E02               	movlw	2
   566  001444  EC59  F00C         	call	_REV_pot
   567  001448  C001  F038         	movff	?_REV_pot,main@pot2
   568  00144C  C002  F039         	movff	?_REV_pot+1,main@pot2+1
   569  001450                     
   570                           ;main_advanced.c: 45: sprintf(text,"Pot2: %d",pot2);
   571  001450  0E27               	movlw	low main@text
   572  001452  6E1A               	movwf	sprintf@wh^0,c
   573  001454  0E00               	movlw	high main@text
   574  001456  6E1B               	movwf	(sprintf@wh+1)^0,c
   575  001458  0E3C               	movlw	low STR_4
   576  00145A  6E1C               	movwf	sprintf@f^0,c
   577  00145C  0E10               	movlw	high STR_4
   578  00145E  6E1D               	movwf	(sprintf@f+1)^0,c
   579  001460  C038  F01E         	movff	main@pot2,?_sprintf+4
   580  001464  C039  F01F         	movff	main@pot2+1,?_sprintf+5
   581  001468  ECF3  F00C         	call	_sprintf	;wreg free
   582  00146C                     
   583                           ;main_advanced.c: 46: LCD_ShowString(2,text);
   584  00146C  0E27               	movlw	low main@text
   585  00146E  6E02               	movwf	LCD_ShowString@textData^0,c
   586  001470  0E00               	movlw	high main@text
   587  001472  6E03               	movwf	(LCD_ShowString@textData+1)^0,c
   588  001474  0E02               	movlw	2
   589  001476  ECA1  F00B         	call	_LCD_ShowString
   590  00147A                     
   591                           ;main_advanced.c: 48: if (PORTAbits.RA3){
   592  00147A  A680               	btfss	128,3,c	;volatile
   593  00147C  EF42  F00A         	goto	u1021
   594  001480  EF44  F00A         	goto	u1020
   595  001484                     u1021:
   596  001484  EF46  F00A         	goto	l1556
   597  001488                     u1020:
   598  001488                     
   599                           ;main_advanced.c: 49: LCD_Clear();
   600  001488  EC2F  F00D         	call	_LCD_Clear	;wreg free
   601  00148C                     l1556:
   602                           
   603                           ;main_advanced.c: 50: };main_advanced.c: 52: count++;
   604  00148C  2A3B               	incf	main@count^0,f,c
   605  00148E  EFBD  F009         	goto	l1530
   606  001492  EF00  F000         	goto	start
   607  001496                     __end_of_main:
   608                           	opt callstack 0
   609                           
   610 ;; *************** function _sprintf *****************
   611 ;; Defined at:
   612 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprintf.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;  wh              2   25[COMRAM] PTR unsigned char 
   615 ;;		 -> main@text(17), 
   616 ;;  f               2   27[COMRAM] PTR const unsigned char 
   617 ;;		 -> STR_4(9), STR_2(17), STR_1(17), 
   618 ;; Auto vars:     Size  Location     Type
   619 ;;  pb              4   33[COMRAM] struct __prbuf
   620 ;;  ap              2   31[COMRAM] PTR void [1]
   621 ;;		 -> ?_sprintf(2), ?_printf(2), 
   622 ;; Return value:  Size  Location     Type
   623 ;;                  2   25[COMRAM] int 
   624 ;; Registers used:
   625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   631 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   632 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   634 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   635 ;;Total ram usage:       12 bytes
   636 ;; Hardware stack levels used:    1
   637 ;; Hardware stack levels required when called:    2
   638 ;; This function calls:
   639 ;;		__doprnt
   640 ;; This function is called by:
   641 ;;		_main
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           	psect	text1
   646  0019E6                     __ptext1:
   647                           	opt callstack 0
   648  0019E6                     _sprintf:
   649                           	opt callstack 28
   650  0019E6  C01A  F022         	movff	sprintf@wh,sprintf@pb
   651  0019EA  C01B  F023         	movff	sprintf@wh+1,sprintf@pb+1
   652  0019EE  0E00               	movlw	0
   653  0019F0  6E24               	movwf	(sprintf@pb+2)^0,c
   654  0019F2  0E00               	movlw	0
   655  0019F4  6E25               	movwf	(sprintf@pb+3)^0,c
   656  0019F6  0E1E               	movlw	low (?_sprintf+4)
   657  0019F8  6E20               	movwf	sprintf@ap^0,c
   658  0019FA  0E00               	movlw	high (?_sprintf+4)
   659  0019FC  6E21               	movwf	(sprintf@ap+1)^0,c
   660  0019FE  0E22               	movlw	low sprintf@pb
   661  001A00  6E0D               	movwf	__doprnt@pb^0,c
   662  001A02  0E00               	movlw	high sprintf@pb
   663  001A04  6E0E               	movwf	(__doprnt@pb+1)^0,c
   664  001A06  C01C  F00F         	movff	sprintf@f,__doprnt@f
   665  001A0A  C01D  F010         	movff	sprintf@f+1,__doprnt@f+1
   666  001A0E  0E20               	movlw	low sprintf@ap
   667  001A10  6E11               	movwf	__doprnt@ap^0,c
   668  001A12  0E00               	movlw	high sprintf@ap
   669  001A14  6E12               	movwf	(__doprnt@ap+1)^0,c
   670  001A16  EC23  F008         	call	__doprnt	;wreg free
   671  001A1A  C022  FFD9         	movff	sprintf@pb,fsr2l
   672  001A1E  C023  FFDA         	movff	sprintf@pb+1,fsr2h
   673  001A22  0E00               	movlw	0
   674  001A24  6EDF               	movwf	indf2,c
   675  001A26  0012               	return		;funcret
   676  001A28                     __end_of_sprintf:
   677                           	opt callstack 0
   678                           
   679 ;; *************** function _printf *****************
   680 ;; Defined at:
   681 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\printf.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;  f               2   25[COMRAM] PTR const unsigned char 
   684 ;;		 -> STR_3(15), 
   685 ;; Auto vars:     Size  Location     Type
   686 ;;  pb              4   33[COMRAM] struct __prbuf
   687 ;;  ap              2   31[COMRAM] PTR void [1]
   688 ;;		 -> ?_sprintf(2), ?_printf(2), 
   689 ;; Return value:  Size  Location     Type
   690 ;;                  2   25[COMRAM] int 
   691 ;; Registers used:
   692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   698 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   699 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   701 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   702 ;;Total ram usage:       12 bytes
   703 ;; Hardware stack levels used:    1
   704 ;; Hardware stack levels required when called:    2
   705 ;; This function calls:
   706 ;;		__doprnt
   707 ;; This function is called by:
   708 ;;		_main
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           	psect	text2
   713  001A28                     __ptext2:
   714                           	opt callstack 0
   715  001A28                     _printf:
   716                           	opt callstack 28
   717  001A28  0E00               	movlw	0
   718  001A2A  6E22               	movwf	printf@pb^0,c
   719  001A2C  0E00               	movlw	0
   720  001A2E  6E23               	movwf	(printf@pb+1)^0,c
   721  001A30  0EBA               	movlw	low _putch
   722  001A32  6E24               	movwf	(printf@pb+2)^0,c
   723  001A34  0E1A               	movlw	high _putch
   724  001A36  6E25               	movwf	(printf@pb+3)^0,c
   725  001A38  0E1C               	movlw	low (?_printf+2)
   726  001A3A  6E20               	movwf	printf@ap^0,c
   727  001A3C  0E00               	movlw	high (?_printf+2)
   728  001A3E  6E21               	movwf	(printf@ap+1)^0,c
   729  001A40                     
   730                           ;	Return value of _printf is never used
   731  001A40  0E22               	movlw	low printf@pb
   732  001A42  6E0D               	movwf	__doprnt@pb^0,c
   733  001A44  0E00               	movlw	high printf@pb
   734  001A46  6E0E               	movwf	(__doprnt@pb+1)^0,c
   735  001A48  C01A  F00F         	movff	printf@f,__doprnt@f
   736  001A4C  C01B  F010         	movff	printf@f+1,__doprnt@f+1
   737  001A50  0E20               	movlw	low printf@ap
   738  001A52  6E11               	movwf	__doprnt@ap^0,c
   739  001A54  0E00               	movlw	high printf@ap
   740  001A56  6E12               	movwf	(__doprnt@ap+1)^0,c
   741  001A58  EC23  F008         	call	__doprnt	;wreg free
   742  001A5C  0012               	return		;funcret
   743  001A5E                     __end_of_printf:
   744                           	opt callstack 0
   745                           
   746 ;; *************** function __doprnt *****************
   747 ;; Defined at:
   748 ;;		line 471 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;  pb              2   12[COMRAM] PTR struct __prbuf
   751 ;;		 -> sprintf@pb(4), printf@pb(4), 
   752 ;;  f               2   14[COMRAM] PTR const unsigned char 
   753 ;;		 -> STR_4(9), STR_3(15), STR_2(17), STR_1(17), 
   754 ;;  ap              2   16[COMRAM] PTR PTR void 
   755 ;;		 -> sprintf@ap(2), printf@ap(2), 
   756 ;; Auto vars:     Size  Location     Type
   757 ;;  tmpval          4    0        struct .
   758 ;;  cp              3    0        PTR const unsigned char 
   759 ;;  val             2   22[COMRAM] unsigned int 
   760 ;;  len             2    0        unsigned int 
   761 ;;  c               1   24[COMRAM] unsigned char 
   762 ;;  prec            1   21[COMRAM] char 
   763 ;;  flag            1   20[COMRAM] unsigned char 
   764 ;; Return value:  Size  Location     Type
   765 ;;                  2   12[COMRAM] int 
   766 ;; Registers used:
   767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   773 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   774 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   775 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   776 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   777 ;;Total ram usage:       13 bytes
   778 ;; Hardware stack levels used:    1
   779 ;; Hardware stack levels required when called:    1
   780 ;; This function calls:
   781 ;;		Absolute function
   782 ;;		___lwdiv
   783 ;;		___lwmod
   784 ;;		_putch
   785 ;; This function is called by:
   786 ;;		_printf
   787 ;;		_sprintf
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           	psect	text3
   792  001046                     __ptext3:
   793                           	opt callstack 0
   794  001046                     __doprnt:
   795                           	opt callstack 28
   796  001046                     l1374:
   797                           
   798                           ;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;doprnt.c: 525: unsigned char fl
      +                          ag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;doprnt.c: 542: double integ;
      +                          ;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;doprnt.c: 546: unsigned len;;
      +                          doprnt.c: 547: const char * cp;;doprnt.c: 553: while((c = *f++)) {
   799  001046  EF85  F009         	goto	l1438
   800  00104A                     l1376:
   801                           
   802                           ;doprnt.c: 555: if(c != '%')
   803  00104A  0E25               	movlw	37
   804  00104C  1819               	xorwf	__doprnt@c^0,w,c
   805  00104E  B4D8               	btfsc	status,2,c
   806  001050  EF2C  F008         	goto	u641
   807  001054  EF2E  F008         	goto	u640
   808  001058                     u641:
   809  001058  EF6D  F008         	goto	l1386
   810  00105C                     u640:
   811  00105C  EE20 F002          	lfsr	2,2
   812  001060  500D               	movf	__doprnt@pb^0,w,c
   813  001062  26D9               	addwf	fsr2l,f,c
   814  001064  500E               	movf	(__doprnt@pb+1)^0,w,c
   815  001066  22DA               	addwfc	fsr2h,f,c
   816  001068  50DE               	movf	postinc2,w,c
   817  00106A  10DE               	iorwf	postinc2,w,c
   818  00106C  B4D8               	btfsc	status,2,c
   819  00106E  EF3B  F008         	goto	u651
   820  001072  EF3D  F008         	goto	u650
   821  001076                     u651:
   822  001076  EF56  F008         	goto	l1382
   823  00107A                     u650:
   824  00107A  EE20 F002          	lfsr	2,2
   825  00107E  500D               	movf	__doprnt@pb^0,w,c
   826  001080  26D9               	addwf	fsr2l,f,c
   827  001082  500E               	movf	(__doprnt@pb+1)^0,w,c
   828  001084  22DA               	addwfc	fsr2h,f,c
   829  001086  CFDE F013          	movff	postinc2,??__doprnt
   830  00108A  CFDD F014          	movff	postdec2,??__doprnt+1
   831  00108E  D802               	call	u668
   832  001090  EF54  F008         	goto	u669
   833  001094                     u668:
   834  001094  0005               	push	
   835  001096  6EFA               	movwf	pclath,c
   836  001098  5013               	movf	??__doprnt^0,w,c
   837  00109A  6EFD               	movwf	tosl,c
   838  00109C  5014               	movf	(??__doprnt+1)^0,w,c
   839  00109E  6EFE               	movwf	tosh,c
   840  0010A0  6AFF               	clrf	tosu,c
   841  0010A2  50FA               	movf	pclath,w,c
   842  0010A4  5019               	movf	__doprnt@c^0,w,c
   843  0010A6  0012               	return		;indir
   844  0010A8                     u669:
   845  0010A8  EF23  F008         	goto	l1374
   846  0010AC                     l1382:
   847  0010AC  C00D  FFD9         	movff	__doprnt@pb,fsr2l
   848  0010B0  C00E  FFDA         	movff	__doprnt@pb+1,fsr2h
   849  0010B4  CFDE F013          	movff	postinc2,??__doprnt
   850  0010B8  CFDD F014          	movff	postdec2,??__doprnt+1
   851  0010BC  C013  FFD9         	movff	??__doprnt,fsr2l
   852  0010C0  C014  FFDA         	movff	??__doprnt+1,fsr2h
   853  0010C4  C019  FFDF         	movff	__doprnt@c,indf2
   854  0010C8  C00D  FFD9         	movff	__doprnt@pb,fsr2l
   855  0010CC  C00E  FFDA         	movff	__doprnt@pb+1,fsr2h
   856  0010D0  2ADE               	incf	postinc2,f,c
   857  0010D2  0E00               	movlw	0
   858  0010D4  22DD               	addwfc	postdec2,f,c
   859  0010D6  EF23  F008         	goto	l1374
   860  0010DA                     l1386:
   861                           
   862                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
   863  0010DA  0E00               	movlw	0
   864  0010DC  6E15               	movwf	__doprnt@flag^0,c
   865  0010DE  C00F  FFF6         	movff	__doprnt@f,tblptrl
   866  0010E2  C010  FFF7         	movff	__doprnt@f+1,tblptrh
   867  0010E6  4A0F               	infsnz	__doprnt@f^0,f,c
   868  0010E8  2A10               	incf	(__doprnt@f+1)^0,f,c
   869  0010EA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   870  0010EA  6AF8               	clrf	tblptru,c
   871  0010EC                     	endif
   872  0010EC                     	if	0	;tblptru may be non-zero
   873  0010EC                     	endif
   874  0010EC  0008               	tblrd		*
   875  0010EE  CFF5 F019          	movff	tablat,__doprnt@c
   876  0010F2  5019               	movf	__doprnt@c^0,w,c
   877                           
   878                           ; Switch size 1, requested type "simple"
   879                           ; Number of cases is 3, Range of values is 0 to 105
   880                           ; switch strategies available:
   881                           ; Name         Instructions Cycles
   882                           ; simple_byte           10     6 (average)
   883                           ;	Chosen strategy is simple_byte
   884  0010F4  0A00               	xorlw	0	; case 0
   885  0010F6  B4D8               	btfsc	status,2,c
   886  0010F8  EF97  F009         	goto	l1440
   887  0010FC  0A64               	xorlw	100	; case 100
   888  0010FE  B4D8               	btfsc	status,2,c
   889  001100  EF88  F008         	goto	l1392
   890  001104  0A0D               	xorlw	13	; case 105
   891  001106  B4D8               	btfsc	status,2,c
   892  001108  EF88  F008         	goto	l1392
   893  00110C  EF85  F009         	goto	l1438
   894  001110                     l1392:
   895                           
   896                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
   897  001110  C011  FFD9         	movff	__doprnt@ap,fsr2l
   898  001114  C012  FFDA         	movff	__doprnt@ap+1,fsr2h
   899  001118  CFDF F013          	movff	indf2,??__doprnt
   900  00111C  0E02               	movlw	2
   901  00111E  26DE               	addwf	postinc2,f,c
   902  001120  CFDF F014          	movff	indf2,??__doprnt+1
   903  001124  0E00               	movlw	0
   904  001126  22DD               	addwfc	postdec2,f,c
   905  001128  C013  FFD9         	movff	??__doprnt,fsr2l
   906  00112C  C014  FFDA         	movff	??__doprnt+1,fsr2h
   907  001130  CFDE F017          	movff	postinc2,__doprnt@val
   908  001134  CFDD F018          	movff	postdec2,__doprnt@val+1
   909  001138                     
   910                           ;doprnt.c: 1287: if((int)val < 0) {
   911  001138  BE18               	btfsc	(__doprnt@val+1)^0,7,c
   912  00113A  EFA3  F008         	goto	u670
   913  00113E  EFA1  F008         	goto	u671
   914  001142                     u671:
   915  001142  EFA9  F008         	goto	l1400
   916  001146                     u670:
   917  001146                     
   918                           ;doprnt.c: 1288: flag |= 0x03;
   919  001146  0E03               	movlw	3
   920  001148  1215               	iorwf	__doprnt@flag^0,f,c
   921  00114A                     
   922                           ;doprnt.c: 1289: val = -val;
   923  00114A  6C17               	negf	__doprnt@val^0,c
   924  00114C  1E18               	comf	(__doprnt@val+1)^0,f,c
   925  00114E  B0D8               	btfsc	status,0,c
   926  001150  2A18               	incf	(__doprnt@val+1)^0,f,c
   927  001152                     l1400:
   928                           
   929                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
   930  001152  0E01               	movlw	1
   931  001154  6E19               	movwf	__doprnt@c^0,c
   932  001156                     l1406:
   933                           
   934                           ;doprnt.c: 1332: if(val < dpowers[c])
   935  001156  5019               	movf	__doprnt@c^0,w,c
   936  001158  0D02               	mullw	2
   937  00115A  0E01               	movlw	low _dpowers
   938  00115C  24F3               	addwf	243,w,c
   939  00115E  6EF6               	movwf	tblptrl,c
   940  001160  0E10               	movlw	high _dpowers
   941  001162  20F4               	addwfc	244,w,c
   942  001164  6EF7               	movwf	tblptrh,c
   943  001166                     	if	1	;There are 3 active tblptr bytes
   944  001166  6AF8               	clrf	tblptru,c
   945  001168  0E00               	movlw	low (__mediumconst shr (0+16))
   946  00116A  22F8               	addwfc	tblptru,f,c
   947  00116C                     	endif
   948  00116C  0009               	tblrd		*+
   949  00116E  50F5               	movf	tablat,w,c
   950  001170  5C17               	subwf	__doprnt@val^0,w,c
   951  001172  0009               	tblrd		*+
   952  001174  50F5               	movf	tablat,w,c
   953  001176  5818               	subwfb	(__doprnt@val+1)^0,w,c
   954  001178  B0D8               	btfsc	status,0,c
   955  00117A  EFC1  F008         	goto	u681
   956  00117E  EFC3  F008         	goto	u680
   957  001182                     u681:
   958  001182  EFC5  F008         	goto	l1410
   959  001186                     u680:
   960  001186  EFCF  F008         	goto	l1414
   961  00118A                     l1410:
   962  00118A  2A19               	incf	__doprnt@c^0,f,c
   963  00118C  0E05               	movlw	5
   964  00118E  1819               	xorwf	__doprnt@c^0,w,c
   965  001190  A4D8               	btfss	status,2,c
   966  001192  EFCD  F008         	goto	u691
   967  001196  EFCF  F008         	goto	u690
   968  00119A                     u691:
   969  00119A  EFAB  F008         	goto	l1406
   970  00119E                     u690:
   971  00119E                     l1414:
   972                           
   973                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
   974  00119E  C015  F013         	movff	__doprnt@flag,??__doprnt
   975  0011A2  0E03               	movlw	3
   976  0011A4  1613               	andwf	??__doprnt^0,f,c
   977  0011A6  B4D8               	btfsc	status,2,c
   978  0011A8  EFD8  F008         	goto	u701
   979  0011AC  EFDA  F008         	goto	u700
   980  0011B0                     u701:
   981  0011B0  EF17  F009         	goto	l1424
   982  0011B4                     u700:
   983  0011B4  EE20 F002          	lfsr	2,2
   984  0011B8  500D               	movf	__doprnt@pb^0,w,c
   985  0011BA  26D9               	addwf	fsr2l,f,c
   986  0011BC  500E               	movf	(__doprnt@pb+1)^0,w,c
   987  0011BE  22DA               	addwfc	fsr2h,f,c
   988  0011C0  50DE               	movf	postinc2,w,c
   989  0011C2  10DE               	iorwf	postinc2,w,c
   990  0011C4  B4D8               	btfsc	status,2,c
   991  0011C6  EFE7  F008         	goto	u711
   992  0011CA  EFE9  F008         	goto	u710
   993  0011CE                     u711:
   994  0011CE  EF02  F009         	goto	l1420
   995  0011D2                     u710:
   996  0011D2  EE20 F002          	lfsr	2,2
   997  0011D6  500D               	movf	__doprnt@pb^0,w,c
   998  0011D8  26D9               	addwf	fsr2l,f,c
   999  0011DA  500E               	movf	(__doprnt@pb+1)^0,w,c
  1000  0011DC  22DA               	addwfc	fsr2h,f,c
  1001  0011DE  CFDE F013          	movff	postinc2,??__doprnt
  1002  0011E2  CFDD F014          	movff	postdec2,??__doprnt+1
  1003  0011E6  D802               	call	u728
  1004  0011E8  EF00  F009         	goto	u729
  1005  0011EC                     u728:
  1006  0011EC  0005               	push	
  1007  0011EE  6EFA               	movwf	pclath,c
  1008  0011F0  5013               	movf	??__doprnt^0,w,c
  1009  0011F2  6EFD               	movwf	tosl,c
  1010  0011F4  5014               	movf	(??__doprnt+1)^0,w,c
  1011  0011F6  6EFE               	movwf	tosh,c
  1012  0011F8  6AFF               	clrf	tosu,c
  1013  0011FA  50FA               	movf	pclath,w,c
  1014  0011FC  0E2D               	movlw	45
  1015  0011FE  0012               	return		;indir
  1016  001200                     u729:
  1017  001200  EF17  F009         	goto	l1424
  1018  001204                     l1420:
  1019  001204  C00D  FFD9         	movff	__doprnt@pb,fsr2l
  1020  001208  C00E  FFDA         	movff	__doprnt@pb+1,fsr2h
  1021  00120C  CFDE F013          	movff	postinc2,??__doprnt
  1022  001210  CFDD F014          	movff	postdec2,??__doprnt+1
  1023  001214  C013  FFD9         	movff	??__doprnt,fsr2l
  1024  001218  C014  FFDA         	movff	??__doprnt+1,fsr2h
  1025  00121C  0E2D               	movlw	45
  1026  00121E  6EDF               	movwf	indf2,c
  1027  001220  C00D  FFD9         	movff	__doprnt@pb,fsr2l
  1028  001224  C00E  FFDA         	movff	__doprnt@pb+1,fsr2h
  1029  001228  2ADE               	incf	postinc2,f,c
  1030  00122A  0E00               	movlw	0
  1031  00122C  22DD               	addwfc	postdec2,f,c
  1032  00122E                     l1424:
  1033                           
  1034                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  1035  00122E  C019  F016         	movff	__doprnt@c,__doprnt@prec
  1036                           
  1037                           ;doprnt.c: 1500: while(prec--) {
  1038  001232  EF7C  F009         	goto	l1436
  1039  001236                     l1426:
  1040                           
  1041                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  1042  001236  5016               	movf	__doprnt@prec^0,w,c
  1043  001238  0D02               	mullw	2
  1044  00123A  0E01               	movlw	low _dpowers
  1045  00123C  24F3               	addwf	243,w,c
  1046  00123E  6EF6               	movwf	tblptrl,c
  1047  001240  0E10               	movlw	high _dpowers
  1048  001242  20F4               	addwfc	244,w,c
  1049  001244  6EF7               	movwf	tblptrh,c
  1050  001246                     	if	1	;There are 3 active tblptr bytes
  1051  001246  6AF8               	clrf	tblptru,c
  1052  001248  0E00               	movlw	low (__mediumconst shr (0+16))
  1053  00124A  22F8               	addwfc	tblptru,f,c
  1054  00124C                     	endif
  1055  00124C  0009               	tblrd		*+
  1056  00124E  CFF5 F003          	movff	tablat,___lwdiv@divisor
  1057  001252  000A               	tblrd		*-
  1058  001254  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  1059  001258  C017  F001         	movff	__doprnt@val,___lwdiv@dividend
  1060  00125C  C018  F002         	movff	__doprnt@val+1,___lwdiv@dividend+1
  1061  001260  ECEA  F00B         	call	___lwdiv
  1062  001264  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  1063  001268  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  1064  00126C  0E00               	movlw	0
  1065  00126E  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1066  001270  0E0A               	movlw	10
  1067  001272  6E0A               	movwf	___lwmod@divisor^0,c
  1068  001274  ECC1  F00C         	call	___lwmod	;wreg free
  1069  001278  5008               	movf	?___lwmod^0,w,c
  1070  00127A  0F30               	addlw	48
  1071  00127C  6E19               	movwf	__doprnt@c^0,c
  1072  00127E  EE20 F002          	lfsr	2,2
  1073  001282  500D               	movf	__doprnt@pb^0,w,c
  1074  001284  26D9               	addwf	fsr2l,f,c
  1075  001286  500E               	movf	(__doprnt@pb+1)^0,w,c
  1076  001288  22DA               	addwfc	fsr2h,f,c
  1077  00128A  50DE               	movf	postinc2,w,c
  1078  00128C  10DE               	iorwf	postinc2,w,c
  1079  00128E  B4D8               	btfsc	status,2,c
  1080  001290  EF4C  F009         	goto	u731
  1081  001294  EF4E  F009         	goto	u730
  1082  001298                     u731:
  1083  001298  EF67  F009         	goto	l1432
  1084  00129C                     u730:
  1085  00129C  EE20 F002          	lfsr	2,2
  1086  0012A0  500D               	movf	__doprnt@pb^0,w,c
  1087  0012A2  26D9               	addwf	fsr2l,f,c
  1088  0012A4  500E               	movf	(__doprnt@pb+1)^0,w,c
  1089  0012A6  22DA               	addwfc	fsr2h,f,c
  1090  0012A8  CFDE F013          	movff	postinc2,??__doprnt
  1091  0012AC  CFDD F014          	movff	postdec2,??__doprnt+1
  1092  0012B0  D802               	call	u748
  1093  0012B2  EF65  F009         	goto	u749
  1094  0012B6                     u748:
  1095  0012B6  0005               	push	
  1096  0012B8  6EFA               	movwf	pclath,c
  1097  0012BA  5013               	movf	??__doprnt^0,w,c
  1098  0012BC  6EFD               	movwf	tosl,c
  1099  0012BE  5014               	movf	(??__doprnt+1)^0,w,c
  1100  0012C0  6EFE               	movwf	tosh,c
  1101  0012C2  6AFF               	clrf	tosu,c
  1102  0012C4  50FA               	movf	pclath,w,c
  1103  0012C6  5019               	movf	__doprnt@c^0,w,c
  1104  0012C8  0012               	return		;indir
  1105  0012CA                     u749:
  1106  0012CA  EF7C  F009         	goto	l1436
  1107  0012CE                     l1432:
  1108  0012CE  C00D  FFD9         	movff	__doprnt@pb,fsr2l
  1109  0012D2  C00E  FFDA         	movff	__doprnt@pb+1,fsr2h
  1110  0012D6  CFDE F013          	movff	postinc2,??__doprnt
  1111  0012DA  CFDD F014          	movff	postdec2,??__doprnt+1
  1112  0012DE  C013  FFD9         	movff	??__doprnt,fsr2l
  1113  0012E2  C014  FFDA         	movff	??__doprnt+1,fsr2h
  1114  0012E6  C019  FFDF         	movff	__doprnt@c,indf2
  1115  0012EA  C00D  FFD9         	movff	__doprnt@pb,fsr2l
  1116  0012EE  C00E  FFDA         	movff	__doprnt@pb+1,fsr2h
  1117  0012F2  2ADE               	incf	postinc2,f,c
  1118  0012F4  0E00               	movlw	0
  1119  0012F6  22DD               	addwfc	postdec2,f,c
  1120  0012F8                     l1436:
  1121  0012F8  0616               	decf	__doprnt@prec^0,f,c
  1122  0012FA  2816               	incf	__doprnt@prec^0,w,c
  1123  0012FC  A4D8               	btfss	status,2,c
  1124  0012FE  EF83  F009         	goto	u751
  1125  001302  EF85  F009         	goto	u750
  1126  001306                     u751:
  1127  001306  EF1B  F009         	goto	l1426
  1128  00130A                     u750:
  1129  00130A                     l1438:
  1130  00130A  C00F  FFF6         	movff	__doprnt@f,tblptrl
  1131  00130E  C010  FFF7         	movff	__doprnt@f+1,tblptrh
  1132  001312  4A0F               	infsnz	__doprnt@f^0,f,c
  1133  001314  2A10               	incf	(__doprnt@f+1)^0,f,c
  1134  001316                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1135  001316  6AF8               	clrf	tblptru,c
  1136  001318                     	endif
  1137  001318                     	if	0	;tblptru may be non-zero
  1138  001318                     	endif
  1139  001318  0008               	tblrd		*
  1140  00131A  CFF5 F019          	movff	tablat,__doprnt@c
  1141  00131E  5019               	movf	__doprnt@c^0,w,c
  1142  001320  A4D8               	btfss	status,2,c
  1143  001322  EF95  F009         	goto	u761
  1144  001326  EF97  F009         	goto	u760
  1145  00132A                     u761:
  1146  00132A  EF25  F008         	goto	l1376
  1147  00132E                     u760:
  1148  00132E                     l1440:
  1149                           
  1150                           ;doprnt.c: 1566: return 0;
  1151  00132E  0E00               	movlw	0
  1152  001330  6E0E               	movwf	(?__doprnt+1)^0,c
  1153  001332  0E00               	movlw	0
  1154  001334  6E0D               	movwf	?__doprnt^0,c
  1155  001336  0012               	return		;funcret
  1156  001338                     __end_of__doprnt:
  1157                           	opt callstack 0
  1158                           
  1159 ;; *************** function _putch *****************
  1160 ;; Defined at:
  1161 ;;		line 170 in file "rev-basic.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;  c               1    wreg     unsigned char 
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;  c               1    0[COMRAM] unsigned char 
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  1    wreg      void 
  1168 ;; Registers used:
  1169 ;;		wreg
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1176 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1178 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1179 ;;Total ram usage:        1 bytes
  1180 ;; Hardware stack levels used:    1
  1181 ;; This function calls:
  1182 ;;		Nothing
  1183 ;; This function is called by:
  1184 ;;		_printf
  1185 ;;		__doprnt
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           	psect	text4
  1190  001ABA                     __ptext4:
  1191                           	opt callstack 0
  1192  001ABA                     _putch:
  1193                           	opt callstack 28
  1194                           
  1195                           ;incstack = 0
  1196                           ;putch@c stored from wreg
  1197  001ABA  6E01               	movwf	putch@c^0,c
  1198  001ABC                     l114:
  1199  001ABC  A89E               	btfss	3998,4,c	;volatile
  1200  001ABE  EF63  F00D         	goto	u11
  1201  001AC2  EF65  F00D         	goto	u10
  1202  001AC6                     u11:
  1203  001AC6  EF5E  F00D         	goto	l114
  1204  001ACA                     u10:
  1205  001ACA                     
  1206                           ;rev-basic.c: 174: TXREG1 = c;
  1207  001ACA  C001  FFAD         	movff	putch@c,4013	;volatile
  1208  001ACE  0012               	return		;funcret
  1209  001AD0                     __end_of_putch:
  1210                           	opt callstack 0
  1211                           
  1212 ;; *************** function ___lwmod *****************
  1213 ;; Defined at:
  1214 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  dividend        2    7[COMRAM] unsigned int 
  1217 ;;  divisor         2    9[COMRAM] unsigned int 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  counter         1   11[COMRAM] unsigned char 
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  2    7[COMRAM] unsigned int 
  1222 ;; Registers used:
  1223 ;;		wreg, status,2, status,0
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1229 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;Total ram usage:        5 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; This function calls:
  1236 ;;		Nothing
  1237 ;; This function is called by:
  1238 ;;		__doprnt
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           	psect	text5
  1243  001982                     __ptext5:
  1244                           	opt callstack 0
  1245  001982                     ___lwmod:
  1246                           	opt callstack 28
  1247  001982  500A               	movf	___lwmod@divisor^0,w,c
  1248  001984  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  1249  001986  B4D8               	btfsc	status,2,c
  1250  001988  EFC8  F00C         	goto	u611
  1251  00198C  EFCA  F00C         	goto	u610
  1252  001990                     u611:
  1253  001990  EFEE  F00C         	goto	l752
  1254  001994                     u610:
  1255  001994  0E01               	movlw	1
  1256  001996  6E0C               	movwf	___lwmod@counter^0,c
  1257  001998  EFD2  F00C         	goto	l1364
  1258  00199C                     l1362:
  1259  00199C  90D8               	bcf	status,0,c
  1260  00199E  360A               	rlcf	___lwmod@divisor^0,f,c
  1261  0019A0  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  1262  0019A2  2A0C               	incf	___lwmod@counter^0,f,c
  1263  0019A4                     l1364:
  1264  0019A4  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  1265  0019A6  EFD7  F00C         	goto	u621
  1266  0019AA  EFD9  F00C         	goto	u620
  1267  0019AE                     u621:
  1268  0019AE  EFCE  F00C         	goto	l1362
  1269  0019B2                     u620:
  1270  0019B2                     l1366:
  1271  0019B2  500A               	movf	___lwmod@divisor^0,w,c
  1272  0019B4  5C08               	subwf	___lwmod@dividend^0,w,c
  1273  0019B6  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1274  0019B8  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  1275  0019BA  A0D8               	btfss	status,0,c
  1276  0019BC  EFE2  F00C         	goto	u631
  1277  0019C0  EFE4  F00C         	goto	u630
  1278  0019C4                     u631:
  1279  0019C4  EFE8  F00C         	goto	l1370
  1280  0019C8                     u630:
  1281  0019C8  500A               	movf	___lwmod@divisor^0,w,c
  1282  0019CA  5E08               	subwf	___lwmod@dividend^0,f,c
  1283  0019CC  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1284  0019CE  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  1285  0019D0                     l1370:
  1286  0019D0  90D8               	bcf	status,0,c
  1287  0019D2  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  1288  0019D4  320A               	rrcf	___lwmod@divisor^0,f,c
  1289  0019D6  2E0C               	decfsz	___lwmod@counter^0,f,c
  1290  0019D8  EFD9  F00C         	goto	l1366
  1291  0019DC                     l752:
  1292  0019DC  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1293  0019E0  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1294  0019E4  0012               	return		;funcret
  1295  0019E6                     __end_of___lwmod:
  1296                           	opt callstack 0
  1297                           
  1298 ;; *************** function ___lwdiv *****************
  1299 ;; Defined at:
  1300 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;  dividend        2    0[COMRAM] unsigned int 
  1303 ;;  divisor         2    2[COMRAM] unsigned int 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  quotient        2    4[COMRAM] unsigned int 
  1306 ;;  counter         1    6[COMRAM] unsigned char 
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  2    0[COMRAM] unsigned int 
  1309 ;; Registers used:
  1310 ;;		wreg, status,2, status,0
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1316 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1317 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;Total ram usage:        7 bytes
  1321 ;; Hardware stack levels used:    1
  1322 ;; This function calls:
  1323 ;;		Nothing
  1324 ;; This function is called by:
  1325 ;;		__doprnt
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text6
  1330  0017D4                     __ptext6:
  1331                           	opt callstack 0
  1332  0017D4                     ___lwdiv:
  1333                           	opt callstack 28
  1334  0017D4  0E00               	movlw	0
  1335  0017D6  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1336  0017D8  0E00               	movlw	0
  1337  0017DA  6E05               	movwf	___lwdiv@quotient^0,c
  1338  0017DC  5003               	movf	___lwdiv@divisor^0,w,c
  1339  0017DE  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1340  0017E0  B4D8               	btfsc	status,2,c
  1341  0017E2  EFF5  F00B         	goto	u581
  1342  0017E6  EFF7  F00B         	goto	u580
  1343  0017EA                     u581:
  1344  0017EA  EF1F  F00C         	goto	l742
  1345  0017EE                     u580:
  1346  0017EE  0E01               	movlw	1
  1347  0017F0  6E07               	movwf	___lwdiv@counter^0,c
  1348  0017F2  EFFF  F00B         	goto	l1344
  1349  0017F6                     l1342:
  1350  0017F6  90D8               	bcf	status,0,c
  1351  0017F8  3603               	rlcf	___lwdiv@divisor^0,f,c
  1352  0017FA  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1353  0017FC  2A07               	incf	___lwdiv@counter^0,f,c
  1354  0017FE                     l1344:
  1355  0017FE  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1356  001800  EF04  F00C         	goto	u591
  1357  001804  EF06  F00C         	goto	u590
  1358  001808                     u591:
  1359  001808  EFFB  F00B         	goto	l1342
  1360  00180C                     u590:
  1361  00180C                     l1346:
  1362  00180C  90D8               	bcf	status,0,c
  1363  00180E  3605               	rlcf	___lwdiv@quotient^0,f,c
  1364  001810  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1365  001812  5003               	movf	___lwdiv@divisor^0,w,c
  1366  001814  5C01               	subwf	___lwdiv@dividend^0,w,c
  1367  001816  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1368  001818  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1369  00181A  A0D8               	btfss	status,0,c
  1370  00181C  EF12  F00C         	goto	u601
  1371  001820  EF14  F00C         	goto	u600
  1372  001824                     u601:
  1373  001824  EF19  F00C         	goto	l1354
  1374  001828                     u600:
  1375  001828  5003               	movf	___lwdiv@divisor^0,w,c
  1376  00182A  5E01               	subwf	___lwdiv@dividend^0,f,c
  1377  00182C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1378  00182E  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1379  001830  8005               	bsf	___lwdiv@quotient^0,0,c
  1380  001832                     l1354:
  1381  001832  90D8               	bcf	status,0,c
  1382  001834  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1383  001836  3203               	rrcf	___lwdiv@divisor^0,f,c
  1384  001838  2E07               	decfsz	___lwdiv@counter^0,f,c
  1385  00183A  EF06  F00C         	goto	l1346
  1386  00183E                     l742:
  1387  00183E  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1388  001842  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1389  001846  0012               	return		;funcret
  1390  001848                     __end_of___lwdiv:
  1391                           	opt callstack 0
  1392                           
  1393 ;; *************** function ___lmul *****************
  1394 ;; Defined at:
  1395 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;  multiplier      4    0[COMRAM] unsigned long 
  1398 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;  product         4    8[COMRAM] unsigned long 
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  4    0[COMRAM] unsigned long 
  1403 ;; Registers used:
  1404 ;;		wreg, status,2, status,0
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1410 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1411 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1413 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1414 ;;Total ram usage:       12 bytes
  1415 ;; Hardware stack levels used:    1
  1416 ;; This function calls:
  1417 ;;		Nothing
  1418 ;; This function is called by:
  1419 ;;		_main
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           	psect	text7
  1424  001848                     __ptext7:
  1425                           	opt callstack 0
  1426  001848                     ___lmul:
  1427                           	opt callstack 30
  1428  001848  0E00               	movlw	0
  1429  00184A  6E09               	movwf	___lmul@product^0,c
  1430  00184C  0E00               	movlw	0
  1431  00184E  6E0A               	movwf	(___lmul@product+1)^0,c
  1432  001850  0E00               	movlw	0
  1433  001852  6E0B               	movwf	(___lmul@product+2)^0,c
  1434  001854  0E00               	movlw	0
  1435  001856  6E0C               	movwf	(___lmul@product+3)^0,c
  1436  001858                     l1510:
  1437  001858  A001               	btfss	___lmul@multiplier^0,0,c
  1438  00185A  EF31  F00C         	goto	u971
  1439  00185E  EF33  F00C         	goto	u970
  1440  001862                     u971:
  1441  001862  EF3B  F00C         	goto	l1514
  1442  001866                     u970:
  1443  001866  5005               	movf	___lmul@multiplicand^0,w,c
  1444  001868  2609               	addwf	___lmul@product^0,f,c
  1445  00186A  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  1446  00186C  220A               	addwfc	(___lmul@product+1)^0,f,c
  1447  00186E  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  1448  001870  220B               	addwfc	(___lmul@product+2)^0,f,c
  1449  001872  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  1450  001874  220C               	addwfc	(___lmul@product+3)^0,f,c
  1451  001876                     l1514:
  1452  001876  90D8               	bcf	status,0,c
  1453  001878  3605               	rlcf	___lmul@multiplicand^0,f,c
  1454  00187A  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1455  00187C  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1456  00187E  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1457  001880  90D8               	bcf	status,0,c
  1458  001882  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  1459  001884  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  1460  001886  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  1461  001888  3201               	rrcf	___lmul@multiplier^0,f,c
  1462  00188A  5001               	movf	___lmul@multiplier^0,w,c
  1463  00188C  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  1464  00188E  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  1465  001890  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  1466  001892  A4D8               	btfss	status,2,c
  1467  001894  EF4E  F00C         	goto	u981
  1468  001898  EF50  F00C         	goto	u980
  1469  00189C                     u981:
  1470  00189C  EF2C  F00C         	goto	l1510
  1471  0018A0                     u980:
  1472  0018A0  C009  F001         	movff	___lmul@product,?___lmul
  1473  0018A4  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  1474  0018A8  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  1475  0018AC  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  1476  0018B0  0012               	return		;funcret
  1477  0018B2                     __end_of___lmul:
  1478                           	opt callstack 0
  1479                           
  1480 ;; *************** function _REV_pot *****************
  1481 ;; Defined at:
  1482 ;;		line 73 in file "rev-basic.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;  adc_id          1    wreg     unsigned char 
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;  adc_id          1    4[COMRAM] unsigned char 
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  2    0[COMRAM] int 
  1489 ;; Registers used:
  1490 ;;		wreg, status,2, status,0
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1496 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1497 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1498 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1499 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1500 ;;Total ram usage:        5 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_main
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text8
  1510  0018B2                     __ptext8:
  1511                           	opt callstack 0
  1512  0018B2                     _REV_pot:
  1513                           	opt callstack 30
  1514                           
  1515                           ;incstack = 0
  1516                           ;REV_pot@adc_id stored from wreg
  1517  0018B2  6E05               	movwf	REV_pot@adc_id^0,c
  1518  0018B4                     
  1519                           ;rev-basic.c: 75: switch(adc_id){
  1520  0018B4  EF6E  F00C         	goto	l1456
  1521  0018B8                     l1446:
  1522                           
  1523                           ;rev-basic.c: 77: ADCON0bits.CHS = 0b00100;
  1524  0018B8  50C2               	movf	194,w,c	;volatile
  1525  0018BA  0B83               	andlw	-125
  1526  0018BC  0910               	iorlw	16
  1527  0018BE  6EC2               	movwf	194,c	;volatile
  1528                           
  1529                           ;rev-basic.c: 78: break;
  1530  0018C0  EF79  F00C         	goto	l76
  1531  0018C4                     l1448:
  1532                           
  1533                           ;rev-basic.c: 80: ADCON0bits.CHS = 0b00101;
  1534  0018C4  50C2               	movf	194,w,c	;volatile
  1535  0018C6  0B83               	andlw	-125
  1536  0018C8  0914               	iorlw	20
  1537  0018CA  6EC2               	movwf	194,c	;volatile
  1538                           
  1539                           ;rev-basic.c: 81: break;
  1540  0018CC  EF79  F00C         	goto	l76
  1541  0018D0                     l1450:
  1542                           
  1543                           ;rev-basic.c: 83: return 0;
  1544  0018D0  0E00               	movlw	0
  1545  0018D2  6E02               	movwf	(?_REV_pot+1)^0,c
  1546  0018D4  0E00               	movlw	0
  1547  0018D6  6E01               	movwf	?_REV_pot^0,c
  1548  0018D8  EF8C  F00C         	goto	l79
  1549  0018DC                     l1456:
  1550  0018DC  5005               	movf	REV_pot@adc_id^0,w,c
  1551                           
  1552                           ; Switch size 1, requested type "simple"
  1553                           ; Number of cases is 2, Range of values is 1 to 2
  1554                           ; switch strategies available:
  1555                           ; Name         Instructions Cycles
  1556                           ; simple_byte            7     4 (average)
  1557                           ;	Chosen strategy is simple_byte
  1558  0018DE  0A01               	xorlw	1	; case 1
  1559  0018E0  B4D8               	btfsc	status,2,c
  1560  0018E2  EF5C  F00C         	goto	l1446
  1561  0018E6  0A03               	xorlw	3	; case 2
  1562  0018E8  B4D8               	btfsc	status,2,c
  1563  0018EA  EF62  F00C         	goto	l1448
  1564  0018EE  EF68  F00C         	goto	l1450
  1565  0018F2                     l76:
  1566                           
  1567                           ;rev-basic.c: 86: GODONE = 1;
  1568  0018F2  82C2               	bsf	4034,1,c	;volatile
  1569  0018F4                     l80:
  1570  0018F4  B2C2               	btfsc	4034,1,c	;volatile
  1571  0018F6  EF7F  F00C         	goto	u771
  1572  0018FA  EF81  F00C         	goto	u770
  1573  0018FE                     u771:
  1574  0018FE  EF7A  F00C         	goto	l80
  1575  001902                     u770:
  1576  001902                     
  1577                           ;rev-basic.c: 89: return ((ADRESH << 8) | ADRESL);
  1578  001902  50C3               	movf	195,w,c	;volatile
  1579  001904  CFC4 F003          	movff	4036,??_REV_pot	;volatile
  1580  001908  6A04               	clrf	(??_REV_pot+1)^0,c
  1581  00190A  C003  F004         	movff	??_REV_pot,??_REV_pot+1
  1582  00190E  6A03               	clrf	??_REV_pot^0,c
  1583  001910  1003               	iorwf	??_REV_pot^0,w,c
  1584  001912  6E01               	movwf	?_REV_pot^0,c
  1585  001914  5004               	movf	(??_REV_pot+1)^0,w,c
  1586  001916  6E02               	movwf	(?_REV_pot+1)^0,c
  1587  001918                     l79:
  1588  001918  0012               	return		;funcret
  1589  00191A                     __end_of_REV_pot:
  1590                           	opt callstack 0
  1591                           
  1592 ;; *************** function _REV_led *****************
  1593 ;; Defined at:
  1594 ;;		line 135 in file "rev-basic.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  id              1    wreg     unsigned char 
  1597 ;;  state           1    3[COMRAM] unsigned char 
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;  id              1    4[COMRAM] unsigned char 
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      void 
  1602 ;; Registers used:
  1603 ;;		wreg, status,2, status,0
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1609 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1610 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1612 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1613 ;;Total ram usage:        2 bytes
  1614 ;; Hardware stack levels used:    1
  1615 ;; This function calls:
  1616 ;;		Nothing
  1617 ;; This function is called by:
  1618 ;;		_main
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           	psect	text9
  1623  00166A                     __ptext9:
  1624                           	opt callstack 0
  1625  00166A                     _REV_led:
  1626                           	opt callstack 30
  1627                           
  1628                           ;incstack = 0
  1629                           ;REV_led@id stored from wreg
  1630  00166A  6E05               	movwf	REV_led@id^0,c
  1631  00166C                     
  1632                           ;rev-basic.c: 144: state = (unsigned char)(state == 0 ? 1 : 0);
  1633  00166C  5004               	movf	REV_led@state^0,w,c
  1634  00166E  B4D8               	btfsc	status,2,c
  1635  001670  EF3C  F00B         	goto	u781
  1636  001674  EF3F  F00B         	goto	u780
  1637  001678                     u781:
  1638  001678  0E01               	movlw	1
  1639  00167A  EF40  F00B         	goto	u790
  1640  00167E                     u780:
  1641  00167E  0E00               	movlw	0
  1642  001680                     u790:
  1643  001680  6E04               	movwf	REV_led@state^0,c
  1644                           
  1645                           ;rev-basic.c: 145: switch(id){
  1646  001682  EF85  F00B         	goto	l1466
  1647  001686                     l103:
  1648                           
  1649                           ;rev-basic.c: 147: LATD2 = state;
  1650  001686  B004               	btfsc	REV_led@state^0,0,c
  1651  001688  EF48  F00B         	goto	u801
  1652  00168C  EF4B  F00B         	goto	u800
  1653  001690                     u801:
  1654  001690  848C               	bsf	3980,2,c	;volatile
  1655  001692  EF4C  F00B         	goto	u815
  1656  001696                     u800:
  1657  001696  948C               	bcf	3980,2,c	;volatile
  1658  001698                     u815:
  1659                           
  1660                           ;rev-basic.c: 148: break;
  1661  001698  EFA0  F00B         	goto	l111
  1662  00169C                     l105:
  1663                           
  1664                           ;rev-basic.c: 150: LATD3 = state;
  1665  00169C  B004               	btfsc	REV_led@state^0,0,c
  1666  00169E  EF53  F00B         	goto	u821
  1667  0016A2  EF56  F00B         	goto	u820
  1668  0016A6                     u821:
  1669  0016A6  868C               	bsf	3980,3,c	;volatile
  1670  0016A8  EF57  F00B         	goto	u835
  1671  0016AC                     u820:
  1672  0016AC  968C               	bcf	3980,3,c	;volatile
  1673  0016AE                     u835:
  1674                           
  1675                           ;rev-basic.c: 151: break;
  1676  0016AE  EFA0  F00B         	goto	l111
  1677  0016B2                     l106:
  1678                           
  1679                           ;rev-basic.c: 153: LATC4 = state;
  1680  0016B2  B004               	btfsc	REV_led@state^0,0,c
  1681  0016B4  EF5E  F00B         	goto	u841
  1682  0016B8  EF61  F00B         	goto	u840
  1683  0016BC                     u841:
  1684  0016BC  888B               	bsf	3979,4,c	;volatile
  1685  0016BE  EF62  F00B         	goto	u855
  1686  0016C2                     u840:
  1687  0016C2  988B               	bcf	3979,4,c	;volatile
  1688  0016C4                     u855:
  1689                           
  1690                           ;rev-basic.c: 154: break;
  1691  0016C4  EFA0  F00B         	goto	l111
  1692  0016C8                     l107:
  1693                           
  1694                           ;rev-basic.c: 156: LATD4 = state;
  1695  0016C8  B004               	btfsc	REV_led@state^0,0,c
  1696  0016CA  EF69  F00B         	goto	u861
  1697  0016CE  EF6C  F00B         	goto	u860
  1698  0016D2                     u861:
  1699  0016D2  888C               	bsf	3980,4,c	;volatile
  1700  0016D4  EF6D  F00B         	goto	u875
  1701  0016D8                     u860:
  1702  0016D8  988C               	bcf	3980,4,c	;volatile
  1703  0016DA                     u875:
  1704                           
  1705                           ;rev-basic.c: 157: break;
  1706  0016DA  EFA0  F00B         	goto	l111
  1707  0016DE                     l108:
  1708                           
  1709                           ;rev-basic.c: 159: LATD5 = state;
  1710  0016DE  B004               	btfsc	REV_led@state^0,0,c
  1711  0016E0  EF74  F00B         	goto	u881
  1712  0016E4  EF77  F00B         	goto	u880
  1713  0016E8                     u881:
  1714  0016E8  8A8C               	bsf	3980,5,c	;volatile
  1715  0016EA  EF78  F00B         	goto	u895
  1716  0016EE                     u880:
  1717  0016EE  9A8C               	bcf	3980,5,c	;volatile
  1718  0016F0                     u895:
  1719                           
  1720                           ;rev-basic.c: 160: break;
  1721  0016F0  EFA0  F00B         	goto	l111
  1722  0016F4                     l109:
  1723                           
  1724                           ;rev-basic.c: 162: LATD6 = state;
  1725  0016F4  B004               	btfsc	REV_led@state^0,0,c
  1726  0016F6  EF7F  F00B         	goto	u901
  1727  0016FA  EF82  F00B         	goto	u900
  1728  0016FE                     u901:
  1729  0016FE  8C8C               	bsf	3980,6,c	;volatile
  1730  001700  EF83  F00B         	goto	u915
  1731  001704                     u900:
  1732  001704  9C8C               	bcf	3980,6,c	;volatile
  1733  001706                     u915:
  1734                           
  1735                           ;rev-basic.c: 163: break;
  1736  001706  EFA0  F00B         	goto	l111
  1737  00170A                     l1466:
  1738  00170A  5005               	movf	REV_led@id^0,w,c
  1739                           
  1740                           ; Switch size 1, requested type "simple"
  1741                           ; Number of cases is 6, Range of values is 1 to 6
  1742                           ; switch strategies available:
  1743                           ; Name         Instructions Cycles
  1744                           ; simple_byte           19    10 (average)
  1745                           ;	Chosen strategy is simple_byte
  1746  00170C  0A01               	xorlw	1	; case 1
  1747  00170E  B4D8               	btfsc	status,2,c
  1748  001710  EF43  F00B         	goto	l103
  1749  001714  0A03               	xorlw	3	; case 2
  1750  001716  B4D8               	btfsc	status,2,c
  1751  001718  EF4E  F00B         	goto	l105
  1752  00171C  0A01               	xorlw	1	; case 3
  1753  00171E  B4D8               	btfsc	status,2,c
  1754  001720  EF59  F00B         	goto	l106
  1755  001724  0A07               	xorlw	7	; case 4
  1756  001726  B4D8               	btfsc	status,2,c
  1757  001728  EF64  F00B         	goto	l107
  1758  00172C  0A01               	xorlw	1	; case 5
  1759  00172E  B4D8               	btfsc	status,2,c
  1760  001730  EF6F  F00B         	goto	l108
  1761  001734  0A03               	xorlw	3	; case 6
  1762  001736  B4D8               	btfsc	status,2,c
  1763  001738  EF7A  F00B         	goto	l109
  1764  00173C  EFA0  F00B         	goto	l111
  1765  001740                     l111:
  1766  001740  0012               	return		;funcret
  1767  001742                     __end_of_REV_led:
  1768                           	opt callstack 0
  1769                           
  1770 ;; *************** function _REV_init *****************
  1771 ;; Defined at:
  1772 ;;		line 6 in file "rev-basic.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;		None
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;  dummy_int       2    0        int 
  1777 ;;  dummy_char      1    0        unsigned char 
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      void 
  1780 ;; Registers used:
  1781 ;;		wreg, status,2, status,0, cstack
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1791 ;;Total ram usage:        0 bytes
  1792 ;; Hardware stack levels used:    1
  1793 ;; Hardware stack levels required when called:    2
  1794 ;; This function calls:
  1795 ;;		_LCD_Init
  1796 ;; This function is called by:
  1797 ;;		_main
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           	psect	text10
  1802  00191A                     __ptext10:
  1803                           	opt callstack 0
  1804  00191A                     _REV_init:
  1805                           	opt callstack 28
  1806  00191A                     
  1807                           ;rev-basic.c: 7: char dummy_char;;rev-basic.c: 8: int dummy_int;;rev-basic.c: 10: TRISDb
      +                          its.RD2 = 0;
  1808  00191A  9495               	bcf	149,2,c	;volatile
  1809                           
  1810                           ;rev-basic.c: 11: TRISDbits.RD3 = 0;
  1811  00191C  9695               	bcf	149,3,c	;volatile
  1812                           
  1813                           ;rev-basic.c: 12: TRISCbits.RC4 = 0;
  1814  00191E  9894               	bcf	148,4,c	;volatile
  1815                           
  1816                           ;rev-basic.c: 13: TRISDbits.RD4 = 0;
  1817  001920  9895               	bcf	149,4,c	;volatile
  1818                           
  1819                           ;rev-basic.c: 14: TRISDbits.RD5 = 0;
  1820  001922  9A95               	bcf	149,5,c	;volatile
  1821                           
  1822                           ;rev-basic.c: 15: TRISDbits.RD6 = 0;
  1823  001924  9C95               	bcf	149,6,c	;volatile
  1824                           
  1825                           ;rev-basic.c: 17: ANSELDbits.ANSD2 = 0;
  1826  001926  010F               	movlb	15	; () banked
  1827  001928  953B               	bcf	59,2,b	;volatile
  1828                           
  1829                           ;rev-basic.c: 18: ANSELDbits.ANSD3 = 0;
  1830  00192A  973B               	bcf	59,3,b	;volatile
  1831                           
  1832                           ;rev-basic.c: 19: ANSELCbits.ANSC4 = 0;
  1833  00192C  993A               	bcf	58,4,b	;volatile
  1834                           
  1835                           ;rev-basic.c: 20: ANSELCbits.ANSC7 = 0;
  1836  00192E  9F3A               	bcf	58,7,b	;volatile
  1837                           
  1838                           ;rev-basic.c: 21: ANSELDbits.ANSD4 = 0;
  1839  001930  993B               	bcf	59,4,b	;volatile
  1840                           
  1841                           ;rev-basic.c: 22: ANSELDbits.ANSD5 = 0;
  1842  001932  9B3B               	bcf	59,5,b	;volatile
  1843                           
  1844                           ;rev-basic.c: 23: ANSELDbits.ANSD6 = 0;
  1845  001934  9D3B               	bcf	59,6,b	;volatile
  1846                           
  1847                           ;rev-basic.c: 25: LATDbits.LATD2 = 1;
  1848  001936  848C               	bsf	140,2,c	;volatile
  1849                           
  1850                           ;rev-basic.c: 26: LATDbits.LATD3 = 1;
  1851  001938  868C               	bsf	140,3,c	;volatile
  1852                           
  1853                           ;rev-basic.c: 27: LATCbits.LATC4 = 1;
  1854  00193A  888B               	bsf	139,4,c	;volatile
  1855                           
  1856                           ;rev-basic.c: 28: LATDbits.LATD4 = 1;
  1857  00193C  888C               	bsf	140,4,c	;volatile
  1858                           
  1859                           ;rev-basic.c: 29: LATDbits.LATD6 = 1;
  1860  00193E  8C8C               	bsf	140,6,c	;volatile
  1861                           
  1862                           ;rev-basic.c: 30: LATDbits.LATD5 = 1;
  1863  001940  8A8C               	bsf	140,5,c	;volatile
  1864                           
  1865                           ;rev-basic.c: 33: TRISCbits.RC0 = 1;
  1866  001942  8094               	bsf	148,0,c	;volatile
  1867                           
  1868                           ;rev-basic.c: 34: TRISAbits.RA4 = 1;
  1869  001944  8892               	bsf	146,4,c	;volatile
  1870                           
  1871                           ;rev-basic.c: 35: TRISAbits.RA3 = 1;
  1872  001946  8692               	bsf	146,3,c	;volatile
  1873                           
  1874                           ;rev-basic.c: 36: TRISAbits.RA2 = 1;
  1875  001948  8492               	bsf	146,2,c	;volatile
  1876                           
  1877                           ;rev-basic.c: 38: TRISCbits.TRISC6 = 1;
  1878  00194A  8C94               	bsf	148,6,c	;volatile
  1879                           
  1880                           ;rev-basic.c: 39: TRISCbits.TRISC7 = 1;
  1881  00194C  8E94               	bsf	148,7,c	;volatile
  1882                           
  1883                           ;rev-basic.c: 42: ANSELAbits.ANSA3 = 0;
  1884  00194E  9738               	bcf	56,3,b	;volatile
  1885                           
  1886                           ;rev-basic.c: 43: ANSELAbits.ANSA2 = 0;
  1887  001950  9538               	bcf	56,2,b	;volatile
  1888                           
  1889                           ;rev-basic.c: 46: TRISAbits.RA5 = 1;
  1890  001952  8A92               	bsf	146,5,c	;volatile
  1891                           
  1892                           ;rev-basic.c: 47: TRISEbits.RE0 = 1;
  1893  001954  8096               	bsf	150,0,c	;volatile
  1894                           
  1895                           ;rev-basic.c: 49: TRISAbits.RA5 = 1;
  1896  001956  8A92               	bsf	146,5,c	;volatile
  1897                           
  1898                           ;rev-basic.c: 50: TRISEbits.RE0 = 1;
  1899  001958  8096               	bsf	150,0,c	;volatile
  1900                           
  1901                           ;rev-basic.c: 52: ADON = 1;
  1902  00195A  80C2               	bsf	4034,0,c	;volatile
  1903  00195C                     
  1904                           ; BSR set to: 15
  1905                           ;rev-basic.c: 53: ADCON1 = 0;
  1906  00195C  0E00               	movlw	0
  1907  00195E  6EC1               	movwf	193,c	;volatile
  1908  001960                     
  1909                           ; BSR set to: 15
  1910                           ;rev-basic.c: 54: ADCON2 = (unsigned char)(ADCON2 | 0b00110101);
  1911  001960  50C0               	movf	192,w,c	;volatile
  1912  001962  0935               	iorlw	53
  1913  001964  6EC0               	movwf	192,c	;volatile
  1914  001966                     
  1915                           ; BSR set to: 15
  1916                           ;rev-basic.c: 56: ADCON2bits.ADFM = 1;
  1917  001966  8EC0               	bsf	192,7,c	;volatile
  1918  001968                     
  1919                           ; BSR set to: 15
  1920                           ;rev-basic.c: 57: ADCON2bits.ADCS = 0b101;
  1921  001968  50C0               	movf	192,w,c	;volatile
  1922  00196A  0BF8               	andlw	-8
  1923  00196C  0905               	iorlw	5
  1924  00196E  6EC0               	movwf	192,c	;volatile
  1925  001970                     
  1926                           ; BSR set to: 15
  1927                           ;rev-basic.c: 58: ADCON0bits.ADON = 1;
  1928  001970  80C2               	bsf	194,0,c	;volatile
  1929  001972                     
  1930                           ; BSR set to: 15
  1931                           ;rev-basic.c: 62: SPBRG1 = 51;
  1932  001972  0E33               	movlw	51
  1933  001974  6EAF               	movwf	175,c	;volatile
  1934  001976                     
  1935                           ; BSR set to: 15
  1936                           ;rev-basic.c: 64: TXSTA1bits.TXEN = 1;
  1937  001976  8AAC               	bsf	172,5,c	;volatile
  1938  001978                     
  1939                           ; BSR set to: 15
  1940                           ;rev-basic.c: 65: RCSTA1bits.CREN = 1;
  1941  001978  88AB               	bsf	171,4,c	;volatile
  1942  00197A                     
  1943                           ; BSR set to: 15
  1944                           ;rev-basic.c: 66: RCSTA1bits.SPEN = 1;
  1945  00197A  8EAB               	bsf	171,7,c	;volatile
  1946  00197C                     
  1947                           ; BSR set to: 15
  1948                           ;rev-basic.c: 69: LCD_Init();
  1949  00197C  ECC8  F00A         	call	_LCD_Init
  1950  001980  0012               	return		;funcret
  1951  001982                     __end_of_REV_init:
  1952                           	opt callstack 0
  1953                           
  1954 ;; *************** function _LCD_Init *****************
  1955 ;; Defined at:
  1956 ;;		line 6 in file "lcd.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;		None
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;		None
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1    wreg      void 
  1963 ;; Registers used:
  1964 ;;		wreg, status,2, cstack
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1972 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1973 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1974 ;;Total ram usage:        1 bytes
  1975 ;; Hardware stack levels used:    1
  1976 ;; Hardware stack levels required when called:    1
  1977 ;; This function calls:
  1978 ;;		_LCD_Send
  1979 ;; This function is called by:
  1980 ;;		_REV_init
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           	psect	text11
  1985  001590                     __ptext11:
  1986                           	opt callstack 0
  1987  001590                     _LCD_Init:
  1988                           	opt callstack 28
  1989  001590                     
  1990                           ;lcd.c: 8: ANSELDbits.ANSD0 = 0;
  1991  001590  010F               	movlb	15	; () banked
  1992  001592  913B               	bcf	59,0,b	;volatile
  1993                           
  1994                           ;lcd.c: 9: ANSELDbits.ANSD1 = 0;
  1995  001594  933B               	bcf	59,1,b	;volatile
  1996                           
  1997                           ;lcd.c: 11: TRISDbits.TRISD0 = 1;
  1998  001596  8095               	bsf	149,0,c	;volatile
  1999                           
  2000                           ;lcd.c: 12: TRISDbits.TRISD1 = 1;
  2001  001598  8295               	bsf	149,1,c	;volatile
  2002                           
  2003                           ;lcd.c: 13: TRISAbits.TRISA0 = 0;
  2004  00159A  9092               	bcf	146,0,c	;volatile
  2005                           
  2006                           ;lcd.c: 14: LATAbits.LATA0 = 1;
  2007  00159C  8089               	bsf	137,0,c	;volatile
  2008  00159E                     
  2009                           ; BSR set to: 15
  2010                           ;lcd.c: 17: SSP2CON1bits.SSPM = 0b1000;
  2011  00159E  506C               	movf	108,w,c	;volatile
  2012  0015A0  0BF0               	andlw	-16
  2013  0015A2  0908               	iorlw	8
  2014  0015A4  6E6C               	movwf	108,c	;volatile
  2015                           
  2016                           ;lcd.c: 18: SSP2ADD = 19;
  2017  0015A6  0E13               	movlw	19
  2018  0015A8  6E6E               	movwf	110,c	;volatile
  2019  0015AA                     
  2020                           ; BSR set to: 15
  2021                           ;lcd.c: 19: SSP2CON1bits.SSPEN = 1;
  2022  0015AA  8A6C               	bsf	108,5,c	;volatile
  2023  0015AC                     
  2024                           ; BSR set to: 15
  2025                           ;lcd.c: 21: _delay((unsigned long)((5)*(32E6/4000.0)));
  2026  0015AC  0E34               	movlw	52
  2027  0015AE  6E02               	movwf	??_LCD_Init^0,c
  2028  0015B0  0EF2               	movlw	242
  2029  0015B2                     u1037:
  2030  0015B2  2EE8               	decfsz	wreg,f,c
  2031  0015B4  D7FE               	bra	u1037
  2032  0015B6  2E02               	decfsz	??_LCD_Init^0,f,c
  2033  0015B8  D7FC               	bra	u1037
  2034  0015BA                     
  2035                           ;lcd.c: 23: SSP2CON2bits.SEN = 1;
  2036  0015BA  806B               	bsf	107,0,c	;volatile
  2037  0015BC                     l153:
  2038  0015BC  B06B               	btfsc	107,0,c	;volatile
  2039  0015BE  EFE3  F00A         	goto	u101
  2040  0015C2  EFE5  F00A         	goto	u100
  2041  0015C6                     u101:
  2042  0015C6  EFDE  F00A         	goto	l153
  2043  0015CA                     u100:
  2044  0015CA                     
  2045                           ;lcd.c: 25: SSP2IF = 0;
  2046  0015CA  9EA4               	bcf	4004,7,c	;volatile
  2047  0015CC                     
  2048                           ;lcd.c: 30: LCD_Send(0x7C);
  2049  0015CC  0E7C               	movlw	124
  2050  0015CE  EC4A  F00D         	call	_LCD_Send
  2051                           
  2052                           ;lcd.c: 31: LCD_Send(0x80);
  2053  0015D2  0E80               	movlw	128
  2054  0015D4  EC4A  F00D         	call	_LCD_Send
  2055                           
  2056                           ;lcd.c: 32: LCD_Send(0x38);
  2057  0015D8  0E38               	movlw	56
  2058  0015DA  EC4A  F00D         	call	_LCD_Send
  2059                           
  2060                           ;lcd.c: 33: LCD_Send(0x80);
  2061  0015DE  0E80               	movlw	128
  2062  0015E0  EC4A  F00D         	call	_LCD_Send
  2063                           
  2064                           ;lcd.c: 34: LCD_Send(0x39);
  2065  0015E4  0E39               	movlw	57
  2066  0015E6  EC4A  F00D         	call	_LCD_Send
  2067                           
  2068                           ;lcd.c: 35: LCD_Send(0x80);
  2069  0015EA  0E80               	movlw	128
  2070  0015EC  EC4A  F00D         	call	_LCD_Send
  2071                           
  2072                           ;lcd.c: 36: LCD_Send(0x17);
  2073  0015F0  0E17               	movlw	23
  2074  0015F2  EC4A  F00D         	call	_LCD_Send
  2075                           
  2076                           ;lcd.c: 37: LCD_Send(0x80);
  2077  0015F6  0E80               	movlw	128
  2078  0015F8  EC4A  F00D         	call	_LCD_Send
  2079                           
  2080                           ;lcd.c: 38: LCD_Send(0x7A);
  2081  0015FC  0E7A               	movlw	122
  2082  0015FE  EC4A  F00D         	call	_LCD_Send
  2083                           
  2084                           ;lcd.c: 39: LCD_Send(0x80);
  2085  001602  0E80               	movlw	128
  2086  001604  EC4A  F00D         	call	_LCD_Send
  2087                           
  2088                           ;lcd.c: 40: LCD_Send(0x5E);
  2089  001608  0E5E               	movlw	94
  2090  00160A  EC4A  F00D         	call	_LCD_Send
  2091                           
  2092                           ;lcd.c: 41: LCD_Send(0x80);
  2093  00160E  0E80               	movlw	128
  2094  001610  EC4A  F00D         	call	_LCD_Send
  2095                           
  2096                           ;lcd.c: 42: LCD_Send(0x6B);
  2097  001614  0E6B               	movlw	107
  2098  001616  EC4A  F00D         	call	_LCD_Send
  2099                           
  2100                           ;lcd.c: 43: LCD_Send(0x80);
  2101  00161A  0E80               	movlw	128
  2102  00161C  EC4A  F00D         	call	_LCD_Send
  2103                           
  2104                           ;lcd.c: 44: LCD_Send(0x0C);
  2105  001620  0E0C               	movlw	12
  2106  001622  EC4A  F00D         	call	_LCD_Send
  2107                           
  2108                           ;lcd.c: 45: LCD_Send(0x80);
  2109  001626  0E80               	movlw	128
  2110  001628  EC4A  F00D         	call	_LCD_Send
  2111                           
  2112                           ;lcd.c: 46: LCD_Send(0x01);
  2113  00162C  0E01               	movlw	1
  2114  00162E  EC4A  F00D         	call	_LCD_Send
  2115                           
  2116                           ;lcd.c: 47: LCD_Send(0x80);
  2117  001632  0E80               	movlw	128
  2118  001634  EC4A  F00D         	call	_LCD_Send
  2119                           
  2120                           ;lcd.c: 48: LCD_Send(0x06);
  2121  001638  0E06               	movlw	6
  2122  00163A  EC4A  F00D         	call	_LCD_Send
  2123                           
  2124                           ;lcd.c: 49: LCD_Send(0x80);
  2125  00163E  0E80               	movlw	128
  2126  001640  EC4A  F00D         	call	_LCD_Send
  2127                           
  2128                           ;lcd.c: 50: LCD_Send(0x02);
  2129  001644  0E02               	movlw	2
  2130  001646  EC4A  F00D         	call	_LCD_Send
  2131  00164A                     
  2132                           ;lcd.c: 52: SSP2CON2bits.PEN = 1;
  2133  00164A  846B               	bsf	107,2,c	;volatile
  2134  00164C                     l156:
  2135  00164C  B46B               	btfsc	107,2,c	;volatile
  2136  00164E  EF2B  F00B         	goto	u111
  2137  001652  EF2D  F00B         	goto	u110
  2138  001656                     u111:
  2139  001656  EF26  F00B         	goto	l156
  2140  00165A                     u110:
  2141  00165A                     
  2142                           ;lcd.c: 55: _delay((unsigned long)((5)*(32E6/4000.0)));
  2143  00165A  0E34               	movlw	52
  2144  00165C  6E02               	movwf	??_LCD_Init^0,c
  2145  00165E  0EF2               	movlw	242
  2146  001660                     u1047:
  2147  001660  2EE8               	decfsz	wreg,f,c
  2148  001662  D7FE               	bra	u1047
  2149  001664  2E02               	decfsz	??_LCD_Init^0,f,c
  2150  001666  D7FC               	bra	u1047
  2151  001668  0012               	return		;funcret
  2152  00166A                     __end_of_LCD_Init:
  2153                           	opt callstack 0
  2154                           
  2155 ;; *************** function _REV_btn *****************
  2156 ;; Defined at:
  2157 ;;		line 92 in file "rev-basic.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  id              1    wreg     unsigned char 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  id              1    1[COMRAM] unsigned char 
  2162 ;;  btn_state       1    2[COMRAM] unsigned char 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      unsigned char 
  2165 ;; Registers used:
  2166 ;;		wreg, status,2, status,0
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2173 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2174 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2176 ;;Total ram usage:        3 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_main
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text12
  2186  001496                     __ptext12:
  2187                           	opt callstack 0
  2188  001496                     _REV_btn:
  2189                           	opt callstack 30
  2190                           
  2191                           ;incstack = 0
  2192                           ;REV_btn@id stored from wreg
  2193  001496  6E02               	movwf	REV_btn@id^0,c
  2194  001498                     
  2195                           ;rev-basic.c: 94: char btn_state;;rev-basic.c: 96: switch(id){
  2196  001498  EF66  F00A         	goto	l1198
  2197  00149C                     l86:
  2198                           
  2199                           ;rev-basic.c: 98: btn_state = PORTCbits.RC0;
  2200  00149C  0E00               	movlw	0
  2201  00149E  B082               	btfsc	130,0,c	;volatile
  2202  0014A0  0E01               	movlw	1
  2203  0014A2  6E03               	movwf	REV_btn@btn_state^0,c
  2204                           
  2205                           ;rev-basic.c: 99: break;
  2206  0014A4  EF79  F00A         	goto	l1200
  2207  0014A8                     l88:
  2208                           
  2209                           ;rev-basic.c: 101: btn_state = PORTAbits.RA4;
  2210  0014A8  0E00               	movlw	0
  2211  0014AA  B880               	btfsc	128,4,c	;volatile
  2212  0014AC  0E01               	movlw	1
  2213  0014AE  6E03               	movwf	REV_btn@btn_state^0,c
  2214                           
  2215                           ;rev-basic.c: 102: break;
  2216  0014B0  EF79  F00A         	goto	l1200
  2217  0014B4                     l89:
  2218                           
  2219                           ;rev-basic.c: 104: btn_state = PORTAbits.RA3;
  2220  0014B4  0E00               	movlw	0
  2221  0014B6  B680               	btfsc	128,3,c	;volatile
  2222  0014B8  0E01               	movlw	1
  2223  0014BA  6E03               	movwf	REV_btn@btn_state^0,c
  2224                           
  2225                           ;rev-basic.c: 105: break;
  2226  0014BC  EF79  F00A         	goto	l1200
  2227  0014C0                     l90:
  2228                           
  2229                           ;rev-basic.c: 107: btn_state = PORTAbits.RA2;
  2230  0014C0  0E00               	movlw	0
  2231  0014C2  B480               	btfsc	128,2,c	;volatile
  2232  0014C4  0E01               	movlw	1
  2233  0014C6  6E03               	movwf	REV_btn@btn_state^0,c
  2234                           
  2235                           ;rev-basic.c: 108: break;
  2236  0014C8  EF79  F00A         	goto	l1200
  2237  0014CC                     l1198:
  2238  0014CC  5002               	movf	REV_btn@id^0,w,c
  2239                           
  2240                           ; Switch size 1, requested type "simple"
  2241                           ; Number of cases is 4, Range of values is 1 to 4
  2242                           ; switch strategies available:
  2243                           ; Name         Instructions Cycles
  2244                           ; simple_byte           13     7 (average)
  2245                           ;	Chosen strategy is simple_byte
  2246  0014CE  0A01               	xorlw	1	; case 1
  2247  0014D0  B4D8               	btfsc	status,2,c
  2248  0014D2  EF4E  F00A         	goto	l86
  2249  0014D6  0A03               	xorlw	3	; case 2
  2250  0014D8  B4D8               	btfsc	status,2,c
  2251  0014DA  EF54  F00A         	goto	l88
  2252  0014DE  0A01               	xorlw	1	; case 3
  2253  0014E0  B4D8               	btfsc	status,2,c
  2254  0014E2  EF5A  F00A         	goto	l89
  2255  0014E6  0A07               	xorlw	7	; case 4
  2256  0014E8  B4D8               	btfsc	status,2,c
  2257  0014EA  EF60  F00A         	goto	l90
  2258  0014EE  EF79  F00A         	goto	l1200
  2259  0014F2                     l1200:
  2260                           
  2261                           ;rev-basic.c: 113: _delay((unsigned long)((5)*(16000000/4000.0)));
  2262  0014F2  0E1A               	movlw	26
  2263  0014F4  6E01               	movwf	??_REV_btn^0,c
  2264  0014F6  0EF8               	movlw	248
  2265  0014F8                     u1057:
  2266  0014F8  2EE8               	decfsz	wreg,f,c
  2267  0014FA  D7FE               	bra	u1057
  2268  0014FC  2E01               	decfsz	??_REV_btn^0,f,c
  2269  0014FE  D7FC               	bra	u1057
  2270  001500  D000               	nop2	
  2271                           
  2272                           ;rev-basic.c: 115: switch(id){
  2273  001502  EFB3  F00A         	goto	l1212
  2274  001506                     l1202:
  2275                           
  2276                           ;rev-basic.c: 117: btn_state &= PORTCbits.RC0;
  2277  001506  B082               	btfsc	130,0,c	;volatile
  2278  001508  EF88  F00A         	goto	u261
  2279  00150C  EF8B  F00A         	goto	u260
  2280  001510                     u261:
  2281  001510  0E01               	movlw	1
  2282  001512  EF8C  F00A         	goto	u266
  2283  001516                     u260:
  2284  001516  0E00               	movlw	0
  2285  001518                     u266:
  2286  001518  1603               	andwf	REV_btn@btn_state^0,f,c
  2287                           
  2288                           ;rev-basic.c: 118: break;
  2289  00151A  EFC6  F00A         	goto	l1214
  2290  00151E                     l1204:
  2291                           
  2292                           ;rev-basic.c: 120: btn_state &= PORTAbits.RA4;
  2293  00151E  B880               	btfsc	128,4,c	;volatile
  2294  001520  EF94  F00A         	goto	u271
  2295  001524  EF97  F00A         	goto	u270
  2296  001528                     u271:
  2297  001528  0E01               	movlw	1
  2298  00152A  EF98  F00A         	goto	u276
  2299  00152E                     u270:
  2300  00152E  0E00               	movlw	0
  2301  001530                     u276:
  2302  001530  1603               	andwf	REV_btn@btn_state^0,f,c
  2303                           
  2304                           ;rev-basic.c: 121: break;
  2305  001532  EFC6  F00A         	goto	l1214
  2306  001536                     l1206:
  2307                           
  2308                           ;rev-basic.c: 123: btn_state &= PORTAbits.RA3;
  2309  001536  B680               	btfsc	128,3,c	;volatile
  2310  001538  EFA0  F00A         	goto	u281
  2311  00153C  EFA3  F00A         	goto	u280
  2312  001540                     u281:
  2313  001540  0E01               	movlw	1
  2314  001542  EFA4  F00A         	goto	u286
  2315  001546                     u280:
  2316  001546  0E00               	movlw	0
  2317  001548                     u286:
  2318  001548  1603               	andwf	REV_btn@btn_state^0,f,c
  2319                           
  2320                           ;rev-basic.c: 124: break;
  2321  00154A  EFC6  F00A         	goto	l1214
  2322  00154E                     l1208:
  2323                           
  2324                           ;rev-basic.c: 126: btn_state &= PORTAbits.RA2;
  2325  00154E  B480               	btfsc	128,2,c	;volatile
  2326  001550  EFAC  F00A         	goto	u291
  2327  001554  EFAF  F00A         	goto	u290
  2328  001558                     u291:
  2329  001558  0E01               	movlw	1
  2330  00155A  EFB0  F00A         	goto	u296
  2331  00155E                     u290:
  2332  00155E  0E00               	movlw	0
  2333  001560                     u296:
  2334  001560  1603               	andwf	REV_btn@btn_state^0,f,c
  2335                           
  2336                           ;rev-basic.c: 127: break;
  2337  001562  EFC6  F00A         	goto	l1214
  2338  001566                     l1212:
  2339  001566  5002               	movf	REV_btn@id^0,w,c
  2340                           
  2341                           ; Switch size 1, requested type "simple"
  2342                           ; Number of cases is 4, Range of values is 1 to 4
  2343                           ; switch strategies available:
  2344                           ; Name         Instructions Cycles
  2345                           ; simple_byte           13     7 (average)
  2346                           ;	Chosen strategy is simple_byte
  2347  001568  0A01               	xorlw	1	; case 1
  2348  00156A  B4D8               	btfsc	status,2,c
  2349  00156C  EF83  F00A         	goto	l1202
  2350  001570  0A03               	xorlw	3	; case 2
  2351  001572  B4D8               	btfsc	status,2,c
  2352  001574  EF8F  F00A         	goto	l1204
  2353  001578  0A01               	xorlw	1	; case 3
  2354  00157A  B4D8               	btfsc	status,2,c
  2355  00157C  EF9B  F00A         	goto	l1206
  2356  001580  0A07               	xorlw	7	; case 4
  2357  001582  B4D8               	btfsc	status,2,c
  2358  001584  EFA7  F00A         	goto	l1208
  2359  001588  EFC6  F00A         	goto	l1214
  2360  00158C                     l1214:
  2361                           
  2362                           ;rev-basic.c: 132: return btn_state;
  2363  00158C  5003               	movf	REV_btn@btn_state^0,w,c
  2364  00158E  0012               	return		;funcret
  2365  001590                     __end_of_REV_btn:
  2366                           	opt callstack 0
  2367                           
  2368 ;; *************** function _LCD_ShowString *****************
  2369 ;; Defined at:
  2370 ;;		line 58 in file "lcd.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;  lineNum         1    wreg     unsigned char 
  2373 ;;  textData        2    1[COMRAM] PTR unsigned char 
  2374 ;;		 -> main@text(17), 
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;  lineNum         1    3[COMRAM] unsigned char 
  2377 ;;  i               1    4[COMRAM] unsigned char 
  2378 ;; Return value:  Size  Location     Type
  2379 ;;                  1    wreg      void 
  2380 ;; Registers used:
  2381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2388 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2390 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2391 ;;Total ram usage:        4 bytes
  2392 ;; Hardware stack levels used:    1
  2393 ;; Hardware stack levels required when called:    1
  2394 ;; This function calls:
  2395 ;;		_LCD_Send
  2396 ;; This function is called by:
  2397 ;;		_main
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           	psect	text13
  2402  001742                     __ptext13:
  2403                           	opt callstack 0
  2404  001742                     _LCD_ShowString:
  2405                           	opt callstack 29
  2406                           
  2407                           ;incstack = 0
  2408                           ;LCD_ShowString@lineNum stored from wreg
  2409  001742  6E04               	movwf	LCD_ShowString@lineNum^0,c
  2410  001744                     
  2411                           ;lcd.c: 63: SSP2CON2bits.SEN = 1;
  2412  001744  806B               	bsf	107,0,c	;volatile
  2413  001746                     l162:
  2414  001746  B06B               	btfsc	107,0,c	;volatile
  2415  001748  EFA8  F00B         	goto	u921
  2416  00174C  EFAA  F00B         	goto	u920
  2417  001750                     u921:
  2418  001750  EFA3  F00B         	goto	l162
  2419  001754                     u920:
  2420  001754                     
  2421                           ;lcd.c: 65: SSP2IF = 0;
  2422  001754  9EA4               	bcf	4004,7,c	;volatile
  2423  001756                     
  2424                           ;lcd.c: 67: LCD_Send(0x7c);
  2425  001756  0E7C               	movlw	124
  2426  001758  EC4A  F00D         	call	_LCD_Send
  2427                           
  2428                           ;lcd.c: 69: LCD_Send(0x80);
  2429  00175C  0E80               	movlw	128
  2430  00175E  EC4A  F00D         	call	_LCD_Send
  2431  001762                     
  2432                           ;lcd.c: 71: if(lineNum == 1){
  2433  001762  0404               	decf	LCD_ShowString@lineNum^0,w,c
  2434  001764  A4D8               	btfss	status,2,c
  2435  001766  EFB7  F00B         	goto	u931
  2436  00176A  EFB9  F00B         	goto	u930
  2437  00176E                     u931:
  2438  00176E  EFBE  F00B         	goto	l1478
  2439  001772                     u930:
  2440  001772                     
  2441                           ;lcd.c: 72: LCD_Send(0x80);
  2442  001772  0E80               	movlw	128
  2443  001774  EC4A  F00D         	call	_LCD_Send
  2444                           
  2445                           ;lcd.c: 73: }
  2446  001778  EFCA  F00B         	goto	l166
  2447  00177C                     l1478:
  2448                           
  2449                           ;lcd.c: 74: else if (lineNum == 2){
  2450  00177C  0E02               	movlw	2
  2451  00177E  1804               	xorwf	LCD_ShowString@lineNum^0,w,c
  2452  001780  A4D8               	btfss	status,2,c
  2453  001782  EFC5  F00B         	goto	u941
  2454  001786  EFC7  F00B         	goto	u940
  2455  00178A                     u941:
  2456  00178A  EFCA  F00B         	goto	l166
  2457  00178E                     u940:
  2458  00178E                     
  2459                           ;lcd.c: 75: LCD_Send(0xC0);
  2460  00178E  0EC0               	movlw	192
  2461  001790  EC4A  F00D         	call	_LCD_Send
  2462  001794                     l166:
  2463                           
  2464                           ;lcd.c: 76: };lcd.c: 78: LCD_Send(0x40);
  2465  001794  0E40               	movlw	64
  2466  001796  EC4A  F00D         	call	_LCD_Send
  2467  00179A                     
  2468                           ;lcd.c: 80: for (i = 0; i<16; i++){
  2469  00179A  0E00               	movlw	0
  2470  00179C  6E05               	movwf	LCD_ShowString@i^0,c
  2471  00179E                     l1488:
  2472                           
  2473                           ;lcd.c: 81: LCD_Send(textData[i]);
  2474  00179E  5005               	movf	LCD_ShowString@i^0,w,c
  2475  0017A0  2402               	addwf	LCD_ShowString@textData^0,w,c
  2476  0017A2  6ED9               	movwf	fsr2l,c
  2477  0017A4  0E00               	movlw	0
  2478  0017A6  2003               	addwfc	(LCD_ShowString@textData+1)^0,w,c
  2479  0017A8  6EDA               	movwf	fsr2h,c
  2480  0017AA  50DF               	movf	indf2,w,c
  2481  0017AC  EC4A  F00D         	call	_LCD_Send
  2482  0017B0  2A05               	incf	LCD_ShowString@i^0,f,c
  2483  0017B2  0E0F               	movlw	15
  2484  0017B4  6405               	cpfsgt	LCD_ShowString@i^0,c
  2485  0017B6  EFDF  F00B         	goto	u951
  2486  0017BA  EFE1  F00B         	goto	u950
  2487  0017BE                     u951:
  2488  0017BE  EFCF  F00B         	goto	l1488
  2489  0017C2                     u950:
  2490  0017C2                     
  2491                           ;lcd.c: 82: };lcd.c: 84: SSP2CON2bits.PEN = 1;
  2492  0017C2  846B               	bsf	107,2,c	;volatile
  2493  0017C4                     l170:
  2494  0017C4  B46B               	btfsc	107,2,c	;volatile
  2495  0017C6  EFE7  F00B         	goto	u961
  2496  0017CA  EFE9  F00B         	goto	u960
  2497  0017CE                     u961:
  2498  0017CE  EFE2  F00B         	goto	l170
  2499  0017D2                     u960:
  2500  0017D2  0012               	return		;funcret
  2501  0017D4                     __end_of_LCD_ShowString:
  2502                           	opt callstack 0
  2503                           
  2504 ;; *************** function _LCD_Clear *****************
  2505 ;; Defined at:
  2506 ;;		line 97 in file "lcd.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;		None
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;		None
  2511 ;; Return value:  Size  Location     Type
  2512 ;;                  1    wreg      void 
  2513 ;; Registers used:
  2514 ;;		wreg, cstack
  2515 ;; Tracked objects:
  2516 ;;		On entry : 0/0
  2517 ;;		On exit  : 0/0
  2518 ;;		Unchanged: 0/0
  2519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2524 ;;Total ram usage:        0 bytes
  2525 ;; Hardware stack levels used:    1
  2526 ;; Hardware stack levels required when called:    1
  2527 ;; This function calls:
  2528 ;;		_LCD_Send
  2529 ;; This function is called by:
  2530 ;;		_main
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           	psect	text14
  2535  001A5E                     __ptext14:
  2536                           	opt callstack 0
  2537  001A5E                     _LCD_Clear:
  2538                           	opt callstack 29
  2539  001A5E                     
  2540                           ;lcd.c: 98: SSP2CON2bits.SEN = 1;
  2541  001A5E  806B               	bsf	107,0,c	;volatile
  2542  001A60                     l185:
  2543  001A60  B06B               	btfsc	107,0,c	;volatile
  2544  001A62  EF35  F00D         	goto	u501
  2545  001A66  EF37  F00D         	goto	u500
  2546  001A6A                     u501:
  2547  001A6A  EF30  F00D         	goto	l185
  2548  001A6E                     u500:
  2549  001A6E                     
  2550                           ;lcd.c: 100: SSP2IF = 0;
  2551  001A6E  9EA4               	bcf	4004,7,c	;volatile
  2552  001A70                     
  2553                           ;lcd.c: 102: LCD_Send(0x7C);
  2554  001A70  0E7C               	movlw	124
  2555  001A72  EC4A  F00D         	call	_LCD_Send
  2556                           
  2557                           ;lcd.c: 103: LCD_Send(0x80);
  2558  001A76  0E80               	movlw	128
  2559  001A78  EC4A  F00D         	call	_LCD_Send
  2560                           
  2561                           ;lcd.c: 104: LCD_Send(0x01);
  2562  001A7C  0E01               	movlw	1
  2563  001A7E  EC4A  F00D         	call	_LCD_Send
  2564  001A82                     
  2565                           ;lcd.c: 106: SSP2CON2bits.PEN = 1;
  2566  001A82  846B               	bsf	107,2,c	;volatile
  2567  001A84                     l188:
  2568  001A84  B46B               	btfsc	107,2,c	;volatile
  2569  001A86  EF47  F00D         	goto	u511
  2570  001A8A  EF49  F00D         	goto	u510
  2571  001A8E                     u511:
  2572  001A8E  EF42  F00D         	goto	l188
  2573  001A92                     u510:
  2574  001A92  0012               	return		;funcret
  2575  001A94                     __end_of_LCD_Clear:
  2576                           	opt callstack 0
  2577                           
  2578 ;; *************** function _LCD_Send *****************
  2579 ;; Defined at:
  2580 ;;		line 88 in file "lcd.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;  data            1    wreg     unsigned char 
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;  data            1    0[COMRAM] unsigned char 
  2585 ;; Return value:  Size  Location     Type
  2586 ;;                  1    wreg      void 
  2587 ;; Registers used:
  2588 ;;		wreg
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2595 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2597 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2598 ;;Total ram usage:        1 bytes
  2599 ;; Hardware stack levels used:    1
  2600 ;; This function calls:
  2601 ;;		Nothing
  2602 ;; This function is called by:
  2603 ;;		_LCD_Init
  2604 ;;		_LCD_ShowString
  2605 ;;		_LCD_Clear
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608                           
  2609                           	psect	text15
  2610  001A94                     __ptext15:
  2611                           	opt callstack 0
  2612  001A94                     _LCD_Send:
  2613                           	opt callstack 28
  2614                           
  2615                           ;incstack = 0
  2616                           ;LCD_Send@data stored from wreg
  2617  001A94  6E01               	movwf	LCD_Send@data^0,c
  2618  001A96                     
  2619                           ;lcd.c: 90: SSP2BUF = data;
  2620  001A96  C001  FF6F         	movff	LCD_Send@data,3951	;volatile
  2621  001A9A                     l176:
  2622  001A9A  B06D               	btfsc	109,0,c	;volatile
  2623  001A9C  EF52  F00D         	goto	u21
  2624  001AA0  EF54  F00D         	goto	u20
  2625  001AA4                     u21:
  2626  001AA4  EF4D  F00D         	goto	l176
  2627  001AA8                     u20:
  2628  001AA8                     l179:
  2629  001AA8  AEA4               	btfss	4004,7,c	;volatile
  2630  001AAA  EF59  F00D         	goto	u31
  2631  001AAE  EF5B  F00D         	goto	u30
  2632  001AB2                     u31:
  2633  001AB2  EF54  F00D         	goto	l179
  2634  001AB6                     u30:
  2635  001AB6                     
  2636                           ;lcd.c: 93: SSP2IF = 0;
  2637  001AB6  9EA4               	bcf	4004,7,c	;volatile
  2638  001AB8  0012               	return		;funcret
  2639  001ABA                     __end_of_LCD_Send:
  2640                           	opt callstack 0
  2641                           
  2642                           	psect	text16
  2643  000000                     __ptext16:
  2644                           	opt callstack 0
  2645  000000                     
  2646                           	psect	rparam
  2647  0000                     tosu	equ	0xFFF
  2648                           tosh	equ	0xFFE
  2649                           tosl	equ	0xFFD
  2650                           stkptr	equ	0xFFC
  2651                           pclatu	equ	0xFFB
  2652                           pclath	equ	0xFFA
  2653                           pcl	equ	0xFF9
  2654                           tblptru	equ	0xFF8
  2655                           tblptrh	equ	0xFF7
  2656                           tblptrl	equ	0xFF6
  2657                           tablat	equ	0xFF5
  2658                           prodh	equ	0xFF4
  2659                           prodl	equ	0xFF3
  2660                           indf0	equ	0xFEF
  2661                           postinc0	equ	0xFEE
  2662                           postdec0	equ	0xFED
  2663                           preinc0	equ	0xFEC
  2664                           plusw0	equ	0xFEB
  2665                           fsr0h	equ	0xFEA
  2666                           fsr0l	equ	0xFE9
  2667                           wreg	equ	0xFE8
  2668                           indf1	equ	0xFE7
  2669                           postinc1	equ	0xFE6
  2670                           postdec1	equ	0xFE5
  2671                           preinc1	equ	0xFE4
  2672                           plusw1	equ	0xFE3
  2673                           fsr1h	equ	0xFE2
  2674                           fsr1l	equ	0xFE1
  2675                           bsr	equ	0xFE0
  2676                           indf2	equ	0xFDF
  2677                           postinc2	equ	0xFDE
  2678                           postdec2	equ	0xFDD
  2679                           preinc2	equ	0xFDC
  2680                           plusw2	equ	0xFDB
  2681                           fsr2h	equ	0xFDA
  2682                           fsr2l	equ	0xFD9
  2683                           status	equ	0xFD8


Data Sizes:
    Strings     58
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     63      63
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[9]), STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 17
		 -> main@text(COMRAM[17]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), main@text(COMRAM[17]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), main@text(COMRAM[17]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), printf@ap(COMRAM[2]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[9]), STR_3(CODE[15]), STR_2(CODE[17]), STR_1(CODE[17]), 

    S1559__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    S1559__prbuf$ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), main@text(COMRAM[17]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), main@text(COMRAM[17]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 5
		 -> sprintf@pb(COMRAM[4]), printf@pb(COMRAM[4]), 

    LCD_ShowString@textData	PTR unsigned char  size(2) Largest target is 17
		 -> main@text(COMRAM[17]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _main->_sprintf
    _sprintf->__doprnt
    _printf->__doprnt
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _REV_led->_REV_btn
    _REV_init->_LCD_Init
    _LCD_Init->_LCD_Send
    _LCD_ShowString->_LCD_Send
    _LCD_Clear->_LCD_Send

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0    5716
                                             37 COMRAM    26    26      0
                          _LCD_Clear
                     _LCD_ShowString
                            _REV_btn
                           _REV_init
                            _REV_led
                            _REV_pot
                             ___lmul
                             _printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             12     6      6    2409
                                             25 COMRAM    12     6      6
                            __doprnt
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     6      6    1973
                                             25 COMRAM    12     6      6
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             22    16      6    1788
                                             12 COMRAM    13     7      6
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _REV_pot                                              5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _REV_led                                              2     1      1     329
                                              3 COMRAM     2     1      1
                            _REV_btn (ARG)
 ---------------------------------------------------------------------------------
 (1) _REV_init                                             3     3      0      15
                           _LCD_Init
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             1     1      0      15
                                              1 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _REV_btn                                              3     3      0      45
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_ShowString                                       4     2      2     302
                                              1 COMRAM     4     2      2
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0      15
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Send
   _LCD_ShowString
     _LCD_Send
   _REV_btn
   _REV_init
     _LCD_Init
       _LCD_Send
   _REV_led
     _REV_btn (ARG)
   _REV_pot
   ___lmul
   _printf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     3F      3F       1       66.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
ABS                  0      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BIGRAM             F37      0       0      37        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jan 22 10:21:02 2020

                     l71 1980                       l80 18F4                       l90 14C0  
                     l76 18F2                       l86 149C                       l79 1918  
                     l88 14A8                       l89 14B4                       l99 158E  
                     u10 1ACA                       u11 1AC6                       u20 1AA8  
                     u21 1AA4                       u30 1AB6                       u31 1AB2  
           REV_led@state 0004                      l111 1740                      l103 1686  
                    l105 169C                      l106 16B2                      l114 1ABC  
                    l107 16C8                      l108 16DE                      l109 16F4  
                    l117 1ACE                      l153 15BC                      l170 17C4  
                    l162 1746                      l155 15CA                      l164 1754  
                    l156 164C                      l260 1336                      l181 1AB6  
                    l173 17D2                      l182 1AB8                      l166 1794  
                    l191 1A92                      l159 1668                      l176 1A9A  
                    l185 1A60                      l169 17C2                      l274 18A0  
                    l179 1AA8                      l187 1A6E                      l275 18B0  
                    l188 1A84                      l742 183E                      l752 19DC  
                    l931 1A5C                      l749 1846                      l759 19E4  
                    l938 1A26                      u100 15CA                      u101 15C6  
                    u110 165A                      u111 1656                      u500 1A6E  
                    u260 1516                      u501 1A6A                      u261 1510  
                    u510 1A92                      u270 152E                      u511 1A8E  
                    u271 1528                      u280 1546                      u600 1828  
                    u281 1540                      u601 1824                      u290 155E  
                    u266 1518                      u610 1994                      u291 1558  
                    u611 1990                      u276 1530                      u620 19B2  
                    u700 11B4                      u621 19AE                      u701 11B0  
                    u286 1548                      u630 19C8                      u710 11D2  
                    u631 19C4                      u711 11CE                      u296 1560  
                    u800 1696                      u640 105C                      u801 1690  
                    u641 1058                      u730 129C                      u650 107A  
                    u731 1298                      u651 1076                      u900 1704  
                    u820 16AC                      u580 17EE                      u901 16FE  
                    u821 16A6                      u581 17EA                      u590 180C  
                    u750 130A                      u670 1146                      u815 1698  
                    u591 1808                      u751 1306                      u671 1142  
                    u920 1754                      u840 16C2                      u760 132E  
                    u728 11EC                      u680 1186                      u921 1750  
                    u841 16BC                      u761 132A                      u729 1200  
                    u681 1182                      u930 1772                      u770 1902  
                    u690 119E                      u931 176E                      u915 1706  
                    u835 16AE                      u771 18FE                      u691 119A  
                    u940 178E                      u860 16D8                      u780 167E  
                    u748 12B6                      u668 1094                      u941 178A  
                    u861 16D2                      u781 1678                      u749 12CA  
                    u669 10A8                      u950 17C2                      u790 1680  
                    u951 17BE                      u855 16C4                      u960 17D2  
                    u880 16EE                      u961 17CE                      u881 16E8  
                    u970 1866                      u875 16DA                      u971 1862  
                    u980 18A0                      u981 189C                      u990 138C  
                    u895 16F0                      u991 1388                      tosl 000FFD  
                    wreg 000FE8               _TXSTA1bits 000FAC                     l1200 14F2  
                   l1024 1ABC                     l1202 1506                     l1026 1ACA  
                   l1028 1A96                     l1204 151E                     l1212 1566  
                   l1206 1536                     l1214 158C                     l1070 159E  
                   l1208 154E                     l1080 164A                     l1072 15AA  
                   l1160 1966                     l1400 1152                     l1082 165A  
                   l1074 15AC                     l1170 1978                     l1162 1968  
                   l1154 191A                     l1410 118A                     l1260 1A82  
                   l1076 15BA                     l1068 1590                     l1172 197A  
                   l1164 1970                     l1156 195C                     l1340 17EE  
                   l1420 1204                     l1412 118C                     l1078 15CC  
                   l1174 197C                     l1166 1972                     l1158 1960  
                   l1510 1858                     l1350 1828                     l1342 17F6  
                   l1430 129C                     l1422 1220                     l1414 119E  
                   l1406 1156                     l1502 1A28                     l1256 1A5E  
                   l1168 1976                     l1512 1866                     l1352 1830  
                   l1344 17FE                     l1336 17D4                     l1360 1994  
                   l1432 12CE                     l1416 11B4                     l1424 122E  
                   l1440 132E                     l1504 1A40                     l1520 133C  
                   l1258 1A70                     l1194 1498                     l1450 18D0  
                   l1514 1876                     l1354 1832                     l1346 180C  
                   l1338 17DC                     l1370 19D0                     l1362 199C  
                   l1434 12EA                     l1426 1236                     l1418 11D2  
                   l1530 137A                     l1522 1340                     l1444 18B4  
                   l1516 1880                     l1508 1848                     l1356 1838  
                   l1348 1812                     l1372 19D6                     l1364 19A4  
                   l1428 127E                     l1436 12F8                     l1380 107A  
                   l1532 138C                     l1540 140E                     l1524 1344  
                   l1470 1744                     l1198 14CC                     l1462 166C  
                   l1446 18B8                     l1366 19B2                     l1358 1982  
                   l1390 10DE                     l1382 10AC                     l1438 130A  
                   l1374 1046                     l1550 146C                     l1542 141C  
                   l1534 139C                     l1526 1358                     l1518 1338  
                   l1480 178E                     l1472 1756                     l1448 18C4  
                   l1456 18DC                     l1368 19C8                     l1392 1110  
                   l1384 10C8                     l1376 104A                     l1552 147A  
                   l1544 142A                     l1536 13A0                     l1528 1366  
                   l1490 17B0                     l1482 179A                     l1474 1762  
                   l1466 170A                     l1458 1902                     l1394 1138  
                   l1378 105C                     l1386 10DA                     l1554 1488  
                   l1546 1442                     l1538 13F2                     l1492 17B2  
                   l1476 1772                     l1468 1744                     l1396 1146  
                   l1556 148C                     l1548 1450                     l1478 177C  
                   l1398 114A                     l1494 19E6                     l1488 179E  
                   l1496 19FE                     l1498 1A1A                     _ADON 007E10  
                   STR_1 101C                     STR_2 100B                     STR_3 102D  
                   STR_4 103C                     u1000 139C                     u1001 1398  
                   u1020 1488                     u1021 1484                     u1015 13C8  
                   u1016 13D2                     u1017 13E2                     u1037 15B2  
                   u1047 1660                     u1057 14F8                     _main 1338  
        __end_of_REV_btn 1590          __end_of_REV_led 1742       __size_of_LCD_Clear 0036  
        __end_of_REV_pot 191A                     fsr2h 000FDA                     indf2 000FDF  
                   fsr2l 000FD9                     prodh 000FF4                     prodl 000FF3  
                   start 0000             ___param_bank 000000           _LCD_ShowString 1742  
       __end_of_LCD_Init 166A         __end_of_LCD_Send 1ABA                    ?_main 0001  
                  _LATD2 007C62                    _LATC4 007C5C                    _LATD3 007C63  
                  _LATD4 007C64                    _RC1IF 007CF5                    _LATD5 007C65  
                  _LATD6 007C66          __end_of___lwdiv 1848          __end_of___lwmod 19E6  
                  _TX1IF 007CF4          __end_of__doprnt 1338      ___lmul@multiplicand 0005  
        __end_of_dpowers 100B         __end_of_REV_init 1982                    _putch 1ABA  
                  pclath 000FFA                    tablat 000FF5                    status 000FD8  
        __end_of_sprintf 1A28           __CFG_FOSC$HSMP 000000            REV_pot@adc_id 0005  
        __initialization 1AD0   __end_of_LCD_ShowString 17D4             __end_of_main 1496  
           LCD_Send@data 0001                   ??_main 0026        __end_of_LCD_Clear 1A94  
          __activetblptr 000003           __CFG_PLLCFG$ON 000000                   _ADCON1 000FC1  
                 _ADCON2 000FC0                ??_REV_led 0005                ??_REV_btn 0001  
                 _ADRESH 000FC4                   _ADRESL 000FC3                ??_REV_pot 0003  
                 ?_putch 0001                   _GODONE 007E11           __CFG_WDTEN$OFF 000000  
                 _RCREG1 000FAE                   _SPBRG1 000FAF                   _SSP2IF 007D27  
                 _TXREG1 000FAD          ?_LCD_ShowString 0002                   ___lmul 1848  
              ??___lwdiv 0005                ??___lwmod 000C                ??__doprnt 0013  
           __doprnt@flag 0015                   _printf 1A28             __doprnt@prec 0016  
       REV_btn@btn_state 0003             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
              ??_sprintf 0020               __accesstop 0060  __end_of__initialization 1AD0  
              ?_LCD_Init 0001                ?_LCD_Send 0001            ___rparam_used 000001  
         __pcstackCOMRAM 0001            __end_of_putch 1AD0                ?_REV_init 0001  
             __doprnt@ap 0011               __doprnt@pb 000D                  ??_putch 0001  
             ??_LCD_Init 0002               ??_LCD_Send 0001                  ?___lmul 0001  
             ??_REV_init 0003           ___lmul@product 0009                  ?_printf 001A  
                _SSP2ADD 000F6E                  _SSP2BUF 000F6F                  _REV_led 166A  
                _REV_btn 1496                  _REV_pot 18B2                REV_led@id 0005  
              REV_btn@id 0002          LCD_ShowString@i 0005                  __Hparam 0000  
                __Lparam 0000          __size_of___lmul 006A                  ___lwdiv 17D4  
                ___lwmod 1982             __psmallconst 1000                  __doprnt 1046  
                __pcinit 1AD0                  __ramtop 1000                  __ptext0 1338  
                __ptext1 19E6                  __ptext2 1A28                  __ptext3 1046  
                __ptext4 1ABA                  __ptext5 1982                  __ptext6 17D4  
                __ptext7 1848                  __ptext8 18B2                  __ptext9 166A  
        __size_of_printf 0036                  _dpowers 1001                _LCD_Clear 1A5E  
                _sprintf 19E6     end_of_initialization 1AD0         ??_LCD_ShowString 0004  
  LCD_ShowString@lineNum 0004                  printf@f 001A                  postdec2 000FDD  
                postinc2 000FDE                _PORTAbits 000F80                _PORTCbits 000F82  
              _TRISAbits 000F92                _TRISCbits 000F94                _TRISDbits 000F95  
              _TRISEbits 000F96               ?_LCD_Clear 0001        __size_of_LCD_Init 00DA  
      __size_of_LCD_Send 0026           __end_of___lmul 18B2        __size_of_REV_init 0068  
         __end_of_printf 1A5E      start_initialization 1AD0                 ??___lmul 0009  
            __doprnt@val 0017                 ??_printf 0020              ??_LCD_Clear 0002  
               ?_REV_led 0004                 ?_REV_btn 0001                 ?_REV_pot 0001  
              __doprnt@c 0019                __doprnt@f 000F         ___lwdiv@dividend 0001  
               ?___lwdiv 0001                 ?___lwmod 0008                 ?__doprnt 000D  
       __CFG_PRICLKEN$ON 000000              __smallconst 1000         ___lwdiv@quotient 0005  
               ?_sprintf 001A           __size_of_putch 0016                 _LCD_Init 1590  
               _LCD_Send 1A94                 _LATAbits 000F89                 _LATCbits 000F8B  
               _LATDbits 000F8C                 _REV_init 191A               _ADCON0bits 000FC2  
             _ADCON2bits 000FC0                main@count 003B        ___lmul@multiplier 0001  
       __size_of_REV_btn 00FA         __size_of_REV_led 00D8         __size_of_REV_pot 0068  
               __Hrparam 0000                 __Lrparam 0000         __size_of___lwdiv 0074  
       __size_of___lwmod 0064         __size_of__doprnt 02F2               _ANSELAbits 000F38  
             _ANSELCbits 000F3A               _ANSELDbits 000F3B          ___lwdiv@divisor 0003  
        ___lwdiv@counter 0007                 __ptext10 191A                 __ptext11 1590  
               __ptext12 1496                 __ptext13 1742                 __ptext14 1A5E  
               __ptext15 1A94                 __ptext16 0000             _SSP2CON1bits 000F6C  
           _SSP2CON2bits 000F6B         __size_of_sprintf 0042            __size_of_main 015E  
__size_of_LCD_ShowString 0092                 fp__putch 0000                 main@flag 003A  
               main@pot1 003C                 main@pot2 0038                 main@text 0027  
           _SSP2STATbits 000F6D                sprintf@ap 0020                sprintf@pb 0022  
              sprintf@wh 001A         ___lwmod@dividend 0008               _RCSTA1bits 000FAB  
               printf@ap 0020                 printf@pb 0022   LCD_ShowString@textData 0002  
               sprintf@f 001C          ___lwmod@divisor 000A          ___lwmod@counter 000C  
