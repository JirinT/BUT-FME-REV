

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Mar 22 07:43:16 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50  0000                     
    51                           ; Version 2.32
    52                           ; Generated 02/02/2021 GMT
    53                           ; 
    54                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F46K22 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     _ANSELCbits	set	3898
    87  0000                     _ANSELDbits	set	3899
    88  0000                     _ANSELA	set	3896
    89  0000                     _TMR1	set	4046
    90  0000                     _IPR1bits	set	3999
    91  0000                     _PR2	set	4027
    92  0000                     _T2CONbits	set	4026
    93  0000                     _T1CONbits	set	4045
    94  0000                     _TXREG1	set	4013
    95  0000                     _TXSTA1bits	set	4012
    96  0000                     _RCSTA1bits	set	4011
    97  0000                     _SPBRG1	set	4015
    98  0000                     _SPBRGH1	set	4016
    99  0000                     _SSP2STATbits	set	3949
   100  0000                     _SSP2BUF	set	3951
   101  0000                     _SSP2CON2bits	set	3947
   102  0000                     _SSP2ADD	set	3950
   103  0000                     _SSP2CON1bits	set	3948
   104  0000                     _LATAbits	set	3977
   105  0000                     _PORTAbits	set	3968
   106  0000                     _PORTCbits	set	3970
   107  0000                     _LATCbits	set	3979
   108  0000                     _LATDbits	set	3980
   109  0000                     _TRISDbits	set	3989
   110  0000                     _TRISAbits	set	3986
   111  0000                     _TRISCbits	set	3988
   112  0000                     _RCREG1	set	4014
   113  0000                     _TMR2ON	set	32210
   114  0000                     _TMR1ON	set	32360
   115  0000                     _TX1IF	set	31988
   116  0000                     _SSP2IF	set	32039
   117  0000                     _GIE	set	32663
   118  0000                     _PEIE	set	32662
   119  0000                     _TMR2IE	set	31977
   120  0000                     _TMR2IF	set	31985
   121  0000                     _TMR1IE	set	31976
   122  0000                     _TMR1IF	set	31984
   123  0000                     _RC1IF	set	31989
   124  0000                     _RC1IE	set	31981
   125                           
   126                           	psect	mediumconst
   127  00FE82                     __pmediumconst:
   128                           	callstack 0
   129  00FE82  00                 	db	0
   130  00FE83                     STR_3:
   131                           
   132                           ; BSR set to: 0
   133  00FE83  50                 	db	80	;'P'
   134  00FE84  72                 	db	114	;'r'
   135  00FE85  6F                 	db	111	;'o'
   136  00FE86  20                 	db	32
   137  00FE87  7A                 	db	122	;'z'
   138  00FE88  6E                 	db	110	;'n'
   139  00FE89  6F                 	db	111	;'o'
   140  00FE8A  76                 	db	118	;'v'
   141  00FE8B  75                 	db	117	;'u'
   142  00FE8C  72                 	db	114	;'r'
   143  00FE8D  6F                 	db	111	;'o'
   144  00FE8E  7A                 	db	122	;'z'
   145  00FE8F  74                 	db	116	;'t'
   146  00FE90  6F                 	db	111	;'o'
   147  00FE91  63                 	db	99	;'c'
   148  00FE92  65                 	db	101	;'e'
   149  00FE93  6E                 	db	110	;'n'
   150  00FE94  69                 	db	105	;'i'
   151  00FE95  20                 	db	32
   152  00FE96  6A                 	db	106	;'j'
   153  00FE97  65                 	db	101	;'e'
   154  00FE98  64                 	db	100	;'d'
   155  00FE99  6E                 	db	110	;'n'
   156  00FE9A  6F                 	db	111	;'o'
   157  00FE9B  74                 	db	116	;'t'
   158  00FE9C  6C                 	db	108	;'l'
   159  00FE9D  69                 	db	105	;'i'
   160  00FE9E  76                 	db	118	;'v'
   161  00FE9F  79                 	db	121	;'y'
   162  00FEA0  63                 	db	99	;'c'
   163  00FEA1  68                 	db	104	;'h'
   164  00FEA2  20                 	db	32
   165  00FEA3  6B                 	db	107	;'k'
   166  00FEA4  6F                 	db	111	;'o'
   167  00FEA5  6C                 	db	108	;'l'
   168  00FEA6  20                 	db	32
   169  00FEA7  73                 	db	115	;'s'
   170  00FEA8  74                 	db	116	;'t'
   171  00FEA9  69                 	db	105	;'i'
   172  00FEAA  73                 	db	115	;'s'
   173  00FEAB  6B                 	db	107	;'k'
   174  00FEAC  6E                 	db	110	;'n'
   175  00FEAD  65                 	db	101	;'e'
   176  00FEAE  74                 	db	116	;'t'
   177  00FEAF  65                 	db	101	;'e'
   178  00FEB0  20                 	db	32
   179  00FEB1  74                 	db	116	;'t'
   180  00FEB2  6C                 	db	108	;'l'
   181  00FEB3  61                 	db	97	;'a'
   182  00FEB4  63                 	db	99	;'c'
   183  00FEB5  69                 	db	105	;'i'
   184  00FEB6  74                 	db	116	;'t'
   185  00FEB7  6B                 	db	107	;'k'
   186  00FEB8  61                 	db	97	;'a'
   187  00FEB9  20                 	db	32
   188  00FEBA  42                 	db	66	;'B'
   189  00FEBB  54                 	db	84	;'T'
   190  00FEBC  4E                 	db	78	;'N'
   191  00FEBD  31                 	db	49	;'1'
   192  00FEBE  20                 	db	32
   193  00FEBF  7C                 	db	124
   194  00FEC0  20                 	db	32
   195  00FEC1  42                 	db	66	;'B'
   196  00FEC2  54                 	db	84	;'T'
   197  00FEC3  4E                 	db	78	;'N'
   198  00FEC4  32                 	db	50	;'2'
   199  00FEC5  20                 	db	32
   200  00FEC6  7C                 	db	124
   201  00FEC7  20                 	db	32
   202  00FEC8  42                 	db	66	;'B'
   203  00FEC9  54                 	db	84	;'T'
   204  00FECA  4E                 	db	78	;'N'
   205  00FECB  20                 	db	32
   206  00FECC  33                 	db	51	;'3'
   207  00FECD  2E                 	db	46
   208  00FECE  0A                 	db	10
   209  00FECF  00                 	db	0
   210  00FED0                     STR_1:
   211                           
   212                           ; BSR set to: 0
   213  00FED0  50                 	db	80	;'P'
   214  00FED1  72                 	db	114	;'r'
   215  00FED2  65                 	db	101	;'e'
   216  00FED3  64                 	db	100	;'d'
   217  00FED4  20                 	db	32
   218  00FED5  7A                 	db	122	;'z'
   219  00FED6  61                 	db	97	;'a'
   220  00FED7  68                 	db	104	;'h'
   221  00FED8  61                 	db	97	;'a'
   222  00FED9  6A                 	db	106	;'j'
   223  00FEDA  65                 	db	101	;'e'
   224  00FEDB  6E                 	db	110	;'n'
   225  00FEDC  69                 	db	105	;'i'
   226  00FEDD  6D                 	db	109	;'m'
   227  00FEDE  20                 	db	32
   228  00FEDF  68                 	db	104	;'h'
   229  00FEE0  72                 	db	114	;'r'
   230  00FEE1  79                 	db	121	;'y'
   231  00FEE2  20                 	db	32
   232  00FEE3  6A                 	db	106	;'j'
   233  00FEE4  65                 	db	101	;'e'
   234  00FEE5  20                 	db	32
   235  00FEE6  6E                 	db	110	;'n'
   236  00FEE7  75                 	db	117	;'u'
   237  00FEE8  74                 	db	116	;'t'
   238  00FEE9  6E                 	db	110	;'n'
   239  00FEEA  65                 	db	101	;'e'
   240  00FEEB  20                 	db	32
   241  00FEEC  76                 	db	118	;'v'
   242  00FEED  68                 	db	104	;'h'
   243  00FEEE  6F                 	db	111	;'o'
   244  00FEEF  64                 	db	100	;'d'
   245  00FEF0  69                 	db	105	;'i'
   246  00FEF1  74                 	db	116	;'t'
   247  00FEF2  20                 	db	32
   248  00FEF3  6D                 	db	109	;'m'
   249  00FEF4  69                 	db	105	;'i'
   250  00FEF5  6E                 	db	110	;'n'
   251  00FEF6  63                 	db	99	;'c'
   252  00FEF7  69                 	db	105	;'i'
   253  00FEF8  20                 	db	32
   254  00FEF9  76                 	db	118	;'v'
   255  00FEFA  20                 	db	32
   256  00FEFB  68                 	db	104	;'h'
   257  00FEFC  6F                 	db	111	;'o'
   258  00FEFD  64                 	db	100	;'d'
   259  00FEFE  6E                 	db	110	;'n'
   260  00FEFF  6F                 	db	111	;'o'
   261  00FF00  74                 	db	116	;'t'
   262  00FF01  65                 	db	101	;'e'
   263  00FF02  20                 	db	32
   264  00FF03  31                 	db	49	;'1'
   265  00FF04  2C                 	db	44
   266  00FF05  32                 	db	50	;'2'
   267  00FF06  20                 	db	32
   268  00FF07  6E                 	db	110	;'n'
   269  00FF08  65                 	db	101	;'e'
   270  00FF09  62                 	db	98	;'b'
   271  00FF0A  6F                 	db	111	;'o'
   272  00FF0B  20                 	db	32
   273  00FF0C  35                 	db	53	;'5'
   274  00FF0D  20                 	db	32
   275  00FF0E  6B                 	db	107	;'k'
   276  00FF0F  72                 	db	114	;'r'
   277  00FF10  65                 	db	101	;'e'
   278  00FF11  64                 	db	100	;'d'
   279  00FF12  69                 	db	105	;'i'
   280  00FF13  74                 	db	116	;'t'
   281  00FF14  75                 	db	117	;'u'
   282  00FF15  2E                 	db	46
   283  00FF16  0A                 	db	10
   284  00FF17  00                 	db	0
   285  00FF18                     STR_8:
   286                           
   287                           ; BSR set to: 0
   288  00FF18  4D                 	db	77	;'M'
   289  00FF19  75                 	db	117	;'u'
   290  00FF1A  7A                 	db	122	;'z'
   291  00FF1B  65                 	db	101	;'e'
   292  00FF1C  74                 	db	116	;'t'
   293  00FF1D  65                 	db	101	;'e'
   294  00FF1E  20                 	db	32
   295  00FF1F  72                 	db	114	;'r'
   296  00FF20  6F                 	db	111	;'o'
   297  00FF21  7A                 	db	122	;'z'
   298  00FF22  74                 	db	116	;'t'
   299  00FF23  6F                 	db	111	;'o'
   300  00FF24  63                 	db	99	;'c'
   301  00FF25  69                 	db	105	;'i'
   302  00FF26  74                 	db	116	;'t'
   303  00FF27  20                 	db	32
   304  00FF28  6C                 	db	108	;'l'
   305  00FF29  69                 	db	105	;'i'
   306  00FF2A  62                 	db	98	;'b'
   307  00FF2B  6F                 	db	111	;'o'
   308  00FF2C  76                 	db	118	;'v'
   309  00FF2D  6F                 	db	111	;'o'
   310  00FF2E  6C                 	db	108	;'l'
   311  00FF2F  6E                 	db	110	;'n'
   312  00FF30  65                 	db	101	;'e'
   313  00FF31  20                 	db	32
   314  00FF32  6B                 	db	107	;'k'
   315  00FF33  6F                 	db	111	;'o'
   316  00FF34  6C                 	db	108	;'l'
   317  00FF35  6F                 	db	111	;'o'
   318  00FF36  20                 	db	32
   319  00FF37  6A                 	db	106	;'j'
   320  00FF38  65                 	db	101	;'e'
   321  00FF39  73                 	db	115	;'s'
   322  00FF3A  74                 	db	116	;'t'
   323  00FF3B  65                 	db	101	;'e'
   324  00FF3C  20                 	db	32
   325  00FF3D  6A                 	db	106	;'j'
   326  00FF3E  65                 	db	101	;'e'
   327  00FF3F  64                 	db	100	;'d'
   328  00FF40  6E                 	db	110	;'n'
   329  00FF41  6F                 	db	111	;'o'
   330  00FF42  75                 	db	117	;'u'
   331  00FF43  2E                 	db	46
   332  00FF44  0A                 	db	10
   333  00FF45  00                 	db	0
   334  00FF46                     STR_12:
   335                           
   336                           ; BSR set to: 0
   337  00FF46  4A                 	db	74	;'J'
   338  00FF47  41                 	db	65	;'A'
   339  00FF48  43                 	db	67	;'C'
   340  00FF49  50                 	db	80	;'P'
   341  00FF4A  4F                 	db	79	;'O'
   342  00FF4B  54                 	db	84	;'T'
   343  00FF4C  3A                 	db	58	;':'
   344  00FF4D  20                 	db	32
   345  00FF4E  76                 	db	118	;'v'
   346  00FF4F  61                 	db	97	;'a'
   347  00FF50  73                 	db	115	;'s'
   348  00FF51  65                 	db	101	;'e'
   349  00FF52  20                 	db	32
   350  00FF53  76                 	db	118	;'v'
   351  00FF54  79                 	db	121	;'y'
   352  00FF55  68                 	db	104	;'h'
   353  00FF56  72                 	db	114	;'r'
   354  00FF57  61                 	db	97	;'a'
   355  00FF58  20                 	db	32
   356  00FF59  6A                 	db	106	;'j'
   357  00FF5A  65                 	db	101	;'e'
   358  00FF5B  20                 	db	32
   359  00FF5C  25                 	db	37
   360  00FF5D  64                 	db	100	;'d'
   361  00FF5E  20                 	db	32
   362  00FF5F  6B                 	db	107	;'k'
   363  00FF60  72                 	db	114	;'r'
   364  00FF61  65                 	db	101	;'e'
   365  00FF62  64                 	db	100	;'d'
   366  00FF63  69                 	db	105	;'i'
   367  00FF64  74                 	db	116	;'t'
   368  00FF65  75                 	db	117	;'u'
   369  00FF66  2E                 	db	46
   370  00FF67  0A                 	db	10
   371  00FF68  00                 	db	0
   372  00FF69                     STR_2:
   373                           
   374                           ; BSR set to: 0
   375  00FF69  50                 	db	80	;'P'
   376  00FF6A  72                 	db	114	;'r'
   377  00FF6B  6F                 	db	111	;'o'
   378  00FF6C  20                 	db	32
   379  00FF6D  7A                 	db	122	;'z'
   380  00FF6E  61                 	db	97	;'a'
   381  00FF6F  68                 	db	104	;'h'
   382  00FF70  61                 	db	97	;'a'
   383  00FF71  6A                 	db	106	;'j'
   384  00FF72  65                 	db	101	;'e'
   385  00FF73  6E                 	db	110	;'n'
   386  00FF74  69                 	db	105	;'i'
   387  00FF75  20                 	db	32
   388  00FF76  68                 	db	104	;'h'
   389  00FF77  72                 	db	114	;'r'
   390  00FF78  79                 	db	121	;'y'
   391  00FF79  20                 	db	32
   392  00FF7A  73                 	db	115	;'s'
   393  00FF7B  74                 	db	116	;'t'
   394  00FF7C  69                 	db	105	;'i'
   395  00FF7D  73                 	db	115	;'s'
   396  00FF7E  6B                 	db	107	;'k'
   397  00FF7F  6E                 	db	110	;'n'
   398  00FF80  65                 	db	101	;'e'
   399  00FF81  74                 	db	116	;'t'
   400  00FF82  65                 	db	101	;'e'
   401  00FF83  20                 	db	32
   402  00FF84  42                 	db	66	;'B'
   403  00FF85  54                 	db	84	;'T'
   404  00FF86  4E                 	db	78	;'N'
   405  00FF87  34                 	db	52	;'4'
   406  00FF88  2E                 	db	46
   407  00FF89  0A                 	db	10
   408  00FF8A  00                 	db	0
   409  00FF8B                     STR_13:
   410                           
   411                           ; BSR set to: 0
   412  00FF8B  5A                 	db	90	;'Z'
   413  00FF8C  61                 	db	97	;'a'
   414  00FF8D  64                 	db	100	;'d'
   415  00FF8E  6E                 	db	110	;'n'
   416  00FF8F  61                 	db	97	;'a'
   417  00FF90  20                 	db	32
   418  00FF91  76                 	db	118	;'v'
   419  00FF92  79                 	db	121	;'y'
   420  00FF93  68                 	db	104	;'h'
   421  00FF94  72                 	db	114	;'r'
   422  00FF95  61                 	db	97	;'a'
   423  00FF96  2C                 	db	44
   424  00FF97  20                 	db	32
   425  00FF98  7A                 	db	122	;'z'
   426  00FF99  6B                 	db	107	;'k'
   427  00FF9A  75                 	db	117	;'u'
   428  00FF9B  73                 	db	115	;'s'
   429  00FF9C  74                 	db	116	;'t'
   430  00FF9D  65                 	db	101	;'e'
   431  00FF9E  20                 	db	32
   432  00FF9F  74                 	db	116	;'t'
   433  00FFA0  6F                 	db	111	;'o'
   434  00FFA1  20                 	db	32
   435  00FFA2  7A                 	db	122	;'z'
   436  00FFA3  6E                 	db	110	;'n'
   437  00FFA4  6F                 	db	111	;'o'
   438  00FFA5  76                 	db	118	;'v'
   439  00FFA6  75                 	db	117	;'u'
   440  00FFA7  2E                 	db	46
   441  00FFA8  0A                 	db	10
   442  00FFA9  00                 	db	0
   443  00FFAA                     STR_7:
   444                           
   445                           ; BSR set to: 0
   446  00FFAA  20                 	db	32
   447  00FFAB  20                 	db	32
   448  00FFAC  20                 	db	32
   449  00FFAD  7C                 	db	124
   450  00FFAE  25                 	db	37
   451  00FFAF  63                 	db	99	;'c'
   452  00FFB0  7C                 	db	124
   453  00FFB1  20                 	db	32
   454  00FFB2  7C                 	db	124
   455  00FFB3  25                 	db	37
   456  00FFB4  63                 	db	99	;'c'
   457  00FFB5  7C                 	db	124
   458  00FFB6  20                 	db	32
   459  00FFB7  7C                 	db	124
   460  00FFB8  25                 	db	37
   461  00FFB9  63                 	db	99	;'c'
   462  00FFBA  7C                 	db	124
   463  00FFBB  20                 	db	32
   464  00FFBC  20                 	db	32
   465  00FFBD  00                 	db	0
   466  00FFBE                     STR_4:
   467                           
   468                           ; BSR set to: 0
   469  00FFBE  56                 	db	86	;'V'
   470  00FFBF  61                 	db	97	;'a'
   471  00FFC0  73                 	db	115	;'s'
   472  00FFC1  20                 	db	32
   473  00FFC2  6B                 	db	107	;'k'
   474  00FFC3  72                 	db	114	;'r'
   475  00FFC4  65                 	db	101	;'e'
   476  00FFC5  64                 	db	100	;'d'
   477  00FFC6  69                 	db	105	;'i'
   478  00FFC7  74                 	db	116	;'t'
   479  00FFC8  20                 	db	32
   480  00FFC9  6A                 	db	106	;'j'
   481  00FFCA  65                 	db	101	;'e'
   482  00FFCB  3A                 	db	58	;':'
   483  00FFCC  20                 	db	32
   484  00FFCD  25                 	db	37
   485  00FFCE  64                 	db	100	;'d'
   486  00FFCF  0A                 	db	10
   487  00FFD0  00                 	db	0
   488  00FFD1                     STR_10:
   489                           
   490                           ; BSR set to: 0
   491  00FFD1  20                 	db	32
   492  00FFD2  20                 	db	32
   493  00FFD3  20                 	db	32
   494  00FFD4  20                 	db	32
   495  00FFD5  20                 	db	32
   496  00FFD6  20                 	db	32
   497  00FFD7  20                 	db	32
   498  00FFD8  20                 	db	32
   499  00FFD9  20                 	db	32
   500  00FFDA  20                 	db	32
   501  00FFDB  20                 	db	32
   502  00FFDC  20                 	db	32
   503  00FFDD  20                 	db	32
   504  00FFDE  20                 	db	32
   505  00FFDF  20                 	db	32
   506  00FFE0  20                 	db	32
   507  00FFE1  00                 	db	0
   508  00FFE2                     STR_5:
   509                           
   510                           ; BSR set to: 0
   511  00FFE2  4D                 	db	77	;'M'
   512  00FFE3  45                 	db	69	;'E'
   513  00FFE4  43                 	db	67	;'C'
   514  00FFE5  48                 	db	72	;'H'
   515  00FFE6  4C                 	db	76	;'L'
   516  00FFE7  41                 	db	65	;'A'
   517  00FFE8  42                 	db	66	;'B'
   518  00FFE9  20                 	db	32
   519  00FFEA  20                 	db	32
   520  00FFEB  42                 	db	66	;'B'
   521  00FFEC  41                 	db	65	;'A'
   522  00FFED  4E                 	db	78	;'N'
   523  00FFEE  44                 	db	68	;'D'
   524  00FFEF  49                 	db	73	;'I'
   525  00FFF0  54                 	db	84	;'T'
   526  00FFF1  41                 	db	65	;'A'
   527  00FFF2  00                 	db	0
   528  00FFF3                     STR_11:
   529                           
   530                           ; BSR set to: 0
   531  00FFF3  4A                 	db	74	;'J'
   532  00FFF4  41                 	db	65	;'A'
   533  00FFF5  43                 	db	67	;'C'
   534  00FFF6  4B                 	db	75	;'K'
   535  00FFF7  50                 	db	80	;'P'
   536  00FFF8  4F                 	db	79	;'O'
   537  00FFF9  54                 	db	84	;'T'
   538  00FFFA  3A                 	db	58	;':'
   539  00FFFB  20                 	db	32
   540  00FFFC  25                 	db	37
   541  00FFFD  64                 	db	100	;'d'
   542  00FFFE  00                 	db	0
   543  00FFFF  00                 	db	0	; dummy byte at the end
   544  0000                     
   545                           ; #config settings
   546                           
   547                           	psect	cinit
   548  001904                     __pcinit:
   549                           	callstack 0
   550  001904                     start_initialization:
   551                           	callstack 0
   552  001904                     __initialization:
   553                           	callstack 0
   554                           
   555                           ; Clear objects allocated to BANK0 (54 bytes)
   556  001904  EE00  F060         	lfsr	0,__pbssBANK0
   557  001908  0E36               	movlw	54
   558  00190A                     clear_0:
   559  00190A  6AEE               	clrf	postinc0,c
   560  00190C  06E8               	decf	wreg,f,c
   561  00190E  E1FD               	bnz	clear_0
   562                           
   563                           ; Clear objects allocated to COMRAM (1 bytes)
   564  001910  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   565  001912                     end_of_initialization:
   566                           	callstack 0
   567  001912                     __end_of__initialization:
   568                           	callstack 0
   569  001912  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   570  001914  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   571  001916  0E00               	movlw	low (__Lmediumconst shr (0+16))
   572  001918  6EF8               	movwf	tblptru,c
   573  00191A  0100               	movlb	0
   574  00191C  EF59  F000         	goto	_main	;jump to C main() function
   575                           
   576                           	psect	bssCOMRAM
   577  00005D                     __pbssCOMRAM:
   578                           	callstack 0
   579  00005D                     _credit:
   580                           	callstack 0
   581  00005D                     	ds	1
   582                           
   583                           	psect	bssBANK0
   584  000060                     __pbssBANK0:
   585                           	callstack 0
   586  000060                     _buttons:
   587                           	callstack 0
   588  000060                     	ds	8
   589  000068                     _nout:
   590                           	callstack 0
   591  000068                     	ds	2
   592  00006A                     _width:
   593                           	callstack 0
   594  00006A                     	ds	2
   595  00006C                     _prec:
   596                           	callstack 0
   597  00006C                     	ds	2
   598  00006E                     _flags:
   599                           	callstack 0
   600  00006E                     	ds	2
   601  000070                     _counter:
   602                           	callstack 0
   603  000070                     	ds	2
   604  000072                     _dbuf:
   605                           	callstack 0
   606  000072                     	ds	32
   607  000092                     _seed:
   608                           	callstack 0
   609  000092                     	ds	4
   610                           
   611                           	psect	cstackBANK0
   612  000096                     __pcstackBANK0:
   613                           	callstack 0
   614  000096                     ?_printf:
   615                           	callstack 0
   616  000096                     ?_sprintf:
   617                           	callstack 0
   618  000096                     sprintf@s:
   619                           	callstack 0
   620  000096                     printf@fmt:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x0
   624  000096                     	ds	2
   625  000098                     sprintf@fmt:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x2
   629  000098                     	ds	8
   630  0000A0                     sprintf@ap:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0xA
   634  0000A0                     	ds	2
   635  0000A2                     sprintf@f:
   636                           	callstack 0
   637                           
   638                           ; 6 bytes @ 0xC
   639  0000A2                     	ds	6
   640  0000A8                     ??_main:
   641                           
   642                           ; 1 bytes @ 0x12
   643  0000A8                     	ds	2
   644  0000AA                     main@text:
   645                           	callstack 0
   646                           
   647                           ; 17 bytes @ 0x14
   648  0000AA                     	ds	17
   649  0000BB                     main@respin:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0x25
   653  0000BB                     	ds	1
   654  0000BC                     main@i:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x26
   658  0000BC                     	ds	2
   659  0000BE                     main@symbols:
   660                           	callstack 0
   661                           
   662                           ; 3 bytes @ 0x28
   663  0000BE                     	ds	3
   664  0000C1                     main@win:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x2B
   668  0000C1                     	ds	2
   669  0000C3                     main@state:
   670                           	callstack 0
   671                           
   672                           ; 5 bytes @ 0x2D
   673  0000C3                     	ds	5
   674                           
   675                           	psect	cstackCOMRAM
   676  000001                     __pcstackCOMRAM:
   677                           	callstack 0
   678  000001                     ISR@chachar:
   679                           	callstack 0
   680                           
   681                           ; 1 bytes @ 0x0
   682  000001                     	ds	1
   683  000002                     ??_gpio_btn_state:
   684  000002                     ??_gpio_drive_led:
   685  000002                     ?_check_win:
   686                           	callstack 0
   687  000002                     ?_strlen:
   688                           	callstack 0
   689  000002                     ?___lmul:
   690                           	callstack 0
   691  000002                     ?___aodiv:
   692                           	callstack 0
   693  000002                     ?___aomod:
   694                           	callstack 0
   695  000002                     LCD_Send@data:
   696                           	callstack 0
   697  000002                     putch@data:
   698                           	callstack 0
   699  000002                     timer_timeout_compare@time:
   700                           	callstack 0
   701  000002                     check_win@symbols:
   702                           	callstack 0
   703  000002                     change_state@state:
   704                           	callstack 0
   705  000002                     strlen@s:
   706                           	callstack 0
   707  000002                     ___lmul@multiplier:
   708                           	callstack 0
   709  000002                     ___aodiv@dividend:
   710                           	callstack 0
   711  000002                     ___aomod@dividend:
   712                           	callstack 0
   713                           
   714                           ; 8 bytes @ 0x1
   715  000002                     	ds	1
   716  000003                     ??_LCD_Init:
   717  000003                     gpio_drive_led@input:
   718                           	callstack 0
   719  000003                     LCD_ShowString@textData:
   720                           	callstack 0
   721  000003                     fputc@c:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x2
   725  000003                     	ds	1
   726  000004                     ??_show_credit:
   727  000004                     gpio_btn_state@btn:
   728                           	callstack 0
   729  000004                     change_state@state_id:
   730                           	callstack 0
   731  000004                     strlen@a:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x3
   735  000004                     	ds	1
   736  000005                     ??_LCD_ShowString:
   737  000005                     fputc@fp:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x4
   741  000005                     	ds	1
   742  000006                     show_credit@credit:
   743                           	callstack 0
   744  000006                     ___lmul@multiplicand:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0x5
   748  000006                     	ds	1
   749  000007                     ??_fputc:
   750  000007                     LCD_ShowString@lineNum:
   751                           	callstack 0
   752  000007                     show_credit@leds:
   753                           	callstack 0
   754                           
   755                           ; 1 bytes @ 0x6
   756  000007                     	ds	1
   757  000008                     LCD_ShowString@i:
   758                           	callstack 0
   759                           
   760                           ; 1 bytes @ 0x7
   761  000008                     	ds	2
   762  00000A                     ___lmul@product:
   763                           	callstack 0
   764  00000A                     ___aodiv@divisor:
   765                           	callstack 0
   766  00000A                     ___aomod@divisor:
   767                           	callstack 0
   768                           
   769                           ; 8 bytes @ 0x9
   770  00000A                     	ds	2
   771  00000C                     ?_ctoa:
   772                           	callstack 0
   773  00000C                     ctoa@fp:
   774                           	callstack 0
   775  00000C                     fputs@s:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0xB
   779  00000C                     	ds	2
   780  00000E                     ?_rand:
   781                           	callstack 0
   782  00000E                     ctoa@c:
   783                           	callstack 0
   784  00000E                     fputs@fp:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0xD
   788  00000E                     	ds	1
   789  00000F                     ??_ctoa:
   790                           
   791                           ; 1 bytes @ 0xE
   792  00000F                     	ds	1
   793  000010                     ??_rand:
   794  000010                     fputs@c:
   795                           	callstack 0
   796  000010                     ctoa@l:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0xF
   800  000010                     	ds	1
   801  000011                     fputs@i:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x10
   805  000011                     	ds	1
   806  000012                     ___aodiv@counter:
   807                           	callstack 0
   808  000012                     ___aomod@counter:
   809                           	callstack 0
   810  000012                     ctoa@w:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x11
   814  000012                     	ds	1
   815  000013                     ?_pad:
   816                           	callstack 0
   817  000013                     ___aodiv@sign:
   818                           	callstack 0
   819  000013                     ___aomod@sign:
   820                           	callstack 0
   821  000013                     pad@fp:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x12
   825  000013                     	ds	1
   826  000014                     ??_generate_symbol:
   827  000014                     ?_abs:
   828                           	callstack 0
   829  000014                     abs@a:
   830                           	callstack 0
   831  000014                     ___aodiv@quotient:
   832                           	callstack 0
   833                           
   834                           ; 8 bytes @ 0x13
   835  000014                     	ds	1
   836  000015                     pad@buf:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x14
   840  000015                     	ds	1
   841  000016                     ??_abs:
   842  000016                     generate_symbol@random:
   843                           	callstack 0
   844                           
   845                           ; 2 bytes @ 0x15
   846  000016                     	ds	1
   847  000017                     pad@p:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x16
   851  000017                     	ds	2
   852  000019                     ??_pad:
   853                           
   854                           ; 1 bytes @ 0x18
   855  000019                     	ds	1
   856  00001A                     pad@i:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x19
   860  00001A                     	ds	2
   861  00001C                     pad@w:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x1B
   865  00001C                     	ds	2
   866  00001E                     ?_dtoa:
   867                           	callstack 0
   868  00001E                     dtoa@fp:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x1D
   872  00001E                     	ds	2
   873  000020                     dtoa@d:
   874                           	callstack 0
   875                           
   876                           ; 8 bytes @ 0x1F
   877  000020                     	ds	8
   878  000028                     ??_dtoa:
   879                           
   880                           ; 1 bytes @ 0x27
   881  000028                     	ds	8
   882  000030                     _dtoa$2086:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x2F
   886  000030                     	ds	2
   887  000032                     dtoa@p:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x31
   891  000032                     	ds	2
   892  000034                     dtoa@w:
   893                           	callstack 0
   894                           
   895                           ; 2 bytes @ 0x33
   896  000034                     	ds	2
   897  000036                     dtoa@s:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x35
   901  000036                     	ds	2
   902  000038                     dtoa@n:
   903                           	callstack 0
   904                           
   905                           ; 8 bytes @ 0x37
   906  000038                     	ds	8
   907  000040                     dtoa@i:
   908                           	callstack 0
   909                           
   910                           ; 2 bytes @ 0x3F
   911  000040                     	ds	2
   912  000042                     ?_vfpfcnvrt:
   913                           	callstack 0
   914  000042                     vfpfcnvrt@fp:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x41
   918  000042                     	ds	2
   919  000044                     vfpfcnvrt@fmt:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x43
   923  000044                     	ds	2
   924  000046                     vfpfcnvrt@ap:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x45
   928  000046                     	ds	2
   929  000048                     ??_vfpfcnvrt:
   930                           
   931                           ; 1 bytes @ 0x47
   932  000048                     	ds	2
   933  00004A                     vfpfcnvrt@ll:
   934                           	callstack 0
   935                           
   936                           ; 8 bytes @ 0x49
   937  00004A                     	ds	8
   938  000052                     vfpfcnvrt@c:
   939                           	callstack 0
   940                           
   941                           ; 1 bytes @ 0x51
   942  000052                     	ds	1
   943  000053                     ?_vfprintf:
   944                           	callstack 0
   945  000053                     vfprintf@fp:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x52
   949  000053                     	ds	2
   950  000055                     vfprintf@fmt:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x54
   954  000055                     	ds	2
   955  000057                     vfprintf@ap:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x56
   959  000057                     	ds	2
   960  000059                     vfprintf@cfmt:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0x58
   964  000059                     	ds	2
   965  00005B                     printf@ap:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x5A
   969  00005B                     	ds	2
   970                           
   971 ;;
   972 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   973 ;;
   974 ;; *************** function _main *****************
   975 ;; Defined at:
   976 ;;		line 105 in file "main.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;		None
   979 ;; Auto vars:     Size  Location     Type
   980 ;;  text           17   20[BANK0 ] unsigned char [17]
   981 ;;  state           5   45[BANK0 ] struct .
   982 ;;  symbols         3   40[BANK0 ] unsigned char [3]
   983 ;;  win             2   43[BANK0 ] unsigned short 
   984 ;;  i               2   38[BANK0 ] int 
   985 ;;  respin          1   37[BANK0 ] unsigned char 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   996 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   997 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   998 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   999 ;;Total ram usage:       32 bytes
  1000 ;; Hardware stack levels required when called: 10
  1001 ;; This function calls:
  1002 ;;		_LCD_Init
  1003 ;;		_LCD_ShowString
  1004 ;;		_change_state
  1005 ;;		_check_win
  1006 ;;		_generate_symbol
  1007 ;;		_gpio_btn_state
  1008 ;;		_gpio_init
  1009 ;;		_printf
  1010 ;;		_show_credit
  1011 ;;		_sprintf
  1012 ;;		_timer_init
  1013 ;;		_timer_timeout_compare
  1014 ;;		_timer_timeout_reset
  1015 ;;		_uart_init
  1016 ;; This function is called by:
  1017 ;;		Startup code after reset
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           	psect	text0
  1022  0000B2                     __ptext0:
  1023                           	callstack 0
  1024  0000B2                     _main:
  1025                           	callstack 21
  1026  0000B2                     
  1027                           ;main.c: 106:     gpio_init();
  1028  0000B2  EC09  F00C         	call	_gpio_init	;wreg free
  1029                           
  1030                           ;main.c: 107:     uart_init();
  1031  0000B6  EC55  F00C         	call	_uart_init	;wreg free
  1032                           
  1033                           ;main.c: 108:     timer_init();
  1034  0000BA  EC43  F00C         	call	_timer_init	;wreg free
  1035  0000BE                     
  1036                           ;main.c: 109:     _delay((unsigned long)((40)*(32e6/4000.0)));
  1037  0000BE  0E02               	movlw	2
  1038  0000C0  0100               	movlb	0	; () banked
  1039  0000C2  6FA9               	movwf	(??_main+1)& (0+255),b
  1040  0000C4  0EA0               	movlw	160
  1041  0000C6  6FA8               	movwf	??_main& (0+255),b
  1042  0000C8  0E92               	movlw	146
  1043  0000CA                     u2717:
  1044  0000CA  2EE8               	decfsz	wreg,f,c
  1045  0000CC  D7FE               	bra	u2717
  1046  0000CE  2FA8               	decfsz	??_main& (0+255),f,b
  1047  0000D0  D7FC               	bra	u2717
  1048  0000D2  2FA9               	decfsz	(??_main+1)& (0+255),f,b
  1049  0000D4  D7FA               	bra	u2717
  1050  0000D6  F000               	nop	
  1051  0000D8                     
  1052                           ;main.c: 110:     LCD_Init();
  1053  0000D8  EC6D  F007         	call	_LCD_Init	;wreg free
  1054  0000DC                     
  1055                           ;main.c: 112:     PEIE = 1;
  1056  0000DC  8CF2               	bsf	4082,6,c	;volatile
  1057  0000DE                     
  1058                           ;main.c: 113:     GIE = 1;
  1059  0000DE  8EF2               	bsf	4082,7,c	;volatile
  1060  0000E0                     
  1061                           ;main.c: 115:     char text[17];;main.c: 116:     char symbols[3];;main.c: 117:     uint
      +                          16_t win;;main.c: 118:     uint8_t respin;;main.c: 120:     state_struct state;;main.c: 
      +                          121:     state.id = 0;
  1062  0000E0  0E00               	movlw	0
  1063  0000E2  0100               	movlb	0	; () banked
  1064  0000E4  6FC3               	movwf	main@state& (0+255),b
  1065  0000E6                     
  1066                           ; BSR set to: 0
  1067                           ;main.c: 122:     state.first_entry = 1;
  1068  0000E6  0E01               	movlw	1
  1069  0000E8  6FC4               	movwf	(main@state+1)& (0+255),b
  1070  0000EA                     
  1071                           ; BSR set to: 0
  1072                           ;main.c: 123:     state.changed = 0;
  1073  0000EA  0E00               	movlw	0
  1074  0000EC  6FC5               	movwf	(main@state+2)& (0+255),b
  1075  0000EE                     
  1076                           ; BSR set to: 0
  1077                           ;main.c: 125:     int i;;main.c: 127:     printf("Pred zahajenim hry je nutne vhodit min
      +                          ci v hodnote 1,2 nebo 5 kreditu.\n");
  1078  0000EE  0ED0               	movlw	low STR_1
  1079  0000F0  6F96               	movwf	printf@fmt& (0+255),b
  1080  0000F2  0EFE               	movlw	high STR_1
  1081  0000F4  6F97               	movwf	(printf@fmt+1)& (0+255),b
  1082  0000F6  EC1D  F00C         	call	_printf	;wreg free
  1083  0000FA                     
  1084                           ;main.c: 128:     printf("Pro zahajeni hry stisknete BTN4.\n");
  1085  0000FA  0E69               	movlw	low STR_2
  1086  0000FC  0100               	movlb	0	; () banked
  1087  0000FE  6F96               	movwf	printf@fmt& (0+255),b
  1088  000100  0EFF               	movlw	high STR_2
  1089  000102  6F97               	movwf	(printf@fmt+1)& (0+255),b
  1090  000104  EC1D  F00C         	call	_printf	;wreg free
  1091  000108                     
  1092                           ;main.c: 129:     printf("Pro znovuroztoceni jednotlivych kol stisknete tlacitka BTN1 | 
      +                          BTN2 | BTN 3.\n");
  1093  000108  0E83               	movlw	low STR_3
  1094  00010A  0100               	movlb	0	; () banked
  1095  00010C  6F96               	movwf	printf@fmt& (0+255),b
  1096  00010E  0EFE               	movlw	high STR_3
  1097  000110  6F97               	movwf	(printf@fmt+1)& (0+255),b
  1098  000112  EC1D  F00C         	call	_printf	;wreg free
  1099  000116  EF81  F002         	goto	l2817
  1100  00011A                     l2681:
  1101                           
  1102                           ; BSR set to: 0
  1103                           ;main.c: 135:                 if(state.first_entry) {
  1104  00011A  51C4               	movf	(main@state+1)& (0+255),w,b
  1105  00011C  B4D8               	btfsc	status,2,c
  1106  00011E  EF93  F000         	goto	u2491
  1107  000122  EF95  F000         	goto	u2490
  1108  000126                     u2491:
  1109  000126  EFB9  F000         	goto	l2693
  1110  00012A                     u2490:
  1111  00012A                     
  1112                           ; BSR set to: 0
  1113                           ;main.c: 136:                     state.first_entry = 0;
  1114  00012A  0E00               	movlw	0
  1115  00012C  6FC4               	movwf	(main@state+1)& (0+255),b
  1116  00012E                     
  1117                           ; BSR set to: 0
  1118                           ;main.c: 137:                     printf("Vas kredit je: %d\n", credit);
  1119  00012E  0EBE               	movlw	low STR_4
  1120  000130  6F96               	movwf	printf@fmt& (0+255),b
  1121  000132  0EFF               	movlw	high STR_4
  1122  000134  6F97               	movwf	(printf@fmt+1)& (0+255),b
  1123  000136  C05D  F098         	movff	_credit,?_printf+2	;volatile
  1124  00013A  6B99               	clrf	(?_printf+3)& (0+255),b
  1125  00013C  EC1D  F00C         	call	_printf	;wreg free
  1126  000140                     
  1127                           ;main.c: 138:                     sprintf(text, "MECHLAB  BANDITA");
  1128  000140  0EAA               	movlw	low main@text
  1129  000142  0100               	movlb	0	; () banked
  1130  000144  6F96               	movwf	sprintf@s& (0+255),b
  1131  000146  0E00               	movlw	high main@text
  1132  000148  6F97               	movwf	(sprintf@s+1)& (0+255),b
  1133  00014A  0EE2               	movlw	low STR_5
  1134  00014C  6F98               	movwf	sprintf@fmt& (0+255),b
  1135  00014E  0EFF               	movlw	high STR_5
  1136  000150  6F99               	movwf	(sprintf@fmt+1)& (0+255),b
  1137  000152  EC5F  F00B         	call	_sprintf	;wreg free
  1138  000156                     
  1139                           ;main.c: 139:                     LCD_ShowString(1, text);
  1140  000156  0EAA               	movlw	low main@text
  1141  000158  6E03               	movwf	LCD_ShowString@textData^0,c
  1142  00015A  0E00               	movlw	high main@text
  1143  00015C  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  1144  00015E  0E01               	movlw	1
  1145  000160  EC36  F00A         	call	_LCD_ShowString
  1146  000164                     
  1147                           ;main.c: 140:                     LCD_ShowString(2, "               ");
  1148  000164  0ED2               	movlw	low (STR_10+1)
  1149  000166  6E03               	movwf	LCD_ShowString@textData^0,c
  1150  000168  0EFF               	movlw	high (STR_10+1)
  1151  00016A  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  1152  00016C  0E02               	movlw	2
  1153  00016E  EC36  F00A         	call	_LCD_ShowString
  1154  000172                     l2693:
  1155                           
  1156                           ;main.c: 143:                 if(gpio_btn_state(4)) {
  1157  000172  0E04               	movlw	4
  1158  000174  ECDD  F009         	call	_gpio_btn_state
  1159  000178  0900               	iorlw	0
  1160  00017A  B4D8               	btfsc	status,2,c
  1161  00017C  EFC2  F000         	goto	u2501
  1162  000180  EFC4  F000         	goto	u2500
  1163  000184                     u2501:
  1164  000184  EFD5  F000         	goto	l2701
  1165  000188                     u2500:
  1166  000188                     
  1167                           ;main.c: 144:                     if(credit > 0) {
  1168  000188  505D               	movf	_credit^0,w,c	;volatile
  1169  00018A  B4D8               	btfsc	status,2,c
  1170  00018C  EFCA  F000         	goto	u2511
  1171  000190  EFCC  F000         	goto	u2510
  1172  000194                     u2511:
  1173  000194  EFD5  F000         	goto	l2701
  1174  000198                     u2510:
  1175  000198                     
  1176                           ;main.c: 145:                         credit--;
  1177  000198  065D               	decf	_credit^0,f,c	;volatile
  1178  00019A                     
  1179                           ;main.c: 146:                         change_state(&state, 1);
  1180  00019A  0EC3               	movlw	low main@state
  1181  00019C  6E02               	movwf	change_state@state^0,c
  1182  00019E  0E00               	movlw	high main@state
  1183  0001A0  6E03               	movwf	(change_state@state+1)^0,c
  1184  0001A2  0E01               	movlw	1
  1185  0001A4  6E04               	movwf	change_state@state_id^0,c
  1186  0001A6  EC73  F00C         	call	_change_state	;wreg free
  1187  0001AA                     l2701:
  1188                           
  1189                           ;main.c: 150:                 if(state.changed) {
  1190  0001AA  0100               	movlb	0	; () banked
  1191  0001AC  51C5               	movf	(main@state+2)& (0+255),w,b
  1192  0001AE  B4D8               	btfsc	status,2,c
  1193  0001B0  EFDC  F000         	goto	u2521
  1194  0001B4  EFDE  F000         	goto	u2520
  1195  0001B8                     u2521:
  1196  0001B8  EFA3  F002         	goto	l2819
  1197  0001BC                     u2520:
  1198  0001BC                     l2703:
  1199                           
  1200                           ; BSR set to: 0
  1201                           ;main.c: 151:                     state.first_entry = 1;
  1202  0001BC  0E01               	movlw	1
  1203  0001BE  6FC4               	movwf	(main@state+1)& (0+255),b
  1204                           
  1205                           ;main.c: 152:                     state.changed = 0;
  1206  0001C0  0E00               	movlw	0
  1207  0001C2  6FC5               	movwf	(main@state+2)& (0+255),b
  1208  0001C4  EFA3  F002         	goto	l2819
  1209  0001C8                     l2705:
  1210                           
  1211                           ; BSR set to: 0
  1212                           ;main.c: 159:                 for (i = 0; i < 3; i++) {
  1213  0001C8  0E00               	movlw	0
  1214  0001CA  6FBD               	movwf	(main@i+1)& (0+255),b
  1215  0001CC  0E00               	movlw	0
  1216  0001CE  6FBC               	movwf	main@i& (0+255),b
  1217  0001D0                     l2711:
  1218                           
  1219                           ; BSR set to: 0
  1220                           ;main.c: 160:                     symbols[i] = generate_symbol();
  1221  0001D0  0EBE               	movlw	low main@symbols
  1222  0001D2  25BC               	addwf	main@i& (0+255),w,b
  1223  0001D4  6ED9               	movwf	fsr2l,c
  1224  0001D6  0E00               	movlw	high main@symbols
  1225  0001D8  21BD               	addwfc	(main@i+1)& (0+255),w,b
  1226  0001DA  6EDA               	movwf	fsr2h,c
  1227  0001DC  ECFB  F00A         	call	_generate_symbol	;wreg free
  1228  0001E0  6EDF               	movwf	indf2,c
  1229  0001E2                     
  1230                           ;main.c: 161:                 }
  1231  0001E2  0100               	movlb	0	; () banked
  1232  0001E4  4BBC               	infsnz	main@i& (0+255),f,b
  1233  0001E6  2BBD               	incf	(main@i+1)& (0+255),f,b
  1234  0001E8                     
  1235                           ; BSR set to: 0
  1236  0001E8  BFBD               	btfsc	(main@i+1)& (0+255),7,b
  1237  0001EA  EF00  F001         	goto	u2531
  1238  0001EE  51BD               	movf	(main@i+1)& (0+255),w,b
  1239  0001F0  E109               	bnz	u2530
  1240  0001F2  0E03               	movlw	3
  1241  0001F4  5DBC               	subwf	main@i& (0+255),w,b
  1242  0001F6  A0D8               	btfss	status,0,c
  1243  0001F8  EF00  F001         	goto	u2531
  1244  0001FC  EF02  F001         	goto	u2530
  1245  000200                     u2531:
  1246  000200  EFE8  F000         	goto	l2711
  1247  000204                     u2530:
  1248  000204                     
  1249                           ; BSR set to: 0
  1250                           ;main.c: 163:                 sprintf(text, "   |%c| |%c| |%c|  ", symbols[0], symbols[1
      +                          ], symbols[2]);
  1251  000204  0EAA               	movlw	low main@text
  1252  000206  6F96               	movwf	sprintf@s& (0+255),b
  1253  000208  0E00               	movlw	high main@text
  1254  00020A  6F97               	movwf	(sprintf@s+1)& (0+255),b
  1255  00020C  0EAA               	movlw	low STR_7
  1256  00020E  6F98               	movwf	sprintf@fmt& (0+255),b
  1257  000210  0EFF               	movlw	high STR_7
  1258  000212  6F99               	movwf	(sprintf@fmt+1)& (0+255),b
  1259  000214  C0BE  F09A         	movff	main@symbols,?_sprintf+4
  1260  000218  6B9B               	clrf	(?_sprintf+5)& (0+255),b
  1261  00021A  C0BF  F09C         	movff	main@symbols+1,?_sprintf+6
  1262  00021E  6B9D               	clrf	(?_sprintf+7)& (0+255),b
  1263  000220  C0C0  F09E         	movff	main@symbols+2,?_sprintf+8
  1264  000224  6B9F               	clrf	(?_sprintf+9)& (0+255),b
  1265  000226  EC5F  F00B         	call	_sprintf	;wreg free
  1266  00022A                     
  1267                           ;main.c: 164:                 LCD_ShowString(2, text);
  1268  00022A  0EAA               	movlw	low main@text
  1269  00022C  6E03               	movwf	LCD_ShowString@textData^0,c
  1270  00022E  0E00               	movlw	high main@text
  1271  000230  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  1272  000232  0E02               	movlw	2
  1273  000234  EC36  F00A         	call	_LCD_ShowString
  1274  000238                     
  1275                           ;main.c: 166:                 win = check_win(symbols);
  1276  000238  0EBE               	movlw	low main@symbols
  1277  00023A  6E02               	movwf	check_win@symbols^0,c
  1278  00023C  0E00               	movlw	high main@symbols
  1279  00023E  6E03               	movwf	(check_win@symbols+1)^0,c
  1280  000240  EC2E  F005         	call	_check_win	;wreg free
  1281  000244  C002  F0C1         	movff	?_check_win,main@win
  1282  000248  C003  F0C2         	movff	?_check_win+1,main@win+1
  1283  00024C                     
  1284                           ;main.c: 167:                 if(win) {
  1285  00024C  0100               	movlb	0	; () banked
  1286  00024E  51C1               	movf	main@win& (0+255),w,b
  1287  000250  11C2               	iorwf	(main@win+1)& (0+255),w,b
  1288  000252  B4D8               	btfsc	status,2,c
  1289  000254  EF2E  F001         	goto	u2541
  1290  000258  EF30  F001         	goto	u2540
  1291  00025C                     u2541:
  1292  00025C  EF3A  F001         	goto	l2727
  1293  000260                     u2540:
  1294  000260                     
  1295                           ; BSR set to: 0
  1296                           ;main.c: 168:                     change_state(&state, 3);
  1297  000260  0EC3               	movlw	low main@state
  1298  000262  6E02               	movwf	change_state@state^0,c
  1299  000264  0E00               	movlw	high main@state
  1300  000266  6E03               	movwf	(change_state@state+1)^0,c
  1301  000268  0E03               	movlw	3
  1302  00026A  6E04               	movwf	change_state@state_id^0,c
  1303  00026C  EC73  F00C         	call	_change_state	;wreg free
  1304                           
  1305                           ;main.c: 169:                 } else {
  1306  000270  EF49  F001         	goto	l2731
  1307  000274                     l2727:
  1308                           
  1309                           ; BSR set to: 0
  1310                           ;main.c: 170:                     change_state(&state, 2);
  1311  000274  0EC3               	movlw	low main@state
  1312  000276  6E02               	movwf	change_state@state^0,c
  1313  000278  0E00               	movlw	high main@state
  1314  00027A  6E03               	movwf	(change_state@state+1)^0,c
  1315  00027C  0E02               	movlw	2
  1316  00027E  6E04               	movwf	change_state@state_id^0,c
  1317  000280  EC73  F00C         	call	_change_state	;wreg free
  1318  000284                     
  1319                           ;main.c: 171:                     printf("Muzete roztocit libovolne kolo jeste jednou.\n
      +                          ");
  1320  000284  0E18               	movlw	low STR_8
  1321  000286  0100               	movlb	0	; () banked
  1322  000288  6F96               	movwf	printf@fmt& (0+255),b
  1323  00028A  0EFF               	movlw	high STR_8
  1324  00028C  6F97               	movwf	(printf@fmt+1)& (0+255),b
  1325  00028E  EC1D  F00C         	call	_printf	;wreg free
  1326  000292                     l2731:
  1327                           
  1328                           ;main.c: 174:                 if(state.changed){
  1329  000292  0100               	movlb	0	; () banked
  1330  000294  51C5               	movf	(main@state+2)& (0+255),w,b
  1331  000296  B4D8               	btfsc	status,2,c
  1332  000298  EF50  F001         	goto	u2551
  1333  00029C  EF52  F001         	goto	u2550
  1334  0002A0                     u2551:
  1335  0002A0  EFA3  F002         	goto	l2819
  1336  0002A4                     u2550:
  1337  0002A4  EFDE  F000         	goto	l2703
  1338  0002A8                     l2735:
  1339                           
  1340                           ; BSR set to: 0
  1341                           ;main.c: 182:                 respin = 0;
  1342  0002A8  0E00               	movlw	0
  1343  0002AA  6FBB               	movwf	main@respin& (0+255),b
  1344  0002AC                     
  1345                           ; BSR set to: 0
  1346                           ;main.c: 183:                 if(gpio_btn_state(4)) {
  1347  0002AC  0E04               	movlw	4
  1348  0002AE  ECDD  F009         	call	_gpio_btn_state
  1349  0002B2  0900               	iorlw	0
  1350  0002B4  B4D8               	btfsc	status,2,c
  1351  0002B6  EF5F  F001         	goto	u2561
  1352  0002BA  EF61  F001         	goto	u2560
  1353  0002BE                     u2561:
  1354  0002BE  EF6B  F001         	goto	l2741
  1355  0002C2                     u2560:
  1356  0002C2                     
  1357                           ;main.c: 184:                     change_state(&state, 4);
  1358  0002C2  0EC3               	movlw	low main@state
  1359  0002C4  6E02               	movwf	change_state@state^0,c
  1360  0002C6  0E00               	movlw	high main@state
  1361  0002C8  6E03               	movwf	(change_state@state+1)^0,c
  1362  0002CA  0E04               	movlw	4
  1363  0002CC  6E04               	movwf	change_state@state_id^0,c
  1364  0002CE  EC73  F00C         	call	_change_state	;wreg free
  1365                           
  1366                           ;main.c: 185:                 } else if(gpio_btn_state(1)){
  1367  0002D2  EFA0  F001         	goto	l2759
  1368  0002D6                     l2741:
  1369  0002D6  0E01               	movlw	1
  1370  0002D8  ECDD  F009         	call	_gpio_btn_state
  1371  0002DC  0900               	iorlw	0
  1372  0002DE  B4D8               	btfsc	status,2,c
  1373  0002E0  EF74  F001         	goto	u2571
  1374  0002E4  EF76  F001         	goto	u2570
  1375  0002E8                     u2571:
  1376  0002E8  EF7E  F001         	goto	l2747
  1377  0002EC                     u2570:
  1378  0002EC                     
  1379                           ;main.c: 186:                     symbols[0] = generate_symbol();
  1380  0002EC  ECFB  F00A         	call	_generate_symbol	;wreg free
  1381  0002F0  0100               	movlb	0	; () banked
  1382  0002F2  6FBE               	movwf	main@symbols& (0+255),b
  1383  0002F4                     l2745:
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;main.c: 187:                     respin = 1;
  1387  0002F4  0E01               	movlw	1
  1388  0002F6  6FBB               	movwf	main@respin& (0+255),b
  1389                           
  1390                           ;main.c: 188:                 }else if(gpio_btn_state(2)) {
  1391  0002F8  EFA0  F001         	goto	l2759
  1392  0002FC                     l2747:
  1393  0002FC  0E02               	movlw	2
  1394  0002FE  ECDD  F009         	call	_gpio_btn_state
  1395  000302  0900               	iorlw	0
  1396  000304  B4D8               	btfsc	status,2,c
  1397  000306  EF87  F001         	goto	u2581
  1398  00030A  EF89  F001         	goto	u2580
  1399  00030E                     u2581:
  1400  00030E  EF8F  F001         	goto	l2753
  1401  000312                     u2580:
  1402  000312                     
  1403                           ;main.c: 189:                     symbols[1] = generate_symbol();
  1404  000312  ECFB  F00A         	call	_generate_symbol	;wreg free
  1405  000316  0100               	movlb	0	; () banked
  1406  000318  6FBF               	movwf	(main@symbols+1)& (0+255),b
  1407  00031A  EF7A  F001         	goto	l2745
  1408  00031E                     l2753:
  1409  00031E  0E03               	movlw	3
  1410  000320  ECDD  F009         	call	_gpio_btn_state
  1411  000324  0900               	iorlw	0
  1412  000326  B4D8               	btfsc	status,2,c
  1413  000328  EF98  F001         	goto	u2591
  1414  00032C  EF9A  F001         	goto	u2590
  1415  000330                     u2591:
  1416  000330  EFA0  F001         	goto	l88
  1417  000334                     u2590:
  1418  000334                     
  1419                           ;main.c: 192:                     symbols[2] = generate_symbol();
  1420  000334  ECFB  F00A         	call	_generate_symbol	;wreg free
  1421  000338  0100               	movlb	0	; () banked
  1422  00033A  6FC0               	movwf	(main@symbols+2)& (0+255),b
  1423  00033C  EF7A  F001         	goto	l2745
  1424  000340                     l88:
  1425  000340                     l2759:
  1426                           
  1427                           ;main.c: 195:                 if(respin){
  1428  000340  0100               	movlb	0	; () banked
  1429  000342  51BB               	movf	main@respin& (0+255),w,b
  1430  000344  B4D8               	btfsc	status,2,c
  1431  000346  EFA7  F001         	goto	u2601
  1432  00034A  EFA9  F001         	goto	u2600
  1433  00034E                     u2601:
  1434  00034E  EFE9  F001         	goto	l2773
  1435  000352                     u2600:
  1436  000352                     
  1437                           ; BSR set to: 0
  1438                           ;main.c: 197:                     sprintf(text, "   |%c| |%c| |%c|  ", symbols[0], symbo
      +                          ls[1], symbols[2]);
  1439  000352  0EAA               	movlw	low main@text
  1440  000354  6F96               	movwf	sprintf@s& (0+255),b
  1441  000356  0E00               	movlw	high main@text
  1442  000358  6F97               	movwf	(sprintf@s+1)& (0+255),b
  1443  00035A  0EAA               	movlw	low STR_7
  1444  00035C  6F98               	movwf	sprintf@fmt& (0+255),b
  1445  00035E  0EFF               	movlw	high STR_7
  1446  000360  6F99               	movwf	(sprintf@fmt+1)& (0+255),b
  1447  000362  C0BE  F09A         	movff	main@symbols,?_sprintf+4
  1448  000366  6B9B               	clrf	(?_sprintf+5)& (0+255),b
  1449  000368  C0BF  F09C         	movff	main@symbols+1,?_sprintf+6
  1450  00036C  6B9D               	clrf	(?_sprintf+7)& (0+255),b
  1451  00036E  C0C0  F09E         	movff	main@symbols+2,?_sprintf+8
  1452  000372  6B9F               	clrf	(?_sprintf+9)& (0+255),b
  1453  000374  EC5F  F00B         	call	_sprintf	;wreg free
  1454  000378                     
  1455                           ;main.c: 198:                     LCD_ShowString(2, text);
  1456  000378  0EAA               	movlw	low main@text
  1457  00037A  6E03               	movwf	LCD_ShowString@textData^0,c
  1458  00037C  0E00               	movlw	high main@text
  1459  00037E  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  1460  000380  0E02               	movlw	2
  1461  000382  EC36  F00A         	call	_LCD_ShowString
  1462  000386                     
  1463                           ;main.c: 200:                     win = check_win(symbols);
  1464  000386  0EBE               	movlw	low main@symbols
  1465  000388  6E02               	movwf	check_win@symbols^0,c
  1466  00038A  0E00               	movlw	high main@symbols
  1467  00038C  6E03               	movwf	(check_win@symbols+1)^0,c
  1468  00038E  EC2E  F005         	call	_check_win	;wreg free
  1469  000392  C002  F0C1         	movff	?_check_win,main@win
  1470  000396  C003  F0C2         	movff	?_check_win+1,main@win+1
  1471  00039A                     
  1472                           ;main.c: 201:                     if(win) {
  1473  00039A  0100               	movlb	0	; () banked
  1474  00039C  51C1               	movf	main@win& (0+255),w,b
  1475  00039E  11C2               	iorwf	(main@win+1)& (0+255),w,b
  1476  0003A0  B4D8               	btfsc	status,2,c
  1477  0003A2  EFD5  F001         	goto	u2611
  1478  0003A6  EFD7  F001         	goto	u2610
  1479  0003AA                     u2611:
  1480  0003AA  EFE1  F001         	goto	l2771
  1481  0003AE                     u2610:
  1482  0003AE                     
  1483                           ; BSR set to: 0
  1484                           ;main.c: 202:                         change_state(&state, 3);
  1485  0003AE  0EC3               	movlw	low main@state
  1486  0003B0  6E02               	movwf	change_state@state^0,c
  1487  0003B2  0E00               	movlw	high main@state
  1488  0003B4  6E03               	movwf	(change_state@state+1)^0,c
  1489  0003B6  0E03               	movlw	3
  1490  0003B8  6E04               	movwf	change_state@state_id^0,c
  1491  0003BA  EC73  F00C         	call	_change_state	;wreg free
  1492                           
  1493                           ;main.c: 203:                     } else {
  1494  0003BE  EFE9  F001         	goto	l2773
  1495  0003C2                     l2771:
  1496                           
  1497                           ; BSR set to: 0
  1498                           ;main.c: 204:                         change_state(&state, 4);
  1499  0003C2  0EC3               	movlw	low main@state
  1500  0003C4  6E02               	movwf	change_state@state^0,c
  1501  0003C6  0E00               	movlw	high main@state
  1502  0003C8  6E03               	movwf	(change_state@state+1)^0,c
  1503  0003CA  0E04               	movlw	4
  1504  0003CC  6E04               	movwf	change_state@state_id^0,c
  1505  0003CE  EC73  F00C         	call	_change_state	;wreg free
  1506  0003D2                     l2773:
  1507                           
  1508                           ;main.c: 207:                 if(state.changed){
  1509  0003D2  0100               	movlb	0	; () banked
  1510  0003D4  51C5               	movf	(main@state+2)& (0+255),w,b
  1511  0003D6  B4D8               	btfsc	status,2,c
  1512  0003D8  EFF0  F001         	goto	u2621
  1513  0003DC  EFF2  F001         	goto	u2620
  1514  0003E0                     u2621:
  1515  0003E0  EFA3  F002         	goto	l2819
  1516  0003E4                     u2620:
  1517  0003E4  EFDE  F000         	goto	l2703
  1518  0003E8                     l2777:
  1519                           
  1520                           ; BSR set to: 0
  1521                           ;main.c: 215:                 if(state.first_entry){
  1522  0003E8  51C4               	movf	(main@state+1)& (0+255),w,b
  1523  0003EA  B4D8               	btfsc	status,2,c
  1524  0003EC  EFFA  F001         	goto	u2631
  1525  0003F0  EFFC  F001         	goto	u2630
  1526  0003F4                     u2631:
  1527  0003F4  EF2D  F002         	goto	l2793
  1528  0003F8                     u2630:
  1529  0003F8                     
  1530                           ; BSR set to: 0
  1531                           ;main.c: 216:                     state.first_entry = 0;
  1532  0003F8  0E00               	movlw	0
  1533  0003FA  6FC4               	movwf	(main@state+1)& (0+255),b
  1534  0003FC                     
  1535                           ; BSR set to: 0
  1536                           ;main.c: 217:                     credit += win;
  1537  0003FC  51C1               	movf	main@win& (0+255),w,b	;volatile
  1538  0003FE  265D               	addwf	_credit^0,f,c	;volatile
  1539  000400                     
  1540                           ; BSR set to: 0
  1541                           ;main.c: 218:                     sprintf(text, "                ");
  1542  000400  0EAA               	movlw	low main@text
  1543  000402  6F96               	movwf	sprintf@s& (0+255),b
  1544  000404  0E00               	movlw	high main@text
  1545  000406  6F97               	movwf	(sprintf@s+1)& (0+255),b
  1546  000408  0ED1               	movlw	low STR_10
  1547  00040A  6F98               	movwf	sprintf@fmt& (0+255),b
  1548  00040C  0EFF               	movlw	high STR_10
  1549  00040E  6F99               	movwf	(sprintf@fmt+1)& (0+255),b
  1550  000410  EC5F  F00B         	call	_sprintf	;wreg free
  1551  000414                     
  1552                           ;main.c: 219:                     sprintf(text, "JACKPOT: %d", win);
  1553  000414  0EAA               	movlw	low main@text
  1554  000416  0100               	movlb	0	; () banked
  1555  000418  6F96               	movwf	sprintf@s& (0+255),b
  1556  00041A  0E00               	movlw	high main@text
  1557  00041C  6F97               	movwf	(sprintf@s+1)& (0+255),b
  1558  00041E  0EF3               	movlw	low STR_11
  1559  000420  6F98               	movwf	sprintf@fmt& (0+255),b
  1560  000422  0EFF               	movlw	high STR_11
  1561  000424  6F99               	movwf	(sprintf@fmt+1)& (0+255),b
  1562  000426  C0C1  F09A         	movff	main@win,?_sprintf+4
  1563  00042A  C0C2  F09B         	movff	main@win+1,?_sprintf+5
  1564  00042E  EC5F  F00B         	call	_sprintf	;wreg free
  1565  000432                     
  1566                           ;main.c: 220:                     LCD_ShowString(1, text);
  1567  000432  0EAA               	movlw	low main@text
  1568  000434  6E03               	movwf	LCD_ShowString@textData^0,c
  1569  000436  0E00               	movlw	high main@text
  1570  000438  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  1571  00043A  0E01               	movlw	1
  1572  00043C  EC36  F00A         	call	_LCD_ShowString
  1573  000440                     
  1574                           ;main.c: 221:                     printf("JACPOT: vase vyhra je %d kreditu.\n", win);
  1575  000440  0E46               	movlw	low STR_12
  1576  000442  0100               	movlb	0	; () banked
  1577  000444  6F96               	movwf	printf@fmt& (0+255),b
  1578  000446  0EFF               	movlw	high STR_12
  1579  000448  6F97               	movwf	(printf@fmt+1)& (0+255),b
  1580  00044A  C0C1  F098         	movff	main@win,?_printf+2
  1581  00044E  C0C2  F099         	movff	main@win+1,?_printf+3
  1582  000452  EC1D  F00C         	call	_printf	;wreg free
  1583  000456                     
  1584                           ;main.c: 222:                     timer_timeout_reset();
  1585  000456  ECA3  F00C         	call	_timer_timeout_reset	;wreg free
  1586  00045A                     l2793:
  1587                           
  1588                           ;main.c: 225:                 if (timer_timeout_compare(2000)){
  1589  00045A  0E07               	movlw	7
  1590  00045C  6E03               	movwf	(timer_timeout_compare@time+1)^0,c
  1591  00045E  0ED0               	movlw	208
  1592  000460  6E02               	movwf	timer_timeout_compare@time^0,c
  1593  000462  EC64  F00C         	call	_timer_timeout_compare	;wreg free
  1594  000466  0900               	iorlw	0
  1595  000468  B4D8               	btfsc	status,2,c
  1596  00046A  EF39  F002         	goto	u2641
  1597  00046E  EF3B  F002         	goto	u2640
  1598  000472                     u2641:
  1599  000472  EF43  F002         	goto	l2797
  1600  000476                     u2640:
  1601  000476                     
  1602                           ;main.c: 226:                     change_state(&state, 0);
  1603  000476  0EC3               	movlw	low main@state
  1604  000478  6E02               	movwf	change_state@state^0,c
  1605  00047A  0E00               	movlw	high main@state
  1606  00047C  6E03               	movwf	(change_state@state+1)^0,c
  1607  00047E  0E00               	movlw	0
  1608  000480  6E04               	movwf	change_state@state_id^0,c
  1609  000482  EC73  F00C         	call	_change_state	;wreg free
  1610  000486                     l2797:
  1611                           
  1612                           ;main.c: 229:                 if(state.changed){
  1613  000486  0100               	movlb	0	; () banked
  1614  000488  51C5               	movf	(main@state+2)& (0+255),w,b
  1615  00048A  B4D8               	btfsc	status,2,c
  1616  00048C  EF4A  F002         	goto	u2651
  1617  000490  EF4C  F002         	goto	u2650
  1618  000494                     u2651:
  1619  000494  EFA3  F002         	goto	l2819
  1620  000498                     u2650:
  1621  000498  EFDE  F000         	goto	l2703
  1622  00049C                     l2801:
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;main.c: 236:                 if(state.first_entry) {
  1626  00049C  51C4               	movf	(main@state+1)& (0+255),w,b
  1627  00049E  B4D8               	btfsc	status,2,c
  1628  0004A0  EF54  F002         	goto	u2661
  1629  0004A4  EF56  F002         	goto	u2660
  1630  0004A8                     u2661:
  1631  0004A8  EF60  F002         	goto	l2809
  1632  0004AC                     u2660:
  1633  0004AC                     
  1634                           ; BSR set to: 0
  1635                           ;main.c: 237:                     state.first_entry = 0;
  1636  0004AC  0E00               	movlw	0
  1637  0004AE  6FC4               	movwf	(main@state+1)& (0+255),b
  1638  0004B0                     
  1639                           ; BSR set to: 0
  1640                           ;main.c: 238:                     printf("Zadna vyhra, zkuste to znovu.\n");
  1641  0004B0  0E8B               	movlw	low STR_13
  1642  0004B2  6F96               	movwf	printf@fmt& (0+255),b
  1643  0004B4  0EFF               	movlw	high STR_13
  1644  0004B6  6F97               	movwf	(printf@fmt+1)& (0+255),b
  1645  0004B8  EC1D  F00C         	call	_printf	;wreg free
  1646  0004BC                     
  1647                           ;main.c: 239:                     timer_timeout_reset();
  1648  0004BC  ECA3  F00C         	call	_timer_timeout_reset	;wreg free
  1649  0004C0                     l2809:
  1650                           
  1651                           ;main.c: 241:                 if (timer_timeout_compare(2000)){
  1652  0004C0  0E07               	movlw	7
  1653  0004C2  6E03               	movwf	(timer_timeout_compare@time+1)^0,c
  1654  0004C4  0ED0               	movlw	208
  1655  0004C6  6E02               	movwf	timer_timeout_compare@time^0,c
  1656  0004C8  EC64  F00C         	call	_timer_timeout_compare	;wreg free
  1657  0004CC  0900               	iorlw	0
  1658  0004CE  B4D8               	btfsc	status,2,c
  1659  0004D0  EF6C  F002         	goto	u2671
  1660  0004D4  EF6E  F002         	goto	u2670
  1661  0004D8                     u2671:
  1662  0004D8  EF76  F002         	goto	l2813
  1663  0004DC                     u2670:
  1664  0004DC                     
  1665                           ;main.c: 242:                     change_state(&state, 0);
  1666  0004DC  0EC3               	movlw	low main@state
  1667  0004DE  6E02               	movwf	change_state@state^0,c
  1668  0004E0  0E00               	movlw	high main@state
  1669  0004E2  6E03               	movwf	(change_state@state+1)^0,c
  1670  0004E4  0E00               	movlw	0
  1671  0004E6  6E04               	movwf	change_state@state_id^0,c
  1672  0004E8  EC73  F00C         	call	_change_state	;wreg free
  1673  0004EC                     l2813:
  1674                           
  1675                           ;main.c: 245:                 if(state.changed){
  1676  0004EC  0100               	movlb	0	; () banked
  1677  0004EE  51C5               	movf	(main@state+2)& (0+255),w,b
  1678  0004F0  B4D8               	btfsc	status,2,c
  1679  0004F2  EF7D  F002         	goto	u2681
  1680  0004F6  EF7F  F002         	goto	u2680
  1681  0004FA                     u2681:
  1682  0004FA  EFA3  F002         	goto	l2819
  1683  0004FE                     u2680:
  1684  0004FE  EFDE  F000         	goto	l2703
  1685  000502                     l2817:
  1686  000502  0100               	movlb	0	; () banked
  1687  000504  51C3               	movf	main@state& (0+255),w,b
  1688  000506  6FA8               	movwf	??_main& (0+255),b
  1689  000508  6BA9               	clrf	(??_main+1)& (0+255),b
  1690                           
  1691                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1692                           ; Switch size 1, requested type "simple"
  1693                           ; Number of cases is 1, Range of values is 0 to 0
  1694                           ; switch strategies available:
  1695                           ; Name         Instructions Cycles
  1696                           ; simple_byte            4     3 (average)
  1697                           ;	Chosen strategy is simple_byte
  1698  00050A  51A9               	movf	(??_main+1)& (0+255),w,b
  1699  00050C  0A00               	xorlw	0	; case 0
  1700  00050E  B4D8               	btfsc	status,2,c
  1701  000510  EF8C  F002         	goto	l2901
  1702  000514  EFA3  F002         	goto	l2819
  1703  000518                     l2901:
  1704                           
  1705                           ; BSR set to: 0
  1706                           ; Switch size 1, requested type "simple"
  1707                           ; Number of cases is 5, Range of values is 0 to 4
  1708                           ; switch strategies available:
  1709                           ; Name         Instructions Cycles
  1710                           ; simple_byte           16     9 (average)
  1711                           ;	Chosen strategy is simple_byte
  1712  000518  51A8               	movf	??_main& (0+255),w,b
  1713  00051A  0A00               	xorlw	0	; case 0
  1714  00051C  B4D8               	btfsc	status,2,c
  1715  00051E  EF8D  F000         	goto	l2681
  1716  000522  0A01               	xorlw	1	; case 1
  1717  000524  B4D8               	btfsc	status,2,c
  1718  000526  EFE4  F000         	goto	l2705
  1719  00052A  0A03               	xorlw	3	; case 2
  1720  00052C  B4D8               	btfsc	status,2,c
  1721  00052E  EF54  F001         	goto	l2735
  1722  000532  0A01               	xorlw	1	; case 3
  1723  000534  B4D8               	btfsc	status,2,c
  1724  000536  EFF4  F001         	goto	l2777
  1725  00053A  0A07               	xorlw	7	; case 4
  1726  00053C  B4D8               	btfsc	status,2,c
  1727  00053E  EF4E  F002         	goto	l2801
  1728  000542  EFA3  F002         	goto	l2819
  1729  000546                     l2819:
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;main.c: 251:         show_credit(credit);
  1733  000546  505D               	movf	_credit^0,w,c	;volatile
  1734  000548  EC88  F00B         	call	_show_credit
  1735  00054C  EF81  F002         	goto	l2817
  1736  000550  EF57  F000         	goto	start
  1737  000554                     __end_of_main:
  1738                           	callstack 0
  1739                           
  1740 ;; *************** function _uart_init *****************
  1741 ;; Defined at:
  1742 ;;		line 4 in file "uart.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;		None
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;		None
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  1    wreg      void 
  1749 ;; Registers used:
  1750 ;;		wreg, status,2
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1760 ;;Total ram usage:        0 bytes
  1761 ;; Hardware stack levels used: 1
  1762 ;; Hardware stack levels required when called: 2
  1763 ;; This function calls:
  1764 ;;		Nothing
  1765 ;; This function is called by:
  1766 ;;		_main
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           	psect	text1
  1771  0018AA                     __ptext1:
  1772                           	callstack 0
  1773  0018AA                     _uart_init:
  1774                           	callstack 28
  1775  0018AA                     
  1776                           ;uart.c: 5:     TRISCbits.RC6 = 1;
  1777  0018AA  8C94               	bsf	148,6,c	;volatile
  1778                           
  1779                           ;uart.c: 6:     TRISCbits.RC7 = 1;
  1780  0018AC  8E94               	bsf	148,7,c	;volatile
  1781                           
  1782                           ;uart.c: 8:     ANSELCbits.ANSC6 = 0;
  1783  0018AE  010F               	movlb	15	; () banked
  1784  0018B0  9D3A               	bcf	58,6,b	;volatile
  1785                           
  1786                           ;uart.c: 9:     ANSELCbits.ANSC7 = 0;
  1787  0018B2  9F3A               	bcf	58,7,b	;volatile
  1788  0018B4                     
  1789                           ; BSR set to: 15
  1790                           ;uart.c: 11:     SPBRGH1 = 0;
  1791  0018B4  0E00               	movlw	0
  1792  0018B6  6EB0               	movwf	176,c	;volatile
  1793                           
  1794                           ;uart.c: 12:     SPBRG1 = 51;
  1795  0018B8  0E33               	movlw	51
  1796  0018BA  6EAF               	movwf	175,c	;volatile
  1797  0018BC                     
  1798                           ; BSR set to: 15
  1799                           ;uart.c: 15:     RCSTA1bits.SPEN = 1;
  1800  0018BC  8EAB               	bsf	171,7,c	;volatile
  1801  0018BE                     
  1802                           ; BSR set to: 15
  1803                           ;uart.c: 16:     TXSTA1bits.SYNC = 0;
  1804  0018BE  98AC               	bcf	172,4,c	;volatile
  1805  0018C0                     
  1806                           ; BSR set to: 15
  1807                           ;uart.c: 17:     TXSTA1bits.TXEN = 1;
  1808  0018C0  8AAC               	bsf	172,5,c	;volatile
  1809  0018C2                     
  1810                           ; BSR set to: 15
  1811                           ;uart.c: 18:     RCSTA1bits.CREN = 1;
  1812  0018C2  88AB               	bsf	171,4,c	;volatile
  1813  0018C4                     
  1814                           ; BSR set to: 15
  1815                           ;uart.c: 20:     RC1IE = 1;
  1816  0018C4  8A9D               	bsf	3997,5,c	;volatile
  1817  0018C6                     
  1818                           ; BSR set to: 15
  1819  0018C6  0012               	return		;funcret
  1820  0018C8                     __end_of_uart_init:
  1821                           	callstack 0
  1822                           
  1823 ;; *************** function _timer_timeout_reset *****************
  1824 ;; Defined at:
  1825 ;;		line 31 in file "timer.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;		None
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;		None
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg, status,2
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1843 ;;Total ram usage:        0 bytes
  1844 ;; Hardware stack levels used: 1
  1845 ;; Hardware stack levels required when called: 2
  1846 ;; This function calls:
  1847 ;;		Nothing
  1848 ;; This function is called by:
  1849 ;;		_main
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           	psect	text2
  1854  001946                     __ptext2:
  1855                           	callstack 0
  1856  001946                     _timer_timeout_reset:
  1857                           	callstack 28
  1858  001946                     
  1859                           ;timer.c: 32:     counter = 0;
  1860  001946  0E00               	movlw	0
  1861  001948  0100               	movlb	0	; () banked
  1862  00194A  6F71               	movwf	(_counter+1)& (0+255),b	;volatile
  1863  00194C  0E00               	movlw	0
  1864  00194E  6F70               	movwf	_counter& (0+255),b	;volatile
  1865  001950                     
  1866                           ; BSR set to: 0
  1867  001950  0012               	return		;funcret
  1868  001952                     __end_of_timer_timeout_reset:
  1869                           	callstack 0
  1870                           
  1871 ;; *************** function _timer_timeout_compare *****************
  1872 ;; Defined at:
  1873 ;;		line 35 in file "timer.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;  time            2    1[COMRAM] unsigned short 
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;		None
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      unsigned char 
  1880 ;; Registers used:
  1881 ;;		wreg, status,2, status,0
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1887 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1890 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1891 ;;Total ram usage:        2 bytes
  1892 ;; Hardware stack levels used: 1
  1893 ;; Hardware stack levels required when called: 2
  1894 ;; This function calls:
  1895 ;;		Nothing
  1896 ;; This function is called by:
  1897 ;;		_main
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text3
  1902  0018C8                     __ptext3:
  1903                           	callstack 0
  1904  0018C8                     _timer_timeout_compare:
  1905                           	callstack 28
  1906  0018C8                     
  1907                           ;timer.c: 36:     return counter > time;
  1908  0018C8  0100               	movlb	0	; () banked
  1909  0018CA  5170               	movf	_counter& (0+255),w,b	;volatile
  1910  0018CC  5C02               	subwf	timer_timeout_compare@time^0,w,c
  1911  0018CE  5171               	movf	(_counter+1)& (0+255),w,b	;volatile
  1912  0018D0  5803               	subwfb	(timer_timeout_compare@time+1)^0,w,c
  1913  0018D2  A0D8               	btfss	status,0,c
  1914  0018D4  EF6E  F00C         	goto	u2361
  1915  0018D8  EF71  F00C         	goto	u2360
  1916  0018DC                     u2361:
  1917  0018DC  0E01               	movlw	1
  1918  0018DE  EF72  F00C         	goto	u2370
  1919  0018E2                     u2360:
  1920  0018E2  0E00               	movlw	0
  1921  0018E4                     u2370:
  1922  0018E4                     
  1923                           ; BSR set to: 0
  1924  0018E4  0012               	return		;funcret
  1925  0018E6                     __end_of_timer_timeout_compare:
  1926                           	callstack 0
  1927                           
  1928 ;; *************** function _timer_init *****************
  1929 ;; Defined at:
  1930 ;;		line 8 in file "timer.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;		None
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;		None
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		wreg, status,2
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1948 ;;Total ram usage:        0 bytes
  1949 ;; Hardware stack levels used: 1
  1950 ;; Hardware stack levels required when called: 2
  1951 ;; This function calls:
  1952 ;;		Nothing
  1953 ;; This function is called by:
  1954 ;;		_main
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text4
  1959  001886                     __ptext4:
  1960                           	callstack 0
  1961  001886                     _timer_init:
  1962                           	callstack 28
  1963  001886                     
  1964                           ;timer.c: 10:     T1CONbits.TMR1CS = 0b00;
  1965  001886  0E3F               	movlw	-193
  1966  001888  16CD               	andwf	205,f,c	;volatile
  1967                           
  1968                           ;timer.c: 11:     T1CONbits.T1CKPS = 0b11;
  1969  00188A  0E30               	movlw	48
  1970  00188C  12CD               	iorwf	205,f,c	;volatile
  1971  00188E                     
  1972                           ;timer.c: 12:     TMR1ON = 1;
  1973  00188E  80CD               	bsf	4045,0,c	;volatile
  1974  001890                     
  1975                           ;timer.c: 13:     TMR1IE = 1;
  1976  001890  809D               	bsf	3997,0,c	;volatile
  1977  001892                     
  1978                           ;timer.c: 14:     TMR1IF = 0;
  1979  001892  909E               	bcf	3998,0,c	;volatile
  1980                           
  1981                           ;timer.c: 17:     T2CONbits.T2CKPS = 0b11;
  1982  001894  0E03               	movlw	3
  1983  001896  12BA               	iorwf	186,f,c	;volatile
  1984                           
  1985                           ;timer.c: 18:     T2CONbits.T2OUTPS = 0b1111;
  1986  001898  0E78               	movlw	120
  1987  00189A  12BA               	iorwf	186,f,c	;volatile
  1988                           
  1989                           ;timer.c: 19:     PR2 = 250;
  1990  00189C  0EFA               	movlw	250
  1991  00189E  6EBB               	movwf	187,c	;volatile
  1992  0018A0                     
  1993                           ;timer.c: 20:     IPR1bits.TMR2IP = 0;
  1994  0018A0  929F               	bcf	159,1,c	;volatile
  1995  0018A2                     
  1996                           ;timer.c: 21:     TMR2IE = 1;
  1997  0018A2  829D               	bsf	3997,1,c	;volatile
  1998  0018A4                     
  1999                           ;timer.c: 22:     TMR2IF = 0;
  2000  0018A4  929E               	bcf	3998,1,c	;volatile
  2001  0018A6                     
  2002                           ;timer.c: 23:     TMR2ON = 1;
  2003  0018A6  84BA               	bsf	4026,2,c	;volatile
  2004  0018A8  0012               	return		;funcret
  2005  0018AA                     __end_of_timer_init:
  2006                           	callstack 0
  2007                           
  2008 ;; *************** function _sprintf *****************
  2009 ;; Defined at:
  2010 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2013 ;;		 -> main@text(17), 
  2014 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2015 ;;		 -> STR_11(12), STR_10(17), STR_9(20), STR_7(20), 
  2016 ;;		 -> STR_5(17), 
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;  f               6   12[BANK0 ] struct _IO_FILE
  2019 ;;  ap              2   10[BANK0 ] PTR void [1]
  2020 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2021 ;;  ret             2    0        int 
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  2    0[BANK0 ] int 
  2024 ;; Registers used:
  2025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2031 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2032 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;Total ram usage:       18 bytes
  2036 ;; Hardware stack levels used: 1
  2037 ;; Hardware stack levels required when called: 9
  2038 ;; This function calls:
  2039 ;;		_vfprintf
  2040 ;; This function is called by:
  2041 ;;		_main
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text5
  2046  0016BE                     __ptext5:
  2047                           	callstack 0
  2048  0016BE                     _sprintf:
  2049                           	callstack 21
  2050  0016BE  0E9A               	movlw	low (?_sprintf+4)
  2051  0016C0  0100               	movlb	0	; () banked
  2052  0016C2  6FA0               	movwf	sprintf@ap& (0+255),b
  2053  0016C4  0E00               	movlw	high (?_sprintf+4)
  2054  0016C6  6FA1               	movwf	(sprintf@ap+1)& (0+255),b
  2055  0016C8  C096  F0A2         	movff	sprintf@s,sprintf@f
  2056  0016CC  C097  F0A3         	movff	sprintf@s+1,sprintf@f+1
  2057  0016D0                     
  2058                           ; BSR set to: 0
  2059  0016D0  0E00               	movlw	0
  2060  0016D2  6FA5               	movwf	(sprintf@f+3)& (0+255),b
  2061  0016D4  0E00               	movlw	0
  2062  0016D6  6FA4               	movwf	(sprintf@f+2)& (0+255),b
  2063  0016D8                     
  2064                           ; BSR set to: 0
  2065  0016D8  0E00               	movlw	0
  2066  0016DA  6FA7               	movwf	(sprintf@f+5)& (0+255),b
  2067  0016DC  0E00               	movlw	0
  2068  0016DE  6FA6               	movwf	(sprintf@f+4)& (0+255),b
  2069  0016E0                     
  2070                           ; BSR set to: 0
  2071  0016E0  0EA2               	movlw	low sprintf@f
  2072  0016E2  6E53               	movwf	vfprintf@fp^0,c
  2073  0016E4  0E00               	movlw	high sprintf@f
  2074  0016E6  6E54               	movwf	(vfprintf@fp+1)^0,c
  2075  0016E8  C098  F055         	movff	sprintf@fmt,vfprintf@fmt
  2076  0016EC  C099  F056         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2077  0016F0  0EA0               	movlw	low sprintf@ap
  2078  0016F2  6E57               	movwf	vfprintf@ap^0,c
  2079  0016F4  0E00               	movlw	high sprintf@ap
  2080  0016F6  6E58               	movwf	(vfprintf@ap+1)^0,c
  2081  0016F8  EC2E  F00B         	call	_vfprintf	;wreg free
  2082  0016FC  0100               	movlb	0	; () banked
  2083  0016FE  51A4               	movf	(sprintf@f+2)& (0+255),w,b
  2084  001700  2596               	addwf	sprintf@s& (0+255),w,b
  2085  001702  6ED9               	movwf	fsr2l,c
  2086  001704  51A5               	movf	(sprintf@f+3)& (0+255),w,b
  2087  001706  2197               	addwfc	(sprintf@s+1)& (0+255),w,b
  2088  001708  6EDA               	movwf	fsr2h,c
  2089  00170A  0E00               	movlw	0
  2090  00170C  6EDF               	movwf	indf2,c
  2091  00170E                     
  2092                           ; BSR set to: 0
  2093  00170E  0012               	return		;funcret
  2094  001710                     __end_of_sprintf:
  2095                           	callstack 0
  2096                           
  2097 ;; *************** function _show_credit *****************
  2098 ;; Defined at:
  2099 ;;		line 37 in file "custom_funcs.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  credit          1    wreg     unsigned char 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  credit          1    5[COMRAM] unsigned char 
  2104 ;;  leds            1    6[COMRAM] unsigned char 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  1    wreg      void 
  2107 ;; Registers used:
  2108 ;;		wreg, status,2, status,0, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2116 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2117 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2118 ;;Total ram usage:        4 bytes
  2119 ;; Hardware stack levels used: 1
  2120 ;; Hardware stack levels required when called: 3
  2121 ;; This function calls:
  2122 ;;		_gpio_drive_led
  2123 ;; This function is called by:
  2124 ;;		_main
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text6
  2129  001710                     __ptext6:
  2130                           	callstack 0
  2131  001710                     _show_credit:
  2132                           	callstack 27
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;incstack = 0
  2136                           ;show_credit@credit stored from wreg
  2137  001710  6E06               	movwf	show_credit@credit^0,c
  2138  001712                     
  2139                           ;custom_funcs.c: 38:     uint8_t leds = 0xFF;
  2140  001712  6807               	setf	show_credit@leds^0,c
  2141  001714                     
  2142                           ;custom_funcs.c: 39:     if (credit > 6) {
  2143  001714  0E06               	movlw	6
  2144  001716  6406               	cpfsgt	show_credit@credit^0,c
  2145  001718  EF90  F00B         	goto	u2381
  2146  00171C  EF92  F00B         	goto	u2380
  2147  001720                     u2381:
  2148  001720  EF99  F00B         	goto	l2627
  2149  001724                     u2380:
  2150  001724                     
  2151                           ;custom_funcs.c: 40:         leds = (uint8_t)~(leds << 6);
  2152  001724  4007               	rrncf	show_credit@leds^0,w,c
  2153  001726  42E8               	rrncf	wreg,f,c
  2154  001728  0BC0               	andlw	192
  2155  00172A  0AFF               	xorlw	255
  2156  00172C  6E07               	movwf	show_credit@leds^0,c
  2157                           
  2158                           ;custom_funcs.c: 41:     } else {
  2159  00172E  EFA8  F00B         	goto	l2629
  2160  001732                     l2627:
  2161                           
  2162                           ;custom_funcs.c: 42:         leds = (uint8_t)~(leds << credit);
  2163  001732  C006  F004         	movff	show_credit@credit,??_show_credit
  2164  001736  C007  F005         	movff	show_credit@leds,??_show_credit+1
  2165  00173A  2A04               	incf	??_show_credit^0,f,c
  2166  00173C  EFA2  F00B         	goto	u2394
  2167  001740                     u2395:
  2168  001740  90D8               	bcf	status,0,c
  2169  001742  3605               	rlcf	(??_show_credit+1)^0,f,c
  2170  001744                     u2394:
  2171  001744  2E04               	decfsz	??_show_credit^0,f,c
  2172  001746  EFA0  F00B         	goto	u2395
  2173  00174A  5005               	movf	(??_show_credit+1)^0,w,c
  2174  00174C  0AFF               	xorlw	255
  2175  00174E  6E07               	movwf	show_credit@leds^0,c
  2176  001750                     l2629:
  2177                           
  2178                           ;custom_funcs.c: 45:     gpio_drive_led(leds);
  2179  001750  5007               	movf	show_credit@leds^0,w,c
  2180  001752  EC4F  F008         	call	_gpio_drive_led
  2181  001756  0012               	return		;funcret
  2182  001758                     __end_of_show_credit:
  2183                           	callstack 0
  2184                           
  2185 ;; *************** function _gpio_drive_led *****************
  2186 ;; Defined at:
  2187 ;;		line 29 in file "gpio.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  input           1    wreg     unsigned char 
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;  input           1    2[COMRAM] unsigned char 
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      void 
  2194 ;; Registers used:
  2195 ;;		wreg, status,2, status,0
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2202 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2203 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2204 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2205 ;;Total ram usage:        2 bytes
  2206 ;; Hardware stack levels used: 1
  2207 ;; Hardware stack levels required when called: 2
  2208 ;; This function calls:
  2209 ;;		Nothing
  2210 ;; This function is called by:
  2211 ;;		_show_credit
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text7
  2216  00109E                     __ptext7:
  2217                           	callstack 0
  2218  00109E                     _gpio_drive_led:
  2219                           	callstack 27
  2220                           
  2221                           ;incstack = 0
  2222                           ;gpio_drive_led@input stored from wreg
  2223  00109E  6E03               	movwf	gpio_drive_led@input^0,c
  2224  0010A0                     
  2225                           ;gpio.c: 30:     LATDbits.LD6 = input & 1 ? 0 : 1;
  2226  0010A0  A003               	btfss	gpio_drive_led@input^0,0,c
  2227  0010A2  EF55  F008         	goto	u1881
  2228  0010A6  EF59  F008         	goto	u1880
  2229  0010AA                     u1881:
  2230  0010AA  6A02               	clrf	??_gpio_drive_led^0,c
  2231  0010AC  2A02               	incf	??_gpio_drive_led^0,f,c
  2232  0010AE  EF5A  F008         	goto	u1898
  2233  0010B2                     u1880:
  2234  0010B2  6A02               	clrf	??_gpio_drive_led^0,c
  2235  0010B4                     u1898:
  2236  0010B4  3A02               	swapf	??_gpio_drive_led^0,f,c
  2237  0010B6  4602               	rlncf	??_gpio_drive_led^0,f,c
  2238  0010B8  4602               	rlncf	??_gpio_drive_led^0,f,c
  2239  0010BA  508C               	movf	140,w,c	;volatile
  2240  0010BC  1802               	xorwf	??_gpio_drive_led^0,w,c
  2241  0010BE  0BBF               	andlw	-65
  2242  0010C0  1802               	xorwf	??_gpio_drive_led^0,w,c
  2243  0010C2  6E8C               	movwf	140,c	;volatile
  2244                           
  2245                           ;gpio.c: 31:     LATDbits.LD5 = input & 2 ? 0 : 1;
  2246  0010C4  A203               	btfss	gpio_drive_led@input^0,1,c
  2247  0010C6  EF67  F008         	goto	u1901
  2248  0010CA  EF6B  F008         	goto	u1900
  2249  0010CE                     u1901:
  2250  0010CE  6A02               	clrf	??_gpio_drive_led^0,c
  2251  0010D0  2A02               	incf	??_gpio_drive_led^0,f,c
  2252  0010D2  EF6C  F008         	goto	u1918
  2253  0010D6                     u1900:
  2254  0010D6  6A02               	clrf	??_gpio_drive_led^0,c
  2255  0010D8                     u1918:
  2256  0010D8  3A02               	swapf	??_gpio_drive_led^0,f,c
  2257  0010DA  4602               	rlncf	??_gpio_drive_led^0,f,c
  2258  0010DC  508C               	movf	140,w,c	;volatile
  2259  0010DE  1802               	xorwf	??_gpio_drive_led^0,w,c
  2260  0010E0  0BDF               	andlw	-33
  2261  0010E2  1802               	xorwf	??_gpio_drive_led^0,w,c
  2262  0010E4  6E8C               	movwf	140,c	;volatile
  2263                           
  2264                           ;gpio.c: 32:     LATDbits.LD4 = input & 4 ? 0 : 1;
  2265  0010E6  A403               	btfss	gpio_drive_led@input^0,2,c
  2266  0010E8  EF78  F008         	goto	u1921
  2267  0010EC  EF7C  F008         	goto	u1920
  2268  0010F0                     u1921:
  2269  0010F0  6A02               	clrf	??_gpio_drive_led^0,c
  2270  0010F2  2A02               	incf	??_gpio_drive_led^0,f,c
  2271  0010F4  EF7D  F008         	goto	u1938
  2272  0010F8                     u1920:
  2273  0010F8  6A02               	clrf	??_gpio_drive_led^0,c
  2274  0010FA                     u1938:
  2275  0010FA  3A02               	swapf	??_gpio_drive_led^0,f,c
  2276  0010FC  508C               	movf	140,w,c	;volatile
  2277  0010FE  1802               	xorwf	??_gpio_drive_led^0,w,c
  2278  001100  0BEF               	andlw	-17
  2279  001102  1802               	xorwf	??_gpio_drive_led^0,w,c
  2280  001104  6E8C               	movwf	140,c	;volatile
  2281                           
  2282                           ;gpio.c: 33:     LATCbits.LC4 = input & 8 ? 0 : 1;
  2283  001106  A603               	btfss	gpio_drive_led@input^0,3,c
  2284  001108  EF88  F008         	goto	u1941
  2285  00110C  EF8C  F008         	goto	u1940
  2286  001110                     u1941:
  2287  001110  6A02               	clrf	??_gpio_drive_led^0,c
  2288  001112  2A02               	incf	??_gpio_drive_led^0,f,c
  2289  001114  EF8D  F008         	goto	u1958
  2290  001118                     u1940:
  2291  001118  6A02               	clrf	??_gpio_drive_led^0,c
  2292  00111A                     u1958:
  2293  00111A  3A02               	swapf	??_gpio_drive_led^0,f,c
  2294  00111C  508B               	movf	139,w,c	;volatile
  2295  00111E  1802               	xorwf	??_gpio_drive_led^0,w,c
  2296  001120  0BEF               	andlw	-17
  2297  001122  1802               	xorwf	??_gpio_drive_led^0,w,c
  2298  001124  6E8B               	movwf	139,c	;volatile
  2299                           
  2300                           ;gpio.c: 34:     LATDbits.LD3 = input & 16 ? 0 : 1;
  2301  001126  A803               	btfss	gpio_drive_led@input^0,4,c
  2302  001128  EF98  F008         	goto	u1961
  2303  00112C  EF9C  F008         	goto	u1960
  2304  001130                     u1961:
  2305  001130  6A02               	clrf	??_gpio_drive_led^0,c
  2306  001132  2A02               	incf	??_gpio_drive_led^0,f,c
  2307  001134  EF9D  F008         	goto	u1978
  2308  001138                     u1960:
  2309  001138  6A02               	clrf	??_gpio_drive_led^0,c
  2310  00113A                     u1978:
  2311  00113A  4602               	rlncf	??_gpio_drive_led^0,f,c
  2312  00113C  4602               	rlncf	??_gpio_drive_led^0,f,c
  2313  00113E  4602               	rlncf	??_gpio_drive_led^0,f,c
  2314  001140  508C               	movf	140,w,c	;volatile
  2315  001142  1802               	xorwf	??_gpio_drive_led^0,w,c
  2316  001144  0BF7               	andlw	-9
  2317  001146  1802               	xorwf	??_gpio_drive_led^0,w,c
  2318  001148  6E8C               	movwf	140,c	;volatile
  2319                           
  2320                           ;gpio.c: 35:     LATDbits.LD2 = input & 32 ? 0 : 1;
  2321  00114A  AA03               	btfss	gpio_drive_led@input^0,5,c
  2322  00114C  EFAA  F008         	goto	u1981
  2323  001150  EFAE  F008         	goto	u1980
  2324  001154                     u1981:
  2325  001154  6A02               	clrf	??_gpio_drive_led^0,c
  2326  001156  2A02               	incf	??_gpio_drive_led^0,f,c
  2327  001158  EFAF  F008         	goto	u1998
  2328  00115C                     u1980:
  2329  00115C  6A02               	clrf	??_gpio_drive_led^0,c
  2330  00115E                     u1998:
  2331  00115E  4602               	rlncf	??_gpio_drive_led^0,f,c
  2332  001160  4602               	rlncf	??_gpio_drive_led^0,f,c
  2333  001162  508C               	movf	140,w,c	;volatile
  2334  001164  1802               	xorwf	??_gpio_drive_led^0,w,c
  2335  001166  0BFB               	andlw	-5
  2336  001168  1802               	xorwf	??_gpio_drive_led^0,w,c
  2337  00116A  6E8C               	movwf	140,c	;volatile
  2338  00116C  0012               	return		;funcret
  2339  00116E                     __end_of_gpio_drive_led:
  2340                           	callstack 0
  2341                           
  2342 ;; *************** function _printf *****************
  2343 ;; Defined at:
  2344 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;  fmt             2    0[BANK0 ] PTR const unsigned char 
  2347 ;;		 -> STR_13(31), STR_12(35), STR_8(46), STR_4(19), 
  2348 ;;		 -> STR_3(77), STR_2(34), STR_1(72), 
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;  ap              2   90[COMRAM] PTR void [1]
  2351 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2352 ;;  ret             2    0        int 
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  2    0[BANK0 ] int 
  2355 ;; Registers used:
  2356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2362 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2363 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2365 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2366 ;;Total ram usage:        6 bytes
  2367 ;; Hardware stack levels used: 1
  2368 ;; Hardware stack levels required when called: 9
  2369 ;; This function calls:
  2370 ;;		_vfprintf
  2371 ;; This function is called by:
  2372 ;;		_main
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           	psect	text8
  2377  00183A                     __ptext8:
  2378                           	callstack 0
  2379  00183A                     _printf:
  2380                           	callstack 21
  2381  00183A  0E98               	movlw	low (?_printf+2)
  2382  00183C  6E5B               	movwf	printf@ap^0,c
  2383  00183E  0E00               	movlw	high (?_printf+2)
  2384  001840  6E5C               	movwf	(printf@ap+1)^0,c
  2385  001842  0E00               	movlw	0
  2386  001844  6E53               	movwf	vfprintf@fp^0,c
  2387  001846  0E00               	movlw	0
  2388  001848  6E54               	movwf	(vfprintf@fp+1)^0,c
  2389  00184A  C096  F055         	movff	printf@fmt,vfprintf@fmt
  2390  00184E  C097  F056         	movff	printf@fmt+1,vfprintf@fmt+1
  2391  001852  0E5B               	movlw	low printf@ap
  2392  001854  6E57               	movwf	vfprintf@ap^0,c
  2393  001856  0E00               	movlw	high printf@ap
  2394  001858  6E58               	movwf	(vfprintf@ap+1)^0,c
  2395  00185A  EC2E  F00B         	call	_vfprintf	;wreg free
  2396  00185E  0012               	return		;funcret
  2397  001860                     __end_of_printf:
  2398                           	callstack 0
  2399                           
  2400 ;; *************** function _vfprintf *****************
  2401 ;; Defined at:
  2402 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
  2405 ;;		 -> NULL(0), sprintf@f(6), 
  2406 ;;  fmt             2   84[COMRAM] PTR const unsigned char 
  2407 ;;		 -> STR_13(31), STR_12(35), STR_11(12), STR_10(17), 
  2408 ;;		 -> STR_9(20), STR_8(46), STR_7(20), STR_5(17), 
  2409 ;;		 -> STR_4(19), STR_3(77), STR_2(34), STR_1(72), 
  2410 ;;  ap              2   86[COMRAM] PTR PTR void 
  2411 ;;		 -> printf@ap(2), sprintf@ap(2), 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;  cfmt            2   88[COMRAM] PTR unsigned char 
  2414 ;;		 -> STR_13(31), STR_12(35), STR_11(12), STR_10(17), 
  2415 ;;		 -> STR_9(20), STR_8(46), STR_7(20), STR_5(17), 
  2416 ;;		 -> STR_4(19), STR_3(77), STR_2(34), STR_1(72), 
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  2   82[COMRAM] int 
  2419 ;; Registers used:
  2420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2426 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;Total ram usage:        8 bytes
  2431 ;; Hardware stack levels used: 1
  2432 ;; Hardware stack levels required when called: 8
  2433 ;; This function calls:
  2434 ;;		_vfpfcnvrt
  2435 ;; This function is called by:
  2436 ;;		_sprintf
  2437 ;;		_printf
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440                           
  2441                           	psect	text9
  2442  00165C                     __ptext9:
  2443                           	callstack 0
  2444  00165C                     _vfprintf:
  2445                           	callstack 21
  2446  00165C                     
  2447                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2448  00165C  C055  F059         	movff	vfprintf@fmt,vfprintf@cfmt
  2449  001660  C056  F05A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2450  001664                     
  2451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2452  001664  0E00               	movlw	0
  2453  001666  0100               	movlb	0	; () banked
  2454  001668  6F69               	movwf	(_nout+1)& (0+255),b
  2455  00166A  0E00               	movlw	0
  2456  00166C  6F68               	movwf	_nout& (0+255),b
  2457                           
  2458                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2459  00166E  EF4C  F00B         	goto	l2325
  2460  001672                     l2323:
  2461                           
  2462                           ; BSR set to: 0
  2463                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2464  001672  C053  F042         	movff	vfprintf@fp,vfpfcnvrt@fp
  2465  001676  C054  F043         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2466  00167A  0E59               	movlw	low vfprintf@cfmt
  2467  00167C  6E44               	movwf	vfpfcnvrt@fmt^0,c
  2468  00167E  0E00               	movlw	high vfprintf@cfmt
  2469  001680  6E45               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2470  001682  C057  F046         	movff	vfprintf@ap,vfpfcnvrt@ap
  2471  001686  C058  F047         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2472  00168A  EC1B  F004         	call	_vfpfcnvrt	;wreg free
  2473  00168E  5042               	movf	?_vfpfcnvrt^0,w,c
  2474  001690  0100               	movlb	0	; () banked
  2475  001692  2768               	addwf	_nout& (0+255),f,b
  2476  001694  5043               	movf	(?_vfpfcnvrt+1)^0,w,c
  2477  001696  2369               	addwfc	(_nout+1)& (0+255),f,b
  2478  001698                     l2325:
  2479                           
  2480                           ; BSR set to: 0
  2481                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2482  001698  C059  FFF6         	movff	vfprintf@cfmt,tblptrl
  2483  00169C  C05A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2484  0016A0                     	if	0	;tblptru may be non-zero
  2485  0016A0                     	endif
  2486  0016A0                     	if	0	;tblptru may be non-zero
  2487  0016A0                     	endif
  2488  0016A0  0008               	tblrd		*
  2489  0016A2  50F5               	movf	tablat,w,c
  2490  0016A4  0900               	iorlw	0
  2491  0016A6  A4D8               	btfss	status,2,c
  2492  0016A8  EF58  F00B         	goto	u2031
  2493  0016AC  EF5A  F00B         	goto	u2030
  2494  0016B0                     u2031:
  2495  0016B0  EF39  F00B         	goto	l2323
  2496  0016B4                     u2030:
  2497  0016B4                     
  2498                           ; BSR set to: 0
  2499                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2500  0016B4  C068  F053         	movff	_nout,?_vfprintf
  2501  0016B8  C069  F054         	movff	_nout+1,?_vfprintf+1
  2502  0016BC                     
  2503                           ; BSR set to: 0
  2504  0016BC  0012               	return		;funcret
  2505  0016BE                     __end_of_vfprintf:
  2506                           	callstack 0
  2507                           
  2508 ;; *************** function _vfpfcnvrt *****************
  2509 ;; Defined at:
  2510 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
  2513 ;;		 -> NULL(0), sprintf@f(6), 
  2514 ;;  fmt             2   67[COMRAM] PTR PTR unsigned char 
  2515 ;;		 -> vfprintf@cfmt(2), 
  2516 ;;  ap              2   69[COMRAM] PTR PTR void 
  2517 ;;		 -> printf@ap(2), sprintf@ap(2), 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;  ll              8   73[COMRAM] long long 
  2520 ;;  llu             8    0        unsigned long long 
  2521 ;;  f               4    0        unsigned long long 
  2522 ;;  vp              3    0        PTR void 
  2523 ;;  ct              3    0        unsigned char [3]
  2524 ;;  cp              3    0        PTR unsigned char 
  2525 ;;  i               2    0        int 
  2526 ;;  done            2    0        int 
  2527 ;;  c               1   81[COMRAM] unsigned char 
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  2   65[COMRAM] int 
  2530 ;; Registers used:
  2531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2537 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2540 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2541 ;;Total ram usage:       17 bytes
  2542 ;; Hardware stack levels used: 1
  2543 ;; Hardware stack levels required when called: 7
  2544 ;; This function calls:
  2545 ;;		_ctoa
  2546 ;;		_dtoa
  2547 ;;		_fputc
  2548 ;; This function is called by:
  2549 ;;		_vfprintf
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           	psect	text10
  2554  000836                     __ptext10:
  2555                           	callstack 0
  2556  000836                     _vfpfcnvrt:
  2557                           	callstack 21
  2558  000836                     
  2559                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2560  000836  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2561  00083A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2562  00083E  CFDE FFF6          	movff	postinc2,tblptrl
  2563  000842  CFDD FFF7          	movff	postdec2,tblptrh
  2564  000846                     	if	0	;tblptru may be non-zero
  2565  000846                     	endif
  2566  000846                     	if	0	;tblptru may be non-zero
  2567  000846                     	endif
  2568  000846  0008               	tblrd		*
  2569  000848  50F5               	movf	tablat,w,c
  2570  00084A  0A25               	xorlw	37
  2571  00084C  A4D8               	btfss	status,2,c
  2572  00084E  EF2B  F004         	goto	u1831
  2573  000852  EF2D  F004         	goto	u1830
  2574  000856                     u1831:
  2575  000856  EF12  F005         	goto	l2301
  2576  00085A                     u1830:
  2577  00085A                     
  2578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2579  00085A  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2580  00085E  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2581  000862  2ADE               	incf	postinc2,f,c
  2582  000864  0E00               	movlw	0
  2583  000866  22DD               	addwfc	postdec2,f,c
  2584  000868                     
  2585                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2586  000868  0E00               	movlw	0
  2587  00086A  0100               	movlb	0	; () banked
  2588  00086C  6F6B               	movwf	(_width+1)& (0+255),b
  2589  00086E  0E00               	movlw	0
  2590  000870  6F6A               	movwf	_width& (0+255),b
  2591  000872  C06A  F06E         	movff	_width,_flags
  2592  000876  C06B  F06F         	movff	_width+1,_flags+1
  2593  00087A                     
  2594                           ; BSR set to: 0
  2595                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2596  00087A  696C               	setf	_prec& (0+255),b
  2597  00087C  696D               	setf	(_prec+1)& (0+255),b
  2598  00087E                     
  2599                           ; BSR set to: 0
  2600                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  2601  00087E  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2602  000882  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2603  000886  CFDE FFF6          	movff	postinc2,tblptrl
  2604  00088A  CFDD FFF7          	movff	postdec2,tblptrh
  2605  00088E                     	if	0	;tblptru may be non-zero
  2606  00088E                     	endif
  2607  00088E                     	if	0	;tblptru may be non-zero
  2608  00088E                     	endif
  2609  00088E  0008               	tblrd		*
  2610  000890  50F5               	movf	tablat,w,c
  2611  000892  0A63               	xorlw	99
  2612  000894  A4D8               	btfss	status,2,c
  2613  000896  EF4F  F004         	goto	u1841
  2614  00089A  EF51  F004         	goto	u1840
  2615  00089E                     u1841:
  2616  00089E  EF78  F004         	goto	l2275
  2617  0008A2                     u1840:
  2618  0008A2                     
  2619                           ; BSR set to: 0
  2620                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  2621  0008A2  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2622  0008A6  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2623  0008AA  2ADE               	incf	postinc2,f,c
  2624  0008AC  0E00               	movlw	0
  2625  0008AE  22DD               	addwfc	postdec2,f,c
  2626                           
  2627                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2628  0008B0  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2629  0008B4  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2630  0008B8  CFDF F048          	movff	indf2,??_vfpfcnvrt
  2631  0008BC  0E02               	movlw	2
  2632  0008BE  26DE               	addwf	postinc2,f,c
  2633  0008C0  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  2634  0008C4  0E00               	movlw	0
  2635  0008C6  22DD               	addwfc	postdec2,f,c
  2636  0008C8  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2637  0008CC  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2638  0008D0  50DF               	movf	indf2,w,c
  2639  0008D2  6E52               	movwf	vfpfcnvrt@c^0,c
  2640  0008D4                     
  2641                           ; BSR set to: 0
  2642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  2643  0008D4  C042  F00C         	movff	vfpfcnvrt@fp,ctoa@fp
  2644  0008D8  C043  F00D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2645  0008DC  C052  F00E         	movff	vfpfcnvrt@c,ctoa@c
  2646  0008E0  ECE3  F007         	call	_ctoa	;wreg free
  2647  0008E4  C00C  F042         	movff	?_ctoa,?_vfpfcnvrt
  2648  0008E8  C00D  F043         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2649  0008EC  EF2D  F005         	goto	l1079
  2650  0008F0                     l2275:
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2654  0008F0  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2655  0008F4  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2656  0008F8  CFDE FFF6          	movff	postinc2,tblptrl
  2657  0008FC  CFDD FFF7          	movff	postdec2,tblptrh
  2658  000900                     	if	0	;tblptru may be non-zero
  2659  000900                     	endif
  2660  000900                     	if	0	;tblptru may be non-zero
  2661  000900                     	endif
  2662  000900  0008               	tblrd		*
  2663  000902  50F5               	movf	tablat,w,c
  2664  000904  0A64               	xorlw	100
  2665  000906  B4D8               	btfsc	status,2,c
  2666  000908  EF88  F004         	goto	u1851
  2667  00090C  EF8A  F004         	goto	u1850
  2668  000910                     u1851:
  2669  000910  EF9C  F004         	goto	l2279
  2670  000914                     u1850:
  2671  000914                     
  2672                           ; BSR set to: 0
  2673  000914  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2674  000918  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2675  00091C  CFDE FFF6          	movff	postinc2,tblptrl
  2676  000920  CFDD FFF7          	movff	postdec2,tblptrh
  2677  000924                     	if	0	;tblptru may be non-zero
  2678  000924                     	endif
  2679  000924                     	if	0	;tblptru may be non-zero
  2680  000924                     	endif
  2681  000924  0008               	tblrd		*
  2682  000926  50F5               	movf	tablat,w,c
  2683  000928  0A69               	xorlw	105
  2684  00092A  A4D8               	btfss	status,2,c
  2685  00092C  EF9A  F004         	goto	u1861
  2686  000930  EF9C  F004         	goto	u1860
  2687  000934                     u1861:
  2688  000934  EFDC  F004         	goto	l2285
  2689  000938                     u1860:
  2690  000938                     l2279:
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2694  000938  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2695  00093C  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2696  000940  2ADE               	incf	postinc2,f,c
  2697  000942  0E00               	movlw	0
  2698  000944  22DD               	addwfc	postdec2,f,c
  2699                           
  2700                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2701  000946  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2702  00094A  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2703  00094E  CFDF F048          	movff	indf2,??_vfpfcnvrt
  2704  000952  0E02               	movlw	2
  2705  000954  26DE               	addwf	postinc2,f,c
  2706  000956  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  2707  00095A  0E00               	movlw	0
  2708  00095C  22DD               	addwfc	postdec2,f,c
  2709  00095E  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2710  000962  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2711  000966  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  2712  00096A  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  2713  00096E  0E00               	movlw	0
  2714  000970  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2715  000972  0EFF               	movlw	-1
  2716  000974  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  2717  000976  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  2718  000978  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  2719  00097A  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  2720  00097C  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  2721  00097E  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  2722  000980                     
  2723                           ; BSR set to: 0
  2724                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2725  000980  C042  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  2726  000984  C043  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2727  000988  C04A  F020         	movff	vfpfcnvrt@ll,dtoa@d
  2728  00098C  C04B  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2729  000990  C04C  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2730  000994  C04D  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2731  000998  C04E  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2732  00099C  C04F  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2733  0009A0  C050  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2734  0009A4  C051  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2735  0009A8  ECAA  F002         	call	_dtoa	;wreg free
  2736  0009AC  C01E  F042         	movff	?_dtoa,?_vfpfcnvrt
  2737  0009B0  C01F  F043         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2738  0009B4  EF2D  F005         	goto	l1079
  2739  0009B8                     l2285:
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2743  0009B8  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2744  0009BC  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2745  0009C0  CFDE FFF6          	movff	postinc2,tblptrl
  2746  0009C4  CFDD FFF7          	movff	postdec2,tblptrh
  2747  0009C8                     	if	0	;tblptru may be non-zero
  2748  0009C8                     	endif
  2749  0009C8                     	if	0	;tblptru may be non-zero
  2750  0009C8                     	endif
  2751  0009C8  0008               	tblrd		*
  2752  0009CA  50F5               	movf	tablat,w,c
  2753  0009CC  0A25               	xorlw	37
  2754  0009CE  A4D8               	btfss	status,2,c
  2755  0009D0  EFEC  F004         	goto	u1871
  2756  0009D4  EFEE  F004         	goto	u1870
  2757  0009D8                     u1871:
  2758  0009D8  EF05  F005         	goto	l2295
  2759  0009DC                     u1870:
  2760  0009DC                     
  2761                           ; BSR set to: 0
  2762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2763  0009DC  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2764  0009E0  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2765  0009E4  2ADE               	incf	postinc2,f,c
  2766  0009E6  0E00               	movlw	0
  2767  0009E8  22DD               	addwfc	postdec2,f,c
  2768  0009EA                     
  2769                           ; BSR set to: 0
  2770                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2771  0009EA  0E00               	movlw	0
  2772  0009EC  6E04               	movwf	(fputc@c+1)^0,c
  2773  0009EE  0E25               	movlw	37
  2774  0009F0  6E03               	movwf	fputc@c^0,c
  2775  0009F2  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2776  0009F6  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2777  0009FA  ECB7  F008         	call	_fputc	;wreg free
  2778  0009FE                     l2291:
  2779                           
  2780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2781  0009FE  0E00               	movlw	0
  2782  000A00  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  2783  000A02  0E01               	movlw	1
  2784  000A04  6E42               	movwf	?_vfpfcnvrt^0,c
  2785  000A06  EF2D  F005         	goto	l1079
  2786  000A0A                     l2295:
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2790  000A0A  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2791  000A0E  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2792  000A12  2ADE               	incf	postinc2,f,c
  2793  000A14  0E00               	movlw	0
  2794  000A16  22DD               	addwfc	postdec2,f,c
  2795  000A18                     
  2796                           ; BSR set to: 0
  2797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2798  000A18  0E00               	movlw	0
  2799  000A1A  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  2800  000A1C  0E00               	movlw	0
  2801  000A1E  6E42               	movwf	?_vfpfcnvrt^0,c
  2802  000A20  EF2D  F005         	goto	l1079
  2803  000A24                     l2301:
  2804                           
  2805                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2806  000A24  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2807  000A28  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2808  000A2C  CFDE FFF6          	movff	postinc2,tblptrl
  2809  000A30  CFDD FFF7          	movff	postdec2,tblptrh
  2810  000A34                     	if	0	;tblptru may be non-zero
  2811  000A34                     	endif
  2812  000A34                     	if	0	;tblptru may be non-zero
  2813  000A34                     	endif
  2814  000A34  0008               	tblrd		*
  2815  000A36  50F5               	movf	tablat,w,c
  2816  000A38  6E03               	movwf	fputc@c^0,c
  2817  000A3A  6A04               	clrf	(fputc@c+1)^0,c
  2818  000A3C  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2819  000A40  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2820  000A44  ECB7  F008         	call	_fputc	;wreg free
  2821  000A48                     
  2822                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2823  000A48  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2824  000A4C  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2825  000A50  2ADE               	incf	postinc2,f,c
  2826  000A52  0E00               	movlw	0
  2827  000A54  22DD               	addwfc	postdec2,f,c
  2828  000A56  EFFF  F004         	goto	l2291
  2829  000A5A                     l1079:
  2830  000A5A  0012               	return		;funcret
  2831  000A5C                     __end_of_vfpfcnvrt:
  2832                           	callstack 0
  2833                           
  2834 ;; *************** function _dtoa *****************
  2835 ;; Defined at:
  2836 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  2839 ;;		 -> NULL(0), sprintf@f(6), 
  2840 ;;  d               8   31[COMRAM] long long 
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;  n               8   55[COMRAM] long long 
  2843 ;;  i               2   63[COMRAM] int 
  2844 ;;  s               2   53[COMRAM] int 
  2845 ;;  w               2   51[COMRAM] int 
  2846 ;;  p               2   49[COMRAM] int 
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  2   29[COMRAM] int 
  2849 ;; Registers used:
  2850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2856 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2857 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2858 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2859 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;Total ram usage:       36 bytes
  2861 ;; Hardware stack levels used: 1
  2862 ;; Hardware stack levels required when called: 6
  2863 ;; This function calls:
  2864 ;;		___aodiv
  2865 ;;		___aomod
  2866 ;;		_abs
  2867 ;;		_pad
  2868 ;; This function is called by:
  2869 ;;		_vfpfcnvrt
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           	psect	text11
  2874  000554                     __ptext11:
  2875                           	callstack 0
  2876  000554                     _dtoa:
  2877                           	callstack 21
  2878  000554                     
  2879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2880  000554  C020  F038         	movff	dtoa@d,dtoa@n
  2881  000558  C021  F039         	movff	dtoa@d+1,dtoa@n+1
  2882  00055C  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
  2883  000560  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
  2884  000564  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
  2885  000568  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
  2886  00056C  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
  2887  000570  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
  2888  000574                     
  2889                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2890  000574  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  2891  000576  EFBF  F002         	goto	u1661
  2892  00057A  EFC2  F002         	goto	u1660
  2893  00057E                     u1661:
  2894  00057E  0E01               	movlw	1
  2895  000580  EFC3  F002         	goto	u1670
  2896  000584                     u1660:
  2897  000584  0E00               	movlw	0
  2898  000586                     u1670:
  2899  000586  6E36               	movwf	dtoa@s^0,c
  2900  000588  6A37               	clrf	(dtoa@s+1)^0,c
  2901                           
  2902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2903  00058A  5036               	movf	dtoa@s^0,w,c
  2904  00058C  1037               	iorwf	(dtoa@s+1)^0,w,c
  2905  00058E  B4D8               	btfsc	status,2,c
  2906  000590  EFCC  F002         	goto	u1681
  2907  000594  EFCE  F002         	goto	u1680
  2908  000598                     u1681:
  2909  000598  EFDE  F002         	goto	l2193
  2910  00059C                     u1680:
  2911  00059C                     
  2912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2913  00059C  1E3F               	comf	(dtoa@n+7)^0,f,c
  2914  00059E  1E3E               	comf	(dtoa@n+6)^0,f,c
  2915  0005A0  1E3D               	comf	(dtoa@n+5)^0,f,c
  2916  0005A2  1E3C               	comf	(dtoa@n+4)^0,f,c
  2917  0005A4  1E3B               	comf	(dtoa@n+3)^0,f,c
  2918  0005A6  1E3A               	comf	(dtoa@n+2)^0,f,c
  2919  0005A8  1E39               	comf	(dtoa@n+1)^0,f,c
  2920  0005AA  6C38               	negf	dtoa@n^0,c
  2921  0005AC  0E00               	movlw	0
  2922  0005AE  2239               	addwfc	(dtoa@n+1)^0,f,c
  2923  0005B0  223A               	addwfc	(dtoa@n+2)^0,f,c
  2924  0005B2  223B               	addwfc	(dtoa@n+3)^0,f,c
  2925  0005B4  223C               	addwfc	(dtoa@n+4)^0,f,c
  2926  0005B6  223D               	addwfc	(dtoa@n+5)^0,f,c
  2927  0005B8  223E               	addwfc	(dtoa@n+6)^0,f,c
  2928  0005BA  223F               	addwfc	(dtoa@n+7)^0,f,c
  2929  0005BC                     l2193:
  2930                           
  2931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2932  0005BC  0100               	movlb	0	; () banked
  2933  0005BE  BF6D               	btfsc	(_prec+1)& (0+255),7,b
  2934  0005C0  EFE4  F002         	goto	u1691
  2935  0005C4  EFE6  F002         	goto	u1690
  2936  0005C8                     u1691:
  2937  0005C8  EFE7  F002         	goto	l2197
  2938  0005CC                     u1690:
  2939  0005CC                     
  2940                           ; BSR set to: 0
  2941                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2942  0005CC  936E               	bcf	_flags& (0+255),1,b
  2943  0005CE                     l2197:
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2947  0005CE  BF6D               	btfsc	(_prec+1)& (0+255),7,b
  2948  0005D0  EFF4  F002         	goto	u1700
  2949  0005D4  516D               	movf	(_prec+1)& (0+255),w,b
  2950  0005D6  E106               	bnz	u1701
  2951  0005D8  056C               	decf	_prec& (0+255),w,b
  2952  0005DA  B0D8               	btfsc	status,0,c
  2953  0005DC  EFF2  F002         	goto	u1701
  2954  0005E0  EFF4  F002         	goto	u1700
  2955  0005E4                     u1701:
  2956  0005E4  EFFA  F002         	goto	l1054
  2957  0005E8                     u1700:
  2958  0005E8                     
  2959                           ; BSR set to: 0
  2960  0005E8  0E00               	movlw	0
  2961  0005EA  6E33               	movwf	(dtoa@p+1)^0,c
  2962  0005EC  0E01               	movlw	1
  2963  0005EE  6E32               	movwf	dtoa@p^0,c
  2964  0005F0  EFFE  F002         	goto	l1056
  2965  0005F4                     l1054:
  2966                           
  2967                           ; BSR set to: 0
  2968  0005F4  C06C  F032         	movff	_prec,dtoa@p
  2969  0005F8  C06D  F033         	movff	_prec+1,dtoa@p+1
  2970  0005FC                     l1056:
  2971                           
  2972                           ; BSR set to: 0
  2973                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2974  0005FC  C06A  F034         	movff	_width,dtoa@w
  2975  000600  C06B  F035         	movff	_width+1,dtoa@w+1
  2976  000604                     
  2977                           ; BSR set to: 0
  2978                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2979  000604  5036               	movf	dtoa@s^0,w,c
  2980  000606  1037               	iorwf	(dtoa@s+1)^0,w,c
  2981  000608  A4D8               	btfss	status,2,c
  2982  00060A  EF09  F003         	goto	u1711
  2983  00060E  EF0B  F003         	goto	u1710
  2984  000612                     u1711:
  2985  000612  EF12  F003         	goto	l2205
  2986  000616                     u1710:
  2987  000616                     
  2988                           ; BSR set to: 0
  2989  000616  A56E               	btfss	_flags& (0+255),2,b
  2990  000618  EF10  F003         	goto	u1721
  2991  00061C  EF12  F003         	goto	u1720
  2992  000620                     u1721:
  2993  000620  EF15  F003         	goto	l2207
  2994  000624                     u1720:
  2995  000624                     l2205:
  2996                           
  2997                           ; BSR set to: 0
  2998                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  2999  000624  0634               	decf	dtoa@w^0,f,c
  3000  000626  A0D8               	btfss	status,0,c
  3001  000628  0635               	decf	(dtoa@w+1)^0,f,c
  3002  00062A                     l2207:
  3003                           
  3004                           ; BSR set to: 0
  3005                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3006  00062A  0E00               	movlw	0
  3007  00062C  6E41               	movwf	(dtoa@i+1)^0,c
  3008  00062E  0E1F               	movlw	31
  3009  000630  6E40               	movwf	dtoa@i^0,c
  3010  000632                     
  3011                           ; BSR set to: 0
  3012                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3013  000632  0E00               	movlw	0
  3014  000634  6F91               	movwf	(_dbuf+31)& (0+255),b
  3015                           
  3016                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3017  000636  EF99  F003         	goto	l2221
  3018  00063A                     l2211:
  3019                           
  3020                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  3021  00063A  0640               	decf	dtoa@i^0,f,c
  3022  00063C  A0D8               	btfss	status,0,c
  3023  00063E  0641               	decf	(dtoa@i+1)^0,f,c
  3024  000640                     
  3025                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3026  000640  0E72               	movlw	low _dbuf
  3027  000642  2440               	addwf	dtoa@i^0,w,c
  3028  000644  6ED9               	movwf	fsr2l,c
  3029  000646  0E00               	movlw	high _dbuf
  3030  000648  2041               	addwfc	(dtoa@i+1)^0,w,c
  3031  00064A  6EDA               	movwf	fsr2h,c
  3032  00064C  C038  F002         	movff	dtoa@n,___aomod@dividend
  3033  000650  C039  F003         	movff	dtoa@n+1,___aomod@dividend+1
  3034  000654  C03A  F004         	movff	dtoa@n+2,___aomod@dividend+2
  3035  000658  C03B  F005         	movff	dtoa@n+3,___aomod@dividend+3
  3036  00065C  C03C  F006         	movff	dtoa@n+4,___aomod@dividend+4
  3037  000660  C03D  F007         	movff	dtoa@n+5,___aomod@dividend+5
  3038  000664  C03E  F008         	movff	dtoa@n+6,___aomod@dividend+6
  3039  000668  C03F  F009         	movff	dtoa@n+7,___aomod@dividend+7
  3040  00066C  0E0A               	movlw	10
  3041  00066E  6E0A               	movwf	___aomod@divisor^0,c
  3042  000670  0E00               	movlw	0
  3043  000672  6E0B               	movwf	(___aomod@divisor+1)^0,c
  3044  000674  0E00               	movlw	0
  3045  000676  6E0C               	movwf	(___aomod@divisor+2)^0,c
  3046  000678  0E00               	movlw	0
  3047  00067A  6E0D               	movwf	(___aomod@divisor+3)^0,c
  3048  00067C  0E00               	movlw	0
  3049  00067E  6E0E               	movwf	(___aomod@divisor+4)^0,c
  3050  000680  0E00               	movlw	0
  3051  000682  6E0F               	movwf	(___aomod@divisor+5)^0,c
  3052  000684  0E00               	movlw	0
  3053  000686  6E10               	movwf	(___aomod@divisor+6)^0,c
  3054  000688  0E00               	movlw	0
  3055  00068A  6E11               	movwf	(___aomod@divisor+7)^0,c
  3056  00068C  ECBB  F006         	call	___aomod	;wreg free
  3057  000690  C002  F028         	movff	?___aomod,??_dtoa
  3058  000694  C003  F029         	movff	?___aomod+1,??_dtoa+1
  3059  000698  C004  F02A         	movff	?___aomod+2,??_dtoa+2
  3060  00069C  C005  F02B         	movff	?___aomod+3,??_dtoa+3
  3061  0006A0  C006  F02C         	movff	?___aomod+4,??_dtoa+4
  3062  0006A4  C007  F02D         	movff	?___aomod+5,??_dtoa+5
  3063  0006A8  C008  F02E         	movff	?___aomod+6,??_dtoa+6
  3064  0006AC  C009  F02F         	movff	?___aomod+7,??_dtoa+7
  3065  0006B0  C028  F014         	movff	??_dtoa,abs@a
  3066  0006B4  C02A  F015         	movff	??_dtoa+2,abs@a+1
  3067  0006B8  ECCE  F00B         	call	_abs	;wreg free
  3068  0006BC  5014               	movf	?_abs^0,w,c
  3069  0006BE  0F30               	addlw	48
  3070  0006C0  6EDF               	movwf	indf2,c
  3071  0006C2                     
  3072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  3073  0006C2  0632               	decf	dtoa@p^0,f,c
  3074  0006C4  A0D8               	btfss	status,0,c
  3075  0006C6  0633               	decf	(dtoa@p+1)^0,f,c
  3076  0006C8                     
  3077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  3078  0006C8  0634               	decf	dtoa@w^0,f,c
  3079  0006CA  A0D8               	btfss	status,0,c
  3080  0006CC  0635               	decf	(dtoa@w+1)^0,f,c
  3081  0006CE                     
  3082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3083  0006CE  C038  F002         	movff	dtoa@n,___aodiv@dividend
  3084  0006D2  C039  F003         	movff	dtoa@n+1,___aodiv@dividend+1
  3085  0006D6  C03A  F004         	movff	dtoa@n+2,___aodiv@dividend+2
  3086  0006DA  C03B  F005         	movff	dtoa@n+3,___aodiv@dividend+3
  3087  0006DE  C03C  F006         	movff	dtoa@n+4,___aodiv@dividend+4
  3088  0006E2  C03D  F007         	movff	dtoa@n+5,___aodiv@dividend+5
  3089  0006E6  C03E  F008         	movff	dtoa@n+6,___aodiv@dividend+6
  3090  0006EA  C03F  F009         	movff	dtoa@n+7,___aodiv@dividend+7
  3091  0006EE  0E0A               	movlw	10
  3092  0006F0  6E0A               	movwf	___aodiv@divisor^0,c
  3093  0006F2  0E00               	movlw	0
  3094  0006F4  6E0B               	movwf	(___aodiv@divisor+1)^0,c
  3095  0006F6  0E00               	movlw	0
  3096  0006F8  6E0C               	movwf	(___aodiv@divisor+2)^0,c
  3097  0006FA  0E00               	movlw	0
  3098  0006FC  6E0D               	movwf	(___aodiv@divisor+3)^0,c
  3099  0006FE  0E00               	movlw	0
  3100  000700  6E0E               	movwf	(___aodiv@divisor+4)^0,c
  3101  000702  0E00               	movlw	0
  3102  000704  6E0F               	movwf	(___aodiv@divisor+5)^0,c
  3103  000706  0E00               	movlw	0
  3104  000708  6E10               	movwf	(___aodiv@divisor+6)^0,c
  3105  00070A  0E00               	movlw	0
  3106  00070C  6E11               	movwf	(___aodiv@divisor+7)^0,c
  3107  00070E  ECF7  F005         	call	___aodiv	;wreg free
  3108  000712  C002  F038         	movff	?___aodiv,dtoa@n
  3109  000716  C003  F039         	movff	?___aodiv+1,dtoa@n+1
  3110  00071A  C004  F03A         	movff	?___aodiv+2,dtoa@n+2
  3111  00071E  C005  F03B         	movff	?___aodiv+3,dtoa@n+3
  3112  000722  C006  F03C         	movff	?___aodiv+4,dtoa@n+4
  3113  000726  C007  F03D         	movff	?___aodiv+5,dtoa@n+5
  3114  00072A  C008  F03E         	movff	?___aodiv+6,dtoa@n+6
  3115  00072E  C009  F03F         	movff	?___aodiv+7,dtoa@n+7
  3116  000732                     l2221:
  3117                           
  3118                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3119  000732  BE41               	btfsc	(dtoa@i+1)^0,7,c
  3120  000734  EFA4  F003         	goto	u1731
  3121  000738  5041               	movf	(dtoa@i+1)^0,w,c
  3122  00073A  E108               	bnz	u1730
  3123  00073C  0440               	decf	dtoa@i^0,w,c
  3124  00073E  A0D8               	btfss	status,0,c
  3125  000740  EFA4  F003         	goto	u1731
  3126  000744  EFA6  F003         	goto	u1730
  3127  000748                     u1731:
  3128  000748  EFD7  F003         	goto	l2231
  3129  00074C                     u1730:
  3130  00074C  5038               	movf	dtoa@n^0,w,c
  3131  00074E  1039               	iorwf	(dtoa@n+1)^0,w,c
  3132  000750  103A               	iorwf	(dtoa@n+2)^0,w,c
  3133  000752  103B               	iorwf	(dtoa@n+3)^0,w,c
  3134  000754  103C               	iorwf	(dtoa@n+4)^0,w,c
  3135  000756  103D               	iorwf	(dtoa@n+5)^0,w,c
  3136  000758  103E               	iorwf	(dtoa@n+6)^0,w,c
  3137  00075A  103F               	iorwf	(dtoa@n+7)^0,w,c
  3138  00075C  A4D8               	btfss	status,2,c
  3139  00075E  EFB3  F003         	goto	u1741
  3140  000762  EFB5  F003         	goto	u1740
  3141  000766                     u1741:
  3142  000766  EF1D  F003         	goto	l2211
  3143  00076A                     u1740:
  3144  00076A  BE33               	btfsc	(dtoa@p+1)^0,7,c
  3145  00076C  EFC2  F003         	goto	u1750
  3146  000770  5033               	movf	(dtoa@p+1)^0,w,c
  3147  000772  E106               	bnz	u1751
  3148  000774  0432               	decf	dtoa@p^0,w,c
  3149  000776  B0D8               	btfsc	status,0,c
  3150  000778  EFC0  F003         	goto	u1751
  3151  00077C  EFC2  F003         	goto	u1750
  3152  000780                     u1751:
  3153  000780  EF1D  F003         	goto	l2211
  3154  000784                     u1750:
  3155  000784  BE35               	btfsc	(dtoa@w+1)^0,7,c
  3156  000786  EFCD  F003         	goto	u1761
  3157  00078A  5035               	movf	(dtoa@w+1)^0,w,c
  3158  00078C  E108               	bnz	u1760
  3159  00078E  0434               	decf	dtoa@w^0,w,c
  3160  000790  A0D8               	btfss	status,0,c
  3161  000792  EFCD  F003         	goto	u1761
  3162  000796  EFCF  F003         	goto	u1760
  3163  00079A                     u1761:
  3164  00079A  EFD7  F003         	goto	l2231
  3165  00079E                     u1760:
  3166  00079E  0100               	movlb	0	; () banked
  3167  0007A0  B36E               	btfsc	_flags& (0+255),1,b
  3168  0007A2  EFD5  F003         	goto	u1771
  3169  0007A6  EFD7  F003         	goto	u1770
  3170  0007AA                     u1771:
  3171  0007AA  EF1D  F003         	goto	l2211
  3172  0007AE                     u1770:
  3173  0007AE                     l2231:
  3174                           
  3175                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3176  0007AE  5036               	movf	dtoa@s^0,w,c
  3177  0007B0  1037               	iorwf	(dtoa@s+1)^0,w,c
  3178  0007B2  A4D8               	btfss	status,2,c
  3179  0007B4  EFDE  F003         	goto	u1781
  3180  0007B8  EFE0  F003         	goto	u1780
  3181  0007BC                     u1781:
  3182  0007BC  EFE8  F003         	goto	l2235
  3183  0007C0                     u1780:
  3184  0007C0  0100               	movlb	0	; () banked
  3185  0007C2  A56E               	btfss	_flags& (0+255),2,b
  3186  0007C4  EFE6  F003         	goto	u1791
  3187  0007C8  EFE8  F003         	goto	u1790
  3188  0007CC                     u1791:
  3189  0007CC  EF06  F004         	goto	l2245
  3190  0007D0                     u1790:
  3191  0007D0                     l2235:
  3192                           
  3193                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  3194  0007D0  0640               	decf	dtoa@i^0,f,c
  3195  0007D2  A0D8               	btfss	status,0,c
  3196  0007D4  0641               	decf	(dtoa@i+1)^0,f,c
  3197  0007D6                     
  3198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3199  0007D6  5036               	movf	dtoa@s^0,w,c
  3200  0007D8  1037               	iorwf	(dtoa@s+1)^0,w,c
  3201  0007DA  A4D8               	btfss	status,2,c
  3202  0007DC  EFF2  F003         	goto	u1801
  3203  0007E0  EFF4  F003         	goto	u1800
  3204  0007E4                     u1801:
  3205  0007E4  EFFA  F003         	goto	l2241
  3206  0007E8                     u1800:
  3207  0007E8  0E00               	movlw	0
  3208  0007EA  6E31               	movwf	(_dtoa$2086+1)^0,c
  3209  0007EC  0E2B               	movlw	43
  3210  0007EE  6E30               	movwf	_dtoa$2086^0,c
  3211  0007F0  EFFE  F003         	goto	l2243
  3212  0007F4                     l2241:
  3213  0007F4  0E00               	movlw	0
  3214  0007F6  6E31               	movwf	(_dtoa$2086+1)^0,c
  3215  0007F8  0E2D               	movlw	45
  3216  0007FA  6E30               	movwf	_dtoa$2086^0,c
  3217  0007FC                     l2243:
  3218  0007FC  0E72               	movlw	low _dbuf
  3219  0007FE  2440               	addwf	dtoa@i^0,w,c
  3220  000800  6ED9               	movwf	fsr2l,c
  3221  000802  0E00               	movlw	high _dbuf
  3222  000804  2041               	addwfc	(dtoa@i+1)^0,w,c
  3223  000806  6EDA               	movwf	fsr2h,c
  3224  000808  C030  FFDF         	movff	_dtoa$2086,indf2
  3225  00080C                     l2245:
  3226                           
  3227                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3228  00080C  C01E  F013         	movff	dtoa@fp,pad@fp
  3229  000810  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  3230  000814  0E72               	movlw	low _dbuf
  3231  000816  2440               	addwf	dtoa@i^0,w,c
  3232  000818  6E15               	movwf	pad@buf^0,c
  3233  00081A  0E00               	movlw	high _dbuf
  3234  00081C  2041               	addwfc	(dtoa@i+1)^0,w,c
  3235  00081E  6E16               	movwf	(pad@buf+1)^0,c
  3236  000820  C034  F017         	movff	dtoa@w,pad@p
  3237  000824  C035  F018         	movff	dtoa@w+1,pad@p+1
  3238  000828  EC1C  F009         	call	_pad	;wreg free
  3239  00082C  C013  F01E         	movff	?_pad,?_dtoa
  3240  000830  C014  F01F         	movff	?_pad+1,?_dtoa+1
  3241  000834  0012               	return		;funcret
  3242  000836                     __end_of_dtoa:
  3243                           	callstack 0
  3244                           
  3245 ;; *************** function _pad *****************
  3246 ;; Defined at:
  3247 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  3250 ;;		 -> NULL(0), sprintf@f(6), 
  3251 ;;  buf             2   20[COMRAM] PTR unsigned char 
  3252 ;;		 -> dbuf(32), 
  3253 ;;  p               2   22[COMRAM] int 
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;  w               2   27[COMRAM] int 
  3256 ;;  i               2   25[COMRAM] int 
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  2   18[COMRAM] int 
  3259 ;; Registers used:
  3260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3266 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3267 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3268 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3269 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3270 ;;Total ram usage:       11 bytes
  3271 ;; Hardware stack levels used: 1
  3272 ;; Hardware stack levels required when called: 5
  3273 ;; This function calls:
  3274 ;;		_fputc
  3275 ;;		_fputs
  3276 ;;		_strlen
  3277 ;; This function is called by:
  3278 ;;		_dtoa
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           	psect	text12
  3283  001238                     __ptext12:
  3284                           	callstack 0
  3285  001238                     _pad:
  3286                           	callstack 21
  3287  001238                     
  3288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3289  001238  0100               	movlb	0	; () banked
  3290  00123A  A16E               	btfss	_flags& (0+255),0,b
  3291  00123C  EF22  F009         	goto	u1561
  3292  001240  EF24  F009         	goto	u1560
  3293  001244                     u1561:
  3294  001244  EF2E  F009         	goto	l2137
  3295  001248                     u1560:
  3296  001248                     
  3297                           ; BSR set to: 0
  3298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3299  001248  C015  F00C         	movff	pad@buf,fputs@s
  3300  00124C  C016  F00D         	movff	pad@buf+1,fputs@s+1
  3301  001250  C013  F00E         	movff	pad@fp,fputs@fp
  3302  001254  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  3303  001258  ECAC  F00B         	call	_fputs	;wreg free
  3304  00125C                     l2137:
  3305                           
  3306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3307  00125C  BE18               	btfsc	(pad@p+1)^0,7,c
  3308  00125E  EF33  F009         	goto	u1571
  3309  001262  EF35  F009         	goto	u1570
  3310  001266                     u1571:
  3311  001266  EF3B  F009         	goto	l2141
  3312  00126A                     u1570:
  3313  00126A  C017  F01C         	movff	pad@p,pad@w
  3314  00126E  C018  F01D         	movff	pad@p+1,pad@w+1
  3315  001272  EF3F  F009         	goto	l1027
  3316  001276                     l2141:
  3317  001276  0E00               	movlw	0
  3318  001278  6E1D               	movwf	(pad@w+1)^0,c
  3319  00127A  0E00               	movlw	0
  3320  00127C  6E1C               	movwf	pad@w^0,c
  3321  00127E                     l1027:
  3322                           
  3323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3324  00127E  0E00               	movlw	0
  3325  001280  6E1B               	movwf	(pad@i+1)^0,c
  3326  001282  0E00               	movlw	0
  3327  001284  6E1A               	movwf	pad@i^0,c
  3328                           
  3329                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3330  001286  EF51  F009         	goto	l2147
  3331  00128A                     l2143:
  3332                           
  3333                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3334  00128A  0E00               	movlw	0
  3335  00128C  6E04               	movwf	(fputc@c+1)^0,c
  3336  00128E  0E20               	movlw	32
  3337  001290  6E03               	movwf	fputc@c^0,c
  3338  001292  C013  F005         	movff	pad@fp,fputc@fp
  3339  001296  C014  F006         	movff	pad@fp+1,fputc@fp+1
  3340  00129A  ECB7  F008         	call	_fputc	;wreg free
  3341  00129E                     
  3342                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3343  00129E  4A1A               	infsnz	pad@i^0,f,c
  3344  0012A0  2A1B               	incf	(pad@i+1)^0,f,c
  3345  0012A2                     l2147:
  3346                           
  3347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3348  0012A2  501C               	movf	pad@w^0,w,c
  3349  0012A4  5C1A               	subwf	pad@i^0,w,c
  3350  0012A6  501B               	movf	(pad@i+1)^0,w,c
  3351  0012A8  0A80               	xorlw	128
  3352  0012AA  6E19               	movwf	??_pad^0,c
  3353  0012AC  501D               	movf	(pad@w+1)^0,w,c
  3354  0012AE  0A80               	xorlw	128
  3355  0012B0  5819               	subwfb	??_pad^0,w,c
  3356  0012B2  A0D8               	btfss	status,0,c
  3357  0012B4  EF5E  F009         	goto	u1581
  3358  0012B8  EF60  F009         	goto	u1580
  3359  0012BC                     u1581:
  3360  0012BC  EF45  F009         	goto	l2143
  3361  0012C0                     u1580:
  3362  0012C0                     
  3363                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3364  0012C0  0100               	movlb	0	; () banked
  3365  0012C2  B16E               	btfsc	_flags& (0+255),0,b
  3366  0012C4  EF66  F009         	goto	u1591
  3367  0012C8  EF68  F009         	goto	u1590
  3368  0012CC                     u1591:
  3369  0012CC  EF72  F009         	goto	l2151
  3370  0012D0                     u1590:
  3371  0012D0                     
  3372                           ; BSR set to: 0
  3373                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3374  0012D0  C015  F00C         	movff	pad@buf,fputs@s
  3375  0012D4  C016  F00D         	movff	pad@buf+1,fputs@s+1
  3376  0012D8  C013  F00E         	movff	pad@fp,fputs@fp
  3377  0012DC  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  3378  0012E0  ECAC  F00B         	call	_fputs	;wreg free
  3379  0012E4                     l2151:
  3380                           
  3381                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3382  0012E4  C015  F002         	movff	pad@buf,strlen@s
  3383  0012E8  C016  F003         	movff	pad@buf+1,strlen@s+1
  3384  0012EC  ECEE  F00B         	call	_strlen	;wreg free
  3385  0012F0  501C               	movf	pad@w^0,w,c
  3386  0012F2  2402               	addwf	?_strlen^0,w,c
  3387  0012F4  6E13               	movwf	?_pad^0,c
  3388  0012F6  501D               	movf	(pad@w+1)^0,w,c
  3389  0012F8  2003               	addwfc	(?_strlen+1)^0,w,c
  3390  0012FA  6E14               	movwf	(?_pad+1)^0,c
  3391  0012FC  0012               	return		;funcret
  3392  0012FE                     __end_of_pad:
  3393                           	callstack 0
  3394                           
  3395 ;; *************** function _strlen *****************
  3396 ;; Defined at:
  3397 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;  s               2    1[COMRAM] PTR const unsigned char 
  3400 ;;		 -> dbuf(32), 
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;  a               2    3[COMRAM] PTR const unsigned char 
  3403 ;;		 -> dbuf(32), 
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  2    1[COMRAM] unsigned int 
  3406 ;; Registers used:
  3407 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3413 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3416 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3417 ;;Total ram usage:        4 bytes
  3418 ;; Hardware stack levels used: 1
  3419 ;; Hardware stack levels required when called: 2
  3420 ;; This function calls:
  3421 ;;		Nothing
  3422 ;; This function is called by:
  3423 ;;		_pad
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           	psect	text13
  3428  0017DC                     __ptext13:
  3429                           	callstack 0
  3430  0017DC                     _strlen:
  3431                           	callstack 23
  3432  0017DC  C002  F004         	movff	strlen@s,strlen@a
  3433  0017E0  C003  F005         	movff	strlen@s+1,strlen@a+1
  3434  0017E4  EFF6  F00B         	goto	l2047
  3435  0017E8                     l2045:
  3436  0017E8  4A02               	infsnz	strlen@s^0,f,c
  3437  0017EA  2A03               	incf	(strlen@s+1)^0,f,c
  3438  0017EC                     l2047:
  3439  0017EC  C002  FFD9         	movff	strlen@s,fsr2l
  3440  0017F0  C003  FFDA         	movff	strlen@s+1,fsr2h
  3441  0017F4  50DF               	movf	indf2,w,c
  3442  0017F6  A4D8               	btfss	status,2,c
  3443  0017F8  EF00  F00C         	goto	u1421
  3444  0017FC  EF02  F00C         	goto	u1420
  3445  001800                     u1421:
  3446  001800  EFF4  F00B         	goto	l2045
  3447  001804                     u1420:
  3448  001804  5004               	movf	strlen@a^0,w,c
  3449  001806  5C02               	subwf	strlen@s^0,w,c
  3450  001808  6E02               	movwf	?_strlen^0,c
  3451  00180A  5005               	movf	(strlen@a+1)^0,w,c
  3452  00180C  5803               	subwfb	(strlen@s+1)^0,w,c
  3453  00180E  6E03               	movwf	(?_strlen+1)^0,c
  3454  001810  0012               	return		;funcret
  3455  001812                     __end_of_strlen:
  3456                           	callstack 0
  3457                           
  3458 ;; *************** function _fputs *****************
  3459 ;; Defined at:
  3460 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;  s               2   11[COMRAM] PTR const unsigned char 
  3463 ;;		 -> dbuf(32), 
  3464 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  3465 ;;		 -> NULL(0), sprintf@f(6), 
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;  i               2   16[COMRAM] int 
  3468 ;;  c               1   15[COMRAM] unsigned char 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  2   11[COMRAM] int 
  3471 ;; Registers used:
  3472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3478 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3481 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;Total ram usage:        7 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; Hardware stack levels required when called: 4
  3485 ;; This function calls:
  3486 ;;		_fputc
  3487 ;; This function is called by:
  3488 ;;		_pad
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           	psect	text14
  3493  001758                     __ptext14:
  3494                           	callstack 0
  3495  001758                     _fputs:
  3496                           	callstack 21
  3497  001758  0E00               	movlw	0
  3498  00175A  6E12               	movwf	(fputs@i+1)^0,c
  3499  00175C  0E00               	movlw	0
  3500  00175E  6E11               	movwf	fputs@i^0,c
  3501  001760  EFBD  F00B         	goto	l2041
  3502  001764                     l2037:
  3503  001764  C010  F003         	movff	fputs@c,fputc@c
  3504  001768  6A04               	clrf	(fputc@c+1)^0,c
  3505  00176A  C00E  F005         	movff	fputs@fp,fputc@fp
  3506  00176E  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  3507  001772  ECB7  F008         	call	_fputc	;wreg free
  3508  001776  4A11               	infsnz	fputs@i^0,f,c
  3509  001778  2A12               	incf	(fputs@i+1)^0,f,c
  3510  00177A                     l2041:
  3511  00177A  5011               	movf	fputs@i^0,w,c
  3512  00177C  240C               	addwf	fputs@s^0,w,c
  3513  00177E  6ED9               	movwf	fsr2l,c
  3514  001780  5012               	movf	(fputs@i+1)^0,w,c
  3515  001782  200D               	addwfc	(fputs@s+1)^0,w,c
  3516  001784  6EDA               	movwf	fsr2h,c
  3517  001786  50DF               	movf	indf2,w,c
  3518  001788  6E10               	movwf	fputs@c^0,c
  3519  00178A  5010               	movf	fputs@c^0,w,c
  3520  00178C  A4D8               	btfss	status,2,c
  3521  00178E  EFCB  F00B         	goto	u1411
  3522  001792  EFCD  F00B         	goto	u1410
  3523  001796                     u1411:
  3524  001796  EFB2  F00B         	goto	l2037
  3525  00179A                     u1410:
  3526  00179A  0012               	return		;funcret
  3527  00179C                     __end_of_fputs:
  3528                           	callstack 0
  3529                           
  3530 ;; *************** function _abs *****************
  3531 ;; Defined at:
  3532 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;  a               2   19[COMRAM] int 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;		None
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  2   19[COMRAM] int 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3546 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3548 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3549 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3550 ;;Total ram usage:        4 bytes
  3551 ;; Hardware stack levels used: 1
  3552 ;; Hardware stack levels required when called: 2
  3553 ;; This function calls:
  3554 ;;		Nothing
  3555 ;; This function is called by:
  3556 ;;		_dtoa
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           	psect	text15
  3561  00179C                     __ptext15:
  3562                           	callstack 0
  3563  00179C                     _abs:
  3564                           	callstack 24
  3565  00179C  BE15               	btfsc	(abs@a+1)^0,7,c
  3566  00179E  EFDB  F00B         	goto	u1600
  3567  0017A2  5015               	movf	(abs@a+1)^0,w,c
  3568  0017A4  E106               	bnz	u1601
  3569  0017A6  0414               	decf	abs@a^0,w,c
  3570  0017A8  B0D8               	btfsc	status,0,c
  3571  0017AA  EFD9  F00B         	goto	u1601
  3572  0017AE  EFDB  F00B         	goto	u1600
  3573  0017B2                     u1601:
  3574  0017B2  EFE9  F00B         	goto	l1093
  3575  0017B6                     u1600:
  3576  0017B6  C014  F016         	movff	abs@a,??_abs
  3577  0017BA  C015  F017         	movff	abs@a+1,??_abs+1
  3578  0017BE  1E16               	comf	??_abs^0,f,c
  3579  0017C0  1E17               	comf	(??_abs+1)^0,f,c
  3580  0017C2  4A16               	infsnz	??_abs^0,f,c
  3581  0017C4  2A17               	incf	(??_abs+1)^0,f,c
  3582  0017C6  C016  F014         	movff	??_abs,?_abs
  3583  0017CA  C017  F015         	movff	??_abs+1,?_abs+1
  3584  0017CE  EFED  F00B         	goto	l1096
  3585  0017D2                     l1093:
  3586  0017D2  C014  F014         	movff	abs@a,?_abs
  3587  0017D6  C015  F015         	movff	abs@a+1,?_abs+1
  3588  0017DA                     l1096:
  3589  0017DA  0012               	return		;funcret
  3590  0017DC                     __end_of_abs:
  3591                           	callstack 0
  3592                           
  3593 ;; *************** function ___aomod *****************
  3594 ;; Defined at:
  3595 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  dividend        8    1[COMRAM] long long 
  3598 ;;  divisor         8    9[COMRAM] long long 
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;  sign            1   18[COMRAM] unsigned char 
  3601 ;;  counter         1   17[COMRAM] unsigned char 
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  8    1[COMRAM] long long 
  3604 ;; Registers used:
  3605 ;;		wreg, status,2, status,0
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3611 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3612 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3614 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3615 ;;Total ram usage:       18 bytes
  3616 ;; Hardware stack levels used: 1
  3617 ;; Hardware stack levels required when called: 2
  3618 ;; This function calls:
  3619 ;;		Nothing
  3620 ;; This function is called by:
  3621 ;;		_dtoa
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           	psect	text16
  3626  000D76                     __ptext16:
  3627                           	callstack 0
  3628  000D76                     ___aomod:
  3629                           	callstack 24
  3630  000D76  0E00               	movlw	0
  3631  000D78  6E13               	movwf	___aomod@sign^0,c
  3632  000D7A  BE09               	btfsc	(___aomod@dividend+7)^0,7,c
  3633  000D7C  EFC4  F006         	goto	u1500
  3634  000D80  EFC2  F006         	goto	u1501
  3635  000D84                     u1501:
  3636  000D84  EFD6  F006         	goto	l2105
  3637  000D88                     u1500:
  3638  000D88  1E09               	comf	(___aomod@dividend+7)^0,f,c
  3639  000D8A  1E08               	comf	(___aomod@dividend+6)^0,f,c
  3640  000D8C  1E07               	comf	(___aomod@dividend+5)^0,f,c
  3641  000D8E  1E06               	comf	(___aomod@dividend+4)^0,f,c
  3642  000D90  1E05               	comf	(___aomod@dividend+3)^0,f,c
  3643  000D92  1E04               	comf	(___aomod@dividend+2)^0,f,c
  3644  000D94  1E03               	comf	(___aomod@dividend+1)^0,f,c
  3645  000D96  6C02               	negf	___aomod@dividend^0,c
  3646  000D98  0E00               	movlw	0
  3647  000D9A  2203               	addwfc	(___aomod@dividend+1)^0,f,c
  3648  000D9C  2204               	addwfc	(___aomod@dividend+2)^0,f,c
  3649  000D9E  2205               	addwfc	(___aomod@dividend+3)^0,f,c
  3650  000DA0  2206               	addwfc	(___aomod@dividend+4)^0,f,c
  3651  000DA2  2207               	addwfc	(___aomod@dividend+5)^0,f,c
  3652  000DA4  2208               	addwfc	(___aomod@dividend+6)^0,f,c
  3653  000DA6  2209               	addwfc	(___aomod@dividend+7)^0,f,c
  3654  000DA8  0E01               	movlw	1
  3655  000DAA  6E13               	movwf	___aomod@sign^0,c
  3656  000DAC                     l2105:
  3657  000DAC  BE11               	btfsc	(___aomod@divisor+7)^0,7,c
  3658  000DAE  EFDD  F006         	goto	u1510
  3659  000DB2  EFDB  F006         	goto	u1511
  3660  000DB6                     u1511:
  3661  000DB6  EFED  F006         	goto	l2109
  3662  000DBA                     u1510:
  3663  000DBA  1E11               	comf	(___aomod@divisor+7)^0,f,c
  3664  000DBC  1E10               	comf	(___aomod@divisor+6)^0,f,c
  3665  000DBE  1E0F               	comf	(___aomod@divisor+5)^0,f,c
  3666  000DC0  1E0E               	comf	(___aomod@divisor+4)^0,f,c
  3667  000DC2  1E0D               	comf	(___aomod@divisor+3)^0,f,c
  3668  000DC4  1E0C               	comf	(___aomod@divisor+2)^0,f,c
  3669  000DC6  1E0B               	comf	(___aomod@divisor+1)^0,f,c
  3670  000DC8  6C0A               	negf	___aomod@divisor^0,c
  3671  000DCA  0E00               	movlw	0
  3672  000DCC  220B               	addwfc	(___aomod@divisor+1)^0,f,c
  3673  000DCE  220C               	addwfc	(___aomod@divisor+2)^0,f,c
  3674  000DD0  220D               	addwfc	(___aomod@divisor+3)^0,f,c
  3675  000DD2  220E               	addwfc	(___aomod@divisor+4)^0,f,c
  3676  000DD4  220F               	addwfc	(___aomod@divisor+5)^0,f,c
  3677  000DD6  2210               	addwfc	(___aomod@divisor+6)^0,f,c
  3678  000DD8  2211               	addwfc	(___aomod@divisor+7)^0,f,c
  3679  000DDA                     l2109:
  3680  000DDA  500A               	movf	___aomod@divisor^0,w,c
  3681  000DDC  100B               	iorwf	(___aomod@divisor+1)^0,w,c
  3682  000DDE  100C               	iorwf	(___aomod@divisor+2)^0,w,c
  3683  000DE0  100D               	iorwf	(___aomod@divisor+3)^0,w,c
  3684  000DE2  100E               	iorwf	(___aomod@divisor+4)^0,w,c
  3685  000DE4  100F               	iorwf	(___aomod@divisor+5)^0,w,c
  3686  000DE6  1010               	iorwf	(___aomod@divisor+6)^0,w,c
  3687  000DE8  1011               	iorwf	(___aomod@divisor+7)^0,w,c
  3688  000DEA  B4D8               	btfsc	status,2,c
  3689  000DEC  EFFA  F006         	goto	u1521
  3690  000DF0  EFFC  F006         	goto	u1520
  3691  000DF4                     u1521:
  3692  000DF4  EF44  F007         	goto	l2125
  3693  000DF8                     u1520:
  3694  000DF8  0E01               	movlw	1
  3695  000DFA  6E12               	movwf	___aomod@counter^0,c
  3696  000DFC  EF0A  F007         	goto	l2115
  3697  000E00                     l2113:
  3698  000E00  90D8               	bcf	status,0,c
  3699  000E02  360A               	rlcf	___aomod@divisor^0,f,c
  3700  000E04  360B               	rlcf	(___aomod@divisor+1)^0,f,c
  3701  000E06  360C               	rlcf	(___aomod@divisor+2)^0,f,c
  3702  000E08  360D               	rlcf	(___aomod@divisor+3)^0,f,c
  3703  000E0A  360E               	rlcf	(___aomod@divisor+4)^0,f,c
  3704  000E0C  360F               	rlcf	(___aomod@divisor+5)^0,f,c
  3705  000E0E  3610               	rlcf	(___aomod@divisor+6)^0,f,c
  3706  000E10  3611               	rlcf	(___aomod@divisor+7)^0,f,c
  3707  000E12  2A12               	incf	___aomod@counter^0,f,c
  3708  000E14                     l2115:
  3709  000E14  AE11               	btfss	(___aomod@divisor+7)^0,7,c
  3710  000E16  EF0F  F007         	goto	u1531
  3711  000E1A  EF11  F007         	goto	u1530
  3712  000E1E                     u1531:
  3713  000E1E  EF00  F007         	goto	l2113
  3714  000E22                     u1530:
  3715  000E22                     l2117:
  3716  000E22  500A               	movf	___aomod@divisor^0,w,c
  3717  000E24  5C02               	subwf	___aomod@dividend^0,w,c
  3718  000E26  500B               	movf	(___aomod@divisor+1)^0,w,c
  3719  000E28  5803               	subwfb	(___aomod@dividend+1)^0,w,c
  3720  000E2A  500C               	movf	(___aomod@divisor+2)^0,w,c
  3721  000E2C  5804               	subwfb	(___aomod@dividend+2)^0,w,c
  3722  000E2E  500D               	movf	(___aomod@divisor+3)^0,w,c
  3723  000E30  5805               	subwfb	(___aomod@dividend+3)^0,w,c
  3724  000E32  500E               	movf	(___aomod@divisor+4)^0,w,c
  3725  000E34  5806               	subwfb	(___aomod@dividend+4)^0,w,c
  3726  000E36  500F               	movf	(___aomod@divisor+5)^0,w,c
  3727  000E38  5807               	subwfb	(___aomod@dividend+5)^0,w,c
  3728  000E3A  5010               	movf	(___aomod@divisor+6)^0,w,c
  3729  000E3C  5808               	subwfb	(___aomod@dividend+6)^0,w,c
  3730  000E3E  5011               	movf	(___aomod@divisor+7)^0,w,c
  3731  000E40  5809               	subwfb	(___aomod@dividend+7)^0,w,c
  3732  000E42  A0D8               	btfss	status,0,c
  3733  000E44  EF26  F007         	goto	u1541
  3734  000E48  EF28  F007         	goto	u1540
  3735  000E4C                     u1541:
  3736  000E4C  EF38  F007         	goto	l2121
  3737  000E50                     u1540:
  3738  000E50  500A               	movf	___aomod@divisor^0,w,c
  3739  000E52  5E02               	subwf	___aomod@dividend^0,f,c
  3740  000E54  500B               	movf	(___aomod@divisor+1)^0,w,c
  3741  000E56  5A03               	subwfb	(___aomod@dividend+1)^0,f,c
  3742  000E58  500C               	movf	(___aomod@divisor+2)^0,w,c
  3743  000E5A  5A04               	subwfb	(___aomod@dividend+2)^0,f,c
  3744  000E5C  500D               	movf	(___aomod@divisor+3)^0,w,c
  3745  000E5E  5A05               	subwfb	(___aomod@dividend+3)^0,f,c
  3746  000E60  500E               	movf	(___aomod@divisor+4)^0,w,c
  3747  000E62  5A06               	subwfb	(___aomod@dividend+4)^0,f,c
  3748  000E64  500F               	movf	(___aomod@divisor+5)^0,w,c
  3749  000E66  5A07               	subwfb	(___aomod@dividend+5)^0,f,c
  3750  000E68  5010               	movf	(___aomod@divisor+6)^0,w,c
  3751  000E6A  5A08               	subwfb	(___aomod@dividend+6)^0,f,c
  3752  000E6C  5011               	movf	(___aomod@divisor+7)^0,w,c
  3753  000E6E  5A09               	subwfb	(___aomod@dividend+7)^0,f,c
  3754  000E70                     l2121:
  3755  000E70  90D8               	bcf	status,0,c
  3756  000E72  3211               	rrcf	(___aomod@divisor+7)^0,f,c
  3757  000E74  3210               	rrcf	(___aomod@divisor+6)^0,f,c
  3758  000E76  320F               	rrcf	(___aomod@divisor+5)^0,f,c
  3759  000E78  320E               	rrcf	(___aomod@divisor+4)^0,f,c
  3760  000E7A  320D               	rrcf	(___aomod@divisor+3)^0,f,c
  3761  000E7C  320C               	rrcf	(___aomod@divisor+2)^0,f,c
  3762  000E7E  320B               	rrcf	(___aomod@divisor+1)^0,f,c
  3763  000E80  320A               	rrcf	___aomod@divisor^0,f,c
  3764  000E82  2E12               	decfsz	___aomod@counter^0,f,c
  3765  000E84  EF11  F007         	goto	l2117
  3766  000E88                     l2125:
  3767  000E88  5013               	movf	___aomod@sign^0,w,c
  3768  000E8A  B4D8               	btfsc	status,2,c
  3769  000E8C  EF4A  F007         	goto	u1551
  3770  000E90  EF4C  F007         	goto	u1550
  3771  000E94                     u1551:
  3772  000E94  EF5C  F007         	goto	l2129
  3773  000E98                     u1550:
  3774  000E98  1E09               	comf	(___aomod@dividend+7)^0,f,c
  3775  000E9A  1E08               	comf	(___aomod@dividend+6)^0,f,c
  3776  000E9C  1E07               	comf	(___aomod@dividend+5)^0,f,c
  3777  000E9E  1E06               	comf	(___aomod@dividend+4)^0,f,c
  3778  000EA0  1E05               	comf	(___aomod@dividend+3)^0,f,c
  3779  000EA2  1E04               	comf	(___aomod@dividend+2)^0,f,c
  3780  000EA4  1E03               	comf	(___aomod@dividend+1)^0,f,c
  3781  000EA6  6C02               	negf	___aomod@dividend^0,c
  3782  000EA8  0E00               	movlw	0
  3783  000EAA  2203               	addwfc	(___aomod@dividend+1)^0,f,c
  3784  000EAC  2204               	addwfc	(___aomod@dividend+2)^0,f,c
  3785  000EAE  2205               	addwfc	(___aomod@dividend+3)^0,f,c
  3786  000EB0  2206               	addwfc	(___aomod@dividend+4)^0,f,c
  3787  000EB2  2207               	addwfc	(___aomod@dividend+5)^0,f,c
  3788  000EB4  2208               	addwfc	(___aomod@dividend+6)^0,f,c
  3789  000EB6  2209               	addwfc	(___aomod@dividend+7)^0,f,c
  3790  000EB8                     l2129:
  3791  000EB8  C002  F002         	movff	___aomod@dividend,?___aomod
  3792  000EBC  C003  F003         	movff	___aomod@dividend+1,?___aomod+1
  3793  000EC0  C004  F004         	movff	___aomod@dividend+2,?___aomod+2
  3794  000EC4  C005  F005         	movff	___aomod@dividend+3,?___aomod+3
  3795  000EC8  C006  F006         	movff	___aomod@dividend+4,?___aomod+4
  3796  000ECC  C007  F007         	movff	___aomod@dividend+5,?___aomod+5
  3797  000ED0  C008  F008         	movff	___aomod@dividend+6,?___aomod+6
  3798  000ED4  C009  F009         	movff	___aomod@dividend+7,?___aomod+7
  3799  000ED8  0012               	return		;funcret
  3800  000EDA                     __end_of___aomod:
  3801                           	callstack 0
  3802                           
  3803 ;; *************** function ___aodiv *****************
  3804 ;; Defined at:
  3805 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;  dividend        8    1[COMRAM] long long 
  3808 ;;  divisor         8    9[COMRAM] long long 
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;  quotient        8   19[COMRAM] long long 
  3811 ;;  sign            1   18[COMRAM] unsigned char 
  3812 ;;  counter         1   17[COMRAM] unsigned char 
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  8    1[COMRAM] long long 
  3815 ;; Registers used:
  3816 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3822 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3823 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3825 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3826 ;;Total ram usage:       26 bytes
  3827 ;; Hardware stack levels used: 1
  3828 ;; Hardware stack levels required when called: 2
  3829 ;; This function calls:
  3830 ;;		Nothing
  3831 ;; This function is called by:
  3832 ;;		_dtoa
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           	psect	text17
  3837  000BEE                     __ptext17:
  3838                           	callstack 0
  3839  000BEE                     ___aodiv:
  3840                           	callstack 24
  3841  000BEE  0E00               	movlw	0
  3842  000BF0  6E13               	movwf	___aodiv@sign^0,c
  3843  000BF2  BE11               	btfsc	(___aodiv@divisor+7)^0,7,c
  3844  000BF4  EF00  F006         	goto	u1430
  3845  000BF8  EFFE  F005         	goto	u1431
  3846  000BFC                     u1431:
  3847  000BFC  EF12  F006         	goto	l2061
  3848  000C00                     u1430:
  3849  000C00  1E11               	comf	(___aodiv@divisor+7)^0,f,c
  3850  000C02  1E10               	comf	(___aodiv@divisor+6)^0,f,c
  3851  000C04  1E0F               	comf	(___aodiv@divisor+5)^0,f,c
  3852  000C06  1E0E               	comf	(___aodiv@divisor+4)^0,f,c
  3853  000C08  1E0D               	comf	(___aodiv@divisor+3)^0,f,c
  3854  000C0A  1E0C               	comf	(___aodiv@divisor+2)^0,f,c
  3855  000C0C  1E0B               	comf	(___aodiv@divisor+1)^0,f,c
  3856  000C0E  6C0A               	negf	___aodiv@divisor^0,c
  3857  000C10  0E00               	movlw	0
  3858  000C12  220B               	addwfc	(___aodiv@divisor+1)^0,f,c
  3859  000C14  220C               	addwfc	(___aodiv@divisor+2)^0,f,c
  3860  000C16  220D               	addwfc	(___aodiv@divisor+3)^0,f,c
  3861  000C18  220E               	addwfc	(___aodiv@divisor+4)^0,f,c
  3862  000C1A  220F               	addwfc	(___aodiv@divisor+5)^0,f,c
  3863  000C1C  2210               	addwfc	(___aodiv@divisor+6)^0,f,c
  3864  000C1E  2211               	addwfc	(___aodiv@divisor+7)^0,f,c
  3865  000C20  0E01               	movlw	1
  3866  000C22  6E13               	movwf	___aodiv@sign^0,c
  3867  000C24                     l2061:
  3868  000C24  BE09               	btfsc	(___aodiv@dividend+7)^0,7,c
  3869  000C26  EF19  F006         	goto	u1440
  3870  000C2A  EF17  F006         	goto	u1441
  3871  000C2E                     u1441:
  3872  000C2E  EF2B  F006         	goto	l2067
  3873  000C32                     u1440:
  3874  000C32  1E09               	comf	(___aodiv@dividend+7)^0,f,c
  3875  000C34  1E08               	comf	(___aodiv@dividend+6)^0,f,c
  3876  000C36  1E07               	comf	(___aodiv@dividend+5)^0,f,c
  3877  000C38  1E06               	comf	(___aodiv@dividend+4)^0,f,c
  3878  000C3A  1E05               	comf	(___aodiv@dividend+3)^0,f,c
  3879  000C3C  1E04               	comf	(___aodiv@dividend+2)^0,f,c
  3880  000C3E  1E03               	comf	(___aodiv@dividend+1)^0,f,c
  3881  000C40  6C02               	negf	___aodiv@dividend^0,c
  3882  000C42  0E00               	movlw	0
  3883  000C44  2203               	addwfc	(___aodiv@dividend+1)^0,f,c
  3884  000C46  2204               	addwfc	(___aodiv@dividend+2)^0,f,c
  3885  000C48  2205               	addwfc	(___aodiv@dividend+3)^0,f,c
  3886  000C4A  2206               	addwfc	(___aodiv@dividend+4)^0,f,c
  3887  000C4C  2207               	addwfc	(___aodiv@dividend+5)^0,f,c
  3888  000C4E  2208               	addwfc	(___aodiv@dividend+6)^0,f,c
  3889  000C50  2209               	addwfc	(___aodiv@dividend+7)^0,f,c
  3890  000C52  0E01               	movlw	1
  3891  000C54  1A13               	xorwf	___aodiv@sign^0,f,c
  3892  000C56                     l2067:
  3893  000C56  EE20  F014         	lfsr	2,___aodiv@quotient
  3894  000C5A  0E07               	movlw	7
  3895  000C5C                     u1451:
  3896  000C5C  6ADE               	clrf	postinc2,c
  3897  000C5E  06E8               	decf	wreg,f,c
  3898  000C60  E2FD               	bc	u1451
  3899  000C62  500A               	movf	___aodiv@divisor^0,w,c
  3900  000C64  100B               	iorwf	(___aodiv@divisor+1)^0,w,c
  3901  000C66  100C               	iorwf	(___aodiv@divisor+2)^0,w,c
  3902  000C68  100D               	iorwf	(___aodiv@divisor+3)^0,w,c
  3903  000C6A  100E               	iorwf	(___aodiv@divisor+4)^0,w,c
  3904  000C6C  100F               	iorwf	(___aodiv@divisor+5)^0,w,c
  3905  000C6E  1010               	iorwf	(___aodiv@divisor+6)^0,w,c
  3906  000C70  1011               	iorwf	(___aodiv@divisor+7)^0,w,c
  3907  000C72  B4D8               	btfsc	status,2,c
  3908  000C74  EF3E  F006         	goto	u1461
  3909  000C78  EF40  F006         	goto	u1460
  3910  000C7C                     u1461:
  3911  000C7C  EF92  F006         	goto	l2089
  3912  000C80                     u1460:
  3913  000C80  0E01               	movlw	1
  3914  000C82  6E12               	movwf	___aodiv@counter^0,c
  3915  000C84  EF4E  F006         	goto	l2075
  3916  000C88                     l2073:
  3917  000C88  90D8               	bcf	status,0,c
  3918  000C8A  360A               	rlcf	___aodiv@divisor^0,f,c
  3919  000C8C  360B               	rlcf	(___aodiv@divisor+1)^0,f,c
  3920  000C8E  360C               	rlcf	(___aodiv@divisor+2)^0,f,c
  3921  000C90  360D               	rlcf	(___aodiv@divisor+3)^0,f,c
  3922  000C92  360E               	rlcf	(___aodiv@divisor+4)^0,f,c
  3923  000C94  360F               	rlcf	(___aodiv@divisor+5)^0,f,c
  3924  000C96  3610               	rlcf	(___aodiv@divisor+6)^0,f,c
  3925  000C98  3611               	rlcf	(___aodiv@divisor+7)^0,f,c
  3926  000C9A  2A12               	incf	___aodiv@counter^0,f,c
  3927  000C9C                     l2075:
  3928  000C9C  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
  3929  000C9E  EF53  F006         	goto	u1471
  3930  000CA2  EF55  F006         	goto	u1470
  3931  000CA6                     u1471:
  3932  000CA6  EF44  F006         	goto	l2073
  3933  000CAA                     u1470:
  3934  000CAA                     l2077:
  3935  000CAA  90D8               	bcf	status,0,c
  3936  000CAC  3614               	rlcf	___aodiv@quotient^0,f,c
  3937  000CAE  3615               	rlcf	(___aodiv@quotient+1)^0,f,c
  3938  000CB0  3616               	rlcf	(___aodiv@quotient+2)^0,f,c
  3939  000CB2  3617               	rlcf	(___aodiv@quotient+3)^0,f,c
  3940  000CB4  3618               	rlcf	(___aodiv@quotient+4)^0,f,c
  3941  000CB6  3619               	rlcf	(___aodiv@quotient+5)^0,f,c
  3942  000CB8  361A               	rlcf	(___aodiv@quotient+6)^0,f,c
  3943  000CBA  361B               	rlcf	(___aodiv@quotient+7)^0,f,c
  3944  000CBC  500A               	movf	___aodiv@divisor^0,w,c
  3945  000CBE  5C02               	subwf	___aodiv@dividend^0,w,c
  3946  000CC0  500B               	movf	(___aodiv@divisor+1)^0,w,c
  3947  000CC2  5803               	subwfb	(___aodiv@dividend+1)^0,w,c
  3948  000CC4  500C               	movf	(___aodiv@divisor+2)^0,w,c
  3949  000CC6  5804               	subwfb	(___aodiv@dividend+2)^0,w,c
  3950  000CC8  500D               	movf	(___aodiv@divisor+3)^0,w,c
  3951  000CCA  5805               	subwfb	(___aodiv@dividend+3)^0,w,c
  3952  000CCC  500E               	movf	(___aodiv@divisor+4)^0,w,c
  3953  000CCE  5806               	subwfb	(___aodiv@dividend+4)^0,w,c
  3954  000CD0  500F               	movf	(___aodiv@divisor+5)^0,w,c
  3955  000CD2  5807               	subwfb	(___aodiv@dividend+5)^0,w,c
  3956  000CD4  5010               	movf	(___aodiv@divisor+6)^0,w,c
  3957  000CD6  5808               	subwfb	(___aodiv@dividend+6)^0,w,c
  3958  000CD8  5011               	movf	(___aodiv@divisor+7)^0,w,c
  3959  000CDA  5809               	subwfb	(___aodiv@dividend+7)^0,w,c
  3960  000CDC  A0D8               	btfss	status,0,c
  3961  000CDE  EF73  F006         	goto	u1481
  3962  000CE2  EF75  F006         	goto	u1480
  3963  000CE6                     u1481:
  3964  000CE6  EF86  F006         	goto	l2085
  3965  000CEA                     u1480:
  3966  000CEA  500A               	movf	___aodiv@divisor^0,w,c
  3967  000CEC  5E02               	subwf	___aodiv@dividend^0,f,c
  3968  000CEE  500B               	movf	(___aodiv@divisor+1)^0,w,c
  3969  000CF0  5A03               	subwfb	(___aodiv@dividend+1)^0,f,c
  3970  000CF2  500C               	movf	(___aodiv@divisor+2)^0,w,c
  3971  000CF4  5A04               	subwfb	(___aodiv@dividend+2)^0,f,c
  3972  000CF6  500D               	movf	(___aodiv@divisor+3)^0,w,c
  3973  000CF8  5A05               	subwfb	(___aodiv@dividend+3)^0,f,c
  3974  000CFA  500E               	movf	(___aodiv@divisor+4)^0,w,c
  3975  000CFC  5A06               	subwfb	(___aodiv@dividend+4)^0,f,c
  3976  000CFE  500F               	movf	(___aodiv@divisor+5)^0,w,c
  3977  000D00  5A07               	subwfb	(___aodiv@dividend+5)^0,f,c
  3978  000D02  5010               	movf	(___aodiv@divisor+6)^0,w,c
  3979  000D04  5A08               	subwfb	(___aodiv@dividend+6)^0,f,c
  3980  000D06  5011               	movf	(___aodiv@divisor+7)^0,w,c
  3981  000D08  5A09               	subwfb	(___aodiv@dividend+7)^0,f,c
  3982  000D0A  8014               	bsf	___aodiv@quotient^0,0,c
  3983  000D0C                     l2085:
  3984  000D0C  90D8               	bcf	status,0,c
  3985  000D0E  3211               	rrcf	(___aodiv@divisor+7)^0,f,c
  3986  000D10  3210               	rrcf	(___aodiv@divisor+6)^0,f,c
  3987  000D12  320F               	rrcf	(___aodiv@divisor+5)^0,f,c
  3988  000D14  320E               	rrcf	(___aodiv@divisor+4)^0,f,c
  3989  000D16  320D               	rrcf	(___aodiv@divisor+3)^0,f,c
  3990  000D18  320C               	rrcf	(___aodiv@divisor+2)^0,f,c
  3991  000D1A  320B               	rrcf	(___aodiv@divisor+1)^0,f,c
  3992  000D1C  320A               	rrcf	___aodiv@divisor^0,f,c
  3993  000D1E  2E12               	decfsz	___aodiv@counter^0,f,c
  3994  000D20  EF55  F006         	goto	l2077
  3995  000D24                     l2089:
  3996  000D24  5013               	movf	___aodiv@sign^0,w,c
  3997  000D26  B4D8               	btfsc	status,2,c
  3998  000D28  EF98  F006         	goto	u1491
  3999  000D2C  EF9A  F006         	goto	u1490
  4000  000D30                     u1491:
  4001  000D30  EFAA  F006         	goto	l2093
  4002  000D34                     u1490:
  4003  000D34  1E1B               	comf	(___aodiv@quotient+7)^0,f,c
  4004  000D36  1E1A               	comf	(___aodiv@quotient+6)^0,f,c
  4005  000D38  1E19               	comf	(___aodiv@quotient+5)^0,f,c
  4006  000D3A  1E18               	comf	(___aodiv@quotient+4)^0,f,c
  4007  000D3C  1E17               	comf	(___aodiv@quotient+3)^0,f,c
  4008  000D3E  1E16               	comf	(___aodiv@quotient+2)^0,f,c
  4009  000D40  1E15               	comf	(___aodiv@quotient+1)^0,f,c
  4010  000D42  6C14               	negf	___aodiv@quotient^0,c
  4011  000D44  0E00               	movlw	0
  4012  000D46  2215               	addwfc	(___aodiv@quotient+1)^0,f,c
  4013  000D48  2216               	addwfc	(___aodiv@quotient+2)^0,f,c
  4014  000D4A  2217               	addwfc	(___aodiv@quotient+3)^0,f,c
  4015  000D4C  2218               	addwfc	(___aodiv@quotient+4)^0,f,c
  4016  000D4E  2219               	addwfc	(___aodiv@quotient+5)^0,f,c
  4017  000D50  221A               	addwfc	(___aodiv@quotient+6)^0,f,c
  4018  000D52  221B               	addwfc	(___aodiv@quotient+7)^0,f,c
  4019  000D54                     l2093:
  4020  000D54  C014  F002         	movff	___aodiv@quotient,?___aodiv
  4021  000D58  C015  F003         	movff	___aodiv@quotient+1,?___aodiv+1
  4022  000D5C  C016  F004         	movff	___aodiv@quotient+2,?___aodiv+2
  4023  000D60  C017  F005         	movff	___aodiv@quotient+3,?___aodiv+3
  4024  000D64  C018  F006         	movff	___aodiv@quotient+4,?___aodiv+4
  4025  000D68  C019  F007         	movff	___aodiv@quotient+5,?___aodiv+5
  4026  000D6C  C01A  F008         	movff	___aodiv@quotient+6,?___aodiv+6
  4027  000D70  C01B  F009         	movff	___aodiv@quotient+7,?___aodiv+7
  4028  000D74  0012               	return		;funcret
  4029  000D76                     __end_of___aodiv:
  4030                           	callstack 0
  4031                           
  4032 ;; *************** function _ctoa *****************
  4033 ;; Defined at:
  4034 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4037 ;;		 -> NULL(0), sprintf@f(6), 
  4038 ;;  c               1   13[COMRAM] unsigned char 
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;  w               2   17[COMRAM] int 
  4041 ;;  l               2   15[COMRAM] int 
  4042 ;; Return value:  Size  Location     Type
  4043 ;;                  2   11[COMRAM] int 
  4044 ;; Registers used:
  4045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4051 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4052 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4053 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4054 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4055 ;;Total ram usage:        8 bytes
  4056 ;; Hardware stack levels used: 1
  4057 ;; Hardware stack levels required when called: 4
  4058 ;; This function calls:
  4059 ;;		_fputc
  4060 ;; This function is called by:
  4061 ;;		_vfpfcnvrt
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           	psect	text18
  4066  000FC6                     __ptext18:
  4067                           	callstack 0
  4068  000FC6                     _ctoa:
  4069                           	callstack 23
  4070  000FC6                     
  4071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  4072  000FC6  0100               	movlb	0	; () banked
  4073  000FC8  516A               	movf	_width& (0+255),w,b
  4074  000FCA  116B               	iorwf	(_width+1)& (0+255),w,b
  4075  000FCC  A4D8               	btfss	status,2,c
  4076  000FCE  EFEB  F007         	goto	u1611
  4077  000FD2  EFED  F007         	goto	u1610
  4078  000FD6                     u1611:
  4079  000FD6  EFF3  F007         	goto	l2163
  4080  000FDA                     u1610:
  4081  000FDA                     
  4082                           ; BSR set to: 0
  4083  000FDA  C06A  F012         	movff	_width,ctoa@w
  4084  000FDE  C06B  F013         	movff	_width+1,ctoa@w+1
  4085  000FE2  EFF9  F007         	goto	l2165
  4086  000FE6                     l2163:
  4087                           
  4088                           ; BSR set to: 0
  4089  000FE6  0EFF               	movlw	255
  4090  000FE8  256A               	addwf	_width& (0+255),w,b
  4091  000FEA  6E12               	movwf	ctoa@w^0,c
  4092  000FEC  0EFF               	movlw	255
  4093  000FEE  216B               	addwfc	(_width+1)& (0+255),w,b
  4094  000FF0  6E13               	movwf	(ctoa@w+1)^0,c
  4095  000FF2                     l2165:
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  4099  000FF2  A16E               	btfss	_flags& (0+255),0,b
  4100  000FF4  EFFE  F007         	goto	u1621
  4101  000FF8  EF00  F008         	goto	u1620
  4102  000FFC                     u1621:
  4103  000FFC  EF09  F008         	goto	l2169
  4104  001000                     u1620:
  4105  001000                     
  4106                           ; BSR set to: 0
  4107                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  4108  001000  C00E  F003         	movff	ctoa@c,fputc@c
  4109  001004  6A04               	clrf	(fputc@c+1)^0,c
  4110  001006  C00C  F005         	movff	ctoa@fp,fputc@fp
  4111  00100A  C00D  F006         	movff	ctoa@fp+1,fputc@fp+1
  4112  00100E  ECB7  F008         	call	_fputc	;wreg free
  4113  001012                     l2169:
  4114                           
  4115                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  4116  001012  BE13               	btfsc	(ctoa@w+1)^0,7,c
  4117  001014  EF0E  F008         	goto	u1631
  4118  001018  EF10  F008         	goto	u1630
  4119  00101C                     u1631:
  4120  00101C  EF12  F008         	goto	l2173
  4121  001020                     u1630:
  4122  001020  EF16  F008         	goto	l1043
  4123  001024                     l2173:
  4124  001024  0E00               	movlw	0
  4125  001026  6E13               	movwf	(ctoa@w+1)^0,c
  4126  001028  0E00               	movlw	0
  4127  00102A  6E12               	movwf	ctoa@w^0,c
  4128  00102C                     l1043:
  4129                           
  4130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  4131  00102C  0E00               	movlw	0
  4132  00102E  6E11               	movwf	(ctoa@l+1)^0,c
  4133  001030  0E00               	movlw	0
  4134  001032  6E10               	movwf	ctoa@l^0,c
  4135                           
  4136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  4137  001034  EF28  F008         	goto	l2179
  4138  001038                     l2175:
  4139                           
  4140                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  4141  001038  0E00               	movlw	0
  4142  00103A  6E04               	movwf	(fputc@c+1)^0,c
  4143  00103C  0E20               	movlw	32
  4144  00103E  6E03               	movwf	fputc@c^0,c
  4145  001040  C00C  F005         	movff	ctoa@fp,fputc@fp
  4146  001044  C00D  F006         	movff	ctoa@fp+1,fputc@fp+1
  4147  001048  ECB7  F008         	call	_fputc	;wreg free
  4148  00104C                     
  4149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 275:         ++l;
  4150  00104C  4A10               	infsnz	ctoa@l^0,f,c
  4151  00104E  2A11               	incf	(ctoa@l+1)^0,f,c
  4152  001050                     l2179:
  4153                           
  4154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  4155  001050  5012               	movf	ctoa@w^0,w,c
  4156  001052  5C10               	subwf	ctoa@l^0,w,c
  4157  001054  5011               	movf	(ctoa@l+1)^0,w,c
  4158  001056  0A80               	xorlw	128
  4159  001058  6E0F               	movwf	??_ctoa^0,c
  4160  00105A  5013               	movf	(ctoa@w+1)^0,w,c
  4161  00105C  0A80               	xorlw	128
  4162  00105E  580F               	subwfb	??_ctoa^0,w,c
  4163  001060  A0D8               	btfss	status,0,c
  4164  001062  EF35  F008         	goto	u1641
  4165  001066  EF37  F008         	goto	u1640
  4166  00106A                     u1641:
  4167  00106A  EF1C  F008         	goto	l2175
  4168  00106E                     u1640:
  4169  00106E                     
  4170                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  4171  00106E  0100               	movlb	0	; () banked
  4172  001070  B16E               	btfsc	_flags& (0+255),0,b
  4173  001072  EF3D  F008         	goto	u1651
  4174  001076  EF3F  F008         	goto	u1650
  4175  00107A                     u1651:
  4176  00107A  EF48  F008         	goto	l2183
  4177  00107E                     u1650:
  4178  00107E                     
  4179                           ; BSR set to: 0
  4180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  4181  00107E  C00E  F003         	movff	ctoa@c,fputc@c
  4182  001082  6A04               	clrf	(fputc@c+1)^0,c
  4183  001084  C00C  F005         	movff	ctoa@fp,fputc@fp
  4184  001088  C00D  F006         	movff	ctoa@fp+1,fputc@fp+1
  4185  00108C  ECB7  F008         	call	_fputc	;wreg free
  4186  001090                     l2183:
  4187                           
  4188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  4189  001090  0E01               	movlw	1
  4190  001092  2410               	addwf	ctoa@l^0,w,c
  4191  001094  6E0C               	movwf	?_ctoa^0,c
  4192  001096  0E00               	movlw	0
  4193  001098  2011               	addwfc	(ctoa@l+1)^0,w,c
  4194  00109A  6E0D               	movwf	(?_ctoa+1)^0,c
  4195  00109C  0012               	return		;funcret
  4196  00109E                     __end_of_ctoa:
  4197                           	callstack 0
  4198                           
  4199 ;; *************** function _fputc *****************
  4200 ;; Defined at:
  4201 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;  c               2    2[COMRAM] int 
  4204 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  4205 ;;		 -> NULL(0), sprintf@f(6), 
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;		None
  4208 ;; Return value:  Size  Location     Type
  4209 ;;                  2    2[COMRAM] int 
  4210 ;; Registers used:
  4211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4217 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4219 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4220 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4221 ;;Total ram usage:        9 bytes
  4222 ;; Hardware stack levels used: 1
  4223 ;; Hardware stack levels required when called: 3
  4224 ;; This function calls:
  4225 ;;		_putch
  4226 ;; This function is called by:
  4227 ;;		_pad
  4228 ;;		_ctoa
  4229 ;;		_vfpfcnvrt
  4230 ;;		_fputs
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           	psect	text19
  4235  00116E                     __ptext19:
  4236                           	callstack 0
  4237  00116E                     _fputc:
  4238                           	callstack 24
  4239  00116E  5005               	movf	fputc@fp^0,w,c
  4240  001170  1006               	iorwf	(fputc@fp+1)^0,w,c
  4241  001172  B4D8               	btfsc	status,2,c
  4242  001174  EFBE  F008         	goto	u1371
  4243  001178  EFC0  F008         	goto	u1370
  4244  00117C                     u1371:
  4245  00117C  EFC9  F008         	goto	l2025
  4246  001180                     u1370:
  4247  001180  5005               	movf	fputc@fp^0,w,c
  4248  001182  1006               	iorwf	(fputc@fp+1)^0,w,c
  4249  001184  A4D8               	btfss	status,2,c
  4250  001186  EFC7  F008         	goto	u1381
  4251  00118A  EFC9  F008         	goto	u1380
  4252  00118E                     u1381:
  4253  00118E  EFCE  F008         	goto	l2027
  4254  001192                     u1380:
  4255  001192                     l2025:
  4256  001192  5003               	movf	fputc@c^0,w,c
  4257  001194  EC90  F00C         	call	_putch
  4258  001198  EF1B  F009         	goto	l1108
  4259  00119C                     l2027:
  4260  00119C  EE20 F004          	lfsr	2,4
  4261  0011A0  5005               	movf	fputc@fp^0,w,c
  4262  0011A2  26D9               	addwf	fsr2l,f,c
  4263  0011A4  5006               	movf	(fputc@fp+1)^0,w,c
  4264  0011A6  22DA               	addwfc	fsr2h,f,c
  4265  0011A8  50DE               	movf	postinc2,w,c
  4266  0011AA  10DE               	iorwf	postinc2,w,c
  4267  0011AC  B4D8               	btfsc	status,2,c
  4268  0011AE  EFDB  F008         	goto	u1391
  4269  0011B2  EFDD  F008         	goto	u1390
  4270  0011B6                     u1391:
  4271  0011B6  EFF8  F008         	goto	l2031
  4272  0011BA                     u1390:
  4273  0011BA  EE20 F004          	lfsr	2,4
  4274  0011BE  5005               	movf	fputc@fp^0,w,c
  4275  0011C0  26D9               	addwf	fsr2l,f,c
  4276  0011C2  5006               	movf	(fputc@fp+1)^0,w,c
  4277  0011C4  22DA               	addwfc	fsr2h,f,c
  4278  0011C6  EE10 F002          	lfsr	1,2
  4279  0011CA  5005               	movf	fputc@fp^0,w,c
  4280  0011CC  26E1               	addwf	fsr1l,f,c
  4281  0011CE  5006               	movf	(fputc@fp+1)^0,w,c
  4282  0011D0  22E2               	addwfc	fsr1h,f,c
  4283  0011D2  50DE               	movf	postinc2,w,c
  4284  0011D4  5CE6               	subwf	postinc1,w,c
  4285  0011D6  50E6               	movf	postinc1,w,c
  4286  0011D8  0A80               	xorlw	128
  4287  0011DA  6E0B               	movwf	(??_fputc+4)^0,c
  4288  0011DC  50DE               	movf	postinc2,w,c
  4289  0011DE  0A80               	xorlw	128
  4290  0011E0  580B               	subwfb	(??_fputc+4)^0,w,c
  4291  0011E2  B0D8               	btfsc	status,0,c
  4292  0011E4  EFF6  F008         	goto	u1401
  4293  0011E8  EFF8  F008         	goto	u1400
  4294  0011EC                     u1401:
  4295  0011EC  EF1B  F009         	goto	l1108
  4296  0011F0                     u1400:
  4297  0011F0                     l2031:
  4298  0011F0  EE20 F002          	lfsr	2,2
  4299  0011F4  5005               	movf	fputc@fp^0,w,c
  4300  0011F6  26D9               	addwf	fsr2l,f,c
  4301  0011F8  5006               	movf	(fputc@fp+1)^0,w,c
  4302  0011FA  22DA               	addwfc	fsr2h,f,c
  4303  0011FC  CFDE F007          	movff	postinc2,??_fputc
  4304  001200  CFDD F008          	movff	postdec2,??_fputc+1
  4305  001204  C005  FFD9         	movff	fputc@fp,fsr2l
  4306  001208  C006  FFDA         	movff	fputc@fp+1,fsr2h
  4307  00120C  CFDE F009          	movff	postinc2,??_fputc+2
  4308  001210  CFDD F00A          	movff	postdec2,??_fputc+3
  4309  001214  5007               	movf	??_fputc^0,w,c
  4310  001216  2409               	addwf	(??_fputc+2)^0,w,c
  4311  001218  6ED9               	movwf	fsr2l,c
  4312  00121A  5008               	movf	(??_fputc+1)^0,w,c
  4313  00121C  200A               	addwfc	(??_fputc+3)^0,w,c
  4314  00121E  6EDA               	movwf	fsr2h,c
  4315  001220  C003  FFDF         	movff	fputc@c,indf2
  4316  001224  EE20 F002          	lfsr	2,2
  4317  001228  5005               	movf	fputc@fp^0,w,c
  4318  00122A  26D9               	addwf	fsr2l,f,c
  4319  00122C  5006               	movf	(fputc@fp+1)^0,w,c
  4320  00122E  22DA               	addwfc	fsr2h,f,c
  4321  001230  2ADE               	incf	postinc2,f,c
  4322  001232  0E00               	movlw	0
  4323  001234  22DD               	addwfc	postdec2,f,c
  4324  001236                     l1108:
  4325  001236  0012               	return		;funcret
  4326  001238                     __end_of_fputc:
  4327                           	callstack 0
  4328                           
  4329 ;; *************** function _putch *****************
  4330 ;; Defined at:
  4331 ;;		line 23 in file "uart.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;  data            1    wreg     unsigned char 
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;  data            1    1[COMRAM] unsigned char 
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  1    wreg      void 
  4338 ;; Registers used:
  4339 ;;		wreg
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4348 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4349 ;;Total ram usage:        1 bytes
  4350 ;; Hardware stack levels used: 1
  4351 ;; Hardware stack levels required when called: 2
  4352 ;; This function calls:
  4353 ;;		Nothing
  4354 ;; This function is called by:
  4355 ;;		_fputc
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           	psect	text20
  4360  001920                     __ptext20:
  4361                           	callstack 0
  4362  001920                     _putch:
  4363                           	callstack 24
  4364                           
  4365                           ;incstack = 0
  4366                           ;putch@data stored from wreg
  4367  001920  6E02               	movwf	putch@data^0,c
  4368  001922                     l247:
  4369  001922  A89E               	btfss	3998,4,c	;volatile
  4370  001924  EF96  F00C         	goto	u1361
  4371  001928  EF98  F00C         	goto	u1360
  4372  00192C                     u1361:
  4373  00192C  EF91  F00C         	goto	l247
  4374  001930                     u1360:
  4375  001930                     
  4376                           ;uart.c: 25:     TXREG1 = data;
  4377  001930  C002  FFAD         	movff	putch@data,4013	;volatile
  4378  001934  0012               	return		;funcret
  4379  001936                     __end_of_putch:
  4380                           	callstack 0
  4381                           
  4382 ;; *************** function _gpio_init *****************
  4383 ;; Defined at:
  4384 ;;		line 6 in file "gpio.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;		None
  4387 ;; Auto vars:     Size  Location     Type
  4388 ;;		None
  4389 ;; Return value:  Size  Location     Type
  4390 ;;                  1    wreg      void 
  4391 ;; Registers used:
  4392 ;;		wreg, status,2
  4393 ;; Tracked objects:
  4394 ;;		On entry : 0/0
  4395 ;;		On exit  : 0/0
  4396 ;;		Unchanged: 0/0
  4397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4402 ;;Total ram usage:        0 bytes
  4403 ;; Hardware stack levels used: 1
  4404 ;; Hardware stack levels required when called: 2
  4405 ;; This function calls:
  4406 ;;		Nothing
  4407 ;; This function is called by:
  4408 ;;		_main
  4409 ;; This function uses a non-reentrant model
  4410 ;;
  4411                           
  4412                           	psect	text21
  4413  001812                     __ptext21:
  4414                           	callstack 0
  4415  001812                     _gpio_init:
  4416                           	callstack 28
  4417  001812                     
  4418                           ;gpio.c: 7:     TRISCbits.RC0 = 1;
  4419  001812  8094               	bsf	148,0,c	;volatile
  4420                           
  4421                           ;gpio.c: 8:     TRISAbits.RA4 = 1;
  4422  001814  8892               	bsf	146,4,c	;volatile
  4423                           
  4424                           ;gpio.c: 9:     TRISAbits.RA3 = 1;
  4425  001816  8692               	bsf	146,3,c	;volatile
  4426                           
  4427                           ;gpio.c: 10:     TRISAbits.RA2 = 1;
  4428  001818  8492               	bsf	146,2,c	;volatile
  4429                           
  4430                           ;gpio.c: 12:     TRISDbits.RD2 = 0;
  4431  00181A  9495               	bcf	149,2,c	;volatile
  4432                           
  4433                           ;gpio.c: 13:     TRISDbits.RD3 = 0;
  4434  00181C  9695               	bcf	149,3,c	;volatile
  4435                           
  4436                           ;gpio.c: 14:     TRISCbits.RC4 = 0;
  4437  00181E  9894               	bcf	148,4,c	;volatile
  4438                           
  4439                           ;gpio.c: 15:     TRISDbits.RD4 = 0;
  4440  001820  9895               	bcf	149,4,c	;volatile
  4441                           
  4442                           ;gpio.c: 16:     TRISDbits.RD5 = 0;
  4443  001822  9A95               	bcf	149,5,c	;volatile
  4444                           
  4445                           ;gpio.c: 17:     TRISDbits.RD6 = 0;
  4446  001824  9C95               	bcf	149,6,c	;volatile
  4447  001826                     
  4448                           ;gpio.c: 19:     ANSELA = 0;
  4449  001826  0E00               	movlw	0
  4450  001828  010F               	movlb	15	; () banked
  4451  00182A  6F38               	movwf	56,b	;volatile
  4452  00182C                     
  4453                           ; BSR set to: 15
  4454                           ;gpio.c: 21:     LATDbits.LD2 = 1;
  4455  00182C  848C               	bsf	140,2,c	;volatile
  4456  00182E                     
  4457                           ; BSR set to: 15
  4458                           ;gpio.c: 22:     LATDbits.LD3 = 1;
  4459  00182E  868C               	bsf	140,3,c	;volatile
  4460  001830                     
  4461                           ; BSR set to: 15
  4462                           ;gpio.c: 23:     LATCbits.LC4 = 1;
  4463  001830  888B               	bsf	139,4,c	;volatile
  4464  001832                     
  4465                           ; BSR set to: 15
  4466                           ;gpio.c: 24:     LATDbits.LD4 = 1;
  4467  001832  888C               	bsf	140,4,c	;volatile
  4468  001834                     
  4469                           ; BSR set to: 15
  4470                           ;gpio.c: 25:     LATDbits.LD5 = 1;
  4471  001834  8A8C               	bsf	140,5,c	;volatile
  4472  001836                     
  4473                           ; BSR set to: 15
  4474                           ;gpio.c: 26:     LATDbits.LD6 = 1;
  4475  001836  8C8C               	bsf	140,6,c	;volatile
  4476  001838                     
  4477                           ; BSR set to: 15
  4478  001838  0012               	return		;funcret
  4479  00183A                     __end_of_gpio_init:
  4480                           	callstack 0
  4481                           
  4482 ;; *************** function _gpio_btn_state *****************
  4483 ;; Defined at:
  4484 ;;		line 65 in file "gpio.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  btn             1    wreg     unsigned char 
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;  btn             1    3[COMRAM] unsigned char 
  4489 ;; Return value:  Size  Location     Type
  4490 ;;                  1    wreg      unsigned char 
  4491 ;; Registers used:
  4492 ;;		wreg, status,2, status,0
  4493 ;; Tracked objects:
  4494 ;;		On entry : 0/0
  4495 ;;		On exit  : 0/0
  4496 ;;		Unchanged: 0/0
  4497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4499 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4500 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;Total ram usage:        3 bytes
  4503 ;; Hardware stack levels used: 1
  4504 ;; Hardware stack levels required when called: 2
  4505 ;; This function calls:
  4506 ;;		Nothing
  4507 ;; This function is called by:
  4508 ;;		_main
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512                           	psect	text22
  4513  0013BA                     __ptext22:
  4514                           	callstack 0
  4515  0013BA                     _gpio_btn_state:
  4516                           	callstack 28
  4517                           
  4518                           ; BSR set to: 15
  4519                           ;incstack = 0
  4520                           ;gpio_btn_state@btn stored from wreg
  4521  0013BA  6E04               	movwf	gpio_btn_state@btn^0,c
  4522  0013BC                     
  4523                           ;gpio.c: 66:     switch(btn){
  4524  0013BC  EF18  F00A         	goto	l2521
  4525  0013C0                     l2459:
  4526                           
  4527                           ;gpio.c: 68:             if(buttons.btn1_stat){
  4528  0013C0  0100               	movlb	0	; () banked
  4529  0013C2  5161               	movf	(_buttons+1)& (0+255),w,b	;volatile
  4530  0013C4  B4D8               	btfsc	status,2,c
  4531  0013C6  EFE7  F009         	goto	u2201
  4532  0013CA  EFE9  F009         	goto	u2200
  4533  0013CE                     u2201:
  4534  0013CE  EFEE  F009         	goto	l2469
  4535  0013D2                     u2200:
  4536  0013D2                     
  4537                           ; BSR set to: 0
  4538                           ;gpio.c: 69:                 buttons.btn1_stat = 0;
  4539  0013D2  0E00               	movlw	0
  4540  0013D4  6F61               	movwf	(_buttons+1)& (0+255),b	;volatile
  4541  0013D6                     l2463:
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;gpio.c: 70:                 return 1;
  4545  0013D6  0E01               	movlw	1
  4546  0013D8  EF35  F00A         	goto	l143
  4547  0013DC                     l2469:
  4548                           
  4549                           ;gpio.c: 73:                 return 0;
  4550  0013DC  0E00               	movlw	0
  4551  0013DE  EF35  F00A         	goto	l143
  4552  0013E2                     l2473:
  4553                           
  4554                           ;gpio.c: 77:             if(buttons.btn2_stat){
  4555  0013E2  0100               	movlb	0	; () banked
  4556  0013E4  5163               	movf	(_buttons+3)& (0+255),w,b	;volatile
  4557  0013E6  B4D8               	btfsc	status,2,c
  4558  0013E8  EFF8  F009         	goto	u2211
  4559  0013EC  EFFA  F009         	goto	u2210
  4560  0013F0                     u2211:
  4561  0013F0  EFEE  F009         	goto	l2469
  4562  0013F4                     u2210:
  4563  0013F4                     
  4564                           ; BSR set to: 0
  4565                           ;gpio.c: 78:                 buttons.btn2_stat = 0;
  4566  0013F4  0E00               	movlw	0
  4567  0013F6  6F63               	movwf	(_buttons+3)& (0+255),b	;volatile
  4568  0013F8  EFEB  F009         	goto	l2463
  4569  0013FC                     l2487:
  4570                           
  4571                           ;gpio.c: 86:             if(buttons.btn3_stat){
  4572  0013FC  0100               	movlb	0	; () banked
  4573  0013FE  5165               	movf	(_buttons+5)& (0+255),w,b	;volatile
  4574  001400  B4D8               	btfsc	status,2,c
  4575  001402  EF05  F00A         	goto	u2221
  4576  001406  EF07  F00A         	goto	u2220
  4577  00140A                     u2221:
  4578  00140A  EFEE  F009         	goto	l2469
  4579  00140E                     u2220:
  4580  00140E                     
  4581                           ; BSR set to: 0
  4582                           ;gpio.c: 87:                 buttons.btn3_stat = 0;
  4583  00140E  0E00               	movlw	0
  4584  001410  6F65               	movwf	(_buttons+5)& (0+255),b	;volatile
  4585  001412  EFEB  F009         	goto	l2463
  4586  001416                     l2501:
  4587                           
  4588                           ;gpio.c: 95:             if(buttons.btn4_stat){
  4589  001416  0100               	movlb	0	; () banked
  4590  001418  5167               	movf	(_buttons+7)& (0+255),w,b	;volatile
  4591  00141A  B4D8               	btfsc	status,2,c
  4592  00141C  EF12  F00A         	goto	u2231
  4593  001420  EF14  F00A         	goto	u2230
  4594  001424                     u2231:
  4595  001424  EFEE  F009         	goto	l2469
  4596  001428                     u2230:
  4597  001428                     
  4598                           ; BSR set to: 0
  4599                           ;gpio.c: 96:                 buttons.btn4_stat = 0;
  4600  001428  0E00               	movlw	0
  4601  00142A  6F67               	movwf	(_buttons+7)& (0+255),b	;volatile
  4602  00142C  EFEB  F009         	goto	l2463
  4603  001430                     l2521:
  4604  001430  5004               	movf	gpio_btn_state@btn^0,w,c
  4605  001432  6E02               	movwf	??_gpio_btn_state^0,c
  4606  001434  6A03               	clrf	(??_gpio_btn_state+1)^0,c
  4607                           
  4608                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4609                           ; Switch size 1, requested type "simple"
  4610                           ; Number of cases is 1, Range of values is 0 to 0
  4611                           ; switch strategies available:
  4612                           ; Name         Instructions Cycles
  4613                           ; simple_byte            4     3 (average)
  4614                           ;	Chosen strategy is simple_byte
  4615  001436  5003               	movf	(??_gpio_btn_state+1)^0,w,c
  4616  001438  0A00               	xorlw	0	; case 0
  4617  00143A  B4D8               	btfsc	status,2,c
  4618  00143C  EF22  F00A         	goto	l2903
  4619  001440  EFEE  F009         	goto	l2469
  4620  001444                     l2903:
  4621                           
  4622                           ; Switch size 1, requested type "simple"
  4623                           ; Number of cases is 4, Range of values is 1 to 4
  4624                           ; switch strategies available:
  4625                           ; Name         Instructions Cycles
  4626                           ; simple_byte           13     7 (average)
  4627                           ;	Chosen strategy is simple_byte
  4628  001444  5002               	movf	??_gpio_btn_state^0,w,c
  4629  001446  0A01               	xorlw	1	; case 1
  4630  001448  B4D8               	btfsc	status,2,c
  4631  00144A  EFE0  F009         	goto	l2459
  4632  00144E  0A03               	xorlw	3	; case 2
  4633  001450  B4D8               	btfsc	status,2,c
  4634  001452  EFF1  F009         	goto	l2473
  4635  001456  0A01               	xorlw	1	; case 3
  4636  001458  B4D8               	btfsc	status,2,c
  4637  00145A  EFFE  F009         	goto	l2487
  4638  00145E  0A07               	xorlw	7	; case 4
  4639  001460  B4D8               	btfsc	status,2,c
  4640  001462  EF0B  F00A         	goto	l2501
  4641  001466  EFEE  F009         	goto	l2469
  4642  00146A                     l143:
  4643  00146A  0012               	return		;funcret
  4644  00146C                     __end_of_gpio_btn_state:
  4645                           	callstack 0
  4646                           
  4647 ;; *************** function _generate_symbol *****************
  4648 ;; Defined at:
  4649 ;;		line 6 in file "custom_funcs.c"
  4650 ;; Parameters:    Size  Location     Type
  4651 ;;		None
  4652 ;; Auto vars:     Size  Location     Type
  4653 ;;  random          2   21[COMRAM] int 
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  1    wreg      unsigned char 
  4656 ;; Registers used:
  4657 ;;		wreg, status,2, status,0, cstack
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4664 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4665 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4666 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4667 ;;Total ram usage:        4 bytes
  4668 ;; Hardware stack levels used: 1
  4669 ;; Hardware stack levels required when called: 4
  4670 ;; This function calls:
  4671 ;;		_rand
  4672 ;; This function is called by:
  4673 ;;		_main
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           	psect	text23
  4678  0015F6                     __ptext23:
  4679                           	callstack 0
  4680  0015F6                     _generate_symbol:
  4681                           	callstack 26
  4682  0015F6                     
  4683                           ;custom_funcs.c: 7:     int random = rand() % 4;
  4684  0015F6  EC8F  F00A         	call	_rand	;wreg free
  4685  0015FA  0E03               	movlw	3
  4686  0015FC  140E               	andwf	?_rand^0,w,c
  4687  0015FE  6E16               	movwf	generate_symbol@random^0,c
  4688  001600  6A17               	clrf	(generate_symbol@random+1)^0,c
  4689                           
  4690                           ;custom_funcs.c: 9:     switch(random){
  4691  001602  EF0F  F00B         	goto	l2557
  4692  001606                     l2535:
  4693                           
  4694                           ;custom_funcs.c: 11:             return '&';
  4695  001606  0E26               	movlw	38
  4696  001608  EF2D  F00B         	goto	l295
  4697  00160C                     l2539:
  4698                           
  4699                           ;custom_funcs.c: 13:             return '%';
  4700  00160C  0E25               	movlw	37
  4701  00160E  EF2D  F00B         	goto	l295
  4702  001612                     l2543:
  4703                           
  4704                           ;custom_funcs.c: 15:             return '#';
  4705  001612  0E23               	movlw	35
  4706  001614  EF2D  F00B         	goto	l295
  4707  001618                     l2547:
  4708                           
  4709                           ;custom_funcs.c: 17:             return '@';
  4710  001618  0E40               	movlw	64
  4711  00161A  EF2D  F00B         	goto	l295
  4712  00161E                     l2557:
  4713  00161E  C016  F014         	movff	generate_symbol@random,??_generate_symbol
  4714  001622  C017  F015         	movff	generate_symbol@random+1,??_generate_symbol+1
  4715                           
  4716                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4717                           ; Switch size 1, requested type "simple"
  4718                           ; Number of cases is 1, Range of values is 0 to 0
  4719                           ; switch strategies available:
  4720                           ; Name         Instructions Cycles
  4721                           ; simple_byte            4     3 (average)
  4722                           ;	Chosen strategy is simple_byte
  4723  001626  5015               	movf	(??_generate_symbol+1)^0,w,c
  4724  001628  0A00               	xorlw	0	; case 0
  4725  00162A  B4D8               	btfsc	status,2,c
  4726  00162C  EF1A  F00B         	goto	l2905
  4727  001630  EF06  F00B         	goto	l2539
  4728  001634                     l2905:
  4729                           
  4730                           ; Switch size 1, requested type "simple"
  4731                           ; Number of cases is 4, Range of values is 0 to 3
  4732                           ; switch strategies available:
  4733                           ; Name         Instructions Cycles
  4734                           ; simple_byte           13     7 (average)
  4735                           ;	Chosen strategy is simple_byte
  4736  001634  5014               	movf	??_generate_symbol^0,w,c
  4737  001636  0A00               	xorlw	0	; case 0
  4738  001638  B4D8               	btfsc	status,2,c
  4739  00163A  EF03  F00B         	goto	l2535
  4740  00163E  0A01               	xorlw	1	; case 1
  4741  001640  B4D8               	btfsc	status,2,c
  4742  001642  EF06  F00B         	goto	l2539
  4743  001646  0A03               	xorlw	3	; case 2
  4744  001648  B4D8               	btfsc	status,2,c
  4745  00164A  EF09  F00B         	goto	l2543
  4746  00164E  0A01               	xorlw	1	; case 3
  4747  001650  B4D8               	btfsc	status,2,c
  4748  001652  EF0C  F00B         	goto	l2547
  4749  001656  EF06  F00B         	goto	l2539
  4750  00165A                     l295:
  4751  00165A  0012               	return		;funcret
  4752  00165C                     __end_of_generate_symbol:
  4753                           	callstack 0
  4754                           
  4755 ;; *************** function _rand *****************
  4756 ;; Defined at:
  4757 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\rand.c"
  4758 ;; Parameters:    Size  Location     Type
  4759 ;;		None
  4760 ;; Auto vars:     Size  Location     Type
  4761 ;;		None
  4762 ;; Return value:  Size  Location     Type
  4763 ;;                  2   13[COMRAM] int 
  4764 ;; Registers used:
  4765 ;;		wreg, status,2, status,0, cstack
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4771 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4774 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4775 ;;Total ram usage:        6 bytes
  4776 ;; Hardware stack levels used: 1
  4777 ;; Hardware stack levels required when called: 3
  4778 ;; This function calls:
  4779 ;;		___lmul
  4780 ;; This function is called by:
  4781 ;;		_generate_symbol
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           	psect	text24
  4786  00151E                     __ptext24:
  4787                           	callstack 0
  4788  00151E                     _rand:
  4789                           	callstack 26
  4790  00151E  C092  F002         	movff	_seed,___lmul@multiplier
  4791  001522  C093  F003         	movff	_seed+1,___lmul@multiplier+1
  4792  001526  C094  F004         	movff	_seed+2,___lmul@multiplier+2
  4793  00152A  C095  F005         	movff	_seed+3,___lmul@multiplier+3
  4794  00152E  0E2D               	movlw	45
  4795  001530  6E06               	movwf	___lmul@multiplicand^0,c
  4796  001532  0E7F               	movlw	127
  4797  001534  6E07               	movwf	(___lmul@multiplicand+1)^0,c
  4798  001536  0E95               	movlw	149
  4799  001538  6E08               	movwf	(___lmul@multiplicand+2)^0,c
  4800  00153A  0E4C               	movlw	76
  4801  00153C  6E09               	movwf	(___lmul@multiplicand+3)^0,c
  4802  00153E  ECC6  F00A         	call	___lmul	;wreg free
  4803  001542  0E01               	movlw	1
  4804  001544  2402               	addwf	?___lmul^0,w,c
  4805  001546  0100               	movlb	0	; () banked
  4806  001548  6F92               	movwf	_seed& (0+255),b
  4807  00154A  0E00               	movlw	0
  4808  00154C  2003               	addwfc	(?___lmul+1)^0,w,c
  4809  00154E  6F93               	movwf	(_seed+1)& (0+255),b
  4810  001550  0E00               	movlw	0
  4811  001552  2004               	addwfc	(?___lmul+2)^0,w,c
  4812  001554  6F94               	movwf	(_seed+2)& (0+255),b
  4813  001556  0E00               	movlw	0
  4814  001558  2005               	addwfc	(?___lmul+3)^0,w,c
  4815  00155A  6F95               	movwf	(_seed+3)& (0+255),b
  4816  00155C                     
  4817                           ; BSR set to: 0
  4818  00155C  C092  F010         	movff	_seed,??_rand
  4819  001560  C093  F011         	movff	_seed+1,??_rand+1
  4820  001564  C094  F012         	movff	_seed+2,??_rand+2
  4821  001568  C095  F013         	movff	_seed+3,??_rand+3
  4822  00156C  0E12               	movlw	18
  4823  00156E  EFBE  F00A         	goto	u2020
  4824  001572                     u2025:
  4825  001572  90D8               	bcf	status,0,c
  4826  001574  3213               	rrcf	(??_rand+3)^0,f,c
  4827  001576  3212               	rrcf	(??_rand+2)^0,f,c
  4828  001578  3211               	rrcf	(??_rand+1)^0,f,c
  4829  00157A  3210               	rrcf	??_rand^0,f,c
  4830  00157C                     u2020:
  4831  00157C  2EE8               	decfsz	wreg,f,c
  4832  00157E  EFB9  F00A         	goto	u2025
  4833  001582  C010  F00E         	movff	??_rand,?_rand
  4834  001586  C011  F00F         	movff	??_rand+1,?_rand+1
  4835  00158A                     
  4836                           ; BSR set to: 0
  4837  00158A  0012               	return		;funcret
  4838  00158C                     __end_of_rand:
  4839                           	callstack 0
  4840                           
  4841 ;; *************** function ___lmul *****************
  4842 ;; Defined at:
  4843 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
  4844 ;; Parameters:    Size  Location     Type
  4845 ;;  multiplier      4    1[COMRAM] unsigned long 
  4846 ;;  multiplicand    4    5[COMRAM] unsigned long 
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;  product         4    9[COMRAM] unsigned long 
  4849 ;; Return value:  Size  Location     Type
  4850 ;;                  4    1[COMRAM] unsigned long 
  4851 ;; Registers used:
  4852 ;;		wreg, status,2, status,0
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4858 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4859 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4861 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4862 ;;Total ram usage:       12 bytes
  4863 ;; Hardware stack levels used: 1
  4864 ;; Hardware stack levels required when called: 2
  4865 ;; This function calls:
  4866 ;;		Nothing
  4867 ;; This function is called by:
  4868 ;;		_rand
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           	psect	text25
  4873  00158C                     __ptext25:
  4874                           	callstack 0
  4875  00158C                     ___lmul:
  4876                           	callstack 26
  4877  00158C  0E00               	movlw	0
  4878  00158E  6E0A               	movwf	___lmul@product^0,c
  4879  001590  0E00               	movlw	0
  4880  001592  6E0B               	movwf	(___lmul@product+1)^0,c
  4881  001594  0E00               	movlw	0
  4882  001596  6E0C               	movwf	(___lmul@product+2)^0,c
  4883  001598  0E00               	movlw	0
  4884  00159A  6E0D               	movwf	(___lmul@product+3)^0,c
  4885  00159C                     l2251:
  4886  00159C  A002               	btfss	___lmul@multiplier^0,0,c
  4887  00159E  EFD3  F00A         	goto	u1811
  4888  0015A2  EFD5  F00A         	goto	u1810
  4889  0015A6                     u1811:
  4890  0015A6  EFDD  F00A         	goto	l2255
  4891  0015AA                     u1810:
  4892  0015AA  5006               	movf	___lmul@multiplicand^0,w,c
  4893  0015AC  260A               	addwf	___lmul@product^0,f,c
  4894  0015AE  5007               	movf	(___lmul@multiplicand+1)^0,w,c
  4895  0015B0  220B               	addwfc	(___lmul@product+1)^0,f,c
  4896  0015B2  5008               	movf	(___lmul@multiplicand+2)^0,w,c
  4897  0015B4  220C               	addwfc	(___lmul@product+2)^0,f,c
  4898  0015B6  5009               	movf	(___lmul@multiplicand+3)^0,w,c
  4899  0015B8  220D               	addwfc	(___lmul@product+3)^0,f,c
  4900  0015BA                     l2255:
  4901  0015BA  90D8               	bcf	status,0,c
  4902  0015BC  3606               	rlcf	___lmul@multiplicand^0,f,c
  4903  0015BE  3607               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4904  0015C0  3608               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4905  0015C2  3609               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4906  0015C4  90D8               	bcf	status,0,c
  4907  0015C6  3205               	rrcf	(___lmul@multiplier+3)^0,f,c
  4908  0015C8  3204               	rrcf	(___lmul@multiplier+2)^0,f,c
  4909  0015CA  3203               	rrcf	(___lmul@multiplier+1)^0,f,c
  4910  0015CC  3202               	rrcf	___lmul@multiplier^0,f,c
  4911  0015CE  5002               	movf	___lmul@multiplier^0,w,c
  4912  0015D0  1003               	iorwf	(___lmul@multiplier+1)^0,w,c
  4913  0015D2  1004               	iorwf	(___lmul@multiplier+2)^0,w,c
  4914  0015D4  1005               	iorwf	(___lmul@multiplier+3)^0,w,c
  4915  0015D6  A4D8               	btfss	status,2,c
  4916  0015D8  EFF0  F00A         	goto	u1821
  4917  0015DC  EFF2  F00A         	goto	u1820
  4918  0015E0                     u1821:
  4919  0015E0  EFCE  F00A         	goto	l2251
  4920  0015E4                     u1820:
  4921  0015E4  C00A  F002         	movff	___lmul@product,?___lmul
  4922  0015E8  C00B  F003         	movff	___lmul@product+1,?___lmul+1
  4923  0015EC  C00C  F004         	movff	___lmul@product+2,?___lmul+2
  4924  0015F0  C00D  F005         	movff	___lmul@product+3,?___lmul+3
  4925  0015F4  0012               	return		;funcret
  4926  0015F6                     __end_of___lmul:
  4927                           	callstack 0
  4928                           
  4929 ;; *************** function _check_win *****************
  4930 ;; Defined at:
  4931 ;;		line 23 in file "custom_funcs.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;  symbols         2    1[COMRAM] PTR unsigned char 
  4934 ;;		 -> main@symbols(3), 
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;		None
  4937 ;; Return value:  Size  Location     Type
  4938 ;;                  2    1[COMRAM] unsigned short 
  4939 ;; Registers used:
  4940 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4941 ;; Tracked objects:
  4942 ;;		On entry : 0/0
  4943 ;;		On exit  : 0/0
  4944 ;;		Unchanged: 0/0
  4945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4946 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4948 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4949 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4950 ;;Total ram usage:        3 bytes
  4951 ;; Hardware stack levels used: 1
  4952 ;; Hardware stack levels required when called: 2
  4953 ;; This function calls:
  4954 ;;		Nothing
  4955 ;; This function is called by:
  4956 ;;		_main
  4957 ;; This function uses a non-reentrant model
  4958 ;;
  4959                           
  4960                           	psect	text26
  4961  000A5C                     __ptext26:
  4962                           	callstack 0
  4963  000A5C                     _check_win:
  4964                           	callstack 28
  4965  000A5C                     
  4966                           ;custom_funcs.c: 24:     if(symbols[0] == '#' && symbols[1] == '#' && symbols[2] == '#')
      +                           {
  4967  000A5C  C002  FFD9         	movff	check_win@symbols,fsr2l
  4968  000A60  C003  FFDA         	movff	check_win@symbols+1,fsr2h
  4969  000A64  0E23               	movlw	35
  4970  000A66  18DE               	xorwf	postinc2,w,c
  4971  000A68  A4D8               	btfss	status,2,c
  4972  000A6A  EF39  F005         	goto	u2241
  4973  000A6E  EF3B  F005         	goto	u2240
  4974  000A72                     u2241:
  4975  000A72  EF5F  F005         	goto	l2575
  4976  000A76                     u2240:
  4977  000A76  EE20 F001          	lfsr	2,1
  4978  000A7A  5002               	movf	check_win@symbols^0,w,c
  4979  000A7C  26D9               	addwf	fsr2l,f,c
  4980  000A7E  5003               	movf	(check_win@symbols+1)^0,w,c
  4981  000A80  22DA               	addwfc	fsr2h,f,c
  4982  000A82  0E23               	movlw	35
  4983  000A84  18DE               	xorwf	postinc2,w,c
  4984  000A86  A4D8               	btfss	status,2,c
  4985  000A88  EF48  F005         	goto	u2251
  4986  000A8C  EF4A  F005         	goto	u2250
  4987  000A90                     u2251:
  4988  000A90  EF5F  F005         	goto	l2575
  4989  000A94                     u2250:
  4990  000A94  EE20 F002          	lfsr	2,2
  4991  000A98  5002               	movf	check_win@symbols^0,w,c
  4992  000A9A  26D9               	addwf	fsr2l,f,c
  4993  000A9C  5003               	movf	(check_win@symbols+1)^0,w,c
  4994  000A9E  22DA               	addwfc	fsr2h,f,c
  4995  000AA0  0E23               	movlw	35
  4996  000AA2  18DE               	xorwf	postinc2,w,c
  4997  000AA4  A4D8               	btfss	status,2,c
  4998  000AA6  EF57  F005         	goto	u2261
  4999  000AAA  EF59  F005         	goto	u2260
  5000  000AAE                     u2261:
  5001  000AAE  EF5F  F005         	goto	l2575
  5002  000AB2                     u2260:
  5003  000AB2                     
  5004                           ;custom_funcs.c: 25:         return 5;
  5005  000AB2  0E00               	movlw	0
  5006  000AB4  6E03               	movwf	(?_check_win+1)^0,c
  5007  000AB6  0E05               	movlw	5
  5008  000AB8  6E02               	movwf	?_check_win^0,c
  5009  000ABA  EFF6  F005         	goto	l304
  5010  000ABE                     l2575:
  5011  000ABE  C002  FFD9         	movff	check_win@symbols,fsr2l
  5012  000AC2  C003  FFDA         	movff	check_win@symbols+1,fsr2h
  5013  000AC6  0E40               	movlw	64
  5014  000AC8  18DE               	xorwf	postinc2,w,c
  5015  000ACA  A4D8               	btfss	status,2,c
  5016  000ACC  EF6A  F005         	goto	u2271
  5017  000AD0  EF6C  F005         	goto	u2270
  5018  000AD4                     u2271:
  5019  000AD4  EF90  F005         	goto	l2587
  5020  000AD8                     u2270:
  5021  000AD8  EE20 F001          	lfsr	2,1
  5022  000ADC  5002               	movf	check_win@symbols^0,w,c
  5023  000ADE  26D9               	addwf	fsr2l,f,c
  5024  000AE0  5003               	movf	(check_win@symbols+1)^0,w,c
  5025  000AE2  22DA               	addwfc	fsr2h,f,c
  5026  000AE4  0E40               	movlw	64
  5027  000AE6  18DE               	xorwf	postinc2,w,c
  5028  000AE8  A4D8               	btfss	status,2,c
  5029  000AEA  EF79  F005         	goto	u2281
  5030  000AEE  EF7B  F005         	goto	u2280
  5031  000AF2                     u2281:
  5032  000AF2  EF90  F005         	goto	l2587
  5033  000AF6                     u2280:
  5034  000AF6  EE20 F002          	lfsr	2,2
  5035  000AFA  5002               	movf	check_win@symbols^0,w,c
  5036  000AFC  26D9               	addwf	fsr2l,f,c
  5037  000AFE  5003               	movf	(check_win@symbols+1)^0,w,c
  5038  000B00  22DA               	addwfc	fsr2h,f,c
  5039  000B02  0E40               	movlw	64
  5040  000B04  18DE               	xorwf	postinc2,w,c
  5041  000B06  A4D8               	btfss	status,2,c
  5042  000B08  EF88  F005         	goto	u2291
  5043  000B0C  EF8A  F005         	goto	u2290
  5044  000B10                     u2291:
  5045  000B10  EF90  F005         	goto	l2587
  5046  000B14                     u2290:
  5047  000B14                     
  5048                           ;custom_funcs.c: 27:         return 3;
  5049  000B14  0E00               	movlw	0
  5050  000B16  6E03               	movwf	(?_check_win+1)^0,c
  5051  000B18  0E03               	movlw	3
  5052  000B1A  6E02               	movwf	?_check_win^0,c
  5053  000B1C  EFF6  F005         	goto	l304
  5054  000B20                     l2587:
  5055  000B20  C002  FFD9         	movff	check_win@symbols,fsr2l
  5056  000B24  C003  FFDA         	movff	check_win@symbols+1,fsr2h
  5057  000B28  0E26               	movlw	38
  5058  000B2A  18DE               	xorwf	postinc2,w,c
  5059  000B2C  A4D8               	btfss	status,2,c
  5060  000B2E  EF9B  F005         	goto	u2301
  5061  000B32  EF9D  F005         	goto	u2300
  5062  000B36                     u2301:
  5063  000B36  EFC1  F005         	goto	l2599
  5064  000B3A                     u2300:
  5065  000B3A  EE20 F001          	lfsr	2,1
  5066  000B3E  5002               	movf	check_win@symbols^0,w,c
  5067  000B40  26D9               	addwf	fsr2l,f,c
  5068  000B42  5003               	movf	(check_win@symbols+1)^0,w,c
  5069  000B44  22DA               	addwfc	fsr2h,f,c
  5070  000B46  0E26               	movlw	38
  5071  000B48  18DE               	xorwf	postinc2,w,c
  5072  000B4A  A4D8               	btfss	status,2,c
  5073  000B4C  EFAA  F005         	goto	u2311
  5074  000B50  EFAC  F005         	goto	u2310
  5075  000B54                     u2311:
  5076  000B54  EFC1  F005         	goto	l2599
  5077  000B58                     u2310:
  5078  000B58  EE20 F002          	lfsr	2,2
  5079  000B5C  5002               	movf	check_win@symbols^0,w,c
  5080  000B5E  26D9               	addwf	fsr2l,f,c
  5081  000B60  5003               	movf	(check_win@symbols+1)^0,w,c
  5082  000B62  22DA               	addwfc	fsr2h,f,c
  5083  000B64  0E26               	movlw	38
  5084  000B66  18DE               	xorwf	postinc2,w,c
  5085  000B68  A4D8               	btfss	status,2,c
  5086  000B6A  EFB9  F005         	goto	u2321
  5087  000B6E  EFBB  F005         	goto	u2320
  5088  000B72                     u2321:
  5089  000B72  EFC1  F005         	goto	l2599
  5090  000B76                     u2320:
  5091  000B76                     
  5092                           ;custom_funcs.c: 29:         return 2;
  5093  000B76  0E00               	movlw	0
  5094  000B78  6E03               	movwf	(?_check_win+1)^0,c
  5095  000B7A  0E02               	movlw	2
  5096  000B7C  6E02               	movwf	?_check_win^0,c
  5097  000B7E  EFF6  F005         	goto	l304
  5098  000B82                     l2599:
  5099  000B82  C002  FFD9         	movff	check_win@symbols,fsr2l
  5100  000B86  C003  FFDA         	movff	check_win@symbols+1,fsr2h
  5101  000B8A  0E25               	movlw	37
  5102  000B8C  18DE               	xorwf	postinc2,w,c
  5103  000B8E  A4D8               	btfss	status,2,c
  5104  000B90  EFCC  F005         	goto	u2331
  5105  000B94  EFCE  F005         	goto	u2330
  5106  000B98                     u2331:
  5107  000B98  EFF2  F005         	goto	l2611
  5108  000B9C                     u2330:
  5109  000B9C  EE20 F001          	lfsr	2,1
  5110  000BA0  5002               	movf	check_win@symbols^0,w,c
  5111  000BA2  26D9               	addwf	fsr2l,f,c
  5112  000BA4  5003               	movf	(check_win@symbols+1)^0,w,c
  5113  000BA6  22DA               	addwfc	fsr2h,f,c
  5114  000BA8  0E25               	movlw	37
  5115  000BAA  18DE               	xorwf	postinc2,w,c
  5116  000BAC  A4D8               	btfss	status,2,c
  5117  000BAE  EFDB  F005         	goto	u2341
  5118  000BB2  EFDD  F005         	goto	u2340
  5119  000BB6                     u2341:
  5120  000BB6  EFF2  F005         	goto	l2611
  5121  000BBA                     u2340:
  5122  000BBA  EE20 F002          	lfsr	2,2
  5123  000BBE  5002               	movf	check_win@symbols^0,w,c
  5124  000BC0  26D9               	addwf	fsr2l,f,c
  5125  000BC2  5003               	movf	(check_win@symbols+1)^0,w,c
  5126  000BC4  22DA               	addwfc	fsr2h,f,c
  5127  000BC6  0E25               	movlw	37
  5128  000BC8  18DE               	xorwf	postinc2,w,c
  5129  000BCA  A4D8               	btfss	status,2,c
  5130  000BCC  EFEA  F005         	goto	u2351
  5131  000BD0  EFEC  F005         	goto	u2350
  5132  000BD4                     u2351:
  5133  000BD4  EFF2  F005         	goto	l2611
  5134  000BD8                     u2350:
  5135  000BD8                     
  5136                           ;custom_funcs.c: 31:         return 1;
  5137  000BD8  0E00               	movlw	0
  5138  000BDA  6E03               	movwf	(?_check_win+1)^0,c
  5139  000BDC  0E01               	movlw	1
  5140  000BDE  6E02               	movwf	?_check_win^0,c
  5141  000BE0  EFF6  F005         	goto	l304
  5142  000BE4                     l2611:
  5143                           
  5144                           ;custom_funcs.c: 33:         return 0;
  5145  000BE4  0E00               	movlw	0
  5146  000BE6  6E03               	movwf	(?_check_win+1)^0,c
  5147  000BE8  0E00               	movlw	0
  5148  000BEA  6E02               	movwf	?_check_win^0,c
  5149  000BEC                     l304:
  5150  000BEC  0012               	return		;funcret
  5151  000BEE                     __end_of_check_win:
  5152                           	callstack 0
  5153                           
  5154 ;; *************** function _change_state *****************
  5155 ;; Defined at:
  5156 ;;		line 48 in file "custom_funcs.c"
  5157 ;; Parameters:    Size  Location     Type
  5158 ;;  state           2    1[COMRAM] PTR struct .
  5159 ;;		 -> main@state(5), 
  5160 ;;  state_id        1    3[COMRAM] unsigned char 
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;		None
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  1    wreg      void 
  5165 ;; Registers used:
  5166 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5172 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5175 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5176 ;;Total ram usage:        3 bytes
  5177 ;; Hardware stack levels used: 1
  5178 ;; Hardware stack levels required when called: 2
  5179 ;; This function calls:
  5180 ;;		Nothing
  5181 ;; This function is called by:
  5182 ;;		_main
  5183 ;; This function uses a non-reentrant model
  5184 ;;
  5185                           
  5186                           	psect	text27
  5187  0018E6                     __ptext27:
  5188                           	callstack 0
  5189  0018E6                     _change_state:
  5190                           	callstack 28
  5191  0018E6                     
  5192                           ;custom_funcs.c: 49:     state->id = state_id;
  5193  0018E6  C002  FFD9         	movff	change_state@state,fsr2l
  5194  0018EA  C003  FFDA         	movff	change_state@state+1,fsr2h
  5195  0018EE  C004  FFDF         	movff	change_state@state_id,indf2
  5196  0018F2                     
  5197                           ;custom_funcs.c: 50:     state->changed = 1;
  5198  0018F2  EE20 F002          	lfsr	2,2
  5199  0018F6  5002               	movf	change_state@state^0,w,c
  5200  0018F8  26D9               	addwf	fsr2l,f,c
  5201  0018FA  5003               	movf	(change_state@state+1)^0,w,c
  5202  0018FC  22DA               	addwfc	fsr2h,f,c
  5203  0018FE  0E01               	movlw	1
  5204  001900  6EDF               	movwf	indf2,c
  5205  001902  0012               	return		;funcret
  5206  001904                     __end_of_change_state:
  5207                           	callstack 0
  5208                           
  5209 ;; *************** function _LCD_ShowString *****************
  5210 ;; Defined at:
  5211 ;;		line 63 in file "lcd.c"
  5212 ;; Parameters:    Size  Location     Type
  5213 ;;  lineNum         1    wreg     unsigned char 
  5214 ;;  textData        2    2[COMRAM] PTR unsigned char 
  5215 ;;		 -> STR_6(16), main@text(17), 
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;  lineNum         1    6[COMRAM] unsigned char 
  5218 ;;  i               1    7[COMRAM] unsigned char 
  5219 ;; Return value:  Size  Location     Type
  5220 ;;                  1    wreg      void 
  5221 ;; Registers used:
  5222 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5223 ;; Tracked objects:
  5224 ;;		On entry : 0/0
  5225 ;;		On exit  : 0/0
  5226 ;;		Unchanged: 0/0
  5227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5228 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5229 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5230 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5231 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5232 ;;Total ram usage:        6 bytes
  5233 ;; Hardware stack levels used: 1
  5234 ;; Hardware stack levels required when called: 3
  5235 ;; This function calls:
  5236 ;;		_LCD_Send
  5237 ;; This function is called by:
  5238 ;;		_main
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           	psect	text28
  5243  00146C                     __ptext28:
  5244                           	callstack 0
  5245  00146C                     _LCD_ShowString:
  5246                           	callstack 27
  5247                           
  5248                           ;incstack = 0
  5249                           ;LCD_ShowString@lineNum stored from wreg
  5250  00146C  6E07               	movwf	LCD_ShowString@lineNum^0,c
  5251  00146E                     
  5252                           ;lcd.c: 68:     SSP2CON2bits.SEN = 1;
  5253  00146E  806B               	bsf	107,0,c	;volatile
  5254  001470                     l191:
  5255  001470  B06B               	btfsc	107,0,c	;volatile
  5256  001472  EF3D  F00A         	goto	u2141
  5257  001476  EF3F  F00A         	goto	u2140
  5258  00147A                     u2141:
  5259  00147A  EF38  F00A         	goto	l191
  5260  00147E                     u2140:
  5261  00147E                     
  5262                           ;lcd.c: 70:     SSP2IF = 0;
  5263  00147E  9EA4               	bcf	4004,7,c	;volatile
  5264  001480                     
  5265                           ;lcd.c: 72:     LCD_Send(0x7c);
  5266  001480  0E7C               	movlw	124
  5267  001482  EC30  F00C         	call	_LCD_Send
  5268                           
  5269                           ;lcd.c: 74:     LCD_Send(0x80);
  5270  001486  0E80               	movlw	128
  5271  001488  EC30  F00C         	call	_LCD_Send
  5272  00148C                     
  5273                           ;lcd.c: 76:     if(lineNum == 1){
  5274  00148C  0407               	decf	LCD_ShowString@lineNum^0,w,c
  5275  00148E  A4D8               	btfss	status,2,c
  5276  001490  EF4C  F00A         	goto	u2151
  5277  001494  EF4E  F00A         	goto	u2150
  5278  001498                     u2151:
  5279  001498  EF53  F00A         	goto	l2441
  5280  00149C                     u2150:
  5281  00149C                     
  5282                           ;lcd.c: 77:         LCD_Send(0x80);
  5283  00149C  0E80               	movlw	128
  5284  00149E  EC30  F00C         	call	_LCD_Send
  5285                           
  5286                           ;lcd.c: 78:     }
  5287  0014A2  EF5F  F00A         	goto	l195
  5288  0014A6                     l2441:
  5289  0014A6  0E02               	movlw	2
  5290  0014A8  1807               	xorwf	LCD_ShowString@lineNum^0,w,c
  5291  0014AA  A4D8               	btfss	status,2,c
  5292  0014AC  EF5A  F00A         	goto	u2161
  5293  0014B0  EF5C  F00A         	goto	u2160
  5294  0014B4                     u2161:
  5295  0014B4  EF5F  F00A         	goto	l195
  5296  0014B8                     u2160:
  5297  0014B8                     
  5298                           ;lcd.c: 80:         LCD_Send(0xC0);
  5299  0014B8  0EC0               	movlw	192
  5300  0014BA  EC30  F00C         	call	_LCD_Send
  5301  0014BE                     l195:
  5302                           
  5303                           ;lcd.c: 83:     LCD_Send(0x40);
  5304  0014BE  0E40               	movlw	64
  5305  0014C0  EC30  F00C         	call	_LCD_Send
  5306  0014C4                     
  5307                           ;lcd.c: 85:     for (i = 0; i<16; i++){
  5308  0014C4  0E00               	movlw	0
  5309  0014C6  6E08               	movwf	LCD_ShowString@i^0,c
  5310  0014C8                     l2451:
  5311                           
  5312                           ;lcd.c: 86:         LCD_Send(textData[i]);
  5313  0014C8  5008               	movf	LCD_ShowString@i^0,w,c
  5314  0014CA  2403               	addwf	LCD_ShowString@textData^0,w,c
  5315  0014CC  6E05               	movwf	??_LCD_ShowString^0,c
  5316  0014CE  0E00               	movlw	0
  5317  0014D0  2004               	addwfc	(LCD_ShowString@textData+1)^0,w,c
  5318  0014D2  6E06               	movwf	(??_LCD_ShowString+1)^0,c
  5319  0014D4  C005  FFF6         	movff	??_LCD_ShowString,tblptrl
  5320  0014D8  C006  FFF7         	movff	??_LCD_ShowString+1,tblptrh
  5321  0014DC  0E00               	movlw	low (__mediumconst shr (0+16))
  5322  0014DE  6EF8               	movwf	tblptru,c
  5323  0014E0  0E0F               	movlw	(high __ramtop+-1)
  5324  0014E2  64F7               	cpfsgt	tblptrh,c
  5325  0014E4  D003               	bra	u2177
  5326  0014E6  0008               	tblrd		*
  5327  0014E8  50F5               	movf	tablat,w,c
  5328  0014EA  D005               	bra	u2170
  5329  0014EC                     u2177:
  5330  0014EC  CFF6 FFE1          	movff	tblptrl,fsr1l
  5331  0014F0  CFF7 FFE2          	movff	tblptrh,fsr1h
  5332  0014F4  50E7               	movf	indf1,w,c
  5333  0014F6                     u2170:
  5334  0014F6  EC30  F00C         	call	_LCD_Send
  5335  0014FA                     
  5336                           ;lcd.c: 87:     }
  5337  0014FA  2A08               	incf	LCD_ShowString@i^0,f,c
  5338  0014FC  0E0F               	movlw	15
  5339  0014FE  6408               	cpfsgt	LCD_ShowString@i^0,c
  5340  001500  EF84  F00A         	goto	u2181
  5341  001504  EF86  F00A         	goto	u2180
  5342  001508                     u2181:
  5343  001508  EF64  F00A         	goto	l2451
  5344  00150C                     u2180:
  5345  00150C                     
  5346                           ;lcd.c: 89:     SSP2CON2bits.PEN = 1;
  5347  00150C  846B               	bsf	107,2,c	;volatile
  5348  00150E                     l199:
  5349  00150E  B46B               	btfsc	107,2,c	;volatile
  5350  001510  EF8C  F00A         	goto	u2191
  5351  001514  EF8E  F00A         	goto	u2190
  5352  001518                     u2191:
  5353  001518  EF87  F00A         	goto	l199
  5354  00151C                     u2190:
  5355  00151C  0012               	return		;funcret
  5356  00151E                     __end_of_LCD_ShowString:
  5357                           	callstack 0
  5358                           
  5359 ;; *************** function _LCD_Init *****************
  5360 ;; Defined at:
  5361 ;;		line 7 in file "lcd.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;		None
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;		None
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  1    wreg      void 
  5368 ;; Registers used:
  5369 ;;		wreg, status,2, cstack
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5377 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5378 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5379 ;;Total ram usage:        1 bytes
  5380 ;; Hardware stack levels used: 1
  5381 ;; Hardware stack levels required when called: 3
  5382 ;; This function calls:
  5383 ;;		_LCD_Send
  5384 ;; This function is called by:
  5385 ;;		_main
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389                           	psect	text29
  5390  000EDA                     __ptext29:
  5391                           	callstack 0
  5392  000EDA                     _LCD_Init:
  5393                           	callstack 27
  5394  000EDA                     
  5395                           ;lcd.c: 8:     ANSELDbits.ANSD0 = 0;
  5396  000EDA  010F               	movlb	15	; () banked
  5397  000EDC  913B               	bcf	59,0,b	;volatile
  5398                           
  5399                           ;lcd.c: 9:     ANSELDbits.ANSD1 = 0;
  5400  000EDE  933B               	bcf	59,1,b	;volatile
  5401                           
  5402                           ;lcd.c: 11:     TRISDbits.TRISD0 = 1;
  5403  000EE0  8095               	bsf	149,0,c	;volatile
  5404                           
  5405                           ;lcd.c: 12:     TRISDbits.TRISD1 = 1;
  5406  000EE2  8295               	bsf	149,1,c	;volatile
  5407                           
  5408                           ;lcd.c: 13:     TRISAbits.TRISA0 = 0;
  5409  000EE4  9092               	bcf	146,0,c	;volatile
  5410                           
  5411                           ;lcd.c: 14:     LATAbits.LATA0 = 0;
  5412  000EE6  9089               	bcf	137,0,c	;volatile
  5413  000EE8                     
  5414                           ; BSR set to: 15
  5415                           ;lcd.c: 15:     _delay((unsigned long)((1)*(32E6/4000.0)));
  5416  000EE8  0E0B               	movlw	11
  5417  000EEA  6E03               	movwf	??_LCD_Init^0,c
  5418  000EEC  0E62               	movlw	98
  5419  000EEE                     u2727:
  5420  000EEE  2EE8               	decfsz	wreg,f,c
  5421  000EF0  D7FE               	bra	u2727
  5422  000EF2  2E03               	decfsz	??_LCD_Init^0,f,c
  5423  000EF4  D7FC               	bra	u2727
  5424  000EF6  D000               	nop2	
  5425  000EF8                     
  5426                           ;lcd.c: 16:     LATAbits.LATA0 = 1;
  5427  000EF8  8089               	bsf	137,0,c	;volatile
  5428  000EFA                     
  5429                           ;lcd.c: 19:     SSP2CON1bits.SSPM = 0b1000;
  5430  000EFA  506C               	movf	108,w,c	;volatile
  5431  000EFC  0BF0               	andlw	-16
  5432  000EFE  0908               	iorlw	8
  5433  000F00  6E6C               	movwf	108,c	;volatile
  5434  000F02                     
  5435                           ;lcd.c: 20:     SSP2ADD = 19;
  5436  000F02  0E13               	movlw	19
  5437  000F04  6E6E               	movwf	110,c	;volatile
  5438  000F06                     
  5439                           ;lcd.c: 21:     SSP2CON1bits.SSPEN = 1;
  5440  000F06  8A6C               	bsf	108,5,c	;volatile
  5441                           
  5442                           ;lcd.c: 23:     _delay((unsigned long)((5)*(32E6/4000.0)));
  5443  000F08  0E34               	movlw	52
  5444  000F0A  6E03               	movwf	??_LCD_Init^0,c
  5445  000F0C  0EF2               	movlw	242
  5446  000F0E                     u2737:
  5447  000F0E  2EE8               	decfsz	wreg,f,c
  5448  000F10  D7FE               	bra	u2737
  5449  000F12  2E03               	decfsz	??_LCD_Init^0,f,c
  5450  000F14  D7FC               	bra	u2737
  5451  000F16                     
  5452                           ;lcd.c: 25:     SSP2CON2bits.SEN = 1;
  5453  000F16  806B               	bsf	107,0,c	;volatile
  5454  000F18                     l182:
  5455  000F18  B06B               	btfsc	107,0,c	;volatile
  5456  000F1A  EF91  F007         	goto	u2121
  5457  000F1E  EF93  F007         	goto	u2120
  5458  000F22                     u2121:
  5459  000F22  EF8C  F007         	goto	l182
  5460  000F26                     u2120:
  5461  000F26                     
  5462                           ;lcd.c: 27:     SSP2IF = 0;
  5463  000F26  9EA4               	bcf	4004,7,c	;volatile
  5464  000F28                     
  5465                           ;lcd.c: 32:     LCD_Send(0x7C);
  5466  000F28  0E7C               	movlw	124
  5467  000F2A  EC30  F00C         	call	_LCD_Send
  5468                           
  5469                           ;lcd.c: 33:     LCD_Send(0x80);
  5470  000F2E  0E80               	movlw	128
  5471  000F30  EC30  F00C         	call	_LCD_Send
  5472                           
  5473                           ;lcd.c: 34:     LCD_Send(0x38);
  5474  000F34  0E38               	movlw	56
  5475  000F36  EC30  F00C         	call	_LCD_Send
  5476                           
  5477                           ;lcd.c: 36:     LCD_Send(0x80);
  5478  000F3A  0E80               	movlw	128
  5479  000F3C  EC30  F00C         	call	_LCD_Send
  5480                           
  5481                           ;lcd.c: 37:     LCD_Send(0x39);
  5482  000F40  0E39               	movlw	57
  5483  000F42  EC30  F00C         	call	_LCD_Send
  5484                           
  5485                           ;lcd.c: 39:     LCD_Send(0x80);
  5486  000F46  0E80               	movlw	128
  5487  000F48  EC30  F00C         	call	_LCD_Send
  5488                           
  5489                           ;lcd.c: 40:     LCD_Send(0x17);
  5490  000F4C  0E17               	movlw	23
  5491  000F4E  EC30  F00C         	call	_LCD_Send
  5492                           
  5493                           ;lcd.c: 42:     LCD_Send(0x80);
  5494  000F52  0E80               	movlw	128
  5495  000F54  EC30  F00C         	call	_LCD_Send
  5496                           
  5497                           ;lcd.c: 43:     LCD_Send(0x7A);
  5498  000F58  0E7A               	movlw	122
  5499  000F5A  EC30  F00C         	call	_LCD_Send
  5500                           
  5501                           ;lcd.c: 44:     LCD_Send(0x80);
  5502  000F5E  0E80               	movlw	128
  5503  000F60  EC30  F00C         	call	_LCD_Send
  5504                           
  5505                           ;lcd.c: 45:     LCD_Send(0x5E);
  5506  000F64  0E5E               	movlw	94
  5507  000F66  EC30  F00C         	call	_LCD_Send
  5508                           
  5509                           ;lcd.c: 46:     LCD_Send(0x80);
  5510  000F6A  0E80               	movlw	128
  5511  000F6C  EC30  F00C         	call	_LCD_Send
  5512                           
  5513                           ;lcd.c: 47:     LCD_Send(0x6B);
  5514  000F70  0E6B               	movlw	107
  5515  000F72  EC30  F00C         	call	_LCD_Send
  5516                           
  5517                           ;lcd.c: 48:     LCD_Send(0x80);
  5518  000F76  0E80               	movlw	128
  5519  000F78  EC30  F00C         	call	_LCD_Send
  5520                           
  5521                           ;lcd.c: 49:     LCD_Send(0x0C);
  5522  000F7C  0E0C               	movlw	12
  5523  000F7E  EC30  F00C         	call	_LCD_Send
  5524                           
  5525                           ;lcd.c: 50:     LCD_Send(0x80);
  5526  000F82  0E80               	movlw	128
  5527  000F84  EC30  F00C         	call	_LCD_Send
  5528                           
  5529                           ;lcd.c: 51:     LCD_Send(0x01);
  5530  000F88  0E01               	movlw	1
  5531  000F8A  EC30  F00C         	call	_LCD_Send
  5532                           
  5533                           ;lcd.c: 52:     LCD_Send(0x80);
  5534  000F8E  0E80               	movlw	128
  5535  000F90  EC30  F00C         	call	_LCD_Send
  5536                           
  5537                           ;lcd.c: 53:     LCD_Send(0x06);
  5538  000F94  0E06               	movlw	6
  5539  000F96  EC30  F00C         	call	_LCD_Send
  5540                           
  5541                           ;lcd.c: 54:     LCD_Send(0x80);
  5542  000F9A  0E80               	movlw	128
  5543  000F9C  EC30  F00C         	call	_LCD_Send
  5544                           
  5545                           ;lcd.c: 55:     LCD_Send(0x02);
  5546  000FA0  0E02               	movlw	2
  5547  000FA2  EC30  F00C         	call	_LCD_Send
  5548  000FA6                     
  5549                           ;lcd.c: 57:     SSP2CON2bits.PEN = 1;
  5550  000FA6  846B               	bsf	107,2,c	;volatile
  5551  000FA8                     l185:
  5552  000FA8  B46B               	btfsc	107,2,c	;volatile
  5553  000FAA  EFD9  F007         	goto	u2131
  5554  000FAE  EFDB  F007         	goto	u2130
  5555  000FB2                     u2131:
  5556  000FB2  EFD4  F007         	goto	l185
  5557  000FB6                     u2130:
  5558  000FB6                     
  5559                           ;lcd.c: 60:     _delay((unsigned long)((5)*(32E6/4000.0)));
  5560  000FB6  0E34               	movlw	52
  5561  000FB8  6E03               	movwf	??_LCD_Init^0,c
  5562  000FBA  0EF2               	movlw	242
  5563  000FBC                     u2747:
  5564  000FBC  2EE8               	decfsz	wreg,f,c
  5565  000FBE  D7FE               	bra	u2747
  5566  000FC0  2E03               	decfsz	??_LCD_Init^0,f,c
  5567  000FC2  D7FC               	bra	u2747
  5568  000FC4  0012               	return		;funcret
  5569  000FC6                     __end_of_LCD_Init:
  5570                           	callstack 0
  5571                           
  5572 ;; *************** function _LCD_Send *****************
  5573 ;; Defined at:
  5574 ;;		line 93 in file "lcd.c"
  5575 ;; Parameters:    Size  Location     Type
  5576 ;;  data            1    wreg     unsigned char 
  5577 ;; Auto vars:     Size  Location     Type
  5578 ;;  data            1    1[COMRAM] unsigned char 
  5579 ;; Return value:  Size  Location     Type
  5580 ;;                  1    wreg      void 
  5581 ;; Registers used:
  5582 ;;		wreg
  5583 ;; Tracked objects:
  5584 ;;		On entry : 0/0
  5585 ;;		On exit  : 0/0
  5586 ;;		Unchanged: 0/0
  5587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5589 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5591 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5592 ;;Total ram usage:        1 bytes
  5593 ;; Hardware stack levels used: 1
  5594 ;; Hardware stack levels required when called: 2
  5595 ;; This function calls:
  5596 ;;		Nothing
  5597 ;; This function is called by:
  5598 ;;		_LCD_Init
  5599 ;;		_LCD_ShowString
  5600 ;;		_LCD_Clear
  5601 ;; This function uses a non-reentrant model
  5602 ;;
  5603                           
  5604                           	psect	text30
  5605  001860                     __ptext30:
  5606                           	callstack 0
  5607  001860                     _LCD_Send:
  5608                           	callstack 27
  5609                           
  5610                           ;incstack = 0
  5611                           ;LCD_Send@data stored from wreg
  5612  001860  6E02               	movwf	LCD_Send@data^0,c
  5613  001862                     
  5614                           ;lcd.c: 94:     SSP2BUF = data;
  5615  001862  C002  FF6F         	movff	LCD_Send@data,3951	;volatile
  5616  001866                     l205:
  5617  001866  B06D               	btfsc	109,0,c	;volatile
  5618  001868  EF38  F00C         	goto	u2001
  5619  00186C  EF3A  F00C         	goto	u2000
  5620  001870                     u2001:
  5621  001870  EF33  F00C         	goto	l205
  5622  001874                     u2000:
  5623  001874                     l208:
  5624  001874  AEA4               	btfss	4004,7,c	;volatile
  5625  001876  EF3F  F00C         	goto	u2011
  5626  00187A  EF41  F00C         	goto	u2010
  5627  00187E                     u2011:
  5628  00187E  EF3A  F00C         	goto	l208
  5629  001882                     u2010:
  5630  001882                     
  5631                           ;lcd.c: 97:     SSP2IF = 0;
  5632  001882  9EA4               	bcf	4004,7,c	;volatile
  5633  001884  0012               	return		;funcret
  5634  001886                     __end_of_LCD_Send:
  5635                           	callstack 0
  5636                           
  5637 ;; *************** function _ISR *****************
  5638 ;; Defined at:
  5639 ;;		line 84 in file "main.c"
  5640 ;; Parameters:    Size  Location     Type
  5641 ;;		None
  5642 ;; Auto vars:     Size  Location     Type
  5643 ;;  chachar         1    0[COMRAM] unsigned char 
  5644 ;; Return value:  Size  Location     Type
  5645 ;;                  1    wreg      void 
  5646 ;; Registers used:
  5647 ;;		wreg, status,2, status,0, cstack
  5648 ;; Tracked objects:
  5649 ;;		On entry : 0/0
  5650 ;;		On exit  : 0/0
  5651 ;;		Unchanged: 0/0
  5652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5656 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5657 ;;Total ram usage:        1 bytes
  5658 ;; Hardware stack levels used: 1
  5659 ;; Hardware stack levels required when called: 1
  5660 ;; This function calls:
  5661 ;;		_gpio_btn_check
  5662 ;;		_timer_timeout_counter
  5663 ;; This function is called by:
  5664 ;;		Interrupt level 2
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           	psect	intcode
  5669  000008                     __pintcode:
  5670                           	callstack 0
  5671  000008                     _ISR:
  5672                           	callstack 21
  5673                           
  5674                           ;incstack = 0
  5675  000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5676  00000A                     
  5677                           ;main.c: 85:     char chachar;;main.c: 87:     if(RC1IE && RC1IF) {
  5678  00000A  AA9D               	btfss	3997,5,c	;volatile
  5679  00000C  EF0A  F000         	goto	i2u240_41
  5680  000010  EF0C  F000         	goto	i2u240_40
  5681  000014                     i2u240_41:
  5682  000014  EF33  F000         	goto	i2l2643
  5683  000018                     i2u240_40:
  5684  000018  AA9E               	btfss	3998,5,c	;volatile
  5685  00001A  EF11  F000         	goto	i2u241_41
  5686  00001E  EF13  F000         	goto	i2u241_40
  5687  000022                     i2u241_41:
  5688  000022  EF33  F000         	goto	i2l2643
  5689  000026                     i2u241_40:
  5690  000026                     
  5691                           ;main.c: 88:         chachar = RCREG1 - 48;
  5692  000026  50AE               	movf	174,w,c	;volatile
  5693  000028  0FD0               	addlw	208
  5694  00002A  6E01               	movwf	ISR@chachar^0,c
  5695                           
  5696                           ;main.c: 89:         if(chachar == 1 || chachar == 2 || chachar == 5){
  5697  00002C  0401               	decf	ISR@chachar^0,w,c
  5698  00002E  B4D8               	btfsc	status,2,c
  5699  000030  EF1C  F000         	goto	i2u242_41
  5700  000034  EF1E  F000         	goto	i2u242_40
  5701  000038                     i2u242_41:
  5702  000038  EF30  F000         	goto	i2l2641
  5703  00003C                     i2u242_40:
  5704  00003C  0E02               	movlw	2
  5705  00003E  1801               	xorwf	ISR@chachar^0,w,c
  5706  000040  B4D8               	btfsc	status,2,c
  5707  000042  EF25  F000         	goto	i2u243_41
  5708  000046  EF27  F000         	goto	i2u243_40
  5709  00004A                     i2u243_41:
  5710  00004A  EF30  F000         	goto	i2l2641
  5711  00004E                     i2u243_40:
  5712  00004E  0E05               	movlw	5
  5713  000050  1801               	xorwf	ISR@chachar^0,w,c
  5714  000052  A4D8               	btfss	status,2,c
  5715  000054  EF2E  F000         	goto	i2u244_41
  5716  000058  EF30  F000         	goto	i2u244_40
  5717  00005C                     i2u244_41:
  5718  00005C  EF33  F000         	goto	i2l2643
  5719  000060                     i2u244_40:
  5720  000060                     i2l2641:
  5721                           
  5722                           ;main.c: 90:             credit = credit + chachar;
  5723  000060  505D               	movf	_credit^0,w,c	;volatile
  5724  000062  2401               	addwf	ISR@chachar^0,w,c
  5725  000064  6E5D               	movwf	_credit^0,c	;volatile
  5726  000066                     i2l2643:
  5727                           
  5728                           ;main.c: 94:     if(TMR1IF && TMR1IE) {
  5729  000066  A09E               	btfss	3998,0,c	;volatile
  5730  000068  EF38  F000         	goto	i2u245_41
  5731  00006C  EF3A  F000         	goto	i2u245_40
  5732  000070                     i2u245_41:
  5733  000070  EF44  F000         	goto	i2l2651
  5734  000074                     i2u245_40:
  5735  000074  A09D               	btfss	3997,0,c	;volatile
  5736  000076  EF3F  F000         	goto	i2u246_41
  5737  00007A  EF41  F000         	goto	i2u246_40
  5738  00007E                     i2u246_41:
  5739  00007E  EF44  F000         	goto	i2l2651
  5740  000082                     i2u246_40:
  5741  000082                     
  5742                           ;main.c: 95:         timer_timeout_counter();
  5743  000082  EC9B  F00C         	call	_timer_timeout_counter	;wreg free
  5744  000086                     
  5745                           ;main.c: 96:         TMR1IF = 0;
  5746  000086  909E               	bcf	3998,0,c	;volatile
  5747  000088                     i2l2651:
  5748                           
  5749                           ;main.c: 99:     if (TMR2IF && TMR2IE ){
  5750  000088  A29E               	btfss	3998,1,c	;volatile
  5751  00008A  EF49  F000         	goto	i2u247_41
  5752  00008E  EF4B  F000         	goto	i2u247_40
  5753  000092                     i2u247_41:
  5754  000092  EF55  F000         	goto	i2l65
  5755  000096                     i2u247_40:
  5756  000096  A29D               	btfss	3997,1,c	;volatile
  5757  000098  EF50  F000         	goto	i2u248_41
  5758  00009C  EF52  F000         	goto	i2u248_40
  5759  0000A0                     i2u248_41:
  5760  0000A0  EF55  F000         	goto	i2l65
  5761  0000A4                     i2u248_40:
  5762  0000A4                     
  5763                           ;main.c: 100:         gpio_btn_check();
  5764  0000A4  EC7F  F009         	call	_gpio_btn_check	;wreg free
  5765  0000A8                     
  5766                           ;main.c: 101:         TMR2IF = 0;
  5767  0000A8  929E               	bcf	3998,1,c	;volatile
  5768  0000AA                     i2l65:
  5769  0000AA  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5770  0000AC  0011               	retfie		f
  5771  0000AE                     __end_of_ISR:
  5772                           	callstack 0
  5773                           
  5774 ;; *************** function _timer_timeout_counter *****************
  5775 ;; Defined at:
  5776 ;;		line 26 in file "timer.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;		None
  5779 ;; Auto vars:     Size  Location     Type
  5780 ;;		None
  5781 ;; Return value:  Size  Location     Type
  5782 ;;                  1    wreg      void 
  5783 ;; Registers used:
  5784 ;;		wreg, status,2, status,0
  5785 ;; Tracked objects:
  5786 ;;		On entry : 0/0
  5787 ;;		On exit  : 0/0
  5788 ;;		Unchanged: 0/0
  5789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5794 ;;Total ram usage:        0 bytes
  5795 ;; Hardware stack levels used: 1
  5796 ;; This function calls:
  5797 ;;		Nothing
  5798 ;; This function is called by:
  5799 ;;		_ISR
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803                           	psect	text32
  5804  001936                     __ptext32:
  5805                           	callstack 0
  5806  001936                     _timer_timeout_counter:
  5807                           	callstack 21
  5808  001936                     
  5809                           ;timer.c: 27:     counter += 1;
  5810  001936  0100               	movlb	0	; () banked
  5811  001938  4B70               	infsnz	_counter& (0+255),f,b	;volatile
  5812  00193A  2B71               	incf	(_counter+1)& (0+255),f,b	;volatile
  5813  00193C                     
  5814                           ; BSR set to: 0
  5815                           ;timer.c: 28:     TMR1 = 0xFFFF - 1000;
  5816  00193C  0EFC               	movlw	252
  5817  00193E  6ECF               	movwf	207,c	;volatile
  5818  001940  0E17               	movlw	23
  5819  001942  6ECE               	movwf	206,c	;volatile
  5820  001944                     
  5821                           ; BSR set to: 0
  5822  001944  0012               	return		;funcret
  5823  001946                     __end_of_timer_timeout_counter:
  5824                           	callstack 0
  5825                           
  5826 ;; *************** function _gpio_btn_check *****************
  5827 ;; Defined at:
  5828 ;;		line 38 in file "gpio.c"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;		None
  5831 ;; Auto vars:     Size  Location     Type
  5832 ;;		None
  5833 ;; Return value:  Size  Location     Type
  5834 ;;                  1    wreg      void 
  5835 ;; Registers used:
  5836 ;;		wreg, status,2, status,0
  5837 ;; Tracked objects:
  5838 ;;		On entry : 0/0
  5839 ;;		On exit  : 0/0
  5840 ;;		Unchanged: 0/0
  5841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5846 ;;Total ram usage:        0 bytes
  5847 ;; Hardware stack levels used: 1
  5848 ;; This function calls:
  5849 ;;		Nothing
  5850 ;; This function is called by:
  5851 ;;		_ISR
  5852 ;; This function uses a non-reentrant model
  5853 ;;
  5854                           
  5855                           	psect	text33
  5856  0012FE                     __ptext33:
  5857                           	callstack 0
  5858  0012FE                     _gpio_btn_check:
  5859                           	callstack 21
  5860  0012FE                     
  5861                           ;gpio.c: 39:     buttons.btn1_acc<<=1;
  5862  0012FE  0100               	movlb	0	; () banked
  5863  001300  90D8               	bcf	status,0,c
  5864  001302  3760               	rlcf	_buttons& (0+255),f,b
  5865                           
  5866                           ;volatile
  5867                           ;gpio.c: 40:     buttons.btn1_acc |= PORTCbits.RC0;
  5868  001304  B082               	btfsc	130,0,c	;volatile
  5869  001306  EF87  F009         	goto	i2u204_41
  5870  00130A  EF8A  F009         	goto	i2u204_40
  5871  00130E                     i2u204_41:
  5872  00130E  0E01               	movlw	1
  5873  001310  EF8B  F009         	goto	i2u204_46
  5874  001314                     i2u204_40:
  5875  001314  0E00               	movlw	0
  5876  001316                     i2u204_46:
  5877  001316  1360               	iorwf	_buttons& (0+255),f,b	;volatile
  5878                           
  5879                           ;gpio.c: 42:     buttons.btn2_acc<<=1;
  5880  001318  90D8               	bcf	status,0,c
  5881  00131A  3762               	rlcf	(_buttons+2)& (0+255),f,b
  5882                           
  5883                           ;volatile
  5884                           ;gpio.c: 43:     buttons.btn2_acc |= PORTAbits.RA4;
  5885  00131C  B880               	btfsc	128,4,c	;volatile
  5886  00131E  EF93  F009         	goto	i2u205_41
  5887  001322  EF96  F009         	goto	i2u205_40
  5888  001326                     i2u205_41:
  5889  001326  0E01               	movlw	1
  5890  001328  EF97  F009         	goto	i2u205_46
  5891  00132C                     i2u205_40:
  5892  00132C  0E00               	movlw	0
  5893  00132E                     i2u205_46:
  5894  00132E  1362               	iorwf	(_buttons+2)& (0+255),f,b	;volatile
  5895                           
  5896                           ;gpio.c: 45:     buttons.btn3_acc<<=1;
  5897  001330  90D8               	bcf	status,0,c
  5898  001332  3764               	rlcf	(_buttons+4)& (0+255),f,b
  5899                           
  5900                           ;volatile
  5901                           ;gpio.c: 46:     buttons.btn3_acc |= PORTAbits.RA3;
  5902  001334  B680               	btfsc	128,3,c	;volatile
  5903  001336  EF9F  F009         	goto	i2u206_41
  5904  00133A  EFA2  F009         	goto	i2u206_40
  5905  00133E                     i2u206_41:
  5906  00133E  0E01               	movlw	1
  5907  001340  EFA3  F009         	goto	i2u206_46
  5908  001344                     i2u206_40:
  5909  001344  0E00               	movlw	0
  5910  001346                     i2u206_46:
  5911  001346  1364               	iorwf	(_buttons+4)& (0+255),f,b	;volatile
  5912                           
  5913                           ;gpio.c: 48:     buttons.btn4_acc<<=1;
  5914  001348  90D8               	bcf	status,0,c
  5915  00134A  3766               	rlcf	(_buttons+6)& (0+255),f,b
  5916                           
  5917                           ;volatile
  5918                           ;gpio.c: 49:     buttons.btn4_acc |= PORTAbits.RA2;
  5919  00134C  B480               	btfsc	128,2,c	;volatile
  5920  00134E  EFAB  F009         	goto	i2u207_41
  5921  001352  EFAE  F009         	goto	i2u207_40
  5922  001356                     i2u207_41:
  5923  001356  0E01               	movlw	1
  5924  001358  EFAF  F009         	goto	i2u207_46
  5925  00135C                     i2u207_40:
  5926  00135C  0E00               	movlw	0
  5927  00135E                     i2u207_46:
  5928  00135E  1366               	iorwf	(_buttons+6)& (0+255),f,b	;volatile
  5929                           
  5930                           ;gpio.c: 51:     if(buttons.btn1_acc == 0b01111111){
  5931  001360  0E7F               	movlw	127
  5932  001362  1960               	xorwf	_buttons& (0+255),w,b	;volatile
  5933  001364  A4D8               	btfss	status,2,c
  5934  001366  EFB7  F009         	goto	i2u208_41
  5935  00136A  EFB9  F009         	goto	i2u208_40
  5936  00136E                     i2u208_41:
  5937  00136E  EFBB  F009         	goto	i2l2335
  5938  001372                     i2u208_40:
  5939  001372                     
  5940                           ; BSR set to: 0
  5941                           ;gpio.c: 52:        buttons.btn1_stat = 1;
  5942  001372  0E01               	movlw	1
  5943  001374  6F61               	movwf	(_buttons+1)& (0+255),b	;volatile
  5944  001376                     i2l2335:
  5945                           
  5946                           ; BSR set to: 0
  5947                           ;gpio.c: 54:     if(buttons.btn2_acc == 0b01111111){
  5948  001376  0E7F               	movlw	127
  5949  001378  1962               	xorwf	(_buttons+2)& (0+255),w,b	;volatile
  5950  00137A  A4D8               	btfss	status,2,c
  5951  00137C  EFC2  F009         	goto	i2u209_41
  5952  001380  EFC4  F009         	goto	i2u209_40
  5953  001384                     i2u209_41:
  5954  001384  EFC6  F009         	goto	i2l2339
  5955  001388                     i2u209_40:
  5956  001388                     
  5957                           ; BSR set to: 0
  5958                           ;gpio.c: 55:        buttons.btn2_stat = 1;
  5959  001388  0E01               	movlw	1
  5960  00138A  6F63               	movwf	(_buttons+3)& (0+255),b	;volatile
  5961  00138C                     i2l2339:
  5962                           
  5963                           ; BSR set to: 0
  5964                           ;gpio.c: 57:     if(buttons.btn3_acc == 0b01111111){
  5965  00138C  0E7F               	movlw	127
  5966  00138E  1964               	xorwf	(_buttons+4)& (0+255),w,b	;volatile
  5967  001390  A4D8               	btfss	status,2,c
  5968  001392  EFCD  F009         	goto	i2u210_41
  5969  001396  EFCF  F009         	goto	i2u210_40
  5970  00139A                     i2u210_41:
  5971  00139A  EFD1  F009         	goto	i2l2343
  5972  00139E                     i2u210_40:
  5973  00139E                     
  5974                           ; BSR set to: 0
  5975                           ;gpio.c: 58:        buttons.btn3_stat = 1;
  5976  00139E  0E01               	movlw	1
  5977  0013A0  6F65               	movwf	(_buttons+5)& (0+255),b	;volatile
  5978  0013A2                     i2l2343:
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;gpio.c: 60:     if(buttons.btn4_acc == 0b01111111){
  5982  0013A2  0E7F               	movlw	127
  5983  0013A4  1966               	xorwf	(_buttons+6)& (0+255),w,b	;volatile
  5984  0013A6  A4D8               	btfss	status,2,c
  5985  0013A8  EFD8  F009         	goto	i2u211_41
  5986  0013AC  EFDA  F009         	goto	i2u211_40
  5987  0013B0                     i2u211_41:
  5988  0013B0  EFDC  F009         	goto	i2l137
  5989  0013B4                     i2u211_40:
  5990  0013B4                     
  5991                           ; BSR set to: 0
  5992                           ;gpio.c: 61:        buttons.btn4_stat = 1;
  5993  0013B4  0E01               	movlw	1
  5994  0013B6  6F67               	movwf	(_buttons+7)& (0+255),b	;volatile
  5995  0013B8                     i2l137:
  5996                           
  5997                           ; BSR set to: 0
  5998  0013B8  0012               	return		;funcret
  5999  0013BA                     __end_of_gpio_btn_check:
  6000                           	callstack 0
  6001                           
  6002                           	psect	rparam
  6003  0000                     
  6004                           	psect	temp
  6005  00005E                     btemp:
  6006                           	callstack 0
  6007  00005E                     	ds	1
  6008  0000                     int$flags	set	btemp
  6009  0000                     wtemp8	set	btemp+1
  6010  0000                     ttemp5	set	btemp+1
  6011  0000                     ttemp6	set	btemp+4
  6012  0000                     ttemp7	set	btemp+8
  6013                           
  6014                           	psect	idloc
  6015                           
  6016                           ;Config register IDLOC0 @ 0x200000
  6017                           ;	unspecified, using default values
  6018  200000                     	org	2097152
  6019  200000  FF                 	db	255
  6020                           
  6021                           ;Config register IDLOC1 @ 0x200001
  6022                           ;	unspecified, using default values
  6023  200001                     	org	2097153
  6024  200001  FF                 	db	255
  6025                           
  6026                           ;Config register IDLOC2 @ 0x200002
  6027                           ;	unspecified, using default values
  6028  200002                     	org	2097154
  6029  200002  FF                 	db	255
  6030                           
  6031                           ;Config register IDLOC3 @ 0x200003
  6032                           ;	unspecified, using default values
  6033  200003                     	org	2097155
  6034  200003  FF                 	db	255
  6035                           
  6036                           ;Config register IDLOC4 @ 0x200004
  6037                           ;	unspecified, using default values
  6038  200004                     	org	2097156
  6039  200004  FF                 	db	255
  6040                           
  6041                           ;Config register IDLOC5 @ 0x200005
  6042                           ;	unspecified, using default values
  6043  200005                     	org	2097157
  6044  200005  FF                 	db	255
  6045                           
  6046                           ;Config register IDLOC6 @ 0x200006
  6047                           ;	unspecified, using default values
  6048  200006                     	org	2097158
  6049  200006  FF                 	db	255
  6050                           
  6051                           ;Config register IDLOC7 @ 0x200007
  6052                           ;	unspecified, using default values
  6053  200007                     	org	2097159
  6054  200007  FF                 	db	255
  6055                           
  6056                           	psect	config
  6057                           
  6058                           ; Padding undefined space
  6059  300000                     	org	3145728
  6060  300000  FF                 	db	255
  6061                           
  6062                           ;Config register CONFIG1H @ 0x300001
  6063                           ;	Oscillator Selection bits
  6064                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
  6065                           ;	4X PLL Enable
  6066                           ;	PLLCFG = ON, Oscillator multiplied by 4
  6067                           ;	Primary clock enable bit
  6068                           ;	PRICLKEN = ON, Primary clock is always enabled
  6069                           ;	Fail-Safe Clock Monitor Enable bit
  6070                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6071                           ;	Internal/External Oscillator Switchover bit
  6072                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6073  300001                     	org	3145729
  6074  300001  33                 	db	51
  6075                           
  6076                           ;Config register CONFIG2L @ 0x300002
  6077                           ;	Power-up Timer Enable bit
  6078                           ;	PWRTEN = OFF, Power up timer disabled
  6079                           ;	Brown-out Reset Enable bits
  6080                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6081                           ;	Brown Out Reset Voltage bits
  6082                           ;	BORV = 190, VBOR set to 1.90 V nominal
  6083  300002                     	org	3145730
  6084  300002  1F                 	db	31
  6085                           
  6086                           ;Config register CONFIG2H @ 0x300003
  6087                           ;	Watchdog Timer Enable bits
  6088                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  6089                           ;	Watchdog Timer Postscale Select bits
  6090                           ;	WDTPS = 32768, 1:32768
  6091  300003                     	org	3145731
  6092  300003  3C                 	db	60
  6093                           
  6094                           ; Padding undefined space
  6095  300004                     	org	3145732
  6096  300004  FF                 	db	255
  6097                           
  6098                           ;Config register CONFIG3H @ 0x300005
  6099                           ;	CCP2 MUX bit
  6100                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  6101                           ;	PORTB A/D Enable bit
  6102                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  6103                           ;	P3A/CCP3 Mux bit
  6104                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  6105                           ;	HFINTOSC Fast Start-up
  6106                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  6107                           ;	Timer3 Clock input mux bit
  6108                           ;	T3CMX = PORTC0, T3CKI is on RC0
  6109                           ;	ECCP2 B output mux bit
  6110                           ;	P2BMX = PORTD2, P2B is on RD2
  6111                           ;	MCLR Pin Enable bit
  6112                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  6113  300005                     	org	3145733
  6114  300005  BF                 	db	191
  6115                           
  6116                           ;Config register CONFIG4L @ 0x300006
  6117                           ;	Stack Full/Underflow Reset Enable bit
  6118                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6119                           ;	Single-Supply ICSP Enable bit
  6120                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  6121                           ;	Extended Instruction Set Enable bit
  6122                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6123                           ;	Background Debug
  6124                           ;	DEBUG = 0x1, unprogrammed default
  6125  300006                     	org	3145734
  6126  300006  85                 	db	133
  6127                           
  6128                           ; Padding undefined space
  6129  300007                     	org	3145735
  6130  300007  FF                 	db	255
  6131                           
  6132                           ;Config register CONFIG5L @ 0x300008
  6133                           ;	Code Protection Block 0
  6134                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  6135                           ;	Code Protection Block 1
  6136                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  6137                           ;	Code Protection Block 2
  6138                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  6139                           ;	Code Protection Block 3
  6140                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  6141  300008                     	org	3145736
  6142  300008  0F                 	db	15
  6143                           
  6144                           ;Config register CONFIG5H @ 0x300009
  6145                           ;	Boot Block Code Protection bit
  6146                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6147                           ;	Data EEPROM Code Protection bit
  6148                           ;	CPD = OFF, Data EEPROM not code-protected
  6149  300009                     	org	3145737
  6150  300009  C0                 	db	192
  6151                           
  6152                           ;Config register CONFIG6L @ 0x30000A
  6153                           ;	Write Protection Block 0
  6154                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  6155                           ;	Write Protection Block 1
  6156                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  6157                           ;	Write Protection Block 2
  6158                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  6159                           ;	Write Protection Block 3
  6160                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  6161  30000A                     	org	3145738
  6162  30000A  0F                 	db	15
  6163                           
  6164                           ;Config register CONFIG6H @ 0x30000B
  6165                           ;	Configuration Register Write Protection bit
  6166                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6167                           ;	Boot Block Write Protection bit
  6168                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6169                           ;	Data EEPROM Write Protection bit
  6170                           ;	WRTD = OFF, Data EEPROM not write-protected
  6171  30000B                     	org	3145739
  6172  30000B  E0                 	db	224
  6173                           
  6174                           ;Config register CONFIG7L @ 0x30000C
  6175                           ;	Table Read Protection Block 0
  6176                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  6177                           ;	Table Read Protection Block 1
  6178                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6179                           ;	Table Read Protection Block 2
  6180                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  6181                           ;	Table Read Protection Block 3
  6182                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  6183  30000C                     	org	3145740
  6184  30000C  0F                 	db	15
  6185                           
  6186                           ;Config register CONFIG7H @ 0x30000D
  6187                           ;	Boot Block Table Read Protection bit
  6188                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6189  30000D                     	org	3145741
  6190  30000D  40                 	db	64
  6191                           tosu	equ	0xFFF
  6192                           tosh	equ	0xFFE
  6193                           tosl	equ	0xFFD
  6194                           stkptr	equ	0xFFC
  6195                           pclatu	equ	0xFFB
  6196                           pclath	equ	0xFFA
  6197                           pcl	equ	0xFF9
  6198                           tblptru	equ	0xFF8
  6199                           tblptrh	equ	0xFF7
  6200                           tblptrl	equ	0xFF6
  6201                           tablat	equ	0xFF5
  6202                           prodh	equ	0xFF4
  6203                           prodl	equ	0xFF3
  6204                           indf0	equ	0xFEF
  6205                           postinc0	equ	0xFEE
  6206                           postdec0	equ	0xFED
  6207                           preinc0	equ	0xFEC
  6208                           plusw0	equ	0xFEB
  6209                           fsr0h	equ	0xFEA
  6210                           fsr0l	equ	0xFE9
  6211                           wreg	equ	0xFE8
  6212                           indf1	equ	0xFE7
  6213                           postinc1	equ	0xFE6
  6214                           postdec1	equ	0xFE5
  6215                           preinc1	equ	0xFE4
  6216                           plusw1	equ	0xFE3
  6217                           fsr1h	equ	0xFE2
  6218                           fsr1l	equ	0xFE1
  6219                           bsr	equ	0xFE0
  6220                           indf2	equ	0xFDF
  6221                           postinc2	equ	0xFDE
  6222                           postdec2	equ	0xFDD
  6223                           preinc2	equ	0xFDC
  6224                           plusw2	equ	0xFDB
  6225                           fsr2h	equ	0xFDA
  6226                           fsr2l	equ	0xFD9
  6227                           status	equ	0xFD8

Data Sizes:
    Strings     380
    Constant    0
    Data        0
    BSS         55
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     92      93
    BANK0           160     50     104
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 77
		 -> STR_13(CODE[31]), STR_12(CODE[35]), STR_8(CODE[46]), STR_4(CODE[19]), 
		 -> STR_3(CODE[77]), STR_2(CODE[34]), STR_1(CODE[72]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main@text(BANK0[17]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 77
		 -> STR_13(CODE[31]), STR_12(CODE[35]), STR_11(CODE[12]), STR_10(CODE[17]), 
		 -> STR_9(CODE[20]), STR_8(CODE[46]), STR_7(CODE[20]), STR_5(CODE[17]), 
		 -> STR_4(CODE[19]), STR_3(CODE[77]), STR_2(CODE[34]), STR_1(CODE[72]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 77
		 -> STR_13(CODE[31]), STR_12(CODE[35]), STR_11(CODE[12]), STR_10(CODE[17]), 
		 -> STR_9(CODE[20]), STR_8(CODE[46]), STR_7(CODE[20]), STR_5(CODE[17]), 
		 -> STR_4(CODE[19]), STR_3(CODE[77]), STR_2(CODE[34]), STR_1(CODE[72]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_11(CODE[12]), STR_10(CODE[17]), STR_9(CODE[20]), STR_7(CODE[20]), 
		 -> STR_5(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> main@text(BANK0[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    S2008_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main@text(BANK0[17]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main@text(BANK0[17]), 

    change_state@state	PTR struct . size(2) Largest target is 5
		 -> main@state(BANK0[5]), 

    check_win@symbols	PTR unsigned char  size(2) Largest target is 3
		 -> main@symbols(BANK0[3]), 

    LCD_ShowString@textData	PTR unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[16]), main@text(BANK0[17]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _sprintf->_vfprintf
    _show_credit->_gpio_drive_led
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _generate_symbol->_rand
    _rand->___lmul
    _LCD_ShowString->_LCD_Send
    _LCD_Init->_LCD_Send

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    32      0   25157
                                             18 BANK0     32    32      0
                           _LCD_Init
                     _LCD_ShowString
                       _change_state
                          _check_win
                    _generate_symbol
                     _gpio_btn_state
                          _gpio_init
                             _printf
                        _show_credit
                            _sprintf
                         _timer_init
              _timer_timeout_compare
                _timer_timeout_reset
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_timeout_reset                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_timeout_compare                                2     0      2     174
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _timer_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10   10509
                                              0 BANK0     18     8     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _show_credit                                          4     4      0     245
                                              3 COMRAM     4     4      0
                     _gpio_drive_led
 ---------------------------------------------------------------------------------
 (2) _gpio_drive_led                                       2     2      0     132
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   10136
                                             90 COMRAM     2     2      0
                                              0 BANK0      4     0      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    9548
                                             82 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    8963
                                             65 COMRAM    17    11      6
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5314
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3665
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1713
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             19 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              1 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              1 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    1667
                                             11 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1312
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _gpio_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gpio_btn_state                                       3     3      0      22
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _generate_symbol                                      4     4      0     393
                                             19 COMRAM     4     4      0
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 6     4      2     370
                                             13 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _check_win                                            3     1      2     416
                                              1 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _change_state                                         3     0      3    1282
                                              1 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _LCD_ShowString                                       6     4      2     537
                                              2 COMRAM     6     4      2
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      22
                                              2 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (2) _LCD_Send                                             1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  1     1      0      89
                                              0 COMRAM     1     1      0
                     _gpio_btn_check
              _timer_timeout_counter
 ---------------------------------------------------------------------------------
 (10) _timer_timeout_counter                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _gpio_btn_check                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Send
   _LCD_ShowString
     _LCD_Send
   _change_state
   _check_win
   _generate_symbol
     _rand
       ___lmul
   _gpio_btn_state
   _gpio_init
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
             _fputs
               _fputc
             _strlen
         _fputc
   _show_credit
     _gpio_drive_led
   _sprintf
     _vfprintf
   _timer_init
   _timer_timeout_compare
   _timer_timeout_reset
   _uart_init

 _ISR (ROOT)
   _gpio_btn_check
   _timer_timeout_counter

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     32      68       5       65.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5C      5D       1       98.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C5      12        0.0%
DATA                 0      0      C5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Mar 22 07:43:16 2021

                            l88 0340                             l210 1882                             l202 151C  
                           l130 116C                             l211 1884                             l205 1866  
                           l143 146A                             l127 1838                             l208 1874  
                           l304 0BEC                             l250 1934                             l316 1756  
                           l244 18C6                             l333 15E4                             l182 0F18  
                           l334 15F4                             l191 1470                             l319 1902  
                           l247 1922                             l184 0F26                             l185 0FA8  
                           l193 147E                             l195 14BE                             l283 1950  
                           l188 0FC4                             l436 0D74                             l277 18A8  
                           l198 150C                             l286 18E4                             l199 150E  
                           l295 165A                             l449 0ED8                             _GIE 007F97  
                           _PR2 000FBB                             _ISR 0008                             _abs 179C  
                           _pad 1238                             wreg 000FE8            __end_of_change_state 1904  
                    _TXSTA1bits 000FAC                            ?_ISR 0001                            l1000 170E  
                          l1030 12C0                            l1032 12FC                            l1131 158A  
                          l1043 102C                            l1027 127E                            l1123 185E  
                          ?_abs 0014                            l1108 1236                            l1116 179A  
                          l2021 116E                            l2101 0D88                            l1046 106E  
                          l1054 05F4                            l2031 11F0                            l2023 1180  
                          l2111 0DF8                            l2103 0DA8                            l1048 109C  
                          l1056 05FC                            l2017 1922                            l2025 1192  
                          l2121 0E70                            l2113 0E00                            l2105 0DAC  
                          l2041 177A                            l1137 1810                            l2201 0604  
                          l1074 0834                            l2019 1930                            l2027 119C  
                          l2123 0E82                            l2115 0E14                            l2107 0DBA  
                          l2035 1758                            l2043 17DC                            l2211 063A  
                          l2203 0616                            l2029 11BA                            l2061 0C24  
                          l2053 0BEE                            l2117 0E22                            l2125 0E88  
                          l2109 0DDA                            l1093 17D2                            l2037 1764  
                          l2045 17E8                            l2141 1276                            l2133 1238  
                          l2213 0640                            l2221 0732                            l2205 0624  
                          l2301 0A24                            l2311 1862                            l2071 0C80  
                          l2063 0C32                            l2055 0BF2                            l2127 0E98  
                          l2119 0E50                            l2039 1776                            l2047 17EC  
                          l2151 12E4                            l2143 128A                            l2135 1248  
                          l2223 074C                            l2231 07AE                            l2215 06C2  
                          l2207 062A                            l2303 0A48                            l1079 0A5A  
                          l1096 17DA                            l1088 16B4                            l2401 0F02  
                          l2313 151E                            l2161 0FDA                            l2081 0CEA  
                          l2073 0C88                            l2065 0C52                            l2057 0C00  
                          l2129 0EB8                            l2049 1804                            l2145 129E  
                          l2137 125C                            l2241 07F4                            l2233 07C0  
                          l2225 076A                            l2217 06C8                            l2209 0632  
                          l1089 16BC                            l2321 1664                            l2411 0FB6  
                          l2403 0F06                            l2251 159C                            l2315 155C  
                          l2163 0FE6                            l2091 0D34                            l2083 0D0A  
                          l2075 0C9C                            l2067 0C56                            l2059 0C20  
                          l2155 179C                            l2147 12A2                            l2139 126A  
                          l2243 07FC                            l2235 07D0                            l2227 0784  
                          l2219 06CE                            l2323 1672                            l2405 0F16  
                          l2253 15AA                            l2501 1416                            l2181 107E  
                          l2173 1024                            l2165 0FF2                            l2093 0D54  
                          l2085 0D0C                            l2077 0CAA                            l2069 0C62  
                          l2157 17B6                            l2149 12D0                            l2237 07D6  
                          l2245 080C                            l2229 079E                            l2261 085A  
                          l2325 1698                            l2413 183A                            l2309 10A0  
                          l2421 16D0                            l2407 0F28                            l2431 146E  
                          l2255 15BA                            l2503 1428                            l2351 182C  
                          l2183 1090                            l2175 1038                            l2167 1000  
                          l2159 0FC6                            l2087 0D1E                            l2079 0CBC  
                          l2239 07E8                            l2191 059C                            l2271 08D4  
                          l2263 0868                            l2319 165C                            l2415 1842  
                          l2423 16D8                            l2409 0FA6                            l2441 14A6  
                          l2433 146E                            l2601 0B9C                            l2257 15C4  
                          l2249 158C                            l2521 1430                            l2361 1836  
                          l2353 182E                            l2177 104C                            l2169 1012  
                          l2089 0D24                            l2097 0D76                            l2193 05BC  
                          l2281 0980                            l2265 087A                            l2425 16E0  
                          l2451 14C8                            l2443 14B8                            l2435 1480  
                          l2531 18F2                            l2603 0BBA                            l2611 0BE4  
                          l2355 1830                            l2347 1812                            l2179 1050  
                          l2099 0D7A                            l2195 05CC                            l2187 0554  
                          l2291 09FE                            l2275 08F0                            l2267 087E  
                          l2259 0836                            l2427 16FC                            l2419 16BE  
                          l2371 18C0                            l2363 18AA                            l2453 14FA  
                          l2445 14C4                            l2437 148C                            l2605 0BD8  
                          l2533 15F6                            l2461 13D2                            l2357 1832  
                          l2349 1826                            l2197 05CE                            l2189 0574  
                          l2285 09B8                            l2277 0914                            l2269 08A2  
                          l2621 1712                            l2381 1890                            l2373 18C2  
                          l2365 18B4                            l2701 01AA                            l2455 14FC  
                          l2439 149C                            l2543 1612                            l2535 1606  
                          l2463 13D6                            l2359 1834                            l2199 05E8  
                          l2287 09DC                            l2295 0A0A                            l2279 0938  
                          l2623 1714                            l2391 18A6                            l2383 1892  
                          l2615 1946                            l2375 18C4                            l2367 18BC  
                          l2711 01D0                            l2703 01BC                            l2393 0EDA  
                          l2529 18E6                            l2473 13E2                            l2457 13BC  
                          l2297 0A18                            l2289 09EA                            l2625 1724  
                          l2385 18A0                            l2377 1886                            l2617 18C8  
                          l2369 18BE                            l2801 049C                            l2721 0238  
                          l2713 01E2                            l2705 01C8                            l2395 0EE8  
                          l2563 0A5C                            l2547 1618                            l2539 160C  
                          l2475 13F4                            l2459 13C0                            l2627 1732  
                          l2387 18A2                            l2379 188E                            l2811 04DC  
                          l2803 04AC                            l2731 0292                            l2723 024C  
                          l2715 01E8                            l2397 0EF8                            l2581 0B14  
                          l2565 0A76                            l2557 161E                            l2469 13DC  
                          l2629 1750                            l2389 18A4                            l2901 0518  
                          l2813 04EC                            l2805 04B0                            l2741 02D6  
                          l2725 0260                            l2717 0204                            l2661 00BE  
                          l2399 0EFA                            l2591 0B58                            l2567 0A94  
                          l2575 0ABE                            l2903 1444                            l2487 13FC  
                          l2807 04BC                            l2743 02EC                            l2735 02A8  
                          l2727 0274                            l2719 022A                            l2671 00E6  
                          l2663 00D8                            l2593 0B76                            l2577 0AD8  
                          l2569 0AB2                            l2905 1634                            l2489 140E  
                          l2809 04C0                            l2761 0352                            l2753 031E  
                          l2745 02F4                            l2737 02AC                            l2729 0284  
                          l2681 011A                            l2817 0502                            l2673 00EA  
                          l2665 00DC                            l2579 0AF6                            l2587 0B20  
                          l2771 03C2                            l2763 0378                            l2755 0334  
                          l2747 02FC                            l2739 02C2                            l2819 0546  
                          l2691 0164                            l2683 012A                            l2675 00EE  
                          l2667 00DE                            l2659 00B2                            l2589 0B3A  
                          l2781 03FC                            l2765 0386                            l2773 03D2  
                          l2749 0312                            l2685 012E                            l2693 0172  
                          l2677 00FA                            l2669 00E0                            ?_pad 0013  
                          l2599 0B82                            l2791 0456                            l2783 0400  
                          l2767 039A                            l2759 0340                            l2695 0188  
                          l2687 0140                            l2679 0108                            l2785 0414  
                          l2793 045A                            l2777 03E8                            l2769 03AE  
                          l2697 0198                            l2689 0156                            l2795 0476  
                          l2787 0432                            l2779 03F8                            l2699 019A  
                          l2797 0486                            l2789 0440                            STR_1 FED0  
                          STR_2 FF69                            STR_3 FE83                            STR_4 FFBE  
                          STR_5 FFE2                            STR_6 FFD2                            STR_7 FFAA  
                          STR_8 FF18                            STR_9 FFAA                            u2000 1874  
                          u2001 1870                            u2010 1882                            u2011 187E  
                          u2020 157C                            u2030 16B4                            u2031 16B0  
                          u2120 0F26                            u2200 13D2                            u1400 11F0  
                          u2121 0F22                            u2025 1572                            u2201 13CE  
                          u1401 11EC                            u2130 0FB6                            u2210 13F4  
                          u1410 179A                            u2131 0FB2                            u2211 13F0  
                          u1411 1796                            u2140 147E                            u2300 0B3A  
                          u2220 140E                            u1500 0D88                            u1420 1804  
                          u2141 147A                            u2301 0B36                            u2221 140A  
                          u1501 0D84                            u1421 1800                            u2150 149C  
                          u2310 0B58                            u2230 1428                            u1430 0C00  
                          u1510 0DBA                            u2151 1498                            u2311 0B54  
                          u2231 1424                            u1431 0BFC                            u1511 0DB6  
                          u2160 14B8                            u2320 0B76                            u2240 0A76  
                          u1360 1930                            u1440 0C32                            u1520 0DF8  
                          u1600 17B6                            u2161 14B4                            u2321 0B72  
                          u2241 0A72                            u1361 192C                            u1441 0C2E  
                          u1521 0DF4                            u1601 17B2                            u2170 14F6  
                          u2330 0B9C                            u2250 0A94                            u1370 1180  
                          u1610 0FDA                            u1530 0E22                            u2331 0B98  
                          u2251 0A90                            u1371 117C                            u1611 0FD6  
                          u1451 0C5C                            u1531 0E1E                            u2180 150C  
                          u2340 0BBA                            u2260 0AB2                            u1380 1192  
                          u1620 1000                            u1460 0C80                            u1540 0E50  
                          u1700 05E8                            u2500 0188                            u2181 1508  
                          u2341 0BB6                            u2261 0AAE                            u1381 118E  
                          u1621 0FFC                            u1461 0C7C                            u1541 0E4C  
                          u1701 05E4                            u2501 0184                            u2190 151C  
                          u2350 0BD8                            u2270 0AD8                            u1390 11BA  
                          u1630 1020                            u1470 0CAA                            u1550 0E98  
                          u1710 0616                            u2510 0198                            u2191 1518  
                          u2351 0BD4                            u2271 0AD4                            u1391 11B6  
                          u1631 101C                            u1471 0CA6                            u1551 0E94  
                          u1711 0612                            u2511 0194                            u2280 0AF6  
                          u1640 106E                            u1480 0CEA                            u1560 1248  
                          u1800 07E8                            u1720 0624                            u2360 18E2  
                          u2600 0352                            u2520 01BC                            u2177 14EC  
                          u2281 0AF2                            u1641 106A                            u1481 0CE6  
                          u1561 1244                            u1801 07E4                            u1721 0620  
                          u2361 18DC                            u2601 034E                            u2521 01B8  
                          u2290 0B14                            u1810 15AA                            u1650 107E  
                          u1490 0D34                            u1570 126A                            u1730 074C  
                          u2370 18E4                            u2610 03AE                            u2530 0204  
                          u2291 0B10                            u1811 15A6                            u1651 107A  
                          u1491 0D30                            u1571 1266                            u1731 0748  
                          u2611 03AA                            u2531 0200                            u1820 15E4  
                          u1580 12C0                            u1740 076A                            u1660 0584  
                          u1900 10D6                            u2380 1724                            u2620 03E4  
                          u2540 0260                            u1821 15E0                            u1581 12BC  
                          u1741 0766                            u1661 057E                            u1901 10CE  
                          u2381 1720                            u2621 03E0                            u2541 025C  
                          u1590 12D0                            u1750 0784                            u1670 0586  
                          u1830 085A                            u2630 03F8                            u2550 02A4  
                          u1591 12CC                            u1751 0780                            u1831 0856  
                          u2631 03F4                            u2551 02A0                            u1760 079E  
                          u1680 059C                            u1840 08A2                            u1920 10F8  
                          u2640 0476                            u2560 02C2                            u1761 079A  
                          u1681 0598                            u1841 089E                            u1921 10F0  
                          u2641 0472                            u2561 02BE                            u1770 07AE  
                          u1690 05CC                            u1850 0914                            u2394 1744  
                          u2650 0498                            u2570 02EC                            u2490 012A  
                          u1771 07AA                            u1691 05C8                            u1851 0910  
                          u2395 1740                            u2651 0494                            u2571 02E8  
                          u2491 0126                            u1780 07C0                            u1860 0938  
                          u1940 1118                            u2660 04AC                            u2580 0312  
                          u1781 07BC                            u1861 0934                            u1941 1110  
                          u2661 04A8                            u2581 030E                            u2717 00CA  
                          u1790 07D0                            u1870 09DC                            u1918 10D8  
                          u2670 04DC                            u2590 0334                            u2727 0EEE  
                          u1791 07CC                            u1871 09D8                            u2671 04D8  
                          u2591 0330                            u1960 1138                            u1880 10B2  
                          u2680 04FE                            u2737 0F0E                            u1961 1130  
                          u1881 10AA                            u2681 04FA                            u1938 10FA  
                          u2747 0FBC                            _PEIE 007F96                            u1980 115C  
                          u1981 1154                            u1958 111A                            u1978 113A  
                          u1898 10B4                            u1998 115E                            i2l65 00AA  
                          _TMR1 000FCE                            abs@a 0014               show_credit@credit 0006  
                          _dbuf 0072                            _ctoa 0FC6                            _main 00B2  
                          _dtoa 0554                            _rand 151E                            _seed 0092  
                          _prec 006C                            _nout 0068                            pad@i 001A  
                          pad@p 0017                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf1 000FE7                            indf2 000FDF                            fsr1l 000FE1  
                          pad@w 001C                            fsr2l 000FD9                            btemp 005E  
                          start 00AE                     main@symbols 00BE                    ___param_bank 000000  
                         ??_ISR 0001                  _LCD_ShowString 146C                           ??_abs 0016  
                         ??_pad 0019                __end_of_LCD_Init 0FC6                __end_of_LCD_Send 1886  
               __end_of___aodiv 0D76                           ?_ctoa 000C                           ?_main 0001  
                         ?_dtoa 001E                 __end_of___aomod 0EDA                           ?_rand 000E  
                         STR_10 FFD1                           STR_11 FFF3                           STR_12 FF46  
                         STR_13 FF8B                           _RC1IE 007CED                           _RC1IF 007CF5  
                         i2l137 13B8                           i2l280 1944                    vfpfcnvrt@fmt 0044  
                         _TX1IF 007CF4             ___lmul@multiplicand 0006                           _flags 006E  
                         _fputc 116E                           _fputs 1758                           pad@fp 0013  
                         _width 006A                           ctoa@c 000E                           _putch 1920  
                         ctoa@l 0010                           ctoa@w 0012                           main@i 00BC  
                         dtoa@d 0020                           dtoa@i 0040                           dtoa@n 0038  
                         dtoa@p 0032                           dtoa@s 0036                           dtoa@w 0034  
                         tablat 000FF5           generate_symbol@random 0016                           ttemp5 005F  
                         ttemp6 0062                           ttemp7 0066                           status 000FD8  
                         wtemp8 005F                 __end_of_sprintf 1710                 __initialization 1904  
        __end_of_LCD_ShowString 151E                    __end_of_ctoa 109E                    __end_of_main 0554  
                  __end_of_dtoa 0836                    __end_of_rand 158C             _timer_timeout_reset 1946  
                  LCD_Send@data 0002                          ??_ctoa 000F                          ??_main 00A8  
                        ??_dtoa 0028                          ??_rand 0010                   __activetblptr 000002  
          ?_timer_timeout_reset 0001                          ?_fputc 0003                          ?_fputs 000C  
                        _ANSELA 000F38                          ?_putch 0001                          i2l2331 12FE  
                        i2l2341 139E                          i2l2333 1372                          i2l2343 13A2  
                        i2l2335 1376                          i2l2327 1936                          i2l2345 13B4  
                        i2l2337 1388                          i2l2329 193C                          i2l2339 138C  
                        i2l2631 000A                          i2l2641 0060                          i2l2633 0018  
                        i2l2651 0088                          i2l2635 0026                          i2l2643 0066  
                        i2l2653 0096                          i2l2645 0074                          i2l2637 003C  
                        i2l2655 00A4                          i2l2647 0082                          i2l2639 004E  
                        i2l2657 00A8                          i2l2649 0086                          _RCREG1 000FAE  
       __size_of_gpio_btn_check 00BC        __size_of_generate_symbol 0066                          _SPBRG1 000FAF  
                        _TMR1IE 007CE8                          _TMR1IF 007CF0                          _TMR2IE 007CE9  
                        _TMR2IF 007CF1                          _TMR1ON 007E68                          _TMR2ON 007DD2  
                        _SSP2IF 007D27         __size_of_gpio_btn_state 00B2                          _TXREG1 000FAD  
       __size_of_gpio_drive_led 00D0                    vfprintf@cfmt 0059                 ?_LCD_ShowString 0003  
                        ___lmul 158C                       ??___aodiv 0012                       ??___aomod 0012  
__size_of_timer_timeout_compare 001E   __end_of_timer_timeout_compare 18E6  __size_of_timer_timeout_counter 0010  
                        _credit 005D   __end_of_timer_timeout_counter 1946                          clear_0 190A  
         __size_of_change_state 001E                          isa$std 000001                          _printf 183A  
                        pad@buf 0015                          ctoa@fp 000C                          dtoa@fp 001E  
                        _strlen 17DC                          fputc@c 0003                          fputs@c 0010  
                        fputs@i 0011                          fputs@s 000C                    __mediumconst FE82  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
         ??_timer_timeout_reset 0002                __end_of_vfprintf 16BE                       ??_sprintf 005B  
                  ?_show_credit 0001                      __accesstop 0060         __end_of__initialization 1912  
                     ?_LCD_Init 0001                       ?_LCD_Send 0001                   ___rparam_used 000001  
               show_credit@leds 0007                    _change_state 18E6             gpio_drive_led@input 0003  
                __pcstackCOMRAM 0001              __size_of_check_win 0192                   __end_of_fputc 1238  
                 __end_of_fputs 179C                   __end_of_putch 1936               change_state@state 0002  
                       ??_fputc 0007                         ??_fputs 0010                         ??_putch 0002  
                    __pbssBANK0 0060                      ??_LCD_Init 0003              __size_of_gpio_init 0028  
                    ??_LCD_Send 0002               ??_generate_symbol 0014                         ?___lmul 0002  
                ___lmul@product 000A                         ?_printf 0096                         ?_strlen 0002  
            __size_of_uart_init 001E              __size_of_vfpfcnvrt 0226                         _SPBRGH1 000FB0  
                       _SSP2ADD 000F6E                         _SSP2BUF 000F6F               __end_of_check_win 0BEE  
                _gpio_btn_check 12FE                 LCD_ShowString@i 0008                  _gpio_btn_state 13BA  
                _gpio_drive_led 109E                         __Hparam 0000            change_state@state_id 0004  
                       __Lparam 0000                         ___aodiv 0BEE                         ___aomod 0D76  
               __size_of___lmul 006A                       ?_vfprintf 0053                         __pcinit 1904  
                       __ramtop 1000                         __ptext0 00B2                         __ptext1 18AA  
                       __ptext2 1946                         __ptext3 18C8                         __ptext4 1886  
                       __ptext5 16BE                         __ptext6 1710                         __ptext7 109E  
                       __ptext8 183A                         __ptext9 165C                 __size_of_printf 0026  
             __end_of_gpio_init 183A                 __size_of_strlen 0036                    __size_of_ISR 00A6  
                     _T1CONbits 000FCD                         _counter 0070                       _T2CONbits 000FBA  
                  __size_of_abs 0040                    __size_of_pad 00C6                         _buttons 0060  
        __end_of_gpio_btn_check 13BA                         _sprintf 16BE                         main@win 00C1  
          end_of_initialization 1912          __end_of_gpio_btn_state 146C       timer_timeout_compare@time 0002  
        __end_of_gpio_drive_led 116E            __size_of_show_credit 0048                         fputc@fp 0005  
                 __Lmediumconst FE82                         fputs@fp 000E                ??_LCD_ShowString 0005  
             __end_of_uart_init 18C8           LCD_ShowString@lineNum 0007               __end_of_vfpfcnvrt 0A5C  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                      ??_vfprintf 0059                         strlen@a 0004  
                       strlen@s 0002                      _timer_init 1886                       _PORTAbits 000F80  
                     _PORTCbits 000F82               gpio_btn_state@btn 0004                       _TRISAbits 000F92  
                     _TRISCbits 000F94                       _TRISDbits 000F95                 ?_gpio_btn_check 0001  
               ?_gpio_btn_state 0001                 ?_gpio_drive_led 0001                      main@respin 00BB  
             __size_of_LCD_Init 00EC               __size_of_LCD_Send 0026                  __end_of___lmul 15F6  
                   vfpfcnvrt@ap 0046                     vfpfcnvrt@fp 0042                     vfpfcnvrt@ll 004A  
         _timer_timeout_compare 18C8           _timer_timeout_counter 1936     __end_of_timer_timeout_reset 1952  
              check_win@symbols 0002                  __end_of_printf 1860                  __end_of_strlen 1812  
           start_initialization 1904                     __end_of_ISR 00AE                     __end_of_abs 17DC  
                   __end_of_pad 12FE                 _generate_symbol 15F6                     vfprintf@fmt 0055  
                      ??___lmul 000A                        ??_printf 005B                     ?_timer_init 0001  
                      ??_strlen 0004                     __pbssCOMRAM 005D                   __pcstackBANK0 0096  
                    ISR@chachar 0001                ___aodiv@dividend 0002                       _check_win 0A5C  
                     _dtoa$2086 0030                       __pintcode 0008                   __pmediumconst FE82  
                      ?___aodiv 0002                        ?___aomod 0002                ___aodiv@quotient 0014  
        ?_timer_timeout_compare 0002          ?_timer_timeout_counter 0001               __size_of_vfprintf 0062  
       __end_of_generate_symbol 165C                       _gpio_init 1812                        ?_sprintf 0096  
                __size_of_fputc 00CA                  __size_of_fputs 0044                  __size_of_putch 0016  
                      _LCD_Init 0EDA                        _LCD_Send 1860                        _LATAbits 000F89  
                      _LATCbits 000F8B                        _LATDbits 000F8C             __size_of_timer_init 0024  
                    ?_check_win 0002                        _IPR1bits 000F9F                        i2u210_40 139E  
                      i2u210_41 139A                        i2u211_40 13B4                        i2u211_41 13B0  
                      i2u204_40 1314                        i2u204_41 130E                        i2u204_46 1316  
                      i2u205_40 132C                        i2u205_41 1326                        i2u205_46 132E  
                      i2u206_40 1344                        i2u206_41 133E                        i2u206_46 1346  
                      i2u207_40 135C                        i2u207_41 1356                        i2u207_46 135E  
                      i2u208_40 1372                        i2u240_40 0018                        i2u208_41 136E  
                      i2u240_41 0014                        i2u209_40 1388                        i2u241_40 0026  
                      i2u209_41 1384                        i2u241_41 0022                        i2u242_40 003C  
                      i2u242_41 0038                        i2u243_40 004E                        i2u243_41 004A  
                      i2u244_40 0060                        i2u244_41 005C                        i2u245_40 0074  
                      i2u245_41 0070                        i2u246_40 0082                        i2u246_41 007E  
                      i2u247_40 0096                        i2u247_41 0092                        i2u248_40 00A4  
                      i2u248_41 00A0                       _uart_init 18AA                       _vfpfcnvrt 0836  
              ??_gpio_btn_check 0001                ??_gpio_btn_state 0002                       main@state 00C3  
                    ?_gpio_init 0001                ??_gpio_drive_led 0002                   ??_show_credit 0004  
                    vfpfcnvrt@c 0052               ___lmul@multiplier 0002                        __Hrparam 0000  
                 ?_change_state 0002                      vfprintf@ap 0057                        __Lrparam 0000  
                    vfprintf@fp 0053                      ?_uart_init 0001                __size_of___aodiv 0188  
              __size_of___aomod 0164                      ?_vfpfcnvrt 0042                 ___aodiv@divisor 000A  
               ___aodiv@counter 0012                      _ANSELCbits 000F3A                      _ANSELDbits 000F3B  
                    sprintf@fmt 0098                ?_generate_symbol 0001                        __ptext10 0836  
                      __ptext11 0554                        __ptext20 1920                        __ptext12 1238  
                      __ptext21 1812                        __ptext13 17DC                        __ptext30 1860  
                      __ptext22 13BA                        __ptext14 1758                        __ptext23 15F6  
                      __ptext15 179C                        __ptext32 1936                        __ptext24 151E  
                      __ptext16 0D76                        __ptext33 12FE                        __ptext25 158C  
                      __ptext17 0BEE                        __ptext26 0A5C                        __ptext18 0FC6  
                      __ptext27 18E6                        __ptext19 116E                        __ptext28 146C  
                      __ptext29 0EDA                    _SSP2CON1bits 000F6C                    _SSP2CON2bits 000F6B  
              __size_of_sprintf 0052                   __size_of_ctoa 00D8                   __size_of_main 04A2  
                 __size_of_dtoa 02E2                   __size_of_rand 006E             __end_of_show_credit 1758  
                   ??_check_win 0004                  ??_change_state 0005                        isa$xinst 000000  
                      int$flags 005E                        _vfprintf 165C         __size_of_LCD_ShowString 00B2  
                     printf@fmt 0096                        main@text 00AA                    ??_timer_init 0002  
                  _SSP2STATbits 000F6D                ___aomod@dividend 0002                       putch@data 0002  
                   ??_gpio_init 0002    __size_of_timer_timeout_reset 000C                        intlevel2 0000  
                     sprintf@ap 00A0                      _RCSTA1bits 000FAB              __end_of_timer_init 18AA  
       ??_timer_timeout_compare 0004         ??_timer_timeout_counter 0001                     ??_uart_init 0002  
                      printf@ap 005B                 ___aomod@divisor 000A                     ??_vfpfcnvrt 0048  
               ___aomod@counter 0012          LCD_ShowString@textData 0003                        sprintf@f 00A2  
                      sprintf@s 0096                     _show_credit 1710                    ___aodiv@sign 0013  
                  ___aomod@sign 0013  
